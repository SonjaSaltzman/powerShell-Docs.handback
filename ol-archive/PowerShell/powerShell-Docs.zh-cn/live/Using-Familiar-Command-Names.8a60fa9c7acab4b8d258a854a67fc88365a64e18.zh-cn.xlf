<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc235dee1af01c1f3d29118e4824d6a2b49b113a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\fundamental\Using-Familiar-Command-Names.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22cf02bbdd565e76ea0602b94b6a8d1339f82a78</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">111605e2480751d098a7b48dd659c6ffafbe861e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Using Familiar Command Names</source>
          <target state="translated">使用熟悉的命令名称</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">powershell,cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Using Familiar Command Names</source>
          <target state="translated">使用熟悉的命令名称</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Using a mechanism called <bpt id="p1">*</bpt>aliasing<ept id="p1">*</ept>, Windows PowerShell allows users to refer to commands by alternate names.</source>
          <target state="translated">使用称为<bpt id="p1">*</bpt>别名<ept id="p1">*</ept>的机制，Windows PowerShell 允许用户通过备用名称引用命令。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Aliasing allows users with experience in other shells to reuse common command names that they already know to perform similar operations in Windows PowerShell.</source>
          <target state="translated">别名允许具有其他 Shell 经验的用户重复使用其已知的常见命令名称在 Windows PowerShell 中执行类似操作。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Although we will not discuss Windows PowerShell aliases in detail, you can still use them as you get started with Windows PowerShell.</source>
          <target state="translated">虽然我们不会详细讨论 Windows PowerShell 别名，但当你开始使用 Windows PowerShell 时，你仍可以使用它们。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Aliasing associates a command name that you type with another command.</source>
          <target state="translated">别名将你键入的命令名称与另一个命令相关联。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, Windows PowerShell has an internal function named <bpt id="p1">**</bpt>Clear-Host<ept id="p1">**</ept> that clears the output window.</source>
          <target state="translated">例如，Windows PowerShell 具有名为 <bpt id="p1">**</bpt>Clear-Host<ept id="p1">**</ept> 的内部函数，该函数清空输出窗口。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you type either the <bpt id="p1">**</bpt>cls<ept id="p1">**</ept> or <bpt id="p2">**</bpt>clear<ept id="p2">**</ept> command at a command prompt, Windows PowerShell interprets that this is an alias for the <bpt id="p3">**</bpt>Clear-Host<ept id="p3">**</ept> function and runs the <bpt id="p4">**</bpt>Clear-Host<ept id="p4">**</ept> function.</source>
          <target state="translated">如果你在命令提示符处输入 <bpt id="p1">**</bpt>cls<ept id="p1">**</ept> 或 <bpt id="p2">**</bpt>clear<ept id="p2">**</ept> 命令，Windows PowerShell 会将其解释为 <bpt id="p3">**</bpt>Clear-Host<ept id="p3">**</ept> 函数的别名，并运行 <bpt id="p4">**</bpt>Clear-Host<ept id="p4">**</ept> 函数。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This feature helps users to learn Windows PowerShell.</source>
          <target state="translated">此功能可帮助用户了解 Windows PowerShell。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>First, most Cmd.exe and UNIX users have a large repertoire of commands that users already know by name, and although the Windows PowerShell equivalents may not produce identical results, they are close enough in form that users can use them to do work without having to first memorize the Windows PowerShell names.</source>
          <target state="translated">首先，大多数 Cmd.exe 和 UNIX 用户拥有大量已知的常用命令，并且尽管与 Windows PowerShell 相当的程序可能不会产生完全相同的结果，但它们在形式上的接近程度已足以让用户可使用它们来进行工作，而无需先记住 Windows PowerShell 名称。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Second, the major source of frustration in learning a new shell when the user is already familiar with another shell, is the errors that are caused by "finger memory".</source>
          <target state="translated">其次，如果用户已熟悉一种 Shell，而在学习新的 Shell 时却面临挫折，其主要原因是“手指记忆”所导致的错误。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you have used Cmd.exe for years, when you have a screen full of output and want to clean it up, you would reflexively type the <bpt id="p1">**</bpt>cls<ept id="p1">**</ept> command and press the ENTER key.</source>
          <target state="translated">如果你已使用 Cmd.exe 多年，当你的屏幕满是输出并且想要清理它时，你会条件反射地键入 <bpt id="p1">**</bpt>cls<ept id="p1">**</ept> 命令然后按下 ENTER 键。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Without the alias to the <bpt id="p1">**</bpt>Clear-Host<ept id="p1">**</ept> function in Windows PowerShell, you would simply get the error message "<bpt id="p2">**</bpt>'cls' is not recognized as a cmdlet, function, operable program, or script file.<ept id="p2">**</ept>"</source>
          <target state="translated">如果在 Windows PowerShel 中没有用于 <bpt id="p1">**</bpt>Clear-Host<ept id="p1">**</ept> 函数的别名，你只会收到一个错误消息“<bpt id="p2">**</bpt>‘cls’ 不视为 cmdlet、函数、可操作程序或脚本文件。<ept id="p2">**</ept>”</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>and be left with no idea of what to do to clear the output.</source>
          <target state="translated">然后便不知道该如何清除输出了。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following is a brief listing of the common Cmd.exe and UNIX commands that you can use inside Windows PowerShell:</source>
          <target state="translated">下面是可在 Windows PowerShell 中使用的常见 Cmd.exe 和 UNIX 命令的简短列表：</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>cat</source>
          <target state="translated">cat</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>dir</source>
          <target state="translated">dir</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>mount</source>
          <target state="translated">装载</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>rm</source>
          <target state="translated">rm</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>cd</source>
          <target state="translated">cd</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>echo</source>
          <target state="translated">echo</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>move</source>
          <target state="translated">move</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>rmdir</source>
          <target state="translated">rmdir</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>chdir</source>
          <target state="translated">chdir</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>erase</source>
          <target state="translated">erase</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>popd</source>
          <target state="translated">popd</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>sleep</source>
          <target state="translated">sleep</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>clear</source>
          <target state="translated">clear</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>h</source>
          <target state="translated">h</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>ps</source>
          <target state="translated">ps</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>sort</source>
          <target state="translated">sort</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>cls</source>
          <target state="translated">cls</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>history</source>
          <target state="translated">history</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>pushd</source>
          <target state="translated">pushd</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>tee</source>
          <target state="translated">tee</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>copy</source>
          <target state="translated">copy</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>kill</source>
          <target state="translated">kill</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>pwd</source>
          <target state="translated">pwd</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>type</source>
          <target state="translated">类型</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>del</source>
          <target state="translated">del</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>lp</source>
          <target state="translated">lp</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>r</source>
          <target state="translated">r</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>write</source>
          <target state="translated">write</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>diff</source>
          <target state="translated">diff</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>ls</source>
          <target state="translated">ls</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>ren</source>
          <target state="translated">ren</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If you find yourself using one of these commands reflexively and want to learn the real name of the native Windows PowerShell command, you can use the <bpt id="p1">**</bpt>Get-Alias<ept id="p1">**</ept> command:</source>
          <target state="translated">如果你发现自己正条件发射性地使用其中一种命令并且想要了解本机 Windows PowerShell 命令的真实名称，可以使用 <bpt id="p1">**</bpt>Get-Alias<ept id="p1">**</ept> 命令：</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To make examples more readable, the Windows PowerShell User's Guide generally avoids using aliases.</source>
          <target state="translated">为了让示例更具可读性，Windows PowerShell 用户指南通常避免使用别名。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>However, knowing more about aliases this early can still be useful if you are working with arbitrary snippets of Windows PowerShell code from another source or want to define your own aliases.</source>
          <target state="translated">但是，如果你要处理来自其他源的任意 Windows PowerShell 代码段，或想要定义你自己的别名，这么尽早了解有关别名的知识仍然十分有用。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The rest of this section will discuss standard aliases and how to define your own aliases.</source>
          <target state="translated">本部分的其余部分将讨论标准别名以及如何定义你自己的别名。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Interpreting Standard Aliases</source>
          <target state="translated">解释标准别名</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Unlike the aliases described above, which were designed for name-compatibility with other interfaces, the aliases built into Windows PowerShell are generally designed for brevity.</source>
          <target state="translated">与上述别名不同，上述别名旨在实现与其他接口的名称兼容性，而 Windows PowerShell 内置的别名一般旨在提供便利性。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>These shorter names can be typed quickly, but are impossible to read if you do not know what they refer to.</source>
          <target state="translated">这些简短的名称可快速键入，但如果你不知道其所指的内容，你便无法读取。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Windows PowerShell tries to compromise between clarity and brevity by providing a set of standard aliases that are based on shorthand names for common verbs and nouns.</source>
          <target state="translated">Windows PowerShell 尝试通过提供一组基于常见谓词和名词的简写名称的标准别名，实现明晰度和简洁度之间的折中。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This allows a core set of aliases for common cmdlets that are readable when you know the shorthand names.</source>
          <target state="translated">这样，如果你知道简写名称，便可使用一组常见 cmdlet 的可读核心别名。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example, in standard aliases the verb <bpt id="p1">**</bpt>Get<ept id="p1">**</ept> is abbreviated to <bpt id="p2">**</bpt>g<ept id="p2">**</ept>, the verb <bpt id="p3">**</bpt>Set<ept id="p3">**</ept> is abbreviated to <bpt id="p4">**</bpt>s<ept id="p4">**</ept>, the noun <bpt id="p5">**</bpt>Item<ept id="p5">**</ept> is abbreviated to <bpt id="p6">**</bpt>i<ept id="p6">**</ept>, the noun <bpt id="p7">**</bpt>Location<ept id="p7">**</ept> is abbreviated to <bpt id="p8">**</bpt>l<ept id="p8">**</ept>, and the noun Command is abbreviated to <bpt id="p9">**</bpt>cm<ept id="p9">**</ept>.</source>
          <target state="translated">例如，在标准别名中，谓词 <bpt id="p1">**</bpt>Get<ept id="p1">**</ept> 缩写为 <bpt id="p2">**</bpt>g<ept id="p2">**</ept>，谓词 <bpt id="p3">**</bpt>Set<ept id="p3">**</ept> 缩写为 <bpt id="p4">**</bpt>s<ept id="p4">**</ept>，名词 <bpt id="p5">**</bpt>Item<ept id="p5">**</ept> 缩写为 <bpt id="p6">**</bpt>i<ept id="p6">**</ept>，名词 <bpt id="p7">**</bpt>Location<ept id="p7">**</ept> 缩写为 <bpt id="p8">**</bpt>l<ept id="p8">**</ept>，名称 Command 缩写为 <bpt id="p9">**</bpt>cm<ept id="p9">**</ept>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Here is a brief example to illustrate how this works.</source>
          <target state="translated">下面是一个解释其工作原理的简短示例。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The standard alias for Get-Item comes from combining <bpt id="p1">**</bpt>g<ept id="p1">**</ept> for Get and <bpt id="p2">**</bpt>i<ept id="p2">**</ept> for Item: <bpt id="p3">**</bpt>gi<ept id="p3">**</ept>.</source>
          <target state="translated">Get-Item 的标准别名来自 Get 的 <bpt id="p1">**</bpt>g<ept id="p1">**</ept> 和 Item 的 <bpt id="p2">**</bpt>i<ept id="p2">**</ept> 的组合：<bpt id="p3">**</bpt>gi<ept id="p3">**</ept>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The standard alias for Set-Item comes from combining <bpt id="p1">**</bpt>s<ept id="p1">**</ept> for Set and <bpt id="p2">**</bpt>i<ept id="p2">**</ept> for Item: <bpt id="p3">**</bpt>si<ept id="p3">**</ept>.</source>
          <target state="translated">Set-Item 的标准别名来自 Set 的 <bpt id="p1">**</bpt>s<ept id="p1">**</ept> 和 Item 的 <bpt id="p2">**</bpt>i<ept id="p2">**</ept> 的组合：<bpt id="p3">**</bpt>si<ept id="p3">**</ept>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The standard alias for Get-Location comes from combining <bpt id="p1">**</bpt>g<ept id="p1">**</ept> for Get and <bpt id="p2">**</bpt>l<ept id="p2">**</ept> for Location, <bpt id="p3">**</bpt>gl<ept id="p3">**</ept>.</source>
          <target state="translated">Get-Location 的标准别名来自 Get 的 <bpt id="p1">**</bpt>g<ept id="p1">**</ept> 和 Location 的 <bpt id="p2">**</bpt>l<ept id="p2">**</ept> 的组合：<bpt id="p3">**</bpt>gl<ept id="p3">**</ept>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The standard alias for Set-Location comes from combining <bpt id="p1">**</bpt>s<ept id="p1">**</ept> for Set and <bpt id="p2">**</bpt>l<ept id="p2">**</ept> for Location, <bpt id="p3">**</bpt>sl<ept id="p3">**</ept>.</source>
          <target state="translated">Set-Location 的标准别名来自 Set 的 <bpt id="p1">**</bpt>s<ept id="p1">**</ept> 和 Location 的 <bpt id="p2">**</bpt>l<ept id="p2">**</ept> 的组合：<bpt id="p3">**</bpt>sl<ept id="p3">**</ept>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The standard alias for Get-Command comes from combining <bpt id="p1">**</bpt>g<ept id="p1">**</ept> for Get and <bpt id="p2">**</bpt>cm<ept id="p2">**</ept> for Command, <bpt id="p3">**</bpt>gcm<ept id="p3">**</ept>.</source>
          <target state="translated">Get-Command 的标准别名来自 Get 的 <bpt id="p1">**</bpt>g<ept id="p1">**</ept> 和 Command 的 <bpt id="p2">**</bpt>cm<ept id="p2">**</ept> 的组合：<bpt id="p3">**</bpt>gcm<ept id="p3">**</ept>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>There is no Set-Command cmdlet, but if there were, we would be able to guess that the standard alias comes from <bpt id="p1">**</bpt>s<ept id="p1">**</ept> for Set and <bpt id="p2">**</bpt>cm<ept id="p2">**</ept> for Command: <bpt id="p3">**</bpt>scm<ept id="p3">**</ept>.</source>
          <target state="translated">不存在 Set-Command cmdlet，但如果存在，我们可以猜出它的标准别名来自 Set 的 <bpt id="p1">**</bpt>s<ept id="p1">**</ept> 和 Command 的 <bpt id="p2">**</bpt>cm<ept id="p2">**</ept>：<bpt id="p3">**</bpt>scm<ept id="p3">**</ept>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Furthermore, people familiar with Windows PowerShell aliasing who encounter <bpt id="p1">**</bpt>scm<ept id="p1">**</ept> would be able to guess that the alias refers to Set-Command.</source>
          <target state="translated">此外，熟悉 Windows PowerShell 别名的人如果遇到 <bpt id="p1">**</bpt>scm<ept id="p1">**</ept>，他们将能够猜到此别名指的是 Set-Command。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Creating New Aliases</source>
          <target state="translated">创建新别名</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You can create your own aliases using the Set-Alias cmdlet.</source>
          <target state="translated">你可以使用 Set-Alias cmdlet 创建自己的别名。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For example, the following statements create the standard cmdlet aliases discussed in Interpreting Standard Aliases:</source>
          <target state="translated">例如，以下语句创建“解释标准别名”中所讨论的标准 cmdlet 别名：</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Internally, Windows PowerShell uses commands like these during startup, but these aliases are not changeable.</source>
          <target state="translated">在内部，Windows PowerShell 会在启动过程中使用这样的别名，但这些别名不可更改。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If you attempt to actually execute one of these commands, you will get an error explaining that the alias cannot be modified.</source>
          <target state="translated">如果尝试实际执行其中一个命令，你将获得一个错误，该错误会说明别名无法进行修改。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>