<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5de5a1f33325d98e9f44c3a2a3e9d041e83336e9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\ConvertFrom-StringData.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82c1121d046363426ecb095720f4408fef26796b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">60e789b41d54d3ae64a91319235aed8459d53a2e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell-Cmdlets</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData</source>
          <target state="translated">ConvertFrom-StringData</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData</source>
          <target state="translated">ConvertFrom-StringData</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">ZUSAMMENFASSUNG</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Converts a string containing one or more key/value pairs to a hash table.</source>
          <target state="translated">Konvertiert eine Zeichenfolge, die in eine Hashtabelle ein oder mehrere Schlüssel-Wert-Paare enthält.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SYNTAX</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">BESCHREIBUNG</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The ConvertFrom-StringData cmdlet converts a string that contains one or more key/value pairs into a hash table.</source>
          <target state="translated">Das ConvertFrom-StringData-Cmdlet konvertiert eine Zeichenfolge, die ein oder mehrere Schlüssel-Wert-Paare, in einer Hashtabelle enthält.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Because each key/value pair must be on a separate line, here-strings are often used as the input format.</source>
          <target state="translated">Da sich jedes Schlüssel-Wert-Paar in einer separaten Zeile befinden muss, werden als Eingabeformat häufig here-Zeichenfolgen verwendet.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The ConvertFrom-StringData cmdlet is considered to be a safe cmdlet that can be used in the DATA section of a script or function.</source>
          <target state="translated">Das ConvertFrom-StringData-Cmdlet gilt als sicheres Cmdlet, das im Abschnitt „DATA“ eines Skripts oder einer Funktion verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When used in a DATA section, the contents of the string must conform to the rules for a DATA section.</source>
          <target state="translated">Wird es im DATA-Abschnitt verwendet, müssen die Inhalte der Zeichenfolge den Regeln für diesen Abschnitt entsprechen.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information, see about_Data_Sections.</source>
          <target state="translated">Weitere Informationen finden Sie unter „about_Data_Sections“.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData supports escape character sequences that are allowed by conventional machine translation tools.</source>
          <target state="translated">ConvertFrom-StringData unterstützt Escape-Zeichensequenzen, die in herkömmlichen maschinellen Übersetzungstools zulässig sind.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>That is, the cmdlet can interpret backslashes (<ph id="ph1">\\</ph>) as escape characters in the string data by using the Regex.Unescape Methodhttp://msdn.microsoft.com/library/vstudio/system.text.regularexpressions.regex.unescape(v=vs.100).aspx, instead of the Windows PowerShell backtick character (<ph id="ph2">\`</ph>) that would normally signal the end of a line in a script.</source>
          <target state="translated">Das Cmdlet kann umgekehrte Schrägstriche, also interpretiert (<ph id="ph1">\\</ph>) als Escapezeichen in den Zeichenfolgendaten mithilfe der Regex.Unescape Methodhttp://msdn.microsoft.com/library/vstudio/system.text.regularexpressions.regex.unescape(v=vs.100).aspx, instead of the Windows PowerShell backtick character (<ph id="ph2">\`</ph>), die normalerweise das Ende einer Zeile in einem Skript hinweisen würden.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Inside the here-string, the backtick character does not work.</source>
          <target state="translated">In der here-Zeichenfolge funktioniert das Hochkommazeichen nicht.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can also preserve a literal backslash in your results by escaping it with a preceding backslash, like this:  <ph id="ph1">\\\\</ph>.</source>
          <target state="translated">Sie können auch einen literalen umgekehrten Schrägstrich in den Ergebnissen beibehalten, indem es mit einem umgekehrten Schrägstrich, wie dies Escapezeichen:  <ph id="ph1">\\\\</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Unescaped backslash characters, such as those that are commonly used in file paths, can render as illegal escape sequences in your results.</source>
          <target state="translated">Umgekehrte Schrägstriche ohne Escapezeichen, wie z. B. solche, die häufig in Dateipfaden verwendet werden, können in den Ergebnissen als unzulässige Escapesequenzen gerendert werden.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">BEISPIELE</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- BEISPIEL 1 --------------------------</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>These commands convert a single-quoted here-string of user messages into a hash table.</source>
          <target state="translated">Diese Befehle konvertieren eine here-Zeichenfolge von Benutzermeldungen in einfachen Anführungszeichen in eine Hashtabelle.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In a single-quoted string, values are not substituted for variables and expressions are not evaluated.</source>
          <target state="translated">In einer Zeichenfolge in einfachen Anführungszeichen werden Werte nicht durch Variablen ersetzt und Ausdrücke nicht ausgewertet.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The first command creates a here-string and saves it in the $here variable.</source>
          <target state="translated">Der erste Befehl erstellt eine here-Zeichenfolge und speichert sie in der $here-Variablen.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The second command uses the ConvertFrom-StringData cmdlet to convert the here-string in the $here variable to a hash table.</source>
          <target state="translated">Der zweite Befehl verwendet das ConvertFrom-StringData-Cmdlet, um die here-Zeichenfolge in der $here-Variablen in eine Hashtabelle zu konvertieren.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>These commands demonstrate that ConvertFrom-StringData actually converts a here-string to a hash table.</source>
          <target state="translated">Diese Befehle veranschaulichen, dass ConvertFrom-StringData eine here-Zeichenfolge tatsächlich in eine Hashtabelle konvertiert.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The first command creates a double-quoted here-string that includes one key/value" pair and saves it in the $p variable.</source>
          <target state="translated">Der erste Befehl erstellt eine Here-Zeichenfolge in doppelten Anführungszeichen, der einem Schlüssel-Wert enthält"Paar und speichert sie in der $p-Variablen.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The second command uses a pipeline operator (|) to send the $p variable to the Get-Member cmdlet.</source>
          <target state="translated">Der zweite Befehl verwendet einen Pipelineoperator (|), um die $p-Variable an das Get-Member-Cmdlet zu senden.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The result shows that $p is a string (System.String).</source>
          <target state="translated">Das Ergebnis zeigt, dass $p eine Zeichenfolge (System.String) ist.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The third command uses the ConvertFrom-StringData cmdlet to convert the here-string in $p to a hash table.</source>
          <target state="translated">Der dritte Befehl verwendet das ConvertFrom-StringData-Cmdlet, um die here-Zeichenfolge in $p in eine Hashtabelle zu konvertieren.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command stores the result in the $hash variable.</source>
          <target state="translated">Der Befehl speichert das Ergebnis in der $hash-Variablen.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The final command uses a pipeline operator (|) to send the $hash variable to the Get-Member cmdlet.</source>
          <target state="translated">Der letzte Befehl verwendet einen Pipelineoperator (|), um die $hash-Variable an das Get-Member-Cmdlet zu senden.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The result shows that the content of the $hash variable is a hash table (System.Collections.Hashtable).</source>
          <target state="translated">Das Ergebnis zeigt, dass der Inhalt der $hash-Variablen eine Hashtabelle (System.Collections.Hashtable) ist.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This command converts a single-quoted here-string that contains multiple key/value pairs into a hash table.</source>
          <target state="translated">Dieser Befehl konvertiert eine here-Zeichenfolge in einfachen Anführungszeichen, die mehrere Schlüssel-Wert-Paare enthält, in eine Hashtabelle.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In this command, the value of the StringData parameter is a here-string, instead of a variable that contains a here-string.</source>
          <target state="translated">In diesem Befehl ist der Wert des StringData-Parameters eine here-Zeichenfolge und keine Variable, die eine here-Zeichenfolge enthält.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Either format is valid.</source>
          <target state="translated">Beide Formate sind gültig.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The here-string includes a comment about one of the strings.</source>
          <target state="translated">Die here-Zeichenfolge enthält einen Kommentar zu einer der Zeichenfolgen.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Comments are valid in strings, provided that the comment is on a different line than a key/value pair.</source>
          <target state="translated">Kommentare sind in Zeichenfolgen zulässig, vorausgesetzt, der Kommentar befindet sich in einer anderen Zeile als das Schlüssel-Wert-Paar.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This example converts a regular double-quoted string (not a here-string) into a hash table and saves it in the $a variable.</source>
          <target state="translated">In diesem Beispiel wird eine reguläre Zeichenfolge in doppelten Anführungszeichen (keine here-Zeichenfolge) in eine Hashtabelle konvertiert und dann in der $a-Variablen gespeichert.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To satisfy the condition that each key/value pair must be on a separate line, it uses the Windows PowerShell newline character (<ph id="ph1">\`</ph>n) to separate the pairs.</source>
          <target state="translated">Um die Bedingung erfüllen, die jedes Schlüssel/Wert-Paar in einer separaten Zeile befinden, verwendet das Windows PowerShell-Zeilenumbruchzeichen (<ph id="ph1">\`</ph>n) zum Trennen der Paare.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The result is a hash table of the input.</source>
          <target state="translated">Das Ergebnis ist eine Hashtabelle der Eingabe.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The remaining commands display the output.</source>
          <target state="translated">Die restlichen Befehle zeigen die Ausgabe an.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This example shows a ConvertFrom-StringData command used in the DATA section of a script.</source>
          <target state="translated">Dieses Beispiel zeigt einen ConvertFrom-StringData-Befehl, der im DATA-Abschnitt eines Skripts verwendet wird.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The statements below the DATA section display the text to the user.</source>
          <target state="translated">Die Anweisungen unter dem DATA-Abschnitt zeigen den Text für den Benutzer an.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Because the text includes variable names, it must be enclosed in a single-quoted string so that the variables are interpreted literally and not expanded.</source>
          <target state="translated">Da der Text Variablennamen enthält, muss er in einer Zeichenfolge in einfachen Anführungszeichen eingeschlossen werden, damit die Variablen wörtlich interpretiert und nicht erweitert werden.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Variables are not permitted in the DATA section.</source>
          <target state="translated">Variablen sind im DATA-Abschnitt nicht zulässig.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This example shows that you can use a pipeline operator (|) to send a string to ConvertFrom-StringData.</source>
          <target state="translated">Dieses Beispiel zeigt, dass Sie einen Pipelineoperator (|) verwenden können, um eine Zeichenfolge an ConvertFrom-StringData zu senden.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The first command saves a here-string in the $here variable.</source>
          <target state="translated">Der erste Befehl speichert eine here-Zeichenfolge in der $here-Variablen.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The second command uses a pipeline operator (|) to send the $here variable to ConvertFrom-StringData.</source>
          <target state="translated">Der zweite Befehl verwendet einen Pipelineoperator (|), um die $here-Variable an ConvertFrom-StringData zu senden.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The command saves the result in the $hash variable.</source>
          <target state="translated">Der Befehl speichert das Ergebnis in der $hash-Variablen.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The final command displays the contents of the $hash variable.</source>
          <target state="translated">Der letzte Befehl zeigt den Inhalt der $hash-Variablen an.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This example shows the use of escape characters to create new lines and return characters in ConvertFrom-StringData.</source>
          <target state="translated">Dieses Beispiel zeigt die Verwendung von Escapezeichen zur Erstellung neuer Zeilen und Rückgabezeichen in ConvertFrom-StringData.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In this example, the escape sequence <bpt id="p1">**</bpt>\n<ept id="p1">**</ept> is used to create new lines within a block of text (the value, in the resulting hash table) that is associated with a name or item (the name, in the resulting hash table).</source>
          <target state="translated">In diesem Beispiel wird die Escapesequenz <bpt id="p1">**</bpt>\n<ept id="p1">**</ept> wird verwendet, um neue Zeilen in einem Textblock (der Wert, in der resultierenden Hashtabelle) zu erstellen, die einen Namen oder ein Element (der Name, in der resultierenden Hashtabelle) zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 8 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 8 --------------------------</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This example shows how to use of the backslash escape character in the string data to allow a file path to render correctly in the resulting ConvertFrom-StringData hash table.</source>
          <target state="translated">In diesem Beispiel wird veranschaulicht, wie der umgekehrte Schrägstrich als Escapezeichen in den Zeichenfolgendaten verwendet wird, um einen Dateipfad in der resultierenden ConvertFrom-StringData-Hashtabelle korrekt zu rendern.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The double backslash ensures that the literal backslash characters render correctly in the hash table output.</source>
          <target state="translated">Der doppelte umgekehrte Schrägstrich stellt sicher, dass der umgekehrte Literalschrägstrich in der Ausgabe der Hashtabelle ordnungsgemäß gerendert wird.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARAMETER</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-StringData</source>
          <target state="translated">-StringData</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Specifies the string to be converted.</source>
          <target state="translated">Gibt die zu konvertierende Zeichenfolge an.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can use this parameter or pipe a string to ConvertFrom-StringData.</source>
          <target state="translated">Sie können diesen Parameter verwenden oder eine Zeichenfolge über die Pipeline an ConvertFrom-StringData übergeben.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The parameter name is optional.</source>
          <target state="translated">Der Parametername ist optional.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The value of this parameter must be a string that is enclosed in single quotation marks (a single-quoted string) or a string that is enclosed in double quotation marks (a double-quoted string) or a here-string containing one or more key/value pairs.</source>
          <target state="translated">Der Wert dieses Parameters muss eine Zeichenfolge in einfachen Anführungszeichen, eine Zeichenfolge in doppelten Anführungszeichen oder eine here-Zeichenfolge sein, die mindestens ein Schlüssel-Wert-Paar enthält.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Each key/value pair must be on a separate line, or each pair must be separated by newline characters (<ph id="ph1">\`</ph>n).</source>
          <target state="translated">Jedes Schlüssel/Wert-Paar muss in einer eigenen Zeile oder jedes Paar durch Zeilenumbruchzeichen getrennt werden (<ph id="ph1">\`</ph>n).</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You can include comments in the string, but the comments cannot be on the same line as a key/value pair.</source>
          <target state="translated">Sie können Kommentare in die Zeichenfolge einschließen, sie dürfen sich aber nicht in der Zeile eines Schlüssel-Wert-Paars befinden.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The comments are not included in the hash table.</source>
          <target state="translated">Die Kommentare sind nicht in der Hashtabelle enthalten.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A here-string is a string consisting of one or more lines within which quotation marks are interpreted literally.</source>
          <target state="translated">Eine here-Zeichenfolge ist eine Zeichenfolge, die aus mindestens einer Zeile besteht und in der Anführungszeichen als solche interpretiert werden.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For more information, see about_Quoting_Rules.</source>
          <target state="translated">Weitere Informationen finden Sie unter „about_Quoting_Rules“.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Dieses Cmdlet unterstützt die allgemeinen Parameter:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, -InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction und -WarningVariable.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Weitere Informationen finden Sie unter "about_commonparameters" (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">EINGABEN</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You can pipe a string containing a key/value pair to ConvertFrom-StringData.</source>
          <target state="translated">Sie können eine Zeichenfolge mit einem Schlüssel-Wert-Paar über die Pipeline an ConvertFrom-StringData übergeben.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">AUSGABEN</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>System.Collections.Hashtable</source>
          <target state="translated">System.Collections.Hashtable</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData returns a hash table that it creates from the key/value pairs.</source>
          <target state="translated">ConvertFrom-StringData gibt eine Hashtabelle zurück, die es aus den Schlüssel-Wert-Paaren erstellt.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTIZEN</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A here-string is a string consisting of one or more lines within which quotation marks are interpreted literally.</source>
          <target state="translated">Eine here-Zeichenfolge ist eine Zeichenfolge, die aus mindestens einer Zeile besteht und in der Anführungszeichen als solche interpretiert werden.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For more information, see about_Quoting_Rules.</source>
          <target state="translated">Weitere Informationen finden Sie unter „about_Quoting_Rules“.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData can be useful in scripts that display user messages in multiple spoken languages.</source>
          <target state="translated">ConvertFrom-StringData kann in Skripts hilfreich sein, in denen Benutzermeldungen in mehreren Sprachen angezeigt werden.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>You can use the dictionary-style hash tables to isolate text strings from code, such as in resource files, and to format the text strings for use in translation tools.</source>
          <target state="translated">Sie können die wörterbuchähnlichen Hashtabellen verwenden, um Textzeichenfolgen z. B. in Ressourcendateien von Code zu isolieren und die Textzeichenfolgen für die Verwendung in Übersetzungstools zu formatieren.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">VERWANDTE LINKS</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>about_Quoting_Rules</source>
          <target state="translated">about_Quoting_Rules</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>about_Script_Internationalization</source>
          <target state="translated">about_Script_Internationalization</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>about_Data_Sections</source>
          <target state="translated">about_Data_Sections</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>