<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d7e71797a91a7557c8222274e961ded55c18954</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Arrays.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">453c2dda6dcbc293c1f9f33458bb312469eb7dac</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ebdbf2165af51d00ef07a49e89db2b57b51b773b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Arrays</source>
          <target state="translated">about_Arrays</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell-Cmdlets</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Arrays</source>
          <target state="translated">Informationen zu Arrays</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Arrays</source>
          <target state="translated">about_Arrays</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">THEMA</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Arrays</source>
          <target state="translated">about_Arrays</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">KURZE BESCHREIBUNG</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Describes arrays, which are data structures designed to store collections of items.</source>
          <target state="translated">Beschreibt Arrays, die Datenstrukturen, die Auflistungen von Elementen gespeichert sind.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">LANGE BESCHREIBUNG</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>An array is a data structure that is designed to store a collection of items.</source>
          <target state="translated">Ein Array ist eine Datenstruktur, die entwickelt wurde, um eine Auflistung von Elementen zu speichern.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The items can be the same type or different types.</source>
          <target state="translated">Die Elemente können die gleichen Typs oder verschiedener Typen sein.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, a collection of zero or one object has some properties of arrays.</source>
          <target state="translated">Ab Windows PowerShell 3.0 verfügt über eine Auflistung von 0 (null) oder ein Objekt einige Eigenschaften des Arrays.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>CREATING AND INITIALIZING AN ARRAY</source>
          <target state="translated">ERSTELLEN UND INITIALISIEREN EINES ARRAYS</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To create and initialize an array, assign multiple values to a variable.</source>
          <target state="translated">Zum Erstellen und initialisieren Sie ein Array einer Variablen Werte zuweisen.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The values stored in the array are delimited with a comma and separated from the variable name by the assignment operator (=).</source>
          <target state="translated">Der im Array gespeicherten Werte werden durch Kommas getrennt und aus dem Variablennamen durch den Zuweisungsoperator (=) getrennt.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, to create an array named $A that contains the seven numeric (int) values of 22, 5, 10, 8, 12, 9, and 80, type:</source>
          <target state="translated">Geben Sie z. B. um ein Array mit dem Namen $A mit die sieben numerische (Int) Werten, 22, 5, 10, 8, 12, 9 und 80 zu erstellen:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>$A = 22,5,10,8,12,9,80</source>
          <target state="translated">$A = 22,5,10,8,12,9,80</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also create and initialize an array by using the range operator (..).</source>
          <target state="translated">Sie können auch erstellen und initialisieren Sie ein Array mit den Bereichsoperator (.).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, to create and initialize an array named "$B" that contains the values 5 through 8, type:</source>
          <target state="translated">So erstellen und initialisieren ein Array mit dem Namen "$B" enthält, z. B. die Werte 5 bis 8, Typ:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>$B = 5..8</source>
          <target state="translated">$B = 5..8</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>As a result, $B contains four values: 5, 6, 7, and 8.</source>
          <target state="translated">Daher $B enthält vier Werte: 5, 6, 7 und 8.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When no data type is specified, Windows PowerShell creates each array as an object array (type: System.Object[]).</source>
          <target state="translated">Wenn kein Datentyp angegeben ist, erstellt Windows PowerShell jedes Array als ein Objektarray (Typ: System.Object[]).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To determine the data type of an array, use the GetType() method.</source>
          <target state="translated">Um den Datentyp eines Arrays zu bestimmen, verwenden Sie die systemeigene GetType()-Methode.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example, to determine the data type of the $a array, type:</source>
          <target state="translated">Z. B. um den Datentyp der $a-Array zu bestimmen, geben Sie ein:</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>$a.GetType()</source>
          <target state="translated">$a.GetType()</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To create a strongly typed array, that is, an array that can contain only values of a particular type, cast the variable as an array type, such as string[], long[], or int32[].</source>
          <target state="translated">Arraytyp, z. B. String [], [lang] oder int32 [] umgewandelte die Variable, um ein stark typisiertes Array, d. h. ein Array zu erstellen, die nur die Werte eines bestimmten Typs enthalten kann.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To cast an array, precede the variable name with an array type enclosed in brackets.</source>
          <target state="translated">Um ein Array umzuwandeln, einen Arraytyp in Klammern eingeschlossene voran der Variablenname.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example, to create a 32-bit integer array named $ia containing four integers (1500, 2230, 3350, and 4000), type:</source>
          <target state="translated">Geben Sie z. B. zum Erstellen einer 32-Bit-Ganzzahl-Array, das mit dem Namen $ia enthält vier ganzen Zahlen (1500, 2230, 3350 und 4000):</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>[int32[]]$ia = 1500,2230,3350,4000</source>
          <target state="translated">[int32 []] $ia = 1500,2230,3350,4000</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>As a result, the $ia array can contain only integers.</source>
          <target state="translated">Daher kann das $ia-Array nur ganze Zahlen enthalten.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can create arrays that are cast to any supported type in the Microsoft .NET Framework.</source>
          <target state="translated">Sie können Arrays erstellen, die in jeder unterstützte Dateityp in Microsoft .NET Framework umgewandelt werden.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For example, the objects that Get-Process retrieves to represent processes are of the System.Diagnostics.Process type.</source>
          <target state="translated">Beispielsweise sind die Objekte, die Get-Process abruft, um Prozesse darstellen des Typs System.Diagnostics.Process.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To create a strongly typed array of process objects, enter the following command:</source>
          <target state="translated">Um ein stark typisiertes Array der Process-Objekte zu erstellen, geben Sie den folgenden Befehl ein:</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>[Diagnostics.Process[]]$zz = Get-Process</source>
          <target state="translated">[Diagnostics.Process[]]$zz = Get-Process</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>THE ARRAY SUB-EXPRESSION OPERATOR</source>
          <target state="translated">DAS ARRAY UNTERAUSDRUCK-OPERATOR</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The array sub-expression operator creates an array, even if it contains zero or one object.</source>
          <target state="translated">Der Array Unterausdruck-Operator erstellt eine Array, selbst wenn er 0 (null) oder ein Objekt enthält.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The syntax of the array operator is as follows:</source>
          <target state="translated">Die Syntax des Operators Array lautet wie folgt:</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>@( ... )</source>
          <target state="translated">@( ... )</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can use the array operator to create an array of zero or one object.</source>
          <target state="translated">Die Array-Operator können Sie um ein Array von 0 (null) oder ein Objekt zu erstellen.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>PS C:&gt;$a = @("One") PS C:&gt;$a.Count</source>
          <target state="translated">PS C: &gt;$ ein = @("One") PS C: &gt; $a.Count</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>PS C:&gt;$b = @() PS C:&gt;$b.Count</source>
          <target state="translated">PS C: &gt; $b = @ () PS C: &gt; $b.Count</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The array operator is particularly useful in scripts when you are getting objects, but do not know how many objects you will get.</source>
          <target state="translated">Die Array-Operator ist besonders in Skripts nützlich, wenn Sie Objekte abrufen, aber nicht wissen, wie viele Objekte, die Sie erhalten.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $p = @(Get-Process Notepad)</source>
          <target state="translated">PS C: &gt; $p = @(Get-Process Editor)</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information about the array sub-expression operator, see about_Operators.</source>
          <target state="translated">Weitere Informationen zu den Operator Unterausdruck finden Sie unter About_Operators.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>READING AN ARRAY</source>
          <target state="translated">EIN ARRAY LESEN</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You can refer to an array by using its variable name.</source>
          <target state="translated">Sie können in ein Array mit den Variablennamen verweisen.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To display all the elements in the array, type the array name.</source>
          <target state="translated">Um alle Elemente im Array anzuzeigen, geben Sie den Arraynamen ein.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Beispiel:</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>$a</source>
          <target state="translated">$ein</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You can refer to the elements in an array by using an index, beginning at position 0.</source>
          <target state="translated">Sie können auf die Elemente in einem Array finden Sie unter Verwendung eines Indexes, beginnend an Position 0.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Enclose the index number in brackets.</source>
          <target state="translated">Schließen Sie die Indexnummer in Klammern ein.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For example, to display the first element in the $a array, type:</source>
          <target state="translated">Geben Sie beispielsweise, um das erste Element in der $a Array anzuzeigen:</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>$a[0]</source>
          <target state="translated">$a [0]</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To display the third element in the $a array, type:</source>
          <target state="translated">Geben Sie Folgendes ein, um das dritte Element in der $a Array anzuzeigen:</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>$a[2]</source>
          <target state="translated">$a [2]</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Negative numbers count from the end of the array.</source>
          <target state="translated">Die Anzahl der negativer Zahlen vom Ende des Arrays.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, "-1" refers to the last element of the array.</source>
          <target state="translated">Bezieht sich z. B. "-1" mit dem letzten Element des Arrays.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To display the last three elements of the array, type:</source>
          <target state="translated">Um die letzten drei Elemente des Arrays anzuzeigen, geben Sie Folgendes ein:</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>$a[-3..-1]</source>
          <target state="translated">$eine [-3.. -1]</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>However, be cautious when using this notation.</source>
          <target state="translated">Seien Sie jedoch vorsichtig bei Verwendung dieser Notation.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>$a[0..-2]</source>
          <target state="translated">$eine [0..-2]</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This command does not refer to all the elements of the array, except for the last one.</source>
          <target state="translated">Mit diesem Befehl verweist nicht auf alle Elemente des Arrays, mit Ausnahme der letzten.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>It refers to the first, last, and second-to-last elements in the array.</source>
          <target state="translated">Er bezieht sich auf den ersten, letzten, und die zweiten bis letzten Elemente im Array.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You can use the range operator to display a subset of all the values in an array.</source>
          <target state="translated">Sie können den Bereichsoperator verwenden, eine Teilmenge aller Werte in einem Array angezeigt.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For example, to display the data elements at index position 1 through 3, type:</source>
          <target state="translated">Geben Sie z. B. zum Anzeigen der Datenelemente Indexposition 1 bis 3:</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>$a[1..3]</source>
          <target state="translated">$eine [1..3]</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can use the plus operator (+) to combine a range with a list of elements in an array.</source>
          <target state="translated">Den plus-Operator (+) können Sie um einen Bereich mit einer Liste von Elementen in einem Array zu kombinieren.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For example, to display the elements at index positions 0, 2, and 4 through 6, type:</source>
          <target state="translated">Geben Sie z. B. zum Anzeigen der Elemente an der Indexposition 0, 2 und 4 bis 6:</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>$a[0,2+4..6]</source>
          <target state="translated">$eine [0, 2 + 4..6]</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To determine how many items are in an array, use the Length property or its Count alias.</source>
          <target state="translated">Um zu bestimmen, wie viele Elemente in einem Array enthalten sind, verwenden der Length-Eigenschaft oder die Count-Alias.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>$a.Count</source>
          <target state="translated">$a.Count</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can also use looping constructs, such as ForEach, For, and While loops, to refer to the elements in an array.</source>
          <target state="translated">Sie können außerdem Schleifenkonstrukte, z. B. ForEach, und While-Schleifen, um auf die Elemente in einem Array zu verweisen.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For example, to use a ForEach loop to display the elements in the $a array, type:</source>
          <target state="translated">Beispielsweise um eine ForEach-Schleife verwenden, um die Elemente in der $a Array anzuzeigen, geben Sie ein:</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>foreach ($element in $a) {$element}</source>
          <target state="translated">Foreach ($element $ eine) {$element}</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The Foreach loop iterates through the array and returns each value in the array until reaching the end of the array.</source>
          <target state="translated">Die Foreach-Schleife durchläuft das Array und jeder Wert im Array zurückgegeben, bis zum Erreichen des Arrays.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The For loop is useful when you are incrementing counters while examining the elements in an array.</source>
          <target state="translated">Die For-Schleife ist nützlich, wenn Sie beim Überprüfen der Elemente in einem Array Zähler erhöht werden.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For example, to use a For loop to  return every other value in an array, type:</source>
          <target state="translated">Beispielsweise um eine For-Schleife verwenden, um jeder andere Wert in einem Array zurückzugeben, geben Sie ein:</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>for ($i = 0; $i -le ($a.length - 1); $i += 2) {$a[$i]}</source>
          <target state="translated">für ($i = 0; $i-le ($a.length - 1); $i += (2) {$ein [$i]}</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>You can use a While loop to display the elements in an array until a defined condition is no longer true.</source>
          <target state="translated">Können Sie eine While-Schleife die Elemente in einem Array angezeigt, bis eine definierte Bedingung nicht mehr erfüllt ist.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For example, to display the elements in the $a array while the array index is less than 4, type:</source>
          <target state="translated">Geben Sie z. B. zum Anzeigen der Elemente in der $a Array während der Arrayindex kleiner als 4 ist:</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>$i=0 while($i -lt 4) {$a[$i]; $i++}</source>
          <target state="translated">$i = 0 und (4 $i - Lt) {$ein [$i]; $i++}</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>GET THE MEMBERS OF AN ARRAY</source>
          <target state="translated">ABRUFEN DER MEMBER EINES ARRAYS</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>To get the properties and methods of an array, such as the Length property and the SetValue method, use the InputObject parameter of the Get-Member cmdlet.</source>
          <target state="translated">Verwenden Sie den InputObject-Parameter von Get-Member-Cmdlet, um die Eigenschaften und Methoden eines Arrays, z. B. der Length-Eigenschaft und der SetValue-Methode abzurufen.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>When you pipe an array to Get-Member, Windows PowerShell sends the items one at a time and Get-Member returns the type of each item in the array (ignoring duplicates).</source>
          <target state="translated">Wenn Sie ein Array an Get-Member übergeben, Windows PowerShell sendet die Elemente zu einem Zeitpunkt, und Get-Member gibt den Typ der einzelnen Elemente im Array (Duplikate werden ignoriert).</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>When you use the InputObject parameter, Get-Member returns the members of the array.</source>
          <target state="translated">Wenn Sie den InputObject-Parameter verwenden, gibt Get-Member die Member des Arrays zurück.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the members of the array in the $a variable.</source>
          <target state="translated">Beispielsweise ruft der folgende Befehl die Elemente des Arrays in der $a-Variablen.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Get-Member -InputObject $a</source>
          <target state="translated">Get-Member - InputObject $a ein</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>You can also get the members of an array by typing a comma (,) before the value that is piped to the Get-Member cmdlet.</source>
          <target state="translated">Sie können auch die Elemente eines Arrays abrufen durch ein Komma (,) Eingabe vor dem Wert, der über die Pipeline ist dem Cmdlet "Get-Member".</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The comma makes the array the second item in an array of arrays.</source>
          <target state="translated">Das Komma ist dem Array das zweite Element in einem Array von Arrays.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Windows PowerShell pipes the arrays one at a time and Get-Member returns the members of the array.</source>
          <target state="translated">Windows PowerShell leitet die One-Arrays zu einem Zeitpunkt und Get-Member gibt die Elemente des Arrays zurück.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>,$a | Get-Member</source>
          <target state="translated">,$a | Get-Member</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>,(1,2,3) | Get-Member</source>
          <target state="translated">, (1,2,3) | Get-Member</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>MANIPULATING AN ARRAY</source>
          <target state="translated">BEARBEITEN SIE EIN ARRAY VON</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>You can change the elements in an array, add an element to an array, and combine the values from two arrays into a third array.</source>
          <target state="translated">Sie können die Elemente in einem Array ändern, fügen Sie ein Element in ein Array und kombinieren die Werte aus zwei Arrays in ein drittes Array.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>To change the value of a particular element in an array, specify the array name and the index of the element that you want to change, and then use the assignment operator (=) to specify a new value for the element.</source>
          <target state="translated">Um den Wert eines bestimmten Elements in einem Array zu ändern, geben Sie den Arraynamen und den Index des Elements, das Sie ändern möchten, und klicken Sie dann verwenden Sie den Zuweisungsoperator (=), um einen neuen Wert für das Element anzugeben.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For example, to change the value of the second item in the $a array (index position 1) to 10, type:</source>
          <target state="translated">Z. B. so ändern Sie den Wert des zweiten Elements in der $a-Array (index der Position 1) Geben Sie auf 10:</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>$a[1] = 10</source>
          <target state="translated">$[1] = 10</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>You can also use the SetValue method of an array to change a value.</source>
          <target state="translated">SetValue-Methode eines Arrays können auch den um Wert zu ändern.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The following example changes the second value (index position 1) of the $a array to 500:</source>
          <target state="translated">Im folgenden Beispiel wird den zweiten Wert (index der Position 1) der ein Array 500 $:</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>$a.SetValue(500,1)</source>
          <target state="translated">$a.SetValue(500,1)</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>You can use the += operator to add an element to an array.</source>
          <target state="translated">Sie können des +=-Operators Hinzufügen eines Elements in ein Array verwenden.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>When you use it, Windows PowerShell actually creates a new array with the values of the original array and the added value.</source>
          <target state="translated">Wenn Sie es verwenden, erstellt Windows PowerShell tatsächlich ein neues Array mit den Werten des ursprünglichen Arrays und Mehrwert.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For example, to add an element with a value of 200 to the array in the $a variable, type:</source>
          <target state="translated">Geben Sie z. B. zum Hinzufügen eines Elements mit einem Wert von 200 in das Array in der $a-Variablen:</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>$a += 200</source>
          <target state="translated">$a += 200</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>It is not easy to delete elements from an array, but you can create a new array that contains only selected elements of an existing array.</source>
          <target state="translated">Es ist nicht einfach So löschen Sie Elemente aus einem Array, aber Sie können ein neues Array, das nur ausgewählte Elemente eines vorhandenen Arrays enthält erstellen.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>For example, to create the $t array with all the elements in the $a array except for the value at index position 2, type:</source>
          <target state="translated">Geben Sie z. B. um $t Array mit allen Elementen in der $a-Array mit Ausnahme der Wert Indexposition 2 zu erstellen:</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>$t = $a[0,1 + 3..($a.length - 1)]</source>
          <target state="translated">$t = $ein [0,1 + 3.. () $a.length - 1)]</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>To combine two arrays into a single array, use the plus operator (+).</source>
          <target state="translated">Verwenden Sie zwei Arrays in ein Array zu kombinieren, die plus-Operator (+).</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The following example creates two arrays, combines them, and then displays the resulting combined array.</source>
          <target state="translated">Im folgende Beispiel werden zwei Arrays erstellt, fasst sie zusammen und zeigt dann das resultierende kombinierte Array.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>$x = 1,3 $y = 5,9 $z = $x + $y</source>
          <target state="translated">$x = 1,3 $y 5,9 = $z = $x + $y</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>As a result, the $z array contains 1, 3, 5, and 9.</source>
          <target state="translated">Daher enthält das Array $z 1, 3, 5 und 9.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>To delete an array, assign a value of $null to the array.</source>
          <target state="translated">Weisen Sie den Wert $null in das Array, um ein Array zu löschen.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The following command deletes the array in the $a variable.</source>
          <target state="translated">Der folgende Befehl löscht das Array in der $a-Variablen.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>$a = $null</source>
          <target state="translated">$eine $null =</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>You can also use the Remove-Item cmdlet, but assigning a value of $null is faster, especially for large arrays.</source>
          <target state="translated">Sie können auch mit dem Cmdlet "Remove-Item" verwenden, aber Zuweisen eines Werts von $null ist schneller, insbesondere bei großen Arrays.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>ARRAYS OF ZERO OR ONE</source>
          <target state="translated">ARRAYS VON NULL ODER EINS</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, a collection of zero or one object has the Count and Length property.</source>
          <target state="translated">Ab Windows PowerShell 3.0 ist eine Auflistung von 0 (null) oder ein Objekt die Anzahl und Länge-Eigenschaft.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Also, you can index into an array of one object.</source>
          <target state="translated">Darüber hinaus können Sie in ein Array von einem Objekt indizieren.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This feature helps you to avoid scripting errors that occur when a command that expects a collection gets fewer than two items.</source>
          <target state="translated">Dieses Feature können Sie Skriptfehler zu vermeiden, die auftreten, wenn ein Befehl, der eine Auflistung erwartet weniger als zwei Elemente abgerufen.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate this feature.</source>
          <target state="translated">Die folgenden Beispiele veranschaulichen diese Funktion.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Zero objects</source>
          <target state="translated">NULL-Objekte</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>$a = $null $a.Count</source>
          <target state="translated">$eine $null $a.Count =</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>$a.Length</source>
          <target state="translated">$a.Length</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>One object</source>
          <target state="translated">Ein Objekt</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>$a = 4 $a.Count</source>
          <target state="translated">$eine = 4 $a.Count</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>$a.Length</source>
          <target state="translated">$a.Length</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>$a[0]</source>
          <target state="translated">$a [0]</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>$a[-1]</source>
          <target state="translated">$[1]</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">SIEHE AUCH</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>about_Assignment_Operators about_Hash_Tables about_Operators about_For about_Foreach about_While</source>
          <target state="translated">About_Assignment_Operators About_Hash_Tables About_Operators About_For About_Foreach about_While</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>