<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22b35d99f7c8545e260b8a1a67ea81a5a3f6fddc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Functions_Advanced_Parameters.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28a3e59fdd25b79321b0b607b0a9c34c0def77c6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a6df0f99aece19895c05d69883252558965d64b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Functions_Advanced_Parameters</source>
          <target state="translated">about_Functions_Advanced_Parameters</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell-Cmdlets</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Functions Advanced Parameters</source>
          <target state="translated">Informationen zu Funktionen, die erweiterte Parameter</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Functions_Advanced_Parameters</source>
          <target state="translated">about_Functions_Advanced_Parameters</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Functions_Advanced_Parameters</source>
          <target state="translated">about_Functions_Advanced_Parameters</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">KURZE BESCHREIBUNG</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Explains how to add parameters to advanced functions.</source>
          <target state="translated">Erläutert das Hinzufügen von Parametern zu erweiterten Funktionen.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">LANGE BESCHREIBUNG</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can add parameters to the advanced functions that you write, and use parameter attributes and arguments to limit the parameter values that function users submit with the parameter.</source>
          <target state="translated">Sie können Parameter hinzufügen, um die erweiterten Funktionen, die Sie schreiben und Attribute von Parametern und Argumenten verwenden, um die Werte der Parameter zu begrenzen, die Funktion mit dem Parameter absenden.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The parameters that you add to your function are available to users in addition to the common parameters that Windows PowerShell adds automatically to all cmdlets and advanced functions.</source>
          <target state="translated">Die Parameter, die Sie zu Ihrer Funktion hinzufügen, stehen Benutzern zusätzlich zu den allgemeinen Parametern, die Windows PowerShell automatisch alle Cmdlets und erweiterten Funktionen hinzugefügt.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information about the Windows PowerShell common parameters, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Weitere Informationen über die allgemeinen Windows PowerShell-Parameter finden Sie unter "about_commonparameters" (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can use splatting with @Args to represent the parameters in a command.</source>
          <target state="translated">Ab Windows PowerShell 3.0 können Verteilung mit @Args Sie die Parameter in einem Befehl darstellen.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This technique is valid on simple and advanced functions.</source>
          <target state="translated">Dieses Verfahren gilt für einfache und erweiterte Funktionen zur Verfügung.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information, see about_Functions (http://go.microsoft.com/fwlink/?LinkID=113231) and about_Splatting (http://go.microsoft.com/fwlink/?LinkID=262720).</source>
          <target state="translated">Weitere Informationen finden Sie unter About_Functions (http://go.microsoft.com/fwlink/?LinkID=113231) und About_Splatting (http://go.microsoft.com/fwlink/?LinkID=262720).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Static Parameters Static parameters are parameters that are always available in the function.</source>
          <target state="translated">Statische Parameter statische Parameter sind Parameter, die immer in der Funktion verfügbar sind.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Most parameters in Windows PowerShell cmdlets and scripts are static parameters.</source>
          <target state="translated">Die meisten Parameter in Windows PowerShell-Cmdlets und Skripts sind statische Parameter.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following example shows the declaration of a ComputerName parameter that has the following characteristics:</source>
          <target state="translated">Das folgende Beispiel zeigt die Deklaration des ComputerName-Parameter, der folgende Merkmale aufweist:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>It is mandatory (required).</source>
          <target state="translated">Es ist zwingend erforderlich (erforderlich).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It takes input from the pipeline.</source>
          <target state="translated">Er nimmt die Eingabe aus der Pipeline.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It takes an array of strings as input.</source>
          <target state="translated">Es wird ein Array von Zeichenfolgen als Eingabe.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ValueFromPipeline=$true)] [String[]] $ComputerName</source>
          <target state="translated">[Parameter (obligatorische = $true ValueFromPipeline = $true)] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Attributes of Parameters</source>
          <target state="translated">Attribute von Parametern</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This section describes the attributes that you can add to function parameters.</source>
          <target state="translated">Dieser Abschnitt beschreibt die Attribute, die die Parameter hinzugefügt werden können.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>All attributes are optional.</source>
          <target state="translated">Alle Attribute sind optional.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>However, if you omit the CmdletBinding attribute, then to be recognized as an advanced function, the function must include the Parameter attribute.</source>
          <target state="translated">Jedoch wenn Sie das CmdletBinding-Attribut nicht angeben, muss als eine erweiterte Funktion, erkannt werden die Funktion das Parameterattribut einbeziehen.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can add one or multiple attributes in each parameter declaration.</source>
          <target state="translated">Sie können ein oder mehrere Attribute in jeder Parameterdeklaration hinzufügen.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>There is no limit to the number of attributes that you can add to a parameter declaration.</source>
          <target state="translated">Es gibt keine Beschränkung der Anzahl der Attribute, die eine Parameterdeklaration hinzugefügt werden können.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The Parameter Attribute</source>
          <target state="translated">Der Parameter-Attribut</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The Parameter attribute is used to declare the attributes of function parameters.</source>
          <target state="translated">Der Parameter-Attribut wird verwendet, um die Attribute der Funktionsparameter zu deklarieren.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The Parameter attribute is optional, and you can omit it if none of the parameters of your functions need attributes, but to be recognized as an advanced function (rather than a simple function), a function must have either the CmdletBinding attribute or the Parameter attribute, or both.</source>
          <target state="translated">Der Parameter-Attribut ist optional, und können Sie ihn weglassen, wenn keiner der Parameter der Funktion müssen Attribute, sondern als eine erweiterte Funktion (anstelle einer einfachen Funktion) erkannt werden, eine Funktion muss entweder das CmdletBinding-Attribut oder das Parameterattribut oder beides enthalten.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The Parameter attribute has arguments that define the characteristics of the parameter, such as whether the parameter is mandatory or optional.</source>
          <target state="translated">Der Parameter-Attribut hat Argumente, die definieren, die Merkmale des Parameters, z. B., ob der Parameter obligatorisch oder optional ist.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Use the following syntax to declare the Parameter attribute, an argument, and an argument value.</source>
          <target state="translated">Verwenden Sie die folgende Syntax, um die Parameter-Attribut, ein Argument und ein Argumentwert deklarieren.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The parentheses that enclose the argument and its value must follow "Parameter" with no intervening space.</source>
          <target state="translated">Die Klammern, die das Argument und seinem Wert einschließen müssen "Parameter" ohne dazwischenliegende Leerzeichen folgen.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>[parameter(Argument=value)] $ParameterName</source>
          <target state="translated">[parameter(Argument=value)] $ParameterName</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Use commas to separate arguments within the parentheses.</source>
          <target state="translated">Verwenden Sie Kommas zum Trennen der Argumente innerhalb der Klammern.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Use the following syntax to declare two arguments of the Parameter attribute.</source>
          <target state="translated">Verwenden Sie die folgende Syntax, um zwei Argumente des Attributs Parameter zu deklarieren.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>[parameter(Argument1=value1, Argument2=value2)]</source>
          <target state="translated">[Parameter (Argument1 = value1, Argument2 = value2)]</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If you use the Parameter attribute without arguments (as an alternative to using the CmdletBinding attribute), the parentheses that follow the attribute name are still required.</source>
          <target state="translated">Wenn Sie das Attribut "Parameter" ohne Argumente (als Alternative zum Verwenden des Attributs CmdletBinding) verwenden, sind die Klammern, die den Attributnamen folgen weiterhin erforderlich.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>[parameter()] $ParameterName</source>
          <target state="translated">[parameter()] $ParameterName</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Mandatory Argument</source>
          <target state="translated">Obligatorische Argument</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The Mandatory argument indicates that the parameter is required.</source>
          <target state="translated">Das obligatorische Argument gibt an, dass der Parameter erforderlich ist.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If this argument is not specified, the parameter is an optional parameter.</source>
          <target state="translated">Wenn dieses Argument nicht angegeben wird, ist der Parameter ein optionaler Parameter.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following example declares the ComputerName parameter.</source>
          <target state="translated">Im folgende Beispiel wird der ComputerName-Parameter deklariert.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>It uses the Mandatory argument to make the parameter mandatory.</source>
          <target state="translated">Er verwendet das obligatorische Argument, um den Parameter obligatorisch zu machen.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [String[]] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Position Argument</source>
          <target state="translated">Positionsargument</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The Position argument determines whether the parameter name is required when the parameter is used in a command.</source>
          <target state="translated">Das Positionsargument bestimmt, ob der Name des Parameters erforderlich ist, wenn der Parameter in einem Befehl verwendet wird.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When a parameter declaration includes the Position argument, the parameter name can be omitted and Windows PowerShell identifies the unnamed parameter value by its position (or order) in the list of unnamed parameter values in the command.</source>
          <target state="translated">Wenn eine Parameterdeklaration das Positionsargument einschließt, wird der Name des Parameters kann ausgelassen werden, und Windows PowerShell bezeichnet den unbenannten Parameter-Wert durch seine Position (oder eine Bestellung) in der Liste der unbenannten Parameterwerte in den Befehl.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If the Position argument is not specified, the parameter name (or a parameter name alias or abbreviation) must precede the parameter value whenever the parameter is used in a command.</source>
          <target state="translated">Bei Position-Argument nicht angegeben wird, muss der Parametername (oder einen Alias von Parameter oder eine Abkürzung) der Wert des Parameters vorangestellt, wenn der Parameter in einem Befehl verwendet wird.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>By default, all function parameters are positional.</source>
          <target state="translated">Standardmäßig sind alle Funktionsparameter mit Feldern fester Breite.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Windows PowerShell assigns position numbers to parameters in the order in which the parameters are declared in the function.</source>
          <target state="translated">Windows PowerShell weist die Positionsnummern Parameter in der Reihenfolge, in der die Parameter in der Funktion deklariert werden.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To disable this feature, set the value of the PositionalBinding argument of the CmdletBinding attribute to $False.</source>
          <target state="translated">Um dieses Feature zu deaktivieren, legen Sie den Wert des Arguments PositionalBinding des Attributs CmdletBinding auf $False fest.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The Position argument takes precedence over the value of the PositionalBinding argument for the parameters on which it is declared.</source>
          <target state="translated">Das Positionsargument haben Vorrang vor den Wert des Arguments PositionalBinding für die Parameter, auf denen sie deklariert ist.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more information, see PositionalBinding in about_Functions_CmdletBindingAttribute.</source>
          <target state="translated">Weitere Informationen finden Sie unter PositionalBinding in About_Functions_CmdletBindingAttribute.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The value of the Position argument is specified as an integer.</source>
          <target state="translated">Der Wert des Arguments Position wird als eine ganze Zahl angegeben.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A position value of 0 represents the first position in the command, a position value of 1 represents the second position in the command, and so on.</source>
          <target state="translated">Der Positionswert 0 stellt die erste Position im Befehl, die der Positionswert 1 stellt die zweite Position im Befehl und So weiter.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If a function has no positional parameters, Windows PowerShell assigns positions to each parameter based on the order in which the parameters are declared.</source>
          <target state="translated">Wenn eine Funktion keine positionelle Parameter enthält, weist Windows PowerShell Positionen auf jeden Parameter basierend auf der Reihenfolge, in der die Parameter deklariert werden.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>However, as a best practice, do not rely on this assignment.</source>
          <target state="translated">Jedoch als bewährte Methode, verlassen Sie sich nicht für diese Zuordnung.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>When you want parameters to be positional, use the Position argument.</source>
          <target state="translated">Wenn Sie Parameter mit Feldern fester Breite sein möchten, verwenden Sie das Position-Argument.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The following example declares the ComputerName parameter.</source>
          <target state="translated">Im folgende Beispiel wird der ComputerName-Parameter deklariert.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>It uses the Position argument with a value of 0.</source>
          <target state="translated">Verwendet das Positionsargument mit einem Wert von 0.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>As a result, when "-ComputerName" is omitted from command, its value must be the first or only unnamed parameter value in the command.</source>
          <target state="translated">Daher, wenn "-ComputerName" weggelassen wird vom Befehl, muss sein Wert die erste oder einzige unbenannte Parameterwert im Befehl.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>[parameter(Position=0)] [String[]] $ComputerName</source>
          <target state="translated">[parameter(Position=0)] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>NOTE: When the Get-Help cmdlet displays the corresponding "Position?"</source>
          <target state="translated">HINWEIS: Wenn das Cmdlet Get-Help Zeigt die entsprechende "Position?"</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>parameter attribute, the position value is incremented by 1.</source>
          <target state="translated">Parameter-Attribut, Wert für die Position wird um 1 erhöht.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For example, a parameter with a Position argument value of 0 has a parameter attribute of "Position?</source>
          <target state="translated">Beispielsweise verfügt über einen Parameter mit dem Wert des Position-Argument 0 Parameterattribute "Position?</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>1."</source>
          <target state="translated">1."</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>ParameterSetName Argument</source>
          <target state="translated">ParameterSetName-Argument</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The ParameterSetName argument specifies the parameter set to which a parameter belongs.</source>
          <target state="translated">Das ParameterSetName-Argument gibt den Parametersatz, der Parameter gehört.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If no parameter set is specified, the parameter belongs to all the parameter sets defined by the function.</source>
          <target state="translated">Wenn keine Parameter festgelegt ist, gehört der Parameter alle Parametersätze, die von der Funktion definiert.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Therefore, to be unique, each parameter set must have at least one parameter that is not a member of any other parameter set.</source>
          <target state="translated">Um eindeutig sein, müssen jeden Parametersatz mindestens einen Parameter Sie daher, die nicht Mitglied einer beliebigen anderen Parameter-Gruppe ist.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The following example declares a ComputerName parameter in the Computer parameter set, a UserName parameter in the User parameter set, and a Summary parameter in both parameter sets.</source>
          <target state="translated">Das folgende Beispiel deklariert Zusammenfassung Parameter in beiden Parametersätze, UserName-Parameter in der Benutzer-Parametersatz und ComputerName-Parameter in der Computer-Parameter festgelegt.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ParameterSetName="Computer")] [String[]] $ComputerName,</source>
          <target state="translated">[Parameter (obligatorische = $true ParameterSetName = "Computer")] [String []] $ComputerName,</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ParameterSetName="User")] [String[]] $UserName,</source>
          <target state="translated">[Parameter (obligatorische = $true ParameterSetName = "Benutzer")] [String []] $UserName,</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$false)] [Switch] $Summary</source>
          <target state="translated">[parameter(Mandatory=$false)] [Option] $Summary</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>You can specify only one ParameterSetName value in each argument and only one ParameterSetName argument in each Parameter attribute.</source>
          <target state="translated">Sie können nur einen ParameterSetName in jedem Argument und nur ein ParameterSetName Argument in jedem Parameter-Attribut angeben.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>To indicate that a parameter appears in more than one parameter set, add additional Parameter attributes.</source>
          <target state="translated">Um anzugeben, dass ein Parameter in mehr als einen einzelnen Parametersatz angezeigt wird, können hinzuzufügen Sie zusätzliche Parameterattribute.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The following example explicitly adds the Summary parameter to the Computer and User parameter sets.</source>
          <target state="translated">Im folgende Beispiel werden die Computer- und Parametersätze explizit Summary-Parameter hinzugefügt.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The Summary parameter is mandatory in one parameter set and optional in the other.</source>
          <target state="translated">Summary-Parameter ist obligatorisch, einen einzigen Parameter festgelegt wird und in die andere optional.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ParameterSetName="Computer")] [String[]] $ComputerName,</source>
          <target state="translated">[Parameter (obligatorische = $true ParameterSetName = "Computer")] [String []] $ComputerName,</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ParameterSetName="User")] [String[]] $UserName,</source>
          <target state="translated">[Parameter (obligatorische = $true ParameterSetName = "Benutzer")] [String []] $UserName,</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$false, ParameterSetName="Computer")] [parameter(Mandatory=$true, ParameterSetName="User")] [Switch] $Summary</source>
          <target state="translated">[Parameter (obligatorische = $false ParameterSetName = "Computer")] [Parameter (obligatorische = $true ParameterSetName = "Benutzer")] [Option] $Summary</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For more information about parameter sets, see "Cmdlet Parameter Sets" in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142183.</source>
          <target state="translated">Weitere Informationen zu Parametersätze finden Sie unter "-Cmdlet-Parameter wird" in der MSDN Library unter http://go.microsoft.com/fwlink/?LinkId=142183.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>ValueFromPipeline Argument</source>
          <target state="translated">ValueFromPipeline-Argument</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The ValueFromPipeline argument indicates that the parameter accepts input from a pipeline object.</source>
          <target state="translated">Das ValueFromPipeline-Argument gibt an, dass der Parameter aus einem Pipelineobjekt akzeptiert.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Specify this argument if the function accepts the entire object, not just a property of the object.</source>
          <target state="translated">Dieses Argument angeben, wenn die Funktion den gesamten akzeptiert Objekt, nicht nur eine Eigenschaft des Objekts.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The following example declares a ComputerName parameter that is mandatory and accepts an object that is passed to the function from the pipeline.</source>
          <target state="translated">Das folgende Beispiel deklariert einen ComputerName-Parameter, der ist obligatorisch und ein Objekt, das an die Funktion, von der Pipeline übergeben wird akzeptiert.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ValueFromPipeline=$true)] [String[]] $ComputerName</source>
          <target state="translated">[Parameter (obligatorische = $true ValueFromPipeline = $true)] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>ValueFromPipelineByPropertyName Argument</source>
          <target state="translated">ValueFromPipelineByPropertyName-Argument</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The valueFromPipelineByPropertyName argument indicates that the parameter accepts input from a property of a pipeline object.</source>
          <target state="translated">Das ValueFromPipelineByPropertyName-Argument gibt an, dass der Parameter aus einer Eigenschaft eines Objekts der Pipeline akzeptiert.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The object property must have the same name or alias as the parameter.</source>
          <target state="translated">Die Object-Eigenschaft müssen den gleichen Namen oder Alias als Parameter.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>For example, if the function has a ComputerName parameter, and the piped object has a ComputerName property, the value of the ComputerName property is assigned to the ComputerName parameter of the function.</source>
          <target state="translated">Wenn die Funktion verfügt über eine ComputerName-Parameter und der weitergeleiteten Objekt eine ComputerName-Eigenschaft besitzt, wird der Wert der Eigenschaft "Computername" an den ComputerName-Parameter der Funktion zugewiesen.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The following example declares a ComputerName parameter that is mandatory and accepts input from the ComputerName property of the object that is passed to the function through the pipeline.</source>
          <target state="translated">Das folgende Beispiel deklariert einen ComputerName-Parameter, der ist obligatorisch und akzeptiert die Eingabe aus der ComputerName-Eigenschaft des Objekts, das über die Pipeline an die Funktion übergeben wird.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ValueFromPipelineByPropertyName=$true)] [String[]] $ComputerName</source>
          <target state="translated">[Parameter (obligatorische = $true ValueFromPipelineByPropertyName = $true)] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>ValueFromRemainingArguments Argument</source>
          <target state="translated">ValueFromRemainingArguments-Argument</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The ValueFromRemainingArguments argument indicates that the parameter accepts all of the parameters values in the command that are not assigned to other parameters of the function.</source>
          <target state="translated">Das ValueFromRemainingArguments-Argument gibt an, dass der Parameter alle Parameterwerte in den Befehl akzeptiert, die anderen Parameter der Funktion zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The following example declares a ComputerName parameter that is mandatory and accepts all the remaining parameter values that were submitted to the function.</source>
          <target state="translated">Das folgende Beispiel deklariert einen ComputerName-Parameter, der ist obligatorisch und akzeptiert alle verbleibenden Parameterwerte, die an die Funktion gesendet wurden.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ValueFromRemainingArguments=$true)] [String[]] $ComputerName</source>
          <target state="translated">[Parameter (obligatorische = $true ValueFromRemainingArguments = $true)] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>HelpMessage Argument</source>
          <target state="translated">HelpMessage-Argument</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The HelpMessage argument specifies a string that contains a brief description of the parameter or its value.</source>
          <target state="translated">Das HelpMessage-Argument gibt eine Zeichenfolge, die eine kurze Beschreibung oder den Wert des Parameters enthält.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Windows PowerShell displays this message in the prompt that appears when a mandatory parameter value is missing from a command.</source>
          <target state="translated">Windows PowerShell zeigt diese an der Aufforderung, die angezeigt wird, wenn ein erforderlicher Parameter-Wert aus einem Befehl fehlt.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>This argument has no effect on optional parameters.</source>
          <target state="translated">Dieses Argument hat keine Auswirkung auf optionale Parameter.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The following example declares a mandatory ComputerName parameter and a help message that explains the expected parameter value.</source>
          <target state="translated">Das folgende Beispiel deklariert einen obligatorischen ComputerName-Parameter und eine hilfemeldung, die den erwarteten Parameterwert erklärt.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>[parameter(mandatory=$true, HelpMessage="Enter one or more computer names separated by commas.")] [String[]] $ComputerName</source>
          <target state="translated">[Parameter (obligatorische = $true HelpMessage = "Geben Sie einen oder mehrere Computernamen durch Kommas getrennt.")] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Alias Attribute</source>
          <target state="translated">Alias-Attribut</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The Alias attribute establishes an alternate name for the parameter.</source>
          <target state="translated">Der Alias-Attribut wird einen alternativen Name für den Parameter.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>There is no limit to the number of aliases that you can assign to a parameter.</source>
          <target state="translated">Es gibt keine Beschränkung der Anzahl der Aliase, die Sie auf einen Parameter zuweisen können.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The following example shows a parameter declaration that adds the "CN" and "MachineName" aliases to the mandatory ComputerName parameter.</source>
          <target state="translated">Das folgende Beispiel zeigt eine Parameterdeklaration, die den obligatorischen ComputerName-Parameter die Aliase "CN" und "Computername" hinzufügt.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [alias("CN","MachineName")] [String[]] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)] [alias("CN","MachineName")] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Parameter and Variable Validation Attributes</source>
          <target state="translated">Parameter und Variablen Validierungsattribute.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Validation attributes direct Windows PowerShell to test the parameter values that users submit when they call the advanced function.</source>
          <target state="translated">Validierungsattribute führt Windows PowerShell die Parameterwerte zu testen, die Benutzer zu, beim Aufruf der Funktion erweiterten senden.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>If the parameter values fail the test, an error is generated and the function is not called.</source>
          <target state="translated">Wenn die Parameterwerte der Test fehlschlägt, wird ein Fehler generiert, und die Funktion nicht aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>You can also use some of the validation attributes to restrict the values that users can specify for variables.</source>
          <target state="translated">Sie können auch einige der Validierungsattribute um die Werte einzuschränken, die Benutzer für Variablen angeben können.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>AllowNull Validation Attribute</source>
          <target state="translated">AllowNull Validierungsattribut</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The AllowNull attribute allows the value of a mandatory parameter to be null ($null).</source>
          <target state="translated">Das Attribut AllowNull kann der Wert einen obligatorischen Parameter null sein ($null).</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The following example declares a ComputerName parameter that can have a Null value.</source>
          <target state="translated">Das folgende Beispiel deklariert einen ComputerName-Parameter, der einen Nullwert aufweisen kann.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [AllowNull()] [String] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)] [AllowNull()] [String] $ComputerName</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>AllowEmptyString Validation Attribute</source>
          <target state="translated">AllowEmptyString Validierungsattribut</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The AllowEmptyString attribute allows the value of a mandatory parameter to be an empty string ("").</source>
          <target state="translated">Das AllowEmptyString-Attribut kann der Wert einen obligatorischen Parameter eine leere Zeichenfolge sein ("").</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The following example declares a ComputerName parameter that can have an empty string value.</source>
          <target state="translated">Das folgende Beispiel deklariert einen ComputerName-Parameter, der einen leeren Zeichenfolgenwert aufweisen kann.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [AllowEmptyString()] [String] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)] [AllowEmptyString()] [String] $ComputerName</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>AllowEmptyCollection Validation Attribute</source>
          <target state="translated">AllowEmptyCollection Validierungsattribut</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The AllowEmptyCollection attribute allows the value of a mandatory parameter to be an empty collection (@()).</source>
          <target state="translated">Das AllowEmptyCollection-Attribut kann der Wert einen obligatorischen Parameter eine leere Auflistung sein (@()).</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The following example declares a ComputerName parameter that can have a empty collection value.</source>
          <target state="translated">Das folgende Beispiel deklariert einen ComputerName-Parameter, der einen Wert für die leere Auflistung verfügen kann.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [AllowEmptyCollection()] [String[]] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)] [AllowEmptyCollection()] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>ValidateCount Validation Attribute</source>
          <target state="translated">ValidateCount Validierungsattribut</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The ValidateCount attribute specifies the minimum and maximum number of parameter values that a parameter accepts.</source>
          <target state="translated">Das ValidateCount-Attribut gibt die minimale und maximale Anzahl von Parameterwerten, die einen Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Windows PowerShell generates an error if the number of parameter values in the command that calls the function is outside that range.</source>
          <target state="translated">Windows PowerShell generiert einen Fehler, wenn die Anzahl von Parametern in der Befehl, der die Funktion ruft außerhalb dieses Bereichs ist.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The following parameter declaration creates a ComputerName parameter that takes 1 to 5 parameter values.</source>
          <target state="translated">Die folgenden Parameterdeklaration erstellt ComputerName-Parameter, der Werte von 1 bis 5-Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [ValidateCount(1,5)] [String[]] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)] [ValidateCount(1,5)] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>ValidateLength Validation Attribute</source>
          <target state="translated">ValidateLength auf Validierungsattribut</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The ValidateLength attribute specifies the minimum and maximum number of characters in a parameter or variable value.</source>
          <target state="translated">Das Attribut validateLength auf gibt die minimale und maximale Anzahl von Zeichen in einem Parameter oder den Wert der Variablen an.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Windows PowerShell generates an error if the length of a value specified for a parameter or a variable is outside of the range.</source>
          <target state="translated">Windows PowerShell generiert einen Fehler, wenn die Länge eines Werts für einen Parameter oder eine Variable angegebene außerhalb des Bereichs.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>In the following example, each computer name must have one to 10 characters.</source>
          <target state="translated">Im folgenden Beispiel muss jeder Computername 1 bis 10 Zeichen haben.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [ValidateLength(1,10)] [String[]] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)] [ValidateLength(1,10)] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the variable $number must be a minimum of one character in length, and a maximum of ten characters.</source>
          <target state="translated">Im folgenden Beispiel muss der Wert der Variablen $number mindestens ein Zeichen lang und maximal 10 Zeichen sein.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>[Int32][ValidateLength(1,10)]$number = 01</source>
          <target state="translated">[Int32] [ValidateLength(1,10)] $number = 01</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>ValidatePattern Validation Attribute</source>
          <target state="translated">ValidatePattern Validierungsattribut</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The ValidatePattern attribute specifies a regular expression that is compared to the parameter or variable value.</source>
          <target state="translated">Das ValidatePattern-Attribut gibt einen regulären Ausdruck, der auf den Parameter oder Wert verglichen wird.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Windows PowerShell generates an error if the value does not match the regular expression pattern.</source>
          <target state="translated">Windows PowerShell generiert einen Fehler, wenn der Wert nicht das Muster eines regulären Ausdrucks übereinstimmt.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>In the following example, the parameter value must be a four-digit number, and each digit must be a number 0 to 9.</source>
          <target state="translated">Im folgenden Beispiel der Wert des Parameters muss eine vierstellige Zahl sein, und jede Stelle muss eine Zahl von 0 bis 9 sein.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [ValidatePattern("[0-9][0-9][0-9][0-9]")] [String[]] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)] [ValidatePattern("[0-9][0-9][0-9][0-9]")] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the variable $number must be a four-digit number, and each digit must be a number 0 to 9.</source>
          <target state="translated">Im folgenden Beispiel der Wert der Variablen $number muss eine vierstellige Zahl sein, und jede Stelle muss eine Zahl von 0 bis 9 sein.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>[Int32][ValidatePattern("[0-9][0-9][0-9][0-9]")]$number = 1111</source>
          <target state="translated">[Int32] [ValidatePattern("[0-9][0-9][0-9][0-9]")] $number = 1111</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>ValidateRange Validation Attribute</source>
          <target state="translated">ValidateRange Validierungsattribut</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The ValidateRange attribute specifies a numeric range for each parameter or variable value.</source>
          <target state="translated">Das ValidateRange-Attribut gibt einen numerischen Bereich für jeden Parameter oder den Wert der Variablen.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Windows PowerShell generates an error if any value is outside that range.</source>
          <target state="translated">Windows PowerShell generiert einen Fehler, wenn jeder Wert außerhalb dieses Bereichs ist.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the Attempts parameter must be between 0 and 10.</source>
          <target state="translated">Im folgenden Beispiel muss der Wert des Parameters Versuche zwischen 0 und 10 sein.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [ValidateRange(0,10)] [Int] $Attempts</source>
          <target state="translated">[parameter(Mandatory=$true)] [ValidateRange(0,10)] [Int] $Attempts</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the variable $number must be between 0 and 10.</source>
          <target state="translated">Im folgenden Beispiel muss der Wert der Variablen $number zwischen 0 und 10 sein.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>[Int32][ValidateRange(0,10)]$number = 5</source>
          <target state="translated">[Int32] [ValidateRange(0,10)] $number = 5</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>ValidateScript Validation Attribute</source>
          <target state="translated">ValidateScript Validierungsattribut</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The ValidateScript attribute specifies a script that is used to validate a parameter or variable value.</source>
          <target state="translated">Das ValidateScript-Attribut gibt ein Skript, das verwendet wird, um einen Parameter oder den Wert der Variablen zu überprüfen.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Windows PowerShell pipes the value to the script, and generates an error if the script returns "false" or if the script throws an exception.</source>
          <target state="translated">Windows PowerShell übergibt den Wert für das Skript, und generiert einen Fehler, wenn das Skript "false" zurückgibt, oder wenn das Skript eine Ausnahme auslöst.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>When you use the ValidateScript attribute, the value that is being validated is mapped to the $<bpt id="p1">_</bpt> variable. You can use the $<ept id="p1">_</ept> variable to refer to the value in the script.</source>
          <target state="translated">Wenn Sie das Attribut ValidateScript verwenden, wird der Wert, der überprüft wird zugeordnet, der $<bpt id="p1">_</bpt> Variable. Sie können die $<ept id="p1">_</ept> Variable zum Verweisen auf den Wert in das Skript.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the EventDate parameter must be greater than or equal to the current date.</source>
          <target state="translated">Im folgenden Beispiel muss der Wert des Parameters "eventdate" größer als oder gleich dem aktuellen Datum.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>[parameter()] [ValidateScript({$_ -ge (get-date)})] [DateTime] $EventDate</source>
          <target state="translated">[parameter()] [ValidateScript ({$_ -ge (Get-Date)})] [DateTime] $EventDate</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the variable $date must be greater than or equal to the current date and time.</source>
          <target state="translated">Im folgenden Beispiel muss der Wert der Variablen $date größer als oder gleich dem aktuellen Datum und Uhrzeit.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>[DateTime][ValidateScript({$_ -ge (get-date)})]$date = (get-date)</source>
          <target state="translated">[DateTime] [ValidateScript ({$_ -ge (Get-Date)})] $date = (Get-Date)</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>ValidateSet Attribute</source>
          <target state="translated">ValidateSet-Attribut</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The ValidateSet attribute specifies a set of valid values for a parameter or variable.</source>
          <target state="translated">Das ValidateSet-Attribut gibt einen Satz von gültigen Werten für einen Parameter oder eine Variable.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Windows PowerShell generates an error if a parameter or variable value does not match a value in the set.</source>
          <target state="translated">Windows PowerShell generiert einen Fehler, wenn ein Parameter oder den Wert der Variablen einen Wert im Resultset nicht übereinstimmt.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the Detail parameter can only be "Low," "Average," or "High."</source>
          <target state="translated">Der Wert des Parameters Detail kann im folgenden Beispiel werden nur "Niedrig", "Average" oder "Hoch".</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [ValidateSet("Low", "Average", "High")] [String[]] $Detail</source>
          <target state="translated">[parameter(Mandatory=$true)] [ValidateSet ("Niedrig", "Average", "Hoch")] [String []] $Detail</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the variable $flavor must be either Chocolate, Strawberry, or Vanilla.</source>
          <target state="translated">Im folgenden Beispiel muss der Wert der Variablen $flavor Schokolade, Erdbeere oder Vanille.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>[String][ValidateSet("Chocolate", "Strawberry", "Vanilla")]$flavor = Strawberry</source>
          <target state="translated">[Zeichenfolge] [ValidateSet ("Schokolade", "Erdbeere", "Vanille")] $flavor = Erdbeere</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>ValidateNotNull Validation Attribute</source>
          <target state="translated">ValidateNotNull Validierungsattribut</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The ValidateNotNull attribute specifies that the parameter value cannot be null ($null).</source>
          <target state="translated">Das ValidateNotNull-Attribut gibt an, dass der Wert des Parameters darf nicht null sein ($null).</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Windows PowerShell generates an error if the parameter value is null.</source>
          <target state="translated">Windows PowerShell generiert einen Fehler, wenn der Wert des Parameters null ist.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The ValidateNotNull attribute is designed to be used when the type of the parameter value is not specified or when the specified type will accept a value of Null.</source>
          <target state="translated">Das Attribut ValidateNotNull soll verwendet werden, wenn der Typ des Parameterwerts nicht angegeben ist oder wenn der angegebene Typ einen Null-Wert akzeptiert.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>(If you specify a type that will not accept a null value, such as a string, the null value will be rejected without the ValidateNotNull attribute, because it does not match the specified type.)</source>
          <target state="translated">(Wenn Sie einen Typ angeben, der keine null-Werten, z. B. eine Zeichenfolge akzeptiert wird der null-Wert ohne das Attribut ValidateNotNull zurückgewiesen, weil sie nicht mit den angegebenen Typ übereinstimmt.)</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the ID parameter cannot be null.</source>
          <target state="translated">Im folgenden Beispiel sein nicht der Wert des ID-Parameters null.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [ValidateNotNull()]</source>
          <target state="translated">[parameter(Mandatory=$true)] [ValidateNotNull()]</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>$ID</source>
          <target state="translated">$ID</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>ValidateNotNullOrEmpty Validation Attribute</source>
          <target state="translated">ValidateNotNullOrEmpty Validierungsattribut</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The ValidateNotNullOrEmpty attribute specifies that the parameter value cannot be null ($null) and cannot be an empty string ("").</source>
          <target state="translated">Das ValidateNotNullOrEmpty-Attribut gibt an, dass der Wert des Parameters kann nicht null ($null) und darf keine leere Zeichenfolge sein ("").</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Windows PowerShell generates an error if the parameter is used in a function call, but its value is null, an empty string, or an empty array.</source>
          <target state="translated">Windows PowerShell generiert einen Fehler, wenn der Parameter in einem Funktionsaufruf verwendet wird, aber der Wert null ist, eine leere Zeichenfolge oder ein leeres Array.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [ValidateNotNullOrEmpty()] [String[]] $UserName</source>
          <target state="translated">[parameter(Mandatory=$true)] [ValidateNotNullOrEmpty()] [String []] $UserName</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Dynamic Parameters</source>
          <target state="translated">Dynamische Parameter</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Dynamic parameters are parameters of a cmdlet, function, or script that are available only under certain conditions.</source>
          <target state="translated">Dynamische Parameter sind Cmdlet, Funktion oder Skript-Parameter, die nur unter bestimmten Umständen verfügbar sind.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>For example, several provider cmdlets have parameters that are available only when the cmdlet is used in the provider drive, or in a particular path of the provider drive.</source>
          <target state="translated">Mehrere Anbieter-Cmdlets haben z. B. Parameter, die verfügbar sind, wenn das Cmdlet in der Anbieter-Laufwerk oder in einem bestimmten Pfad des Laufwerks Anbieter verwendet wird.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>For example, the Encoding parameter is available on the Add-Content, Get-Content, and Set-Content cmdlets only when it is used in a file system drive.</source>
          <target state="translated">Die Encoding-Parameter ist beispielsweise auf die Add-Content, Get-Content und Set-Content-Cmdlets nur, wenn es in einem Dateisystemlaufwerk verwendet wird.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>You can also create a parameter that appears only when another parameter is used in the function command or when another parameter has a certain value.</source>
          <target state="translated">Sie können auch einen Parameter erstellen, der angezeigt wird, nur, wenn ein anderer Parameter im Befehl Funktion verwendet wird oder ein anderer Parameter einen bestimmten Wert verfügt.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Dynamic parameters can be very useful, but use them only when necessary, because they can be difficult for users to discover.</source>
          <target state="translated">Dynamische Parameter können sehr nützlich sein, aber nur bei Bedarf verwendet werden, da sie für Benutzer schwierig zu erkennen sein können.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>To find a dynamic parameter, the user must be in the provider path, use the ArgumentList parameter of the Get-Command cmdlet, or use the Path parameter of Get-Help.</source>
          <target state="translated">Um einen dynamischen Parameter zu finden, muss der Benutzer werden in den Pfad des Anbieters, verwenden Sie den ArgumentList-Parameter des Cmdlets Get-Command oder verwenden Sie den Path-Parameter von Get-Help.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>To create a dynamic parameter for a function or script, use the DynamicParam keyword.</source>
          <target state="translated">Um einen dynamischen Parameter für eine Funktion oder ein Skript zu erstellen, verwenden Sie das DynamicParam-Schlüsselwort.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The syntax is as follows:</source>
          <target state="translated">Die Syntax lautet wie folgt:</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>DynamicParam {&lt;statement-list&gt;}</source>
          <target state="translated">DynamicParam {&lt; Anweisungsliste &gt;}</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>In the statement list, use an If statement to specify the conditions under which the parameter is available in the function.</source>
          <target state="translated">Verwenden Sie in der Anweisungsliste eine If-Anweisung die Bedingung angeben, unter dem der Parameter in der Funktion verfügbar ist.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Use the New-Object cmdlet to create a System.Management.Automation.RuntimeDefinedParameter object to represent the parameter and specify its name.</source>
          <target state="translated">Verwenden Sie das New-Object-Cmdlet zum Erstellen eines System.Management.Automation.RuntimeDefinedParameter-Objekts, um die Parameter darstellen, und geben Sie den Namen.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>You can also use a New-Object command to create a System.Management.Automation.ParameterAttribute object to represent attributes of the parameter, such as Mandatory, Position, or ValueFromPipeline or its parameter set.</source>
          <target state="translated">Sie können auch einen New-Object-Befehl verwenden, zum Erstellen eines System.Management.Automation.ParameterAttribute-Objekts, um die Attribute des Parameters, z. B. notwendig, Position oder ValueFromPipeline oder den festgelegten Parameter darstellen.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The following example shows a sample function with standard parameters named Name and Path, and an optional dynamic parameter named DP1.The DP1 parameter is in the PSet1 parameter set and has a type of Int32.</source>
          <target state="translated">Das folgende Beispiel zeigt eine Beispielfunktion mit Standardparametern Name und Pfad und einen optionalen dynamischen Parameter mit dem Namen DP1. Der DP1 Parameter in den Parametersatz PSet1 und verfügt über einen Typ Int32.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The DP1 parameter is available in the Sample function only when the value of the Path parameter contains "HKLM:", indicating that it is being used in the HKEY_LOCAL_MACHINE registry drive.</source>
          <target state="translated">Der DP1-Parameter ist in der Beispiel-Funktion verfügbar, nur, wenn der Wert der Path-Parameter enthält "HKLM:", gibt an, dass sie auf dem Laufwerk der HKEY_LOCAL_MACHINE-Registrierung verwendet wird.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>function Get-Sample { [CmdletBinding()] Param ([String]$Name, [String]$Path)</source>
          <target state="translated">Get-Sample-Funktion [CmdletBinding()] Param {([String] $Name [String] $Path)</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>DynamicParam { if ($path -match ".HKLM.:") { $attributes = new-object System.Management.Automation.ParameterAttribute $attributes.ParameterSetName = "__AllParameterSets" $attributes.Mandatory = $false $attributeCollection = new-object ` -Type System.Collections.ObjectModel.Collection[System.Attribute] $attributeCollection.Add($attributes)</source>
          <target state="translated">DynamicParam {Wenn ($path-übereinstimmen ". HKLM.: ") {$attributes = neues Objekt System.Management.Automation.ParameterAttribute $attributes. ParameterSetName = "__AllParameterSets" $attributes. Obligatorische = $false $attributeCollection = das neue Objekt '-Typ System.Collections.ObjectModel.Collection[System.Attribute] $attributeCollection.Add($attributes)</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>$dynParam1 = new-object ` -Type System.Management.Automation.RuntimeDefinedParameter("dp1", [Int32], $attributeCollection)</source>
          <target state="translated">$dynParam1 = das neue Objekt '-Typ System.Management.Automation.RuntimeDefinedParameter("dp1", [Int32], $attributeCollection)</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>$paramDictionary = new-object ` -Type System.Management.Automation.RuntimeDefinedParameterDictionary $paramDictionary.Add("dp1", $dynParam1) return $paramDictionary } } }</source>
          <target state="translated">$paramDictionary = das neue Objekt '-Typ System.Management.Automation.RuntimeDefinedParameterDictionary $paramDictionary.Add ("dp1", $dynParam1) zurückgeben, $paramDictionary}}}</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>For more information, see "RuntimeDefinedParameter Class" in the MSDN (Microsoft Developer Network) library at http://go.microsoft.com/fwlink/?LinkID=145130.</source>
          <target state="translated">Weitere Informationen finden Sie unter "RuntimeDefinedParameter Class" in der MSDN (Microsoft Developer Network) Library unter http://go.microsoft.com/fwlink/?LinkID=145130.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Switch Parameters Switch parameters are parameters with no parameter value.</source>
          <target state="translated">Switch-Parameter Switch-Parameter sind Parameter ohne Parameter-Wert.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>They are effective only when they are used and have only one effect.</source>
          <target state="translated">Sie gelten nur, wenn sie verwendet werden und nur eine Wirkung.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>For example, the -NoProfile parameter of PowerShell.exe is a switch parameter.</source>
          <target state="translated">Der NoProfile - Parameter von PowerShell.exe ist z. B. ein Switch-Parameter.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>To create a switch parameter in a function, specify the Switch type in the parameter definition.</source>
          <target state="translated">Um einen Switch-Parameter in einer Funktion zu erstellen, geben Sie den Schalter in die Parameterdefinition.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>For example: Param ([Switch]<ph id="ph1">&lt;ParameterName&gt;</ph>) -or- Param</source>
          <target state="translated">Zum Beispiel: Param ([Option]<ph id="ph1">&lt;ParameterName&gt;</ph>) - oder - Parameter</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$false)] [Switch]</source>
          <target state="translated">[parameter(Mandatory=$false)] [Option]</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Switch parameters are easy to use and are preferred over Boolean parameters, which have a more difficult syntax.</source>
          <target state="translated">Switch-Parameter sind einfach zu verwenden und bevorzugte booleschen Parameter, die eine schwierige Syntax aufweisen.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>For example, to use a switch parameter, the user types the parameter in the command.</source>
          <target state="translated">Um einen Switch-Parameter verwenden, gibt der Benutzer z. B. den Parameter im Befehl.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>-IncludeAll</source>
          <target state="translated">-IncludeAll</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>To use a Boolean parameter, the user types the parameter and a Boolean value.</source>
          <target state="translated">Um einen booleschen Parameter verwenden, gibt der Benutzer die Parameter und einem booleschen Wert.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>-IncludeAll:$true</source>
          <target state="translated">-IncludeAll: $true</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>When creating switch parameters, choose the parameter name carefully.</source>
          <target state="translated">Wählen Sie den Namen des Parameters sorgfältig, beim Erstellen von Switch-Parameter.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Be sure that the parameter name communicates the effect of the parameter to the user, and avoid ambiguous terms, such as Filter or Maximum, that might imply that a value is required.</source>
          <target state="translated">Stellen Sie sicher, dass der Name des Parameters den Effekt des Parameters, der der Benutzer kommuniziert, und Vermeiden von mehrdeutigen Begriffen, wie Filter oder maximal, der impliziert, dass ein Wert erforderlich ist.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">SIEHE AUCH</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>about_Functions about_Functions_Advanced about_Functions_Advanced_Methods about_Functions_CmdletBindingAttribute about_Functions_OutputTypeAttribute</source>
          <target state="translated">About_Functions About_Functions_Advanced About_Functions_Advanced_Methods About_Functions_CmdletBindingAttribute about_Functions_OutputTypeAttribute</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>