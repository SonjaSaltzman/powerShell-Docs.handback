<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de9e8af7908ac6a72a100fd2c86b52c30c390c39</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\cookbooks\Getting-WMI-Objects--Get-WmiObject-.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b09fce470b11641d72ebba1c0127544655bb0619</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7ebb0f4b0281d17020133974ce7644306abf42a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Getting WMI Objects  Get WmiObject</source>
          <target state="translated">Getting WMI Objects  Get WmiObject</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">powershell,applet de commande</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Getting WMI Objects (Get-WmiObject)</source>
          <target state="translated">Obtention d’objets WMI (Get-WmiObject)</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Getting WMI Objects (Get-WmiObject)</source>
          <target state="translated">Obtention d’objets WMI (Get-WmiObject)</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Windows Management Instrumentation (WMI) is a core technology for Windows system administration because it exposes a wide range of information in a uniform manner.</source>
          <target state="translated">WMI (Windows Management Instrumentation) est une technologie majeure pour l’administration du système Windows, car elle expose un vaste éventail d’informations de manière uniforme.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Because of how much WMI makes possible, the Windows PowerShell cmdlet for accessing WMI objects, <bpt id="p1">**</bpt>Get-WmiObject<ept id="p1">**</ept>, is one of the most useful for doing real work.</source>
          <target state="translated">Compte tenu de tout ce que WMI permet de réaliser, l’applet de commande Windows PowerShell pour l’accès aux objets WMI, <bpt id="p1">**</bpt>Get-WmiObject<ept id="p1">**</ept>, est l’une des plus utiles pour travailler réellement.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>We are going to discuss how to use Get-WmiObject to access WMI objects and then how to use WMI objects to do specific things.</source>
          <target state="translated">Nous allons aborder l’utilisation de l’applet de commande Get-WmiObject pour accéder aux objets WMI, puis expliquer comment utiliser des objets WMI pour réaliser des opérations spécifiques.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Listing WMI Classes</source>
          <target state="translated">Affichage de la liste des classes WMI</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The first problem most WMI users encounter is trying to find out what can be done with WMI.</source>
          <target state="translated">Le premier problème que rencontrent la plupart des utilisateurs de WMI est de comprendre ce que WMI permet de faire.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>WMI classes describe the resources that can be managed.</source>
          <target state="translated">Les classes WMI décrivent les ressources qui peuvent être gérées.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>There are hundreds of WMI classes, some of which contain dozens of properties.</source>
          <target state="translated">Il existe des centaines de classes WMI, dont certaines contiennent des dizaines de propriétés.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-WmiObject<ept id="p1">**</ept> addresses this problem by making WMI discoverable.</source>
          <target state="translated">L’applet de commande <bpt id="p1">**</bpt>Get-WmiObject<ept id="p1">**</ept> résout ce problème en rendant WMI détectable.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can get a list of the WMI classes available on the local computer by typing:</source>
          <target state="translated">Vous pouvez obtenir la liste des classes WMI disponibles sur l’ordinateur local en tapant ce qui suit :</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can retrieve the same information from a remote computer by using the ComputerName parameter, specifying a computer name or IP address:</source>
          <target state="translated">Vous pouvez récupérer les mêmes informations à partir d’un ordinateur distant à l’aide du paramètre ComputerName, en spécifiant une adresse IP ou un nom d’ordinateur :</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The class listing returned by remote computers may vary due to the specific operating system the computer is running and the particular WMI extensions added by installed applications.</source>
          <target state="translated">La liste de classes retournée par des ordinateurs distants peut varier selon le système d’exploitation que l’ordinateur exécute et les extensions WMI ajoutées par les applications installées.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When using Get-WmiObject to connect to a remote computer, the remote computer must be running WMI and, under the default configuration, the account you are using must be in the local administrators group on the remote computer.</source>
          <target state="translated">Lorsque vous utilisez l’applet de commande Get-WmiObject pour vous connecter à un ordinateur distant, celui-ci doit exécuter WMI et, dans la configuration par défaut, le compte que vous utilisez doit figurer dans le groupe Administrateurs local sur l’ordinateur distant.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The remote system does not need to have Windows PowerShell installed.</source>
          <target state="translated">Windows PowerShell ne doit pas nécessairement être installé sur le système distant.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This allows you to administer operating systems that are not running Windows PowerShell, but do have WMI available.</source>
          <target state="translated">Cela permet d’administrer des systèmes d’exploitation qui n’exécutent pas Windows PowerShell, mais disposent de WMI.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can even include the ComputerName when connecting to the local system.</source>
          <target state="translated">Lors de la connexion au système local, vous pouvez même inclure le nom d’ordinateur à l’aide du paramètre ComputerName.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can use the local computer's name, its IP address (or the loopback address 127.0.0.1), or the WMI-style '.' as the computer name.</source>
          <target state="translated">Vous pouvez utiliser le nom de l’ordinateur local, son adresse IP (ou l’adresse de bouclage 127.0.0.1), ou le style de WMI « . » comme nom d’ordinateur.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you are running Windows PowerShell on a computer named Admin01 with IP address 192.168.1.90, the following commands will all return the WMI class listing for that computer:</source>
          <target state="translated">Si vous exécutez Windows PowerShell sur un ordinateur nommé Admin01 dont l’adresse IP est 192.168.1.90, les commandes suivantes retournent toutes la classe WMI pour cet ordinateur :</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Get-WmiObject uses the root/cimv2 namespace by default.</source>
          <target state="translated">Par défaut, l’applet de commande Get-WmiObject utilise l’espace de noms root/cimv2.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If you want to specify another WMI namespace, use the <bpt id="p1">**</bpt>Namespace<ept id="p1">**</ept> parameter and specify the corresponding namespace path:</source>
          <target state="translated">Si vous souhaitez spécifier un autre espace de noms WMI, utilisez le paramètre <bpt id="p1">**</bpt>Namespace<ept id="p1">**</ept> en spécifiant le chemin d’accès à l’espace de noms correspondant :</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Displaying WMI Class Details</source>
          <target state="translated">Affichage des détails de classe WMI</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you already know the name of a WMI class, you can use it to get information immediately.</source>
          <target state="translated">Si vous connaissez déjà le nom d’une classe WMI, vous pouvez l’utiliser pour obtenir des informations immédiatement.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, one of the WMI classes commonly used for retrieving information about a computer is <bpt id="p1">**</bpt>Win32_OperatingSystem<ept id="p1">**</ept>.</source>
          <target state="translated">Par exemple, une des classes WMI couramment utilisées pour récupérer des informations sur un ordinateur est <bpt id="p1">**</bpt>Win32_OperatingSystem<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Although we are showing all of the parameters, the command can be expressed in a more succinct way.</source>
          <target state="translated">Bien que nous montrions tous les paramètres, la commande peut être exprimée de façon plus concise.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ComputerName<ept id="p1">**</ept> parameter is not necessary when connecting to the local system.</source>
          <target state="translated">Le paramètre <bpt id="p1">**</bpt>ComputerName<ept id="p1">**</ept> n’est pas nécessaire lors de la connexion au système local.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>We show it to demonstrate the most general case and remind you about the parameter.</source>
          <target state="translated">Nous le montrons pour illustrer le cas le plus général, et vous rappeler la disponibilité de ce paramètre.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Namespace<ept id="p1">**</ept> defaults to root/cimv2, and can be omitted as well.</source>
          <target state="translated">Par défaut, l’<bpt id="p1">**</bpt>espace de noms<ept id="p1">**</ept> est root/cimv2. Vous pouvez également l’omettre.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Finally, most cmdlets allow you to omit the name of common parameters.</source>
          <target state="translated">Enfin, la plupart des applets de commande permettent l’omission du nom de paramètres communs.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>With Get-WmiObject, if no name is specified for the first parameter, Windows PowerShell treats it as the <bpt id="p1">**</bpt>Class<ept id="p1">**</ept> parameter.</source>
          <target state="translated">Avec l’applet de commande Get-WmiObject, si aucun nom n’est spécifié pour le premier paramètre, Windows PowerShell traite celui-ci en tant que paramètre <bpt id="p1">**</bpt>Class<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This means the last command could have been issued by typing:</source>
          <target state="translated">Cela signifie que la dernière commande pourrait avoir été émise en tapant ce qui suit :</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Win32_OperatingSystem<ept id="p1">**</ept> class has many more properties than those displayed here.</source>
          <target state="translated">La classe <bpt id="p1">**</bpt>Win32_OperatingSystem<ept id="p1">**</ept> a beaucoup plus de propriétés que celles affichées ici.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can use Get-Member to see all the properties.</source>
          <target state="translated">Vous pouvez utiliser l’applet de commande Get-Member pour voir toutes les propriétés.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The properties of a WMI class are automatically available like other object properties:</source>
          <target state="translated">Les propriétés d’une classe WMI sont automatiquement disponibles, comme d’autres propriétés de l’objet :</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Displaying Non-Default Properties with Format Cmdlets</source>
          <target state="translated">Affichage de propriétés autres que par défaut avec les applets de commande Format</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you want information contained in the <bpt id="p1">**</bpt>Win32_OperatingSystem<ept id="p1">**</ept> class that is not displayed by default, you can display it by using the <bpt id="p2">**</bpt>Format<ept id="p2">**</ept> cmdlets.</source>
          <target state="translated">Si vous souhaitez des informations contenues dans la classe <bpt id="p1">**</bpt>Win32_OperatingSystem<ept id="p1">**</ept> qui ne sont pas affichées par défaut, vous pouvez les afficher à l’aide des applets de commande <bpt id="p2">**</bpt>Format<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For example, if you want to display available memory data, type:</source>
          <target state="translated">Par exemple, si vous souhaitez afficher les données de la mémoire disponible, tapez :</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Wildcards work with property names in <bpt id="p1">**</bpt>Format-Table<ept id="p1">**</ept>, so the final pipeline element can be reduced to <bpt id="p2">**</bpt>Format-Table -Property TotalV<ph id="ph1">\&amp;</ph>#42;,Free<ph id="ph2">\&amp;</ph>#42;<ept id="p2">**</ept></source>
          <target state="translated">Les caractères génériques fonctionnant avec les noms de propriété dans l’applet de commande <bpt id="p1">**</bpt>Format-Table<ept id="p1">**</ept>, l’élément final du pipeline peut être réduit à <bpt id="p2">**</bpt>Format-Table -Property TotalV<ph id="ph1">\&amp;</ph>#42;,Free<ph id="ph2">\&amp;</ph>#42;<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The memory data might be more readable if you format it as a list by typing:</source>
          <target state="translated">Les données de la mémoire peuvent être plus lisibles si vous les affichez sous forme de liste en tapant ce qui suit :</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>