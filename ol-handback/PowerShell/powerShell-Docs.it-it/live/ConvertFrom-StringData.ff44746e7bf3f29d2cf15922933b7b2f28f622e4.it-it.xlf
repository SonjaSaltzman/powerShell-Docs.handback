<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3dcdd0358714b2fdd0fb1501397e34c15ea12e48</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\ConvertFrom-StringData.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">098b94c03018e0d4aad6a3fa4be256b3f3655d19</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f8304cfb5a18936f4ce8efa6c38ba30d169c47e3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">cmdlet PowerShell</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData</source>
          <target state="translated">ConvertFrom-StringData</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData</source>
          <target state="translated">ConvertFrom-StringData</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">RIEPILOGO</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Converts a string containing one or more key and value pairs to a hash table.</source>
          <target state="translated">Converte una stringa contenente uno o più coppie chiave-valore in una tabella hash.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SINTASSI</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIZIONE</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> cmdlet converts a string that contains one or more key and value pairs into a hash table.</source>
          <target state="translated">Il <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> cmdlet consente di convertire una stringa che contiene uno o più coppie chiave / valore in una tabella hash.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Because each key/value pair must be on a separate line, here-strings are often used as the input format.</source>
          <target state="translated">Poiché ogni coppia chiave-valore deve essere su una riga separata, come formato di input vengono spesso usate stringhe di tipo here.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> cmdlet is considered to be a safe cmdlet that can be used in the DATA section of a script or function.</source>
          <target state="translated">Il <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> cmdlet è considerato un cmdlet sicuro che può essere utilizzato nella sezione DATI di una funzione o script.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When used in a DATA section, the contents of the string must conform to the rules for a DATA section.</source>
          <target state="translated">Quando viene usato in una sezione DATA, il contenuto della stringa deve essere conforme alle regole relative alle sezioni DATA.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information, see about_Data_Sections.</source>
          <target state="translated">Per altre informazioni, vedere about_Data_Sections.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> supports escape character sequences that are allowed by conventional machine translation tools.</source>
          <target state="translated"><bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> supporta le sequenze di caratteri che sono consentite dagli strumenti di traduzione automatica convenzionali di escape.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>That is, the cmdlet can interpret backslashes (<ph id="ph1">\\</ph>) as escape characters in the string data by using the Regex.Unescape Methodhttp://msdn.microsoft.com/library/vstudio/system.text.regularexpressions.regex.unescape(v=vs.100).aspx, instead of the Windows PowerShell backtick character (<ph id="ph2">\`</ph>) that would normally signal the end of a line in a script.</source>
          <target state="translated">Ovvero, il cmdlet può interpretare le barre rovesciate (<ph id="ph1">\\</ph>) come caratteri di escape nei dati di tipo stringa utilizzando il Methodhttp://msdn.microsoft.com/library/vstudio/system.text.regularexpressions.regex.unescape(v=vs.100).aspx, instead of the Windows PowerShell backtick character (<ph id="ph2">\`</ph>) unescape Method che normalmente segnalerebbe la fine di una riga in uno script.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Inside the here-string, the backtick character does not work.</source>
          <target state="translated">Il carattere di apice inverso non funziona all'interno della stringa di tipo here.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can also preserve a literal backslash in your results by escaping it with a preceding backslash, like this: <ph id="ph1">\\\\</ph>.</source>
          <target state="translated">È inoltre possibile mantenere una barra rovesciata letterale nei risultati facendola con una barra rovesciata, simile al seguente: <ph id="ph1">\\\\</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Unescaped backslash characters, such as those that are commonly used in file paths, can render as illegal escape sequences in your results.</source>
          <target state="translated">I caratteri barra rovesciata senza escape, come quelli comunemente usati nei percorsi di file, possono essere visualizzati come sequenze di escape non valide nei risultati.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">ESEMPI</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Example 1: Convert a single-quoted here-string to a hash table</source>
          <target state="translated">Esempio 1: Convertire una stringa di virgolette in una tabella hash</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>These commands convert a single-quoted here-string of user messages into a hash table.</source>
          <target state="translated">Questi comandi convertono una stringa di tipo here di messaggi utente racchiusa tra virgolette singole in una tabella hash.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In a single-quoted string, values are not substituted for variables and expressions are not evaluated.</source>
          <target state="translated">In una stringa racchiusa tra virgolette singole i valori per le variabili non vengono sostituiti e le espressioni non vengono valutate.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The first command creates a here-string and saves it in the $Here variable.</source>
          <target state="translated">Il primo comando crea una stringa e lo salva nella variabile $Here.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> cmdlet to convert the here-string in the $Here variable to a hash table.</source>
          <target state="translated">Il secondo comando Usa il <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> per convertire la stringa $Here nella variabile in una tabella hash.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example 2: Convert a double-quoted here-string to a hash table</source>
          <target state="translated">Esempio 2: Convertire una stringa di tra virgolette doppie in una tabella hash</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>These commands demonstrate that <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> actually converts a here-string to a hash table.</source>
          <target state="translated">Questi comandi dimostrano che <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> effettivamente converte una stringa in una tabella hash.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The first command creates a double-quoted here-string that includes one key/value pair and saves it in the $P variable.</source>
          <target state="translated">Il primo comando crea tra virgolette doppie-stringa che include una coppia chiave/valore e lo salva nella variabile $P.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The second command uses a pipeline operator (|) to send the $P variable to the Get-Member cmdlet.</source>
          <target state="translated">Il secondo comando Usa un operatore pipeline (|) per inviare la variabile $P al cmdlet Get-Member.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The result shows that $P is a string (System.String).</source>
          <target state="translated">Il risultato mostra che $P è una stringa (System. String).</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> cmdlet to convert the here-string in $P to a hash table.</source>
          <target state="translated">Il terzo comando Usa il <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> per convertire la stringa in $P a una tabella hash.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command stores the result in the $Hash variable.</source>
          <target state="translated">Il comando Archivia il risultato nella variabile $Hash.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The final command uses a pipeline operator (|) to send the $Hash variable to the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">L'ultimo comando utilizza un operatore pipeline (|) per inviare la variabile $Hash per il <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The result shows that the content of the $Hash variable is a hash table (System.Collections.Hashtable).</source>
          <target state="translated">Il risultato mostra che il contenuto della variabile $Hash è una tabella hash (System.Collections.Hashtable).</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Example 3: Convert a here-string to a hash table</source>
          <target state="translated">Esempio 3: Convertire una stringa in una tabella hash</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This command converts a single-quoted here-string that contains multiple key/value pairs into a hash table.</source>
          <target state="translated">Questo comando converte una stringa di tipo here racchiusa tra virgolette singole contenente le coppie chiave-valore in una tabella hash.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In this command, the value of the <bpt id="p1">*</bpt>StringData<ept id="p1">*</ept> parameter is a here-string, instead of a variable that contains a here-string.</source>
          <target state="translated">In questo comando, il valore di <bpt id="p1">*</bpt>StringData<ept id="p1">*</ept> parametro è una stringa, anziché una variabile che contiene una stringa.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Either format is valid.</source>
          <target state="translated">Entrambi i formati sono validi.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The here-string includes a comment about one of the strings.</source>
          <target state="translated">La stringa di tipo here include un commento su una delle stringhe.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Comments are valid in strings, provided that the comment is on a different line than a key/value pair.</source>
          <target state="translated">I commenti sono validi nelle stringhe, purché siano su una riga diversa rispetto alle coppie chiave-valore.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Example 4: Convert a string to a hash table</source>
          <target state="translated">Esempio 4: Convertire una stringa in una tabella hash</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This example converts a regular double-quoted string (not a here-string) into a hash table and saves it in the $A variable.</source>
          <target state="translated">In questo esempio converte una stringa tra virgolette doppie regolare (non una stringa) in una tabella hash e lo salva nella variabile $A.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To satisfy the condition that each key/value pair must be on a separate line, it uses the Windows PowerShell newline character (<ph id="ph1">\`</ph>n) to separate the pairs.</source>
          <target state="translated">Per soddisfare la condizione che ogni coppia chiave/valore deve essere su una riga separata, viene utilizzato il carattere di Windows PowerShell (<ph id="ph1">\`</ph>n) per separare le coppie.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The result is a hash table of the input.</source>
          <target state="translated">Il risultato è una tabella hash dell'input.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The remaining commands display the output.</source>
          <target state="translated">I comandi rimanenti visualizzano l'output.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Example 5: Use ConvertFrom-StringData in the DATA section of a script</source>
          <target state="translated">Esempio 5: Utilizzare ConvertFrom-StringData nella sezione DATI di uno script</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This example shows a <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> command used in the DATA section of a script.</source>
          <target state="translated">Questo esempio viene illustrato un <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> comando utilizzato nella sezione DATI di uno script.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The statements below the DATA section display the text to the user.</source>
          <target state="translated">Le istruzioni sotto la sezione DATA visualizzano il testo all'utente.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Because the text includes variable names, it must be enclosed in a single-quoted string so that the variables are interpreted literally and not expanded.</source>
          <target state="translated">Poiché il testo include nomi di variabili, deve essere in una stringa racchiusa tra virgolette singole, in modo che le variabili vengano interpretate letteralmente e non espanse.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Variables are not permitted in the DATA section.</source>
          <target state="translated">Le variabili non sono consentite nella sezione DATA.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Example 6: Use the pipeline operator to pass a string</source>
          <target state="translated">Esempio 6: Usare l'operatore pipeline per passare una stringa</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This example shows that you can use a pipeline operator (|) to send a string to <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept>.</source>
          <target state="translated">Questo esempio viene illustrato che è possibile utilizzare un operatore pipeline (|) per inviare una stringa a <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The first command saves a here-string in the $Here variable.</source>
          <target state="translated">Il primo comando Salva una stringa $Here nella variabile.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The second command uses a pipeline operator (|) to send the $Here variable to <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept>.</source>
          <target state="translated">Il secondo comando Usa un operatore pipeline (|) per inviare la variabile $Here per <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The command saves the result in the $Hash variable.</source>
          <target state="translated">Il comando Salva il risultato nella variabile $Hash.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The final command displays the contents of the $Hash variable.</source>
          <target state="translated">L'ultimo comando Visualizza il contenuto della variabile $Hash.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Example 7: Use escape characters to add new lines and return characters</source>
          <target state="translated">Esempio 7: Caratteri di escape di utilizzo aggiungere nuove righe e restituire i caratteri</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This example shows the use of escape characters to create new lines and return characters in <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept>.</source>
          <target state="translated">In questo esempio viene illustrato l'utilizzo di caratteri di escape per creare nuove righe e restituire i caratteri in <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In this example, the escape sequence <bpt id="p1">**</bpt>\n<ept id="p1">**</ept> is used to create new lines within a block of text (the value, in the resulting hash table) that is associated with a name or item (the name, in the resulting hash table).</source>
          <target state="translated">In questo esempio, la sequenza di escape <bpt id="p1">**</bpt>\n<ept id="p1">**</ept> viene utilizzato per creare nuove righe all'interno di un blocco di testo (il valore nella tabella hash risultante) associato a un nome o un elemento (il nome della tabella hash risultante).</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Example 8: Use backslash escape character to correctly render a file path</source>
          <target state="translated">Esempio 8: Utilizzare caratteri di escape barra rovesciata per eseguire correttamente il rendering di un percorso di file</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This example shows how to use of the backslash escape character in the string data to allow a file path to render correctly in the resulting <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> hash table.</source>
          <target state="translated">In questo esempio viene illustrato come utilizzare il carattere di escape barra rovesciata nei dati di tipo stringa per consentire un percorso di file per il rendering corretto nella finestra di <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept> tabella hash.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The double backslash ensures that the literal backslash characters render correctly in the hash table output.</source>
          <target state="translated">La doppia barra rovesciata garantisce che i caratteri di barra rovesciata letterale vengano visualizzati correttamente nell'output della tabella hash.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARAMETRI</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-StringData</source>
          <target state="translated">-StringData</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Specifies the string to be converted.</source>
          <target state="translated">Specifica la stringa da convertire.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can use this parameter or pipe a string to <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept>.</source>
          <target state="translated">È possibile utilizzare questo parametro o inviare tramite pipe una stringa per <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The parameter name is optional.</source>
          <target state="translated">Il nome del parametro è facoltativo.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The value of this parameter must be a string that is enclosed in single quotation marks, a string that is enclosed in double quotation marks, or a here-string that contains one or more key/value pairs.</source>
          <target state="translated">Il valore di questo parametro deve essere una stringa racchiusa tra virgolette, una stringa racchiusa tra virgolette doppie o-stringa che contiene uno o più coppie chiave/valore.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Each key/value pair must be on a separate line, or each pair must be separated by newline characters (<ph id="ph1">\`</ph>n).</source>
          <target state="translated">Ogni coppia chiave/valore deve essere su una riga distinta o ogni coppia deve essere separato da caratteri di nuova riga (<ph id="ph1">\`</ph>n).</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You can include comments in the string, but the comments cannot be on the same line as a key/value pair.</source>
          <target state="translated">È possibile includere commenti nella stringa, purché non siano nella stessa riga di una coppia chiave-valore.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The comments are not included in the hash table.</source>
          <target state="translated">I commenti non vengono inclusi nella tabella hash.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A here-string is a string consisting of one or more lines within which quotation marks are interpreted literally.</source>
          <target state="translated">Una stringa di tipo here è una stringa costituita da una o più righe in cui le virgolette vengono interpretate letteralmente.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For more information, see about_Quoting_Rules.</source>
          <target state="translated">Per altre informazioni, vedere about_Quoting_Rules.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Questo cmdlet supporta i parametri comuni:-eseguire il Debug, - ErrorAction, - ErrorVariable, - InformationAction, InformationVariable-, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction e - WarningVariable.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Per ulteriori informazioni, vedere about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">INPUT</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You can pipe a string containing a key/value pair to <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept>.</source>
          <target state="translated">È possibile inviare tramite pipe una stringa contenente una coppia chiave/valore a <bpt id="p1">**</bpt>ConvertFrom-StringData<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">OUTPUT</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>System.Collections.Hashtable</source>
          <target state="translated">System.Collections.Hashtable</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This cmdlet returns a hash table that it creates from the key/value pairs.</source>
          <target state="translated">Questo cmdlet restituisce una tabella hash creata dalle coppie chiave/valore.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTE</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A here-string is a string consisting of one or more lines within which quotation marks are interpreted literally.</source>
          <target state="translated">Una stringa di tipo here è una stringa costituita da una o più righe in cui le virgolette vengono interpretate letteralmente.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This cmdlet can be useful in scripts that display user messages in multiple spoken languages.</source>
          <target state="translated">Questo cmdlet può essere utile negli script che visualizza i messaggi dell'utente in più lingue vocali.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>You can use the dictionary-style hash tables to isolate text strings from code, such as in resource files, and to format the text strings for use in translation tools.</source>
          <target state="translated">È possibile usare tabelle hash di tipo dizionario per isolare le stringhe di testo dal codice, ad esempio nei file di risorse, e formattare le stringhe di testo per l'utilizzo in strumenti di traduzione.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">COLLEGAMENTI CORRELATI</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>about_Data_Sections</source>
          <target state="translated">about_Data_Sections</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>about_Quoting_Rules</source>
          <target state="translated">about_Quoting_Rules</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>about_Script_Internationalization</source>
          <target state="translated">about_Script_Internationalization</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>