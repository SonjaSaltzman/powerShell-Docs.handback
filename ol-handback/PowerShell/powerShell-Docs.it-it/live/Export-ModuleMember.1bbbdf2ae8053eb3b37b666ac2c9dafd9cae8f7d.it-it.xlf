<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f63e479588ed068ed9d8b09d13552caa1214aa0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\Export-ModuleMember.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72498595ba0db4f77f15912449b585f5dd4d8a2c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a66bfa8a393251394d600c416f5fc9a84b5299a3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">cmdlet PowerShell</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Export-ModuleMember</source>
          <target state="translated">Export-ModuleMember</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Export-ModuleMember</source>
          <target state="translated">Export-ModuleMember</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">RIEPILOGO</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Specifies the module members that are exported.</source>
          <target state="translated">Specifica i membri del modulo esportati.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SINTASSI</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIZIONE</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> cmdlet specifies the module members that are exported from a script module (.psm1) file, or from a dynamic module created by using the New-Module cmdlet.</source>
          <target state="translated">Il <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> cmdlet specifica i membri del modulo esportati da un file di modulo (. psm1) di script o da un modulo dinamico creato utilizzando il cmdlet New-Module.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Module members include cmdlets, functions, variables, and aliases.</source>
          <target state="translated">Membri del modulo includono cmdlet, funzioni, variabili e alias.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This cmdlet can be used only in a script module file or a dynamic module.</source>
          <target state="translated">Questo cmdlet può essere usato solo in un file del modulo di script o in un modulo dinamico.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If a script module does not include an <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> command, the functions in the script module are exported, but the variables and aliases are not.</source>
          <target state="translated">Se un modulo di script non include un <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> comando, vengono esportate le funzioni nel modulo di script, ma non le variabili e gli alias.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When a script module includes <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> commands, only the members specified in the <bpt id="p2">**</bpt>Export-ModuleMember<ept id="p2">**</ept> commands are exported.</source>
          <target state="translated">Quando un modulo di script include <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> comandi, solo i membri specificati nel <bpt id="p2">**</bpt>Export-ModuleMember<ept id="p2">**</ept> viene esportato alcun comando.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can also use <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> to suppress or export members that the script module imports from other modules.</source>
          <target state="translated">È inoltre possibile utilizzare <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> per eliminare o esportare i membri che consente di importare il modulo di script da altri moduli.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> command is optional, but it is a best practice.</source>
          <target state="translated">Un <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> comando è facoltativo, ma è consigliata.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Even if the command confirms the default values, it demonstrates the intention of the module author.</source>
          <target state="translated">Anche se il comando conferma i valori predefiniti, illustra l'intenzione dell'autore del modulo.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">ESEMPI</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Example 1: Export aliases and functions in a script module</source>
          <target state="translated">Esempio 1: Esportare gli alias e funzioni in un modulo di script</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This command exports the aliases defined in the script module, together with the functions defined in the script module.</source>
          <target state="translated">Questo comando Esporta gli alias definiti nel modulo di script, con le funzioni definite nel modulo di script.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To export the aliases, which are not exported by default, you must also explicitly specify the functions.</source>
          <target state="translated">Per esportare gli alias, che non vengono esportati per impostazione predefinita, è necessario specificare in modo esplicito anche le funzioni.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Otherwise, the cmdlet exports only the aliases.</source>
          <target state="translated">In caso contrario, il cmdlet Esporta solo gli alias.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Example 2: Export specific aliases and functions</source>
          <target state="translated">Esempio 2: Esportare funzioni e alias specifici</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This command exports three aliases and three functions defined in the script module.</source>
          <target state="translated">Questo comando esporta tre alias e tre funzioni definiti nel modulo di script.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can use this command format to specify the names of module members.</source>
          <target state="translated">È possibile usare questo formato di comando per specificare i nomi dei membri del modulo.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example 3: Export no members</source>
          <target state="translated">Esempio 3: non esportare membri</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This command specifies that no members defined in the script module are exported.</source>
          <target state="translated">Questo comando specifica che non viene esportato alcun membro definito nel modulo di script.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This command prevents the module members from being exported, but it does not hide the members.</source>
          <target state="translated">Il comando impedisce l'esportazione dei membri del modulo, ma non li nasconde.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Users can read and copy module members or use the call operator (&amp;) to invoke module members that are not exported.</source>
          <target state="translated">Gli utenti possono leggere e copiare i membri del modulo o usare l'operatore di chiamata (&amp;) per richiamare i membri del modulo non esportati.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Example 4: Export a specific variable</source>
          <target state="translated">Esempio 4: Esportare una variabile specifica</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This command exports only the $increment variable from the script module.</source>
          <target state="translated">Questo comando esporta solo la variabile $increment dal modulo di script.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>No other members are exported.</source>
          <target state="translated">Non vengono esportati altri membri.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you want to export a variable, in addition to exporting the functions in a module, the <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> command must include the names of all of the functions and the name of the variable.</source>
          <target state="translated">Se si desidera esportare una variabile, oltre alle funzioni in un modulo, il <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> comando deve includere i nomi di tutte le funzioni e il nome della variabile.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Example 5: Multiple export commands</source>
          <target state="translated">Esempio 5: Più comandi di esportazione</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>These commands show how multiple <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> commands are interpreted in a script module (.psm1) file.</source>
          <target state="translated">Questi comandi mostrano come più <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> comandi vengono interpretati in un file di modulo (. psm1) di script.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>These commands create three functions and one alias, and then they export two of the functions and the alias.</source>
          <target state="translated">Tali comandi creano tre funzioni e un alias e quindi esportano due delle tre funzioni e l'alias.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Without the <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> commands, all three of the functions would be exported, but the alias would not be exported.</source>
          <target state="translated">Senza il <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> comandi, verrebbero esportate tutte e tre le funzioni, ma l'alias potrebbe non essere esportato.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>With the <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> commands, only the <bpt id="p2">**</bpt>Get-Test<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Start-Test<ept id="p3">**</ept> functions and the STT alias are exported.</source>
          <target state="translated">Con il <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> comandi, solo il <bpt id="p2">**</bpt>Get-Test<ept id="p2">**</ept> e <bpt id="p3">**</bpt>Start-Test<ept id="p3">**</ept> vengono esportate le funzioni e l'alias STT.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Example 6: Export members in a dynamic module</source>
          <target state="translated">Esempio 6: Esportare i membri di un modulo dinamico</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This command shows how to use Export-ModuleMember in a dynamic module that is created by using the <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">Questo comando Mostra come usare Export-ModuleMember in un modulo dinamico che viene creato utilizzando il <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> cmdlet.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In this example, <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> is used to export both the Hi alias and the <bpt id="p2">**</bpt>SayHello<ept id="p2">**</ept> function in the dynamic module.</source>
          <target state="translated">In questo esempio, <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> viene utilizzato per esportare alias ad alta e <bpt id="p2">**</bpt>SayHello<ept id="p2">**</ept> funzione nel modulo dinamico.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Example 7: Declare and export a function in a single command</source>
          <target state="translated">Esempio 7: Dichiarare ed esportare una funzione in un singolo comando</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This example includes a function named <bpt id="p1">**</bpt>export<ept id="p1">**</ept> that declares a function or creates a variable, and then writes an <bpt id="p2">**</bpt>Export-ModuleMember<ept id="p2">**</ept> command for the function or variable.</source>
          <target state="translated">In questo esempio include una funzione denominata <bpt id="p1">**</bpt>esportare<ept id="p1">**</ept> che dichiara una funzione o crea una variabile e quindi scrive un <bpt id="p2">**</bpt>Export-ModuleMember<ept id="p2">**</ept> comando per la funzione o variabile.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This lets you declare and export a function or variable in a single command.</source>
          <target state="translated">In questo modo è possibile dichiarare ed esportare una funzione o una variabile in un unico comando.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To use the <bpt id="p1">**</bpt>export<ept id="p1">**</ept> function, include it in your script module.</source>
          <target state="translated">Utilizzare il <bpt id="p1">**</bpt>esportare<ept id="p1">**</ept> funzione, incluso nel modulo di script.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To export a function, type <ph id="ph1">`export`</ph> before the <bpt id="p1">**</bpt>Function<ept id="p1">**</ept> keyword.</source>
          <target state="translated">Per esportare una funzione, digitare <ph id="ph1">`export`</ph> prima di <bpt id="p1">**</bpt>funzione<ept id="p1">**</ept> (parola chiave).</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To export a variable, use the following format to declare the variable and set its value:</source>
          <target state="translated">Per esportare una variabile, usare il formato seguente per dichiarare la variabile e impostarne il valore:</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The commands in the example show the correct format.</source>
          <target state="translated">I comandi nell'esempio mostrano il formato corretto.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In this example, only the <bpt id="p1">**</bpt>New-Test<ept id="p1">**</ept> function and the $Interval variable are exported.</source>
          <target state="translated">In questo esempio, solo il <bpt id="p1">**</bpt>New-Test<ept id="p1">**</ept> funzione e la variabile $Interval vengono esportati.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARAMETRI</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-Alias</source>
          <target state="translated">-Alias</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Specifies the aliases that are exported from the script module file.</source>
          <target state="translated">Specifica gli alias esportati dal file del modulo di script.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Enter the alias names.</source>
          <target state="translated">Immettere i nomi degli alias.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">I caratteri jolly sono consentiti.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-Cmdlet</source>
          <target state="translated">-Cmdlet</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Specifies the cmdlets that are exported from the script module file.</source>
          <target state="translated">Specifica i cmdlet esportati dal file del modulo di script.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Enter the cmdlet names.</source>
          <target state="translated">Immettere i nomi dei cmdlet.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">I caratteri jolly sono consentiti.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You cannot create cmdlets in a script module file, but you can import cmdlets from a binary module into a script module and re-export them from the script module.</source>
          <target state="translated">Non è possibile creare i cmdlet in un file del modulo di script, ma è possibile importare i cmdlet da un modulo binario in un modulo di script e riesportarli dal modulo di script.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-Function</source>
          <target state="translated">-Funzione</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Specifies the functions that are exported from the script module file.</source>
          <target state="translated">Specifica le funzioni esportate dal file del modulo di script.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Enter the function names.</source>
          <target state="translated">Immettere i nomi delle funzioni.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">I caratteri jolly sono consentiti.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can also pipe function name strings to <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept>.</source>
          <target state="translated">È inoltre possibile reindirizzare le stringhe del nome di funzione <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-Variable</source>
          <target state="translated">-Variable</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Specifies the variables that are exported from the script module file.</source>
          <target state="translated">Specifica le variabili esportate dal file del modulo di script.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Enter the variable names, without a dollar sign.</source>
          <target state="translated">Immettere i nomi delle variabili, senza un segno di dollaro.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">I caratteri jolly sono consentiti.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Questo cmdlet supporta i parametri comuni:-eseguire il Debug, - ErrorAction, - ErrorVariable, - InformationAction, InformationVariable-, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction e - WarningVariable.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Per ulteriori informazioni, vedere about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">INPUT</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can pipe function name strings to this cmdlet.</source>
          <target state="translated">È possibile reindirizzare le stringhe di nome funzioni a questo cmdlet.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">OUTPUT</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">Nessuno</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This cmdlet does not generate any output.</source>
          <target state="translated">Questo cmdlet non genera alcun output.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTE</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To exclude a member from the list of exported members, add an <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> command that lists all other members but omits the member that you want to exclude.</source>
          <target state="translated">Per escludere un membro dall'elenco dei membri esportati, aggiungere un <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> comando che consente di tutti gli altri membri, omettendo il membro che si desidera escludere.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">COLLEGAMENTI CORRELATI</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Get-Module</source>
          <target state="translated">Get-Module</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Import-Module</source>
          <target state="translated">Import-Module</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Remove-Module</source>
          <target state="translated">Remove-Module</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>