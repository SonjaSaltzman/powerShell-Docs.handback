<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">128b330f029b09d6d15ebc5a1cda9c52bf275293</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\ForEach-Object.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">879467f5044fb17e5a8f5454d8866973d9eb2aff</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6c78fd8c27534de8e0cc7bbe70b148ad56501c1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">cmdlet PowerShell</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ForEach-Object</source>
          <target state="translated">ForEach-Object</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ForEach-Object</source>
          <target state="translated">ForEach-Object</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">RIEPILOGO</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Performs an operation against each item in a collection of input objects.</source>
          <target state="translated">Esegue un'operazione su ogni elemento in una raccolta di oggetti di input.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SINTASSI</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ScriptBlockSet (Default)</source>
          <target state="translated">ScriptBlockSet (impostazione predefinita)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>PropertyAndMethodSet</source>
          <target state="translated">PropertyAndMethodSet</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIZIONE</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet performs an operation on each item in a collection of input objects.</source>
          <target state="translated">Il <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet esegue un'operazione su ogni elemento in una raccolta di oggetti di input.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The input objects can be piped to the cmdlet or specified by using the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter.</source>
          <target state="translated">Gli oggetti di input possono essere reindirizzati al cmdlet o specificati utilizzando il <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parametro.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 3.0, there are two different ways to construct a <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> command.</source>
          <target state="translated">A partire da Windows PowerShell 3.0, esistono due modi diversi per costruire un <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> comando.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Script block<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Blocco di script<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can use a script block to specify the operation.</source>
          <target state="translated">È possibile usare un blocco di script per specificare l'operazione.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Within the script block, use the $_ variable to represent the current object.</source>
          <target state="translated">All'interno del blocco di script, usare la variabile $_ per rappresentare l'oggetto corrente.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The script block is the value of the <bpt id="p1">*</bpt>Process<ept id="p1">*</ept> parameter.</source>
          <target state="translated">Il blocco di script è il valore di <bpt id="p1">*</bpt>processo<ept id="p1">*</ept> parametro.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The script block can contain any Windows PowerShell script.</source>
          <target state="translated">Il blocco di script può contenere qualsiasi script di Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the value of the <bpt id="p1">**</bpt>ProcessName<ept id="p1">**</ept> property of each process on the computer.</source>
          <target state="translated">Ad esempio, il comando seguente ottiene il valore di <bpt id="p1">**</bpt>ProcessName<ept id="p1">**</ept> proprietà di ogni processo nel computer.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Operation statement<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Istruzione di operazione<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can also write an operation statement, which is much more like natural language.</source>
          <target state="translated">È anche possibile scrivere un'istruzione di operazione, che è molto più simile al linguaggio naturale.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can use the operation statement to specify a property value or call a method.</source>
          <target state="translated">È possibile usare l'istruzione di operazione per specificare un valore di proprietà o chiamare un metodo.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Operation statements were introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Le istruzioni di operazione sono state introdotte in Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, the following command also gets the value of the <bpt id="p1">**</bpt>ProcessName<ept id="p1">**</ept> property of each process on the computer.</source>
          <target state="translated">Ad esempio, il comando seguente ottiene il valore di <bpt id="p1">**</bpt>ProcessName<ept id="p1">**</ept> proprietà di ogni processo nel computer.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When using the script block format, in addition to using the script block that describes the operations that are performed on each input object, you can provide two additional script blocks.</source>
          <target state="translated">Quando si usa il formato del blocco di script, oltre a usare il blocco di script che descrive le operazioni che vengono eseguite su ogni oggetto di input, è possibile fornire due blocchi di script aggiuntivi.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The Begin script block, which is the value of the <bpt id="p1">*</bpt>Begin<ept id="p1">*</ept> parameter, runs before this cmdlet processes the first input object.</source>
          <target state="translated">Il blocco di script Begin, ovvero il valore di <bpt id="p1">*</bpt>iniziare<ept id="p1">*</ept> parametro, viene eseguito prima che questo cmdlet elabora il primo oggetto di input.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The End script block, which is the value of the <bpt id="p1">*</bpt>End<ept id="p1">*</ept> parameter, runs after this cmdlet processes the last input object.</source>
          <target state="translated">Il blocco di script End, ovvero il valore di <bpt id="p1">*</bpt>End<ept id="p1">*</ept> parametro, viene eseguito dopo che questo cmdlet ha elaborato l'ultimo oggetto di input.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">ESEMPI</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Example 1: Divide integers in an array</source>
          <target state="translated">Esempio 1: Dividere numeri interi in una matrice</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This command takes an array of three integers and divides each one of them by 1024.</source>
          <target state="translated">Questo comando accetta una matrice di tre interi e divide ognuno di essi per 1024.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Example 2: Get the length of all the files in a directory</source>
          <target state="translated">Esempio 2: Ottenere la lunghezza di tutti i file in una directory</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This command gets the files and directories in the Windows PowerShell installation directory ($pshome) and passes them to the <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">Questo comando Ottiene i file e directory nella directory di installazione di Windows PowerShell ($pshome) e li passa al <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If the object is not a directory, the script block gets the name of the file, divides the value of its <bpt id="p1">**</bpt>Length<ept id="p1">**</ept> property by 1024, and adds a space (" ") to separate it from the next entry.</source>
          <target state="translated">Se l'oggetto non è una directory, il blocco di script ottiene il nome del file, divide il valore del relativo <bpt id="p1">**</bpt>lunghezza<ept id="p1">**</ept> 1024, proprietà e viene aggiunto uno spazio ("") per separarlo dalla voce successiva.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The cmdlet uses the <bpt id="p1">**</bpt>PSISContainer<ept id="p1">**</ept> property to determine whether an object is a directory.</source>
          <target state="translated">Il cmdlet Usa il <bpt id="p1">**</bpt>PSISContainer<ept id="p1">**</ept> proprietà per determinare se un oggetto è una directory.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Example 3: Operate on the most recent System events</source>
          <target state="translated">Esempio 3: Utilizzare eventi di sistema più recente</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This command gets the 1000 most recent events from the System event log and stores them in the $Events variable.</source>
          <target state="translated">Questo comando ottiene i 1000 eventi più recenti del registro eventi di sistema e li archivia nella variabile $Events.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>It then pipes the events to the <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">Quindi, invia gli eventi per il <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Begin<ept id="p1">*</ept> parameter displays the current date and time.</source>
          <target state="translated">Il <bpt id="p1">*</bpt>iniziare<ept id="p1">*</ept> parametro Visualizza la data e ora correnti.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Next, the <bpt id="p1">*</bpt>Process<ept id="p1">*</ept> parameter uses the <bpt id="p2">**</bpt>Out-File<ept id="p2">**</ept> cmdlet to create a text file that is named events.txt and stores the message property of each of the events in that file.</source>
          <target state="translated">Successivamente, il <bpt id="p1">*</bpt>processo<ept id="p1">*</ept> parametro Usa il <bpt id="p2">**</bpt>Out-File<ept id="p2">**</ept> per creare un file di testo denominato Events. txt e archivia le proprietà del messaggio di ognuno degli eventi in tale file.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Last, the <bpt id="p1">*</bpt>End<ept id="p1">*</ept> parameter is used to display the date and time after all of the processing has completed.</source>
          <target state="translated">Ultimo, il <bpt id="p1">*</bpt>End<ept id="p1">*</ept> parametro viene utilizzato per visualizzare la data e ora al termine di tutte le operazioni di elaborazione è stata completata.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Example 4: Change the value of a Registry key</source>
          <target state="translated">Esempio 4: Modificare il valore di una chiave del Registro di sistema</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This command changes the value of the <bpt id="p1">**</bpt>RemotePath<ept id="p1">**</ept> registry entry in all of the subkeys under the HKCU:\Network key to uppercase text.</source>
          <target state="translated">Questo comando Modifica il valore di <bpt id="p1">**</bpt>RemotePath<ept id="p1">**</ept> voce del Registro di sistema in tutte le sottochiavi della chiave HKCU: \ Network in maiuscolo il testo.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can use this format to change the form or content of a registry entry value.</source>
          <target state="translated">È possibile usare questo formato per modificare la forma o il contenuto del valore di una voce del Registro di sistema.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Each subkey in the <bpt id="p1">**</bpt>Network<ept id="p1">**</ept> key represents a mapped network drive that will reconnect at logon.</source>
          <target state="translated">Ogni sottochiave di <bpt id="p1">**</bpt>rete<ept id="p1">**</ept> chiave rappresenta un'unità di rete che si riconnetterà all'accesso.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>RemotePath<ept id="p1">**</ept> entry contains the UNC path of the connected drive.</source>
          <target state="translated">Il <bpt id="p1">**</bpt>RemotePath<ept id="p1">**</ept> voce contiene il percorso UNC dell'unità connessa.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For example, if you map the E: drive to <ph id="ph1">\\\\</ph>Server\Share, there will be an E subkey of HKCU:\Network and the value of the <bpt id="p1">**</bpt>RemotePath<ept id="p1">**</ept> registry entry in the E subkey will be <ph id="ph2">\\\\</ph>Server\Share.</source>
          <target state="translated">Ad esempio, se si esegue il mapping di unità e: <ph id="ph1">\\\\</ph>Server\Share, vi sarà una sottochiave E di HKCU: \ Network e il valore di <bpt id="p1">**</bpt>RemotePath<ept id="p1">**</ept> voce del Registro di sistema nella sottochiave E sarà <ph id="ph2">\\\\</ph>Server\Share.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The command uses the Get-ItemProperty cmdlet to get all of the subkeys of the <bpt id="p1">**</bpt>Network<ept id="p1">**</ept> key and the Set-ItemProperty cmdlet to change the value of the <bpt id="p2">**</bpt>RemotePath<ept id="p2">**</ept> registry entry in each key.</source>
          <target state="translated">Il comando Usa il cmdlet Get-ItemProperty per ottenere tutte le sottochiavi della <bpt id="p1">**</bpt>rete<ept id="p1">**</ept> chiave e il cmdlet Set-ItemProperty per modificare il valore di <bpt id="p2">**</bpt>RemotePath<ept id="p2">**</ept> voce del Registro di sistema in ogni chiave.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Set-ItemProperty<ept id="p1">**</ept> command, the path is the value of the <bpt id="p2">**</bpt>PSPath<ept id="p2">**</ept> property of the registry key.</source>
          <target state="translated">Nel <bpt id="p1">**</bpt>Set-ItemProperty<ept id="p1">**</ept> comando, il percorso è il valore di <bpt id="p2">**</bpt>PSPath<ept id="p2">**</ept> la proprietà della chiave del Registro di sistema.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This is a property of the Microsoft .NET Framework object that represents the registry key, not a registry entry.</source>
          <target state="translated">Questa è una proprietà dell'oggetto Microsoft .NET Framework che rappresenta la chiave del Registro di sistema, non una voce del Registro di sistema.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>ToUpper()<ept id="p1">**</ept> method of the <bpt id="p2">**</bpt>RemotePath<ept id="p2">**</ept> value, which is a string (REG_SZ).</source>
          <target state="translated">Il comando Usa il <bpt id="p1">**</bpt>ToUpper<ept id="p1">**</ept> metodo il <bpt id="p2">**</bpt>RemotePath<ept id="p2">**</ept> valore, ovvero una stringa (REG_SZ).</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Because <bpt id="p1">**</bpt>Set-ItemProperty<ept id="p1">**</ept> is changing the property of each key, the <bpt id="p2">**</bpt>ForEach-Object<ept id="p2">**</ept> cmdlet is required to access the property.</source>
          <target state="translated">Poiché <bpt id="p1">**</bpt>Set-ItemProperty<ept id="p1">**</ept> Modifica la proprietà di ogni chiave, il <bpt id="p2">**</bpt>ForEach-Object<ept id="p2">**</ept> cmdlet è necessario per accedere alla proprietà.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Example 5: Use the $Null automatic variable</source>
          <target state="translated">Esempio 5: Utilizzare la variabile automatica $Null</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This example shows the effect of piping the $Null automatic variable to the <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">In questo esempio viene illustrato l'effetto dell'invio tramite pipe la variabile automatica $Null per il <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Because Windows PowerShell treats null as an explicit placeholder, the <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet generates a value for $Null, just as it does for other objects that you pipe to it.</source>
          <target state="translated">Poiché Windows PowerShell considera null come un segnaposto esplicito, il <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet genera un valore per $Null, proprio come accade per gli altri oggetti che è reindirizzare a esso.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For more information about the $Null automatic variable, see about_Automatic_Variables.</source>
          <target state="translated">Per ulteriori informazioni sulla variabile automatica $Null, vedere about_Automatic_Variables.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Example 6: Get property values</source>
          <target state="translated">Esempio 6: Ottenere i valori delle proprietà</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>These commands gets the value of the <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> property of all installed Windows PowerShell modules.</source>
          <target state="translated">Questi comandi ottengono il valore di <bpt id="p1">**</bpt>percorso<ept id="p1">**</ept> proprietà di tutti i moduli di Windows PowerShell installati.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>They use the <bpt id="p1">*</bpt>MemberName<ept id="p1">*</ept> parameter to specify the <bpt id="p2">**</bpt>Path<ept id="p2">**</ept> property of modules.</source>
          <target state="translated">Utilizzano la <bpt id="p1">*</bpt>MemberName<ept id="p1">*</ept> parametro per specificare il <bpt id="p2">**</bpt>percorso<ept id="p2">**</ept> proprietà dei moduli.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The second command is equivalent to the first.</source>
          <target state="translated">Il secondo comando è equivalente al primo.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> alias of the <bpt id="p2">**</bpt>ForEach-Object<ept id="p2">**</ept> cmdlet and omits the name of the <bpt id="p3">*</bpt>MemberName<ept id="p3">*</ept> parameter, which is optional.</source>
          <target state="translated">Usa il <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> alias del <bpt id="p2">**</bpt>ForEach-Object<ept id="p2">**</ept> cmdlet e omette il nome del <bpt id="p3">*</bpt>MemberName<ept id="p3">*</ept> parametro, che è facoltativo.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet is very useful for getting property values, because it gets the value without changing the type, unlike the <bpt id="p2">**</bpt>Format<ept id="p2">**</ept> cmdlets or the Select-Object cmdlet, which change the property value type.</source>
          <target state="translated">Il <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet è molto utile per ottenere i valori delle proprietà, poiché Ottiene il valore senza modificare il tipo, a differenza di <bpt id="p2">**</bpt>formato<ept id="p2">**</ept> cmdlet o il cmdlet Select-Object, che modifica la proprietà tipo di valore.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Example 7: Split module names into component names</source>
          <target state="translated">Esempio 7: Suddividere i nomi dei moduli in nomi di componenti</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>These commands split two dot-separated module names into their component names.</source>
          <target state="translated">Questi comandi suddividono due nomi di moduli separati da punti nei rispettivi nomi di componenti.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The commands call the <bpt id="p1">**</bpt>Split<ept id="p1">**</ept> method of strings.</source>
          <target state="translated">La chiamata di comandi di <bpt id="p1">**</bpt>Split<ept id="p1">**</ept> metodo delle stringhe.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The three commands use different syntax, but they are equivalent and interchangeable.</source>
          <target state="translated">I tre comandi usano una sintassi diversa, ma sono equivalenti e intercambiabili.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The first command uses the traditional syntax, which includes a script block and the current object operator ($_).</source>
          <target state="translated">Il primo comando usa la sintassi tradizionale, che include un blocco di script e l'operatore dell'oggetto corrente ($_).</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>It uses the dot syntax to specify the method and parentheses to enclose the delimiter argument.</source>
          <target state="translated">Usa la sintassi del punto per specificare il metodo e le parentesi per racchiudere l'argomento delimitatore.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">*</bpt>MemberName<ept id="p1">*</ept> parameter to specify the <bpt id="p2">**</bpt>Split<ept id="p2">**</ept> method and the <bpt id="p3">*</bpt>ArgumentName<ept id="p3">*</ept> parameter to identify the dot (".") as the split delimiter.</source>
          <target state="translated">Il secondo comando Usa il <bpt id="p1">*</bpt>MemberName<ept id="p1">*</ept> parametro per specificare il <bpt id="p2">**</bpt>Split<ept id="p2">**</ept> metodo e <bpt id="p3">*</bpt>NomeArgomento<ept id="p3">*</ept> parametro per identificare il punto (".") come delimitatore di divisione.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> alias of the <bpt id="p2">**</bpt>Foreach-Object<ept id="p2">**</ept> cmdlet and omits the names of the <bpt id="p3">*</bpt>MemberName<ept id="p3">*</ept> and <bpt id="p4">*</bpt>ArgumentList<ept id="p4">*</ept> parameters, which are optional.</source>
          <target state="translated">Il terzo comando Usa il <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> alias del <bpt id="p2">**</bpt>Foreach-Object<ept id="p2">**</ept> cmdlet e omette i nomi del <bpt id="p3">*</bpt>MemberName<ept id="p3">*</ept> e <bpt id="p4">*</bpt>ArgumentList<ept id="p4">*</ept> parametri, sono facoltativi.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The output of these three commands, shown below, is identical.</source>
          <target state="translated">L'output di questi tre comandi, mostrato di seguito, è identico.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Split<ept id="p1">**</ept> is just one of many useful methods of strings.</source>
          <target state="translated"><bpt id="p1">**</bpt>Suddivisione<ept id="p1">**</ept> è solo uno dei numerosi metodi utili delle stringhe.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To see all of the properties and methods of strings, pipe a string to the Get-Member cmdlet.</source>
          <target state="translated">Per visualizzare tutte le proprietà e metodi delle stringhe, inviare una stringa al cmdlet Get-Member.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARAMETRI</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-ArgumentList</source>
          <target state="translated">-ArgumentList</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Specifies an array of arguments to a method call.</source>
          <target state="translated">Specifica una matrice di argomenti a una chiamata al metodo.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Questo parametro è stato introdotto in Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-Begin</source>
          <target state="translated">-Avvio</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Specifies a script block that runs before this cmdlet processes any input objects.</source>
          <target state="translated">Specifica un blocco di script che viene eseguito prima che questo cmdlet elabora qualsiasi oggetto di input.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>-Confirm</source>
          <target state="translated">-Confirm</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</source>
          <target state="translated">Viene chiesta conferma prima dell'esecuzione del cmdlet. Viene chiesta conferma prima dell'esecuzione del cmdlet.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>-End</source>
          <target state="translated">-Fine</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Specifies a script block that runs after this cmdlet processes all input objects.</source>
          <target state="translated">Specifica un blocco di script che viene eseguito dopo che questo cmdlet elabora tutti gli oggetti di input.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Specifies the input objects.</source>
          <target state="translated">Specifica gli oggetti di input.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>ForEach-Object<ept id="p1">*</ept> runs the script block or operation statement on each input object.</source>
          <target state="translated"><bpt id="p1">*</bpt>ForEach-Object<ept id="p1">*</ept> viene eseguita l'istruzione di operazione o blocco di script su ogni oggetto di input.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">Immettere una variabile che contiene gli oggetti oppure digitare un comando o un'espressione che ottiene gli oggetti.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter with <bpt id="p2">**</bpt>ForEach-Object<ept id="p2">**</ept>, instead of piping command results to <bpt id="p3">**</bpt>ForEach-Object<ept id="p3">**</ept>, the <bpt id="p4">*</bpt>InputObject<ept id="p4">*</ept> value is treated as a single object.</source>
          <target state="translated">Quando si utilizza il <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parametro con <bpt id="p2">**</bpt>ForEach-Object<ept id="p2">**</ept>, anziché inviare tramite pipe i risultati del comando per <bpt id="p3">**</bpt>ForEach-Object<ept id="p3">**</ept>,  <bpt id="p4">*</bpt>InputObject<ept id="p4">*</ept> valore viene trattato come un singolo oggetto.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This is true even if the value is a collection that is the result of a command, such as <ph id="ph1">`-InputObject (Get-Process)`</ph>.</source>
          <target state="translated">Questo vale anche se il valore è una raccolta che rappresenta il risultato di un comando, ad esempio <ph id="ph1">`-InputObject (Get-Process)`</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Because <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> cannot return individual properties from an array or collection of objects, we recommend that if you use <bpt id="p2">**</bpt>ForEach-Object<ept id="p2">**</ept> to perform operations on a collection of objects for those objects that have specific values in defined properties, you use <bpt id="p3">**</bpt>ForEach-Object<ept id="p3">**</ept> in the pipeline, as shown in the examples in this topic.</source>
          <target state="translated">Poiché <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> non può restituire singole proprietà da una matrice o raccolta di oggetti, è consigliabile se si utilizza <bpt id="p2">**</bpt>ForEach-Object<ept id="p2">**</ept> per eseguire operazioni su una raccolta di oggetti per gli oggetti con valori specifici in determinate proprietà, utilizzare <bpt id="p3">**</bpt>ForEach-Object<ept id="p3">**</ept> nella pipeline, come illustrato negli esempi in questo argomento.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-MemberName</source>
          <target state="translated">-MemberName</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Specifies the property to get or the method to call.</source>
          <target state="translated">Specifica la proprietà da ottenere o il metodo da chiamare.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted, but work only if the resulting string resolves to a unique value.</source>
          <target state="translated">Caratteri jolly sono consentiti, ma funzionano solo se la stringa risultante viene risolta in un valore univoco.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If, for example, you run <ph id="ph1">`Get-Process | ForEach -MemberName *Name`</ph>, and more than one member exists with a name that contains the string Name, such as the <bpt id="p1">**</bpt>ProcessName<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Name<ept id="p2">**</ept> properties, the command fails.</source>
          <target state="translated">Se, ad esempio, si esegue <ph id="ph1">`Get-Process | ForEach -MemberName *Name`</ph>, e più di un membro esistente con un nome che contiene la stringa di nome, ad esempio il <bpt id="p1">**</bpt>ProcessName<ept id="p1">**</ept> e <bpt id="p2">**</bpt>nome<ept id="p2">**</ept> proprietà, il comando non riesce.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Questo parametro è stato introdotto in Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>-Process</source>
          <target state="translated">-Processo</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Specifies the operation that is performed on each input object.</source>
          <target state="translated">Specifica l'operazione che viene eseguita su ogni oggetto di input.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Enter a script block that describes the operation.</source>
          <target state="translated">Immettere un blocco di script che descrive l'operazione.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>-RemainingScripts</source>
          <target state="translated">-RemainingScripts</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Specifies all script blocks that are not taken by the <bpt id="p1">*</bpt>Process<ept id="p1">*</ept> parameter.</source>
          <target state="translated">Specifica tutti i blocchi di script che non vengono eseguiti le <bpt id="p1">*</bpt>processo<ept id="p1">*</ept> parametro.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Questo parametro è stato introdotto in Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>-WhatIf</source>
          <target state="translated">-WhatIf</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Shows what would happen if the cmdlet runs.</source>
          <target state="translated">Mostra gli effetti dell'esecuzione del cmdlet.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.Shows what would happen if the cmdlet runs.</source>
          <target state="translated">Il cmdlet non viene eseguito. Viene illustrato che cosa accadrebbe se viene eseguito il cmdlet.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.</source>
          <target state="translated">Il cmdlet non viene eseguito.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Questo cmdlet supporta i parametri comuni:-eseguire il Debug, - ErrorAction, - ErrorVariable, - InformationAction, InformationVariable-, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction e - WarningVariable.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Per ulteriori informazioni, vedere about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">INPUT</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>You can pipe any object to this cmdlet.</source>
          <target state="translated">È possibile reindirizzare qualsiasi oggetto di questo cmdlet.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">OUTPUT</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This cmdlet returns objects that are determined by the input.</source>
          <target state="translated">Questo cmdlet restituisce oggetti che vengono determinati in base all'input.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTE</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet works much like the <bpt id="p2">**</bpt>Foreach<ept id="p2">**</ept> statement, except that you cannot pipe input to a <bpt id="p3">**</bpt>Foreach<ept id="p3">**</ept> statement.</source>
          <target state="translated">Il <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> cmdlet funziona come il <bpt id="p2">**</bpt>Foreach<ept id="p2">**</ept> istruzione, ad eccezione del fatto che è possibile inviare tramite pipe di input per un <bpt id="p3">**</bpt>Foreach<ept id="p3">**</ept> istruzione.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For more information about the <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> statement, see about_Foreach (http://go.microsoft.com/fwlink/?LinkID=113229) in the Microsoft TechNet library.</source>
          <target state="translated">Per ulteriori informazioni sui <bpt id="p1">**</bpt>Foreach<ept id="p1">**</ept> istruzione, vedere about_Foreach (http://go.microsoft.com/fwlink/?LinkID=113229) nella libreria Microsoft TechNet.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">COLLEGAMENTI CORRELATI</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables</source>
          <target state="translated">about_Automatic_Variables</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>about_ForEach</source>
          <target state="translated">about_ForEach</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>about_Script_Blocks</source>
          <target state="translated">about_Script_Blocks</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Get-ItemProperty</source>
          <target state="translated">Get-ItemProperty</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Select-Object</source>
          <target state="translated">Select-Object</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Set-ItemProperty</source>
          <target state="translated">Set-ItemProperty</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>