<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a05e4c942ee70d02675c5dcffc9acfdb9e898df9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\New-Module.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de57bdcd7976db6d1375067ed2ea0bdee1c8431b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">857478771e86fbb3f381f716b6d53d57e2f2bd5f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">cmdlet PowerShell</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>New-Module</source>
          <target state="translated">New-Module</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>New-Module</source>
          <target state="translated">New-Module</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">RIEPILOGO</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Creates a new dynamic module that exists only in memory.</source>
          <target state="translated">Crea un nuovo modulo dinamico che esiste solo in memoria.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SINTASSI</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ScriptBlock (Default)</source>
          <target state="translated">ScriptBlock (impostazione predefinita)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIZIONE</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> cmdlet creates a dynamic module from a script block.</source>
          <target state="translated">Il <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> cmdlet crea un modulo dinamico da un blocco di script.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The members of the dynamic module, such as functions and variables, are immediately available in the session and remain available until you close the session.</source>
          <target state="translated">I membri del modulo dinamico, ad esempio funzioni e variabili, sono immediatamente disponibili nella sessione e rimangono disponibili finché non si chiude la sessione.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Like static modules, by default, the cmdlets and functions in a dynamic module are exported and the variables and aliases are not.</source>
          <target state="translated">Analogamente ai moduli statici, per impostazione predefinita vengono esportati i cmdlet e le funzioni di un modulo dinamico, ma non le variabili e gli alias.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>However, you can use the Export-ModuleMember cmdlet and the parameters of <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> to override the defaults.</source>
          <target state="translated">Tuttavia, è possibile utilizzare il cmdlet Export-ModuleMember e i parametri di <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> per ignorare le impostazioni predefinite.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> to return the dynamic module as a custom object.</source>
          <target state="translated">È inoltre possibile utilizzare il <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parametro <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> per restituire il modulo dinamico come un oggetto personalizzato.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The members of the modules, such as functions, are implemented as script methods of the custom object instead of being imported into the session.</source>
          <target state="translated">I membri dei moduli, ad esempio le funzioni, vengono implementati come metodi di script dell'oggetto personalizzato anziché essere importati nella sessione.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Dynamic modules exist only in memory, not on disk.</source>
          <target state="translated">I moduli dinamici esistono solo in memoria, non su disco.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Like all modules, the members of dynamic modules run in a private module scope that is a child of the global scope.</source>
          <target state="translated">Come tutti i moduli, i membri dei moduli dinamici vengono eseguiti in un ambito di modulo privato, ovvero un elemento figlio dell'ambito globale.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Get-Module cannot get a dynamic module, but Get-Command can get the exported members.</source>
          <target state="translated">Get-Module non può ottenere un modulo dinamico, ma Get-Command può ottenere i membri esportati.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To make a dynamic module available to <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept>, pipe a <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> command to Import-Module, or pipe the module object that <bpt id="p3">**</bpt>New-Module<ept id="p3">**</ept> returns to <bpt id="p4">**</bpt>Import-Module<ept id="p4">**</ept>.</source>
          <target state="translated">Per rendere disponibili per un modulo dinamico <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept>, pipe un <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> comando Import-Module o pipe, il modulo di oggetto che <bpt id="p3">**</bpt>New-Module<ept id="p3">**</ept> restituisce <bpt id="p4">**</bpt>Import-Module<ept id="p4">**</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This action adds the dynamic module to the <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> list, but it does not save the module to disk or make it persistent.</source>
          <target state="translated">Questa azione aggiunge il modulo dinamico per il <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> elenco, ma non salva il modulo di disco o renderlo permanente.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">ESEMPI</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example 1: Create a dynamic module</source>
          <target state="translated">Esempio 1: Creare un modulo dinamico</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This command creates a new dynamic module with a function called Hello.</source>
          <target state="translated">Questo comando crea un nuovo modulo dinamico con una funzione denominata Hello.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The command returns a module object that represents the new dynamic module.</source>
          <target state="translated">Il comando restituisce un oggetto modulo che rappresenta il nuovo modulo dinamico.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Example 2: Working with dynamic modules and Get-Module and Get-Command</source>
          <target state="translated">Esempio 2: Utilizzo di Get-Command e Get-Module e moduli dinamici</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This example demonstrates that dynamic modules are not returned by the <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">Questo esempio dimostra che i moduli dinamici non vengono restituiti per il <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> cmdlet.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The members that they export are returned by the <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">I membri esportati vengono restituiti per il <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> cmdlet.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Example 3: Export a variable into the current session</source>
          <target state="translated">Esempio 3: Esportare una variabile nella sessione corrente</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> cmdlet to export a variable into the current session.</source>
          <target state="translated">Questo comando Usa il <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> per esportare una variabile nella sessione corrente.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Without the <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> command, only the function is exported.</source>
          <target state="translated">Senza il <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> comando, viene esportata solo la funzione.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The output shows that both the variable and the function were exported into the session.</source>
          <target state="translated">L'output mostra che nella sessione sono state esportate sia la variabile che la funzione.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Example 4: Make a dynamic module available to Get-Module</source>
          <target state="translated">Esempio 4: Rendere disponibile un modulo dinamico a Get-Module</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This command demonstrates that you can make a dynamic module available to <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> by piping the dynamic module to <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept>.</source>
          <target state="translated">Questo comando dimostra che è possibile rendere un modulo dinamico disponibile per <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> inviando il modulo dinamico al <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The first command uses a pipeline operator (|) to send the module object that <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> generates to the <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> cmdlet.</source>
          <target state="translated">Il primo comando Usa una pipeline di operatore (|) per inviare il modulo di oggetto che <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> Genera per il <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> cmdlet.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>Name<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> to assign a friendly name to the module.</source>
          <target state="translated">Il comando Usa il <bpt id="p1">*</bpt>nome<ept id="p1">*</ept> parametro <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> per assegnare un nome descrittivo per il modulo.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Because <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> does not return any objects by default, there is no output from this command.</source>
          <target state="translated">Poiché <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> non restituisce eventuali oggetti per impostazione predefinita, questo comando non genera alcun output.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The second command uses <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> to get the modules in the session.</source>
          <target state="translated">Il secondo comando Usa <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> per ottenere i moduli nella sessione.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The result shows that <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> can get the new dynamic module.</source>
          <target state="translated">Il risultato mostra che <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> possibile ottenere il nuovo modulo dinamico.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> cmdlet to get the Hello function that the dynamic module exports.</source>
          <target state="translated">Il terzo comando Usa il <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> per ottenere la funzione Hello esportata dal modulo dinamico.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Example 5: Generate a custom object that has exported functions</source>
          <target state="translated">Esempio 5: Generare un oggetto personalizzato che dispone di funzioni esportate</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> to generate a custom object that has script methods that represent the exported functions.</source>
          <target state="translated">In questo esempio viene illustrato come utilizzare il <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parametro <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> per generare un oggetto personalizzato che dispone di metodi di script che rappresentano le funzioni esportate.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> cmdlet to generate a dynamic module with two functions, Hello and Goodbye.</source>
          <target state="translated">Il primo comando Usa il <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> cmdlet per generare un modulo dinamico con due funzioni, Hello e Goodbye.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parameter to generate a custom object instead of the PSModuleInfo object that <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> generates by default.</source>
          <target state="translated">Il comando Usa il <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> oggetto parametro per generare un oggetto personalizzato anziché il PSModuleInfo <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> Genera per impostazione predefinita.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The command saves the custom object in the $m variable.</source>
          <target state="translated">Il comando salva l'oggetto personalizzato nella variabile $m.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The second command attempts to display the value of the $m variable.</source>
          <target state="translated">Il secondo comando prova a visualizzare il valore della variabile $m.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>No content appears.</source>
          <target state="translated">Non viene visualizzato alcun contenuto.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The third command uses a pipeline operator to send the custom object to the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet, which displays the properties and methods of the custom object.</source>
          <target state="translated">Il terzo comando Usa un operatore pipeline per inviare l'oggetto personalizzato per il <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> che visualizza le proprietà e metodi dell'oggetto personalizzato.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The output shows that the object has script methods that represent the Hello and Goodbye functions.</source>
          <target state="translated">L'output mostra che l'oggetto contiene i metodi di script che rappresentano le funzioni Hello e Goodbye.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The fourth and fifth commands use the script method format to call the Hello and Goodbye functions.</source>
          <target state="translated">Il quarto e il quinto comando usano il formato del metodo di script per chiamare le funzioni Hello e Goodbye.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Example 6: Get the results of the script block</source>
          <target state="translated">Esempio 6: Ottenere i risultati del blocco di script</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">*</bpt>ReturnResult<ept id="p1">*</ept> parameter to request the results of running the script block instead of requesting a module object.</source>
          <target state="translated">Questo comando Usa il <bpt id="p1">*</bpt>ReturnResult<ept id="p1">*</ept> parametro per richiedere i risultati dell'esecuzione del blocco di script anziché richiedere un oggetto modulo.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The script block in the new module defines the SayHello function and then calls the function.</source>
          <target state="translated">Il blocco di script del nuovo modulo definisce la funzione SayHello e quindi la chiama.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARAMETRI</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-ArgumentList</source>
          <target state="translated">-ArgumentList</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Specifies an array of arguments which are parameter values that are passed to the script block.</source>
          <target state="translated">Specifica una matrice di argomenti che rappresentano i valori dei parametri vengono passati al blocco di script.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-AsCustomObject</source>
          <target state="translated">-AsCustomObject</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet returns a custom object that represents the dynamic module.</source>
          <target state="translated">Indica che questo cmdlet restituisce un oggetto personalizzato che rappresenta il modulo dinamico.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The module members are implemented as script methods of the custom object, but they are not imported into the session.</source>
          <target state="translated">I membri del modulo vengono implementati come metodi di script dell'oggetto personalizzato, ma non vengono importati nella sessione.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You can save the custom object in a variable and use dot notation to invoke the members.</source>
          <target state="translated">È possibile salvare l'oggetto personalizzato in una variabile e usare la notazione del punto per richiamare i membri.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If the module has multiple members with the same name, such as a function and a variable that are both named A, only one member with each name can be accessed from the custom object.</source>
          <target state="translated">Se il modulo contiene più membri con lo stesso nome, ad esempio una funzione e una variabile denominate entrambe A, ogni nome di un solo membro è accessibile dall'oggetto personalizzato.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>-Cmdlet</source>
          <target state="translated">-Cmdlet</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Specifies an array of cmdlets that this cmdlet exports from the module into the current session.</source>
          <target state="translated">Specifica una matrice di cmdlet questo cmdlet esportati dal modulo nella sessione corrente.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Enter a comma-separated list of cmdlets.</source>
          <target state="translated">Immettere un elenco di cmdlet delimitato da virgole.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">I caratteri jolly sono consentiti.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>By default, all cmdlets in the module are exported.</source>
          <target state="translated">Per impostazione predefinita, vengono esportati tutti i cmdlet nel modulo.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You cannot define cmdlets in a script block, but a dynamic module can include cmdlets if it imports the cmdlets from a binary module.</source>
          <target state="translated">Non è possibile definire i cmdlet in un blocco di script, ma un modulo dinamico può includere i cmdlet se li importa da un modulo binario.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>-Function</source>
          <target state="translated">-Funzione</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Specifies an array of functions that this cmdlet exports from the module into the current session.</source>
          <target state="translated">Specifica una matrice delle funzioni di questo cmdlet esportati dal modulo nella sessione corrente.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Enter a comma-separated list of functions.</source>
          <target state="translated">Immettere un elenco di funzioni delimitato da virgole.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">I caratteri jolly sono consentiti.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>By default, all functions defined in a module are exported.</source>
          <target state="translated">Per impostazione predefinita, vengono esportate tutte le funzioni definite in un modulo.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Specifies a name for the new module.</source>
          <target state="translated">Specifica un nome per il nuovo modulo.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can also pipe a module name to New-Module.</source>
          <target state="translated">È anche possibile inviare tramite pipe un nome del modulo a New-Module.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The default value is an autogenerated name that starts with <ph id="ph1">`__DynamicModule_`</ph> and is followed by a GUID that specifies the path of the dynamic module.</source>
          <target state="translated">Il valore predefinito è un nome generato automaticamente che inizia con <ph id="ph1">`__DynamicModule_`</ph> ed è seguito da un GUID che specifica il percorso del modulo dinamico.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-ReturnResult</source>
          <target state="translated">-ReturnResult</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet runs the script block and returns the script block results instead of returning a module object.</source>
          <target state="translated">Indica che questo cmdlet viene eseguito il blocco di script e restituisce i risultati del blocco di script anziché restituire un oggetto modulo.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>-ScriptBlock</source>
          <target state="translated">-ScriptBlock</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Specifies the contents of the dynamic module.</source>
          <target state="translated">Specifica il contenuto del modulo dinamico.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Enclose the contents in braces ( { } ) to create a script block.</source>
          <target state="translated">Racchiudere il contenuto tra parentesi graffe ({ }) per creare un blocco di script.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This parameter is required.</source>
          <target state="translated">Questo parametro è obbligatorio.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Questo cmdlet supporta i parametri comuni:-eseguire il Debug, - ErrorAction, - ErrorVariable, - InformationAction, InformationVariable-, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction e - WarningVariable.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Per ulteriori informazioni, vedere about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">INPUT</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You can pipe a module name to this cmdlet.</source>
          <target state="translated">È possibile reindirizzare un nome del modulo per questo cmdlet.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">OUTPUT</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSModuleInfo, System.Management.Automation.PSCustomObject, or None</source>
          <target state="translated">System.Management.Automation.PSModuleInfo, System.Management.Automation.PSCustomObject o nessuno</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This cmdlet generates a <bpt id="p1">**</bpt>PSModuleInfo<ept id="p1">**</ept> object, by default.</source>
          <target state="translated">Questo cmdlet genera un <bpt id="p1">**</bpt>PSModuleInfo<ept id="p1">**</ept> oggetto, per impostazione predefinita.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parameter, it generates a <bpt id="p2">**</bpt>PSCustomObject<ept id="p2">**</ept> object.</source>
          <target state="translated">Se si utilizza il <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parametro, viene generato un <bpt id="p2">**</bpt>PSCustomObject<ept id="p2">**</ept> oggetto.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>ReturnResult<ept id="p1">*</ept> parameter, it returns the result of evaluating the script block in the dynamic module.</source>
          <target state="translated">Se si utilizza il <bpt id="p1">*</bpt>ReturnResult<ept id="p1">*</ept> parametro, restituisce il risultato della valutazione del blocco di script nel modulo dinamico.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTE</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>You can also refer to <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> by its alias, <bpt id="p2">**</bpt>nmo<ept id="p2">**</ept>.</source>
          <target state="translated">È inoltre possibile fare riferimento a <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> mediante il relativo alias, <bpt id="p2">**</bpt>nmo<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For more information, see about_Aliases.</source>
          <target state="translated">Per altre informazioni, vedere about_Aliases.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">COLLEGAMENTI CORRELATI</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Export-ModuleMember</source>
          <target state="translated">Export-ModuleMember</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Get-Module</source>
          <target state="translated">Get-Module</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Import-Module</source>
          <target state="translated">Import-Module</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Remove-Module</source>
          <target state="translated">Remove-Module</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>