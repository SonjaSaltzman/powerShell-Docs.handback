<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7b23f234f02c8059620caff75925045bed697fd5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Do.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e0ad4edbd09467abf04a20ab1243c944eccd0086</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e51fedd9bb3d053e606597427984b25d12cc7b6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Do</source>
          <target state="translated">about_Do</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">cmdlet PowerShell</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Do</source>
          <target state="translated">Per eseguire</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Do</source>
          <target state="translated">about_Do</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">ARGOMENTO</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Do</source>
          <target state="translated">about_Do</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">DESCRIZIONE BREVE</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Runs a statement list one or more times, subject to a While or Until condition.</source>
          <target state="translated">Esegue una o più volte, soggette a un periodo di tempo o fino a condizione di un elenco di istruzioni.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">DESCRIZIONE LUNGA</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Do keyword works with the While keyword or the Until keyword to run the statements in a script block, subject to a condition.</source>
          <target state="translated">La parola chiave Do funziona con While (parola chiave) o la parola chiave Until per eseguire le istruzioni in un blocco di script, soggette a una condizione.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Unlike the related While loop, the script block in a Do loop always runs at least once.</source>
          <target state="translated">A differenza di correlati, mentre è in esecuzione in ciclo, il blocco di script in un ciclo Do sempre almeno una volta.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A Do-While loop is a variety of the While loop.</source>
          <target state="translated">Un eseguire-ciclo While è un'ampia gamma di While loop.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In a Do-While loop, the condition is evaluated after the script block has run.</source>
          <target state="translated">In un-While loop, la condizione viene valutata dopo l'esecuzione del blocco di script.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>As in a While loop, the script block is repeated as long as the condition evaluates to true.</source>
          <target state="translated">Come in un periodo di tempo del ciclo, il blocco di script viene ripetuto finché la condizione restituisce true.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Like a Do-While loop, a Do-Until loop always runs at least once before the condition is evaluated.</source>
          <target state="translated">Come un-While loop, effettuare una-fino a quando non viene sempre eseguito almeno una volta prima che la condizione viene valutata.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, the script block runs only while the condition is false.</source>
          <target state="translated">Tuttavia, il blocco di script viene eseguito solo se la condizione è false.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The Continue and Break flow control keywords can be used in a Do-While loop or in a Do-Until loop.</source>
          <target state="translated">Parole chiave di controllo del flusso di Break e Continue utilizzabile in un non-ciclo While o in un non-fino al ciclo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Syntax The following shows the syntax of the Do-While statement:</source>
          <target state="translated">La sintassi seguente viene illustrata la sintassi di Do-While (istruzione):</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>do {<ph id="ph1">&lt;statement list&gt;</ph>} while (<ph id="ph2">&lt;condition&gt;</ph>)</source>
          <target state="translated">eseguire {<ph id="ph1">&lt;statement list&gt;</ph>} mentre (<ph id="ph2">&lt;condition&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following shows the syntax of the Do-Until statement:</source>
          <target state="translated">Nell'esempio viene illustrata la sintassi di eseguire-istruzioni fino a quando:</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>do {<ph id="ph1">&lt;statement list&gt;</ph>} until (<ph id="ph2">&lt;condition&gt;</ph>)</source>
          <target state="translated">eseguire {<ph id="ph1">&lt;statement list&gt;</ph>} fino a quando non (<ph id="ph2">&lt;condition&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The statment list contains one or more statements that run each time the loop is entered or repeated.</source>
          <target state="translated">Elenco di istruzioni che contiene uno o più istruzioni che vengono eseguite ogni volta che il ciclo viene immesso o ripetuto.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The condition portion of the statement resolves to true or false.</source>
          <target state="translated">La parte di condizione dell'istruzione viene risolto in true o false.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example The following example of a Do statement counts the items in an array until it reaches an item with a value of 0.</source>
          <target state="translated">Nell'esempio di un'istruzione Do Conta gli elementi in una matrice finché raggiunge un elemento con un valore pari a 0.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $x = 1,2,78,0 C:\PS&gt; do { $count++; $a++; } while ($x[$a] -ne 0) C:\PS&gt; $count</source>
          <target state="translated">C:\ps&gt; &gt; $x = c:\ps&gt;Get-applockerpolicy 1,2,78,0 &gt; eseguire {$count + +, $ + +;} mentre ($x [$un] - n 0) c:\ps&gt;Get-applockerpolicy &gt; $count</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following example uses the Until keyword.</source>
          <target state="translated">Nell'esempio seguente viene utilizzata la parola chiave Until.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Notice that the not equal to operator (-ne) is replaced by the equal to operator (-eq).</source>
          <target state="translated">Si noti che non uguale a (operatore) (-ne) viene sostituito dall'operatore di uguaglianza (-eq).</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $x = 1,2,78,0 C:\PS&gt; do { $count++; $a++; } until ($x[$a] -eq 0) C:\PS&gt; $count</source>
          <target state="translated">C:\ps&gt; &gt; $x = c:\ps&gt;Get-applockerpolicy 1,2,78,0 &gt; eseguire {$count + +, $ + +;} fino a quando non ($x [$un] - eq 0) c:\ps&gt;Get-applockerpolicy &gt; $count</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following example writes all the values of an array, skipping any value that is less than zero.</source>
          <target state="translated">Nell'esempio seguente scrive tutti i valori di una matrice, ignorando qualsiasi valore minore di zero.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>do { if ($x[$a] -lt 0) { continue } Write-Host $x[$a] } while (++$a -lt 10)</source>
          <target state="translated">eseguire {se ($x [$un] - lt 0) {continuare} Write-Host $x [$un]} mentre (+ + $a 10 - lt)</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">VEDERE ANCHE</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>about_While about_Operators about_Assignment_Operators about_Comparison_Operators about_Break about_Continue</source>
          <target state="translated">about_While about_Operators about_Assignment_Operators about_Comparison_Operators about_Break about_Continue</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>