<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c1d36591acbf1a916e3c2b82c6831ef77f3d807a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Wildcards.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d19416f7bf13591dd75c16d75252706ed40ab57b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e5bcad9228269e82926b94e76cd21ac4a9518f8f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Wildcards</source>
          <target state="translated">about_Wildcards</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">cmdlet PowerShell</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Wildcards</source>
          <target state="translated">Sui caratteri jolly</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Wildcards</source>
          <target state="translated">about_Wildcards</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">ARGOMENTO</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Wildcards</source>
          <target state="translated">about_Wildcards</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">DESCRIZIONE BREVE</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Describes how to use wildcard characters in Windows PowerShell.</source>
          <target state="translated">Viene descritto come utilizzare caratteri jolly in Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">DESCRIZIONE LUNGA</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Wildcard characters represent one or many characters.</source>
          <target state="translated">Caratteri jolly rappresentano uno o più caratteri.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can use them to create word patterns in commands.</source>
          <target state="translated">Si può utilizzarli per creare modelli di word nei comandi.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, to get all the files in the C:\Techdocs directory that have a .ppt file name extension, type:</source>
          <target state="translated">Ad esempio, per ottenere tutti i file nella directory C:\Techdocs che hanno estensione ppt, digitare:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Get-ChildItem c:\techdocs<ph id="ph1">\*</ph>.ppt</source>
          <target state="translated">Get-ChildItem c:\techdocs<ph id="ph1">\*</ph>ppt</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In this case, the asterisk (*) wildcard character represents any characters that appear before the .ppt file name extension.</source>
          <target state="translated">In questo caso, il carattere jolly asterisco (*) rappresenta i caratteri che precedono l'estensione di file ppt.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports the following wildcard characters.</source>
          <target state="translated">Windows PowerShell supporta i seguenti caratteri jolly.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Wildcard Description        Example  Match             No match</source>
          <target state="translated">Corrispondenza con caratteri jolly descrizione esempio corrispondono No</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Matches zero or    aA, ag, Apple      banana more characters</source>
          <target state="translated">Corrisponde a zero o aA, gruppo di disponibilità, mela banana più caratteri</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Matches exactly    ?n       an, in, on        ran one character in the specified position</source>
          <target state="translated">Corrisponde esattamente? n an, in esecuzione in un carattere nella posizione specificata</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>[ ]      Matches a range    [a-l]ook book, cook, look  took of characters</source>
          <target state="translated">[] Corrisponde a un libro, ook intervallo [a-l] cook, aspetto ha richiesto di caratteri</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>[ ]      Matches specified  [bc]ook  book, cook        hook characters</source>
          <target state="translated">[] Corrisponde a specificato [bc] ook libro cook hook caratteri</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can include multiple wildcard characters in the same word pattern.</source>
          <target state="translated">È possibile includere più caratteri jolly nello stesso modello di word.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, to find text files whose names begin with the letters "a" through "l", type:</source>
          <target state="translated">Ad esempio, per trovare i file di testo i cui nomi iniziano con le lettere "a" e "l", digitare:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Get-ChildItem c:\techdocs[a-l]*.txt</source>
          <target state="translated">Get-ChildItem c:\techdocs[a-l]*.txt</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Many cmdlets accept wildcard characters in parameter values.</source>
          <target state="translated">Molti cmdlet accettare caratteri jolly nei valori di parametro.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The Help topic for each cmdlet describes which parameters, if any, permit wildcard characters.</source>
          <target state="translated">L'argomento della Guida per ciascun cmdlet descrive i parametri che, se presente, consentono caratteri jolly.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For parameters in which wildcard characters are accepted, their use is case-insensitive.</source>
          <target state="translated">Per i parametri in cui con caratteri jolly vengono accettati i caratteri, il relativo utilizzo è tra maiuscole e minuscole.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can also use wildcard characters in commands and script blocks, such as to create a word pattern that represents property values.</source>
          <target state="translated">È anche possibile utilizzare caratteri jolly nei comandi e i blocchi di script, ad esempio per creare un modello di word che rappresenta i valori delle proprietà.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example, the following command gets services in which the ServiceType property value includes "Interactive".</source>
          <target state="translated">Ad esempio, il comando seguente ottiene i servizi in cui il valore della proprietà ServiceType include "Interattiva".</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Get-Service | Where-Object {$_.ServiceType -like "Interactive"}</source>
          <target state="translated">Get-Service | Where-Object {$_. ServiceType-come "Interattiva"}</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In the following example, wildcard characters are used to find property values in the conditions of an If statement.</source>
          <target state="translated">Nell'esempio seguente, vengono utilizzati caratteri jolly per trovare i valori delle proprietà nelle condizioni di un blocco If istruzione.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In this command, if the Description of a restore point includes "PowerShell", the command adds the value of the CreationTime property of the restore point to a log file.</source>
          <target state="translated">In questo comando, se la descrizione di un punto di ripristino include "PowerShell", il comando aggiunge il valore della proprietà CreationTime del punto di ripristino in un file di log.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>$p = Get-ComputerRestorePoint foreach ($point in $p) {if ($point.description -like "PowerShell") {add-content -path C:\TechDocs\RestoreLog.txt "$($point.CreationTime)"}}</source>
          <target state="translated">$p = get-ComputerRestorePoint foreach ($point in $p) {se ($point.description-come "PowerShell") {aggiungere-content - path C:\TechDocs\RestoreLog.txt "$($point. CreationTime) "}}</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">VEDERE ANCHE</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>about_Language_Keywords about_If about_Script_Blocks</source>
          <target state="translated">about_Language_Keywords about_If about_Script_Blocks</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>