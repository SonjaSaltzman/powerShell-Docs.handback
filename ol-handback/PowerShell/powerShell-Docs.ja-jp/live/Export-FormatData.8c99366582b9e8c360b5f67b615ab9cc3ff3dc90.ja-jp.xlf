<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90f692498338544536b5359e9f3e6e9822e043a8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Export-FormatData.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90cf8cee4a0d26e6c28df9123957969707326eb1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">176322c608fc95a9cd995531207174c122cb4caf</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Export-FormatData</source>
          <target state="translated">Export-formatdata</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Export-FormatData</source>
          <target state="translated">Export-formatdata</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Saves formatting data from the current session in a formatting file.</source>
          <target state="translated">現在のセッションの書式設定データを書式設定ファイルに保存します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ByPath (Default)</source>
          <target state="translated">ByPath (既定値)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ByLiteralPath</source>
          <target state="translated">ByLiteralPath</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Export-FormatData<ept id="p1">**</ept> cmdlet creates Windows PowerShell formatting files (format.ps1xml) from the formatting objects in the current session.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Export-formatdata<ept id="p1">**</ept> コマンドレットは、Windows PowerShell の現在のセッションで書式設定オブジェクトからのファイル (format.ps1xml) を書式設定を作成します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It takes the <bpt id="p1">**</bpt>ExtendedTypeDefinition<ept id="p1">**</ept> objects that Get-FormatData returns and saves them in a file in XML format.</source>
          <target state="translated">かかる、 <bpt id="p1">**</bpt>ExtendedTypeDefinition<ept id="p1">**</ept> オブジェクトを Get-formatdata が取得し、XML 形式のファイルに保存します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Windows PowerShell uses the data in formatting files (format.ps1xml) to generate the default display of Microsoft .NET Framework objects in the session.</source>
          <target state="translated">Windows PowerShell は、書式設定ファイル (format.ps1xml) のデータを使用して、セッションでの Microsoft .NET Framework オブジェクトの既定の表示を生成します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can view and edit the formatting files and use the Update-FormatData cmdlet to add the formatting data to a session.</source>
          <target state="translated">書式設定ファイルは表示および編集することができます。書式設定データをセッションに追加するには、Update-FormatData コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information about formatting files in Windows PowerShell, see about_Format.ps1xml.</source>
          <target state="translated">Windows PowerShell でのファイルの書式設定の詳細については、「about_Format.ps1xml」を参照してください。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Example 1: Export session format data</source>
          <target state="translated">例 1: エクスポート セッションのデータを書式設定します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This command exports all of the format data in the session to the AllFormat.ps1xml file.</source>
          <target state="translated">このコマンドは、セッション内のすべての書式設定データを AllFormat.ps1xml ファイルにエクスポートします。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The command uses the Get-FormatData cmdlet to get the format data in the session.</source>
          <target state="translated">このコマンドでは、Get-FormatData コマンドレットを使用して、セッション内の書式設定データを取得しています。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A value of <bpt id="p1">*</bpt> (all) for the <ept id="p1">*</ept>TypeName* parameter directs the cmdlet to get all of the data in the session.</source>
          <target state="translated">値 <bpt id="p1">*</bpt> (すべて) の <ept id="p1">*</ept>TypeName * パラメーター、セッション内のすべてのデータを取得することを指定します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator (|) to send the format data from the <bpt id="p1">**</bpt>Get-FormatData<ept id="p1">**</ept> command to the <bpt id="p2">**</bpt>Export-FormatData<ept id="p2">**</ept> cmdlet, which exports the format data to the AllFormat.ps1 file.</source>
          <target state="translated">コマンドは書式設定データを送信する、パイプライン演算子 (|) を使用してから、 <bpt id="p1">**</bpt>Get-formatdata<ept id="p1">**</ept> コマンドを <bpt id="p2">**</bpt>Export-formatdata<ept id="p2">**</ept> コマンドレットに渡して、書式設定データを AllFormat.ps1 ファイルにエクスポートします。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Export-FormatData<ept id="p1">**</ept> command uses the <bpt id="p2">*</bpt>IncludeScriptBlock<ept id="p2">*</ept> parameter to include script blocks in the format data in the file.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Export-formatdata<ept id="p1">**</ept> コマンドでは、 <bpt id="p2">*</bpt>IncludeScriptBlock<ept id="p2">*</ept> にスクリプトが含まれるパラメーターはファイルで、書式設定データをブロックします。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example 2: Export format data for a type</source>
          <target state="translated">例 2: 型の書式設定データのエクスポート</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>These commands export the format data for the HelpInfoShort type to the Help.format.ps1xml file.</source>
          <target state="translated">これらのコマンドは、HelpInfoShort 型の書式設定データを Help.format.ps1xml ファイルにエクスポートします。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Get-FormatData<ept id="p1">**</ept> cmdlet to get the format data for the HelpInfoShort type, and it saves it in the $F variable.</source>
          <target state="translated">最初のコマンドを使用して、 <bpt id="p1">**</bpt>Get-formatdata<ept id="p1">**</ept> HelpInfoShort 型の書式設定データを取得するコマンドレットは、$F 変数に保存します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter of the <bpt id="p2">**</bpt>Export-FormatData<ept id="p2">**</ept> cmdlet to enter the format data saved in the $F variable.</source>
          <target state="translated">2 番目のコマンドを使用して、 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> のパラメーター、 <bpt id="p2">**</bpt>Export-formatdata<ept id="p2">**</ept> コマンドレットを $F 変数に保存された形式のデータを入力します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It also uses the <bpt id="p1">*</bpt>IncludeScriptBlock<ept id="p1">*</ept> parameter to include script blocks in the output.</source>
          <target state="translated">使用して、 <bpt id="p1">*</bpt>IncludeScriptBlock<ept id="p1">*</ept> にスクリプトが含まれるパラメーターは、出力をブロックします。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Example 3: Export format data without a script block</source>
          <target state="translated">例 3: スクリプト ブロックのない形式データのエクスポート</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This example shows the effect of omitting the <bpt id="p1">*</bpt>IncludeScriptBlock<ept id="p1">*</ept> parameter from an <bpt id="p2">**</bpt>Export-FormatData<ept id="p2">**</ept> command.</source>
          <target state="translated">この例は、省略した場合の効果を示しています、 <bpt id="p1">*</bpt>IncludeScriptBlock<ept id="p1">*</ept> パラメーターから、 <bpt id="p2">**</bpt>Export-formatdata<ept id="p2">**</ept> コマンドです。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-FormatData cmdlet to get the format data for the <bpt id="p1">**</bpt>System.Diagnostics.Process<ept id="p1">**</ept> object that the Get-Process cmdlet returns.</source>
          <target state="translated">最初のコマンドでは、Get-formatdata コマンドレットを使って書式設定データを取得する、 <bpt id="p1">**</bpt>System.Diagnostics.Process<ept id="p1">**</ept> 、Get-process コマンドレットから返されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator (|) to send the formatting data to the <bpt id="p1">**</bpt>Export-FormatData<ept id="p1">**</ept> cmdlet, which exports it to the Process.format.ps1xml file in the current directory.</source>
          <target state="translated">コマンドは、書式設定データを送信するにはパイプライン演算子 (|) を使用する、 <bpt id="p1">**</bpt>Export-formatdata<ept id="p1">**</ept> コマンドレットで、現在のディレクトリの Process.format.ps1xml ファイルにエクスポートします。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In this case, the <bpt id="p1">**</bpt>Export-FormatData<ept id="p1">**</ept> command does not use the <bpt id="p2">*</bpt>IncludeScriptBlock<ept id="p2">*</ept> parameter.</source>
          <target state="translated">ここで、 <bpt id="p1">**</bpt>Export-formatdata<ept id="p1">**</ept> コマンドが使用しない、 <bpt id="p2">*</bpt>IncludeScriptBlock<ept id="p2">*</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The second command uses the Update-FormatData cmdlet to add the Process.format.ps1xml file to the current session.</source>
          <target state="translated">2 番目のコマンドでは、Update-FormatData コマンドレットを使用して、Process.format.ps1xml ファイルを現在のセッションに追加しています。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>PrependPath<ept id="p1">*</ept> parameter to ensure that the formatting data for process objects in the Process.format.ps1xml file is found before the standard formatting data for process objects.</source>
          <target state="translated">このコマンドは、 <bpt id="p1">*</bpt>PrependPath<ept id="p1">*</ept> パラメーターを標準のプロセス オブジェクトのデータを書式設定する前に Process.format.ps1xml ファイル内のプロセス オブジェクトの書式設定データがあることを確認します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The third command shows the effects of this change.</source>
          <target state="translated">3 番目のコマンドにより、この変更の効果が示されています。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>Get-Process<ept id="p1">**</ept> cmdlet to get processes that have names that begin with P. The output shows that property values that are calculated by using script blocks are missing from the display.</source>
          <target state="translated">このコマンドは、 <bpt id="p1">**</bpt>Get-process<ept id="p1">**</ept> P で始まる名前を持つプロセスを取得するコマンドレットスクリプト ブロックを使用して計算されるプロパティの値が表示されていませんが、出力を示しています。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">パラメータ</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Forces the command to run without asking for user confirmation.</source>
          <target state="translated">ユーザーに確認せずに、直ちにコマンドを実行します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-IncludeScriptBlock</source>
          <target state="translated">-IncludeScriptBlock</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Indicates whether script blocks in the format data are exported.</source>
          <target state="translated">書式設定データをエクスポート内のスクリプト ブロックかどうかを示します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Because script blocks contain code and can be used maliciously, they are not exported by default.</source>
          <target state="translated">中に含まれるコードが悪用される可能性があるため、既定ではスクリプト ブロックはエクスポートされません。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-Inputobject</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Specifies the format data objects to be exported.</source>
          <target state="translated">エクスポートする書式設定データ オブジェクトを指定します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects or a command that gets the objects, such as a <bpt id="p1">**</bpt>Get-FormatData<ept id="p1">**</ept> command.</source>
          <target state="translated">オブジェクトまたはなど、オブジェクトを取得するコマンドを含む変数を入力して、 <bpt id="p1">**</bpt>Get-formatdata<ept id="p1">**</ept> コマンドです。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can also pipe the objects from <bpt id="p1">**</bpt>Get-FormatData<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Export-FormatData<ept id="p2">**</ept>.</source>
          <target state="translated">オブジェクトをパイプすることもできます。 <bpt id="p1">**</bpt>Get-formatdata<ept id="p1">**</ept> に <bpt id="p2">**</bpt>Export-formatdata<ept id="p2">**</ept>します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">– LiteralPath</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Specifies a location for the output file.</source>
          <target state="translated">出力ファイルの場所を指定します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Unlike the <bpt id="p1">*</bpt>Path<ept id="p1">*</ept> parameter, the value of <bpt id="p2">*</bpt>LiteralPath<ept id="p2">*</ept> is used exactly as it is typed.</source>
          <target state="translated">異なり、 <bpt id="p1">*</bpt>パス<ept id="p1">*</ept> パラメーター、値の <bpt id="p2">*</bpt>LiteralPath<ept id="p2">*</ept> は入力したとおりに使用します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">ワイルドカードとして解釈される文字はありません。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">パスにエスケープ文字が含まれている場合は、単一引用符で囲みます。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">単一引用符で囲んだ文字はエスケープ シーケンスとして解釈されません。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-NoClobber</source>
          <target state="translated">-NoClobber</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Inidicatest that the cmdlet does not overwrite existing files.</source>
          <target state="translated">Inidicatest コマンドレットが既存のファイルを上書きしません。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Export-FormatData<ept id="p1">**</ept> overwrites files without warning unless the file has the read-only attribute.</source>
          <target state="translated">既定では、 <bpt id="p1">**</bpt>Export-formatdata<ept id="p1">**</ept> ファイルに読み取り専用属性がない限り、警告が表示されず、ファイルを上書きします。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To direct <bpt id="p1">**</bpt>Export-FormatData<ept id="p1">**</ept> to overwrite read-only files, use the <bpt id="p2">*</bpt>Force<ept id="p2">*</ept> parameter.</source>
          <target state="translated">特定する <bpt id="p1">**</bpt>Export-formatdata<ept id="p1">**</ept> 読み取り専用ファイルを上書きするを使用して、 <bpt id="p2">*</bpt>Force<ept id="p2">*</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Specifies a location for the output file.</source>
          <target state="translated">出力ファイルの場所を指定します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Enter a path (optional) and file name with a format.ps1xml file name extension.</source>
          <target state="translated">パス (省略可能) と format.ps1xml ファイル名拡張子が付いたファイル名を入力します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If you omit the path, <bpt id="p1">**</bpt>Export-FormatData<ept id="p1">**</ept> creates the file in the current directory.</source>
          <target state="translated">パスを省略した場合 <bpt id="p1">**</bpt>Export-formatdata<ept id="p1">**</ept> 、現在のディレクトリで、ファイルを作成します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you use a file name extension other than .ps1xml, the <bpt id="p1">**</bpt>Update-FormatData<ept id="p1">**</ept> cmdlet will not recognize the file.</source>
          <target state="translated">.Ps1xml、以外のファイル名拡張子を使用する場合、 <bpt id="p1">**</bpt>Update-formatdata<ept id="p1">**</ept> コマンドレットは、ファイルを認識しません。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If you specify an existing file, <bpt id="p1">**</bpt>Export-FormatData<ept id="p1">**</ept> overwrites the file without warning, unless the file has the read-only attribute.</source>
          <target state="translated">既存のファイルを指定する場合は <bpt id="p1">**</bpt>Export-formatdata<ept id="p1">**</ept> ファイルに読み取り専用属性がない限り、警告を表示せずにファイルを上書きします。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To overwrite a read-only file, use the <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> parameter.</source>
          <target state="translated">読み取り専用ファイルを上書きするには、 <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To prevent files from being overwritten, use the <bpt id="p1">*</bpt>NoClobber<ept id="p1">*</ept> parameter.</source>
          <target state="translated">ファイルが上書きされないようにするのには、使用、 <bpt id="p1">*</bpt>NoClobber<ept id="p1">*</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">このコマンドレットは、共通のパラメーターをサポートしています:-デバッグ、-erroraction、-errorvariable、- InformationAction-InformationVariable、- OutVariable、-OutBuffer、- PipelineVariable、- Verbose、および - WarningVariable です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">詳細については、about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216) を参照してください。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">入力</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.ExtendedTypeDefinition</source>
          <target state="translated">System.Management.Automation.ExtendedTypeDefinition</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can pipe <bpt id="p1">**</bpt>ExtendedTypeDefinition<ept id="p1">**</ept> objects from <bpt id="p2">**</bpt>Get-FormatData<ept id="p2">**</ept> to <bpt id="p3">**</bpt>Export-FormatData<ept id="p3">**</ept>.</source>
          <target state="translated">コマンドレットにパイプ <bpt id="p1">**</bpt>ExtendedTypeDefinition<ept id="p1">**</ept> オブジェクトから <bpt id="p2">**</bpt>Get-formatdata<ept id="p2">**</ept> に <bpt id="p3">**</bpt>Export-formatdata<ept id="p3">**</ept>します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">出力</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Export-FormatData<ept id="p1">**</ept> does not return any objects.</source>
          <target state="translated"><bpt id="p1">**</bpt>Export-formatdata<ept id="p1">**</ept> はすべてのオブジェクトを返しません。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>It generates a file and saves it in the specified path.</source>
          <target state="translated">ファイルを生成し、指定されたパス内に保存します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ノート</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>To use any formatting file, including an exported formatting file, the execution policy for the session must allow scripts and configuration files to run.</source>
          <target state="translated">エクスポートされた書式設定ファイルを含む任意の書式設定ファイルを使用するには、セッションの実行ポリシーでスクリプトと構成ファイルの実行が許可されている必要があります。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For more information, see about_Execution_Policies.</source>
          <target state="translated">詳細については、「about_Execution_Policies」を参照してください。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">関連リンク</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Get-FormatData</source>
          <target state="translated">Get-FormatData</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Get-Process</source>
          <target state="translated">Get-Process</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Update-FormatData</source>
          <target state="translated">Update-FormatData</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>