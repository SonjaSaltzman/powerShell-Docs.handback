<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e443841031efc1b3d0c4e1e7a7ae0e219690daea</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\Providers\Function-Provider.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4be6b619efbda8755cd846ec9e14e3c53d7cb4cb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23556e73a6576861144141284e27ec5d5c659875</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Function Provider</source>
          <target state="translated">関数プロバイダー</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Function Provider</source>
          <target state="translated">関数プロバイダー</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>PROVIDER NAME</source>
          <target state="translated">プロバイダー名</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">機能</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>DRIVES</source>
          <target state="translated">ドライブ</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Function:</source>
          <target state="translated">関数:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Provides access to the functions defined in Windows PowerShell.</source>
          <target state="translated">Windows PowerShell で定義されている関数へのアクセスを提供します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DETAILED DESCRIPTION</source>
          <target state="translated">詳細説明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell Function provider lets you get, add, change, clear, and delete the functions and filters in Windows PowerShell.</source>
          <target state="translated">Windows PowerShell Function プロバイダーでは、Windows PowerShell の関数とフィルターを取得、追加、変更、消去、削除できます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A function is a named block of code that performs an action.</source>
          <target state="translated">関数とは、アクションを実行するコードのブロックに名前が付けられたものです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you type the function name, the code in the function runs.</source>
          <target state="translated">関数名を入力すると、関数のコードが実行されます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A filter is a named block of code that establishes conditions for an action.</source>
          <target state="translated">フィルターとは、アクションの条件を確立するコードのブロックに名前が付けられたものです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can type the name of the filter in place of the condition, such as in a <bpt id="p1">[</bpt>Where<ph id="ph1">\-</ph>Object &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///f4c69467-d5ce-4da2-87d5-d2ae74be8acb)</ept> command.</source>
          <target state="translated">など、条件の代わりに、フィルターの名前を入力できます、 <bpt id="p1">[</bpt>、<ph id="ph1">\-</ph>オブジェクトと #91; m2 &amp;#93;<ept id="p1">](assetId:///f4c69467-d5ce-4da2-87d5-d2ae74be8acb)</ept> コマンドです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In the Function: drive, functions are preceded by the label "Function" and filters are preceded by the label "Filter", but they operate properly when used in the correct context regardless of the label.</source>
          <target state="translated">Function: ドライブでは、関数の前に「Function」というラベルが付き、フィルターの前に「Filter」というラベルが付きます。ただし、ラベルに関係なく、適切なコンテキストで使用されるときは適切に動作します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Function provider is a flat namespace that contains only the function and filter objects.</source>
          <target state="translated">Function プロバイダーは変数オブジェクトとフィルター オブジェクトのみが含まれるフラットな名前空間です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Neither functions nor filters have child items.</source>
          <target state="translated">関数にもフィルターにも子項目はありません。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Each function is an instance of the System.Management.Automation.FunctionInfo class.</source>
          <target state="translated">各関数は System.Management.Automation.FunctionInfo クラスのインスタンスになります。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Each filter is an instance of the System.Management.Automation.FilterInfo class.</source>
          <target state="translated">各フィルターは System.Management.Automation.FilterInfo クラスのインスタンスになります。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The examples in this section show how to manage functions, but the same methods can be used with filters.</source>
          <target state="translated">このセクションの例では関数の取り扱いについて説明しますが、フィルターでも方法は同じです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The Function provider exposes its data store in the Function: drive.</source>
          <target state="translated">Function プロバイダーは Function: ドライブでそのデータ ストアを公開します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To work with functions, you can change your location to the Function: drive <ph id="ph1">\(</ph>"set<ph id="ph2">\-</ph>location function:"<ph id="ph3">\)</ph>.</source>
          <target state="translated">関数を使用する関数に自分の場所を変更することができます。 ドライブ <ph id="ph1">\(</ph>"設定<ph id="ph2">\-</ph>場所関数:"<ph id="ph3">\)</ph>します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Or, you can work from another Windows PowerShell drive.</source>
          <target state="translated">あるいは、別の Windows PowerShell ドライブから使用できます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To reference a function from another location, use the drive name <ph id="ph1">\(</ph>Function:<ph id="ph2">\)</ph> in the path.</source>
          <target state="translated">別の場所から関数を参照するには、ドライブ名を使用して <ph id="ph1">\(</ph>関数:<ph id="ph2">\)</ph> パスにします。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The Function provider supports all of the cmdlets whose names contain the Item noun <ph id="ph1">\(</ph>the Item cmdlets<ph id="ph2">\)</ph>, except for <bpt id="p1">[</bpt>Invoke<ph id="ph3">\-</ph>Item &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///38a9887b-ce1a-4bde-be4e-98012efae204)</ept>.</source>
          <target state="translated">Function プロバイダーをサポートするすべての名前に名詞「Item」が含まれるコマンドレット <ph id="ph1">\(</ph>Item コマンドレット<ph id="ph2">\)</ph>, 、を除き <bpt id="p1">[</bpt>Invoke<ph id="ph3">\-</ph>アイテム #91; m2 &amp;#93;<ept id="p1">](assetId:///38a9887b-ce1a-4bde-be4e-98012efae204)</ept>します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>And, it supports the <bpt id="p1">[</bpt>Get<ph id="ph1">\-</ph>Content &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///86d8b4af-af2c-4a27-9519-2c9fd420be3d)</ept> and <bpt id="p2">[</bpt>Set<ph id="ph2">\-</ph>Content &amp;#91;m2&amp;#93;<ept id="p2">](assetId:///6fff9b86-86df-4440-b7b7-8124b22088fc)</ept> cmdlets.</source>
          <target state="translated">サポートして、 <bpt id="p1">[</bpt>取得<ph id="ph1">\-</ph>コンテンツ #91; m2 &amp;#93;<ept id="p1">](assetId:///86d8b4af-af2c-4a27-9519-2c9fd420be3d)</ept> と <bpt id="p2">[</bpt>設定<ph id="ph2">\-</ph>コンテンツ #91; m2 &amp;#93;<ept id="p2">](assetId:///6fff9b86-86df-4440-b7b7-8124b22088fc)</ept> コマンドレットです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>However, it does not support the cmdlets whose names contain the ItemProperty noun <ph id="ph1">\(</ph>the ItemProperty cmdlets<ph id="ph2">\)</ph>, and it does not support the Filter parameter in any cmdlet.</source>
          <target state="translated">ただし、名前に名詞「ItemProperty」が含まれるコマンドレット サポートがない <ph id="ph1">\(</ph>ItemProperty コマンドレット<ph id="ph2">\)</ph>, すべてのコマンドレットで Filter パラメーターでサポートされません。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>All changes to the functions affect the current console only.</source>
          <target state="translated">関数を変更した場合、現在のコンソールのみが影響を受けます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To save the changes, add the function to the Windows PowerShell profile, or use <bpt id="p1">[</bpt>Export<ph id="ph1">\-</ph>Console &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///0858eece-ddcb-4525-89d1-4732c5f54c48)</ept> to save the current console.</source>
          <target state="translated">変更を保存するには、Windows PowerShell プロファイルに関数を追加または使用 <bpt id="p1">[</bpt>エクスポート<ph id="ph1">\-</ph>コンソール #91; m2 &amp;#93;<ept id="p1">](assetId:///0858eece-ddcb-4525-89d1-4732c5f54c48)</ept> を現在のコンソールを保存します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>CAPABILITIES</source>
          <target state="translated">機能</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>ShouldProcess</source>
          <target state="translated">ShouldProcess</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Getting to the Function: Drive</source>
          <target state="translated">Function: ドライブ</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">例 1</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Changes the current location to the Function: drive.</source>
          <target state="translated">現在の場所を Function: ドライブに変更します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can use this command from any drive in Windows PowerShell.</source>
          <target state="translated">このコマンドは Windows PowerShell のあらゆるドライブから実行できます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To return to a file system drive, type the drive name.</source>
          <target state="translated">ファイル システム ドライブに戻るには、ドライブ名を入力します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, type "set<ph id="ph1">\-</ph>location c:".</source>
          <target state="translated">たとえば、「"設定<ph id="ph1">\-</ph>場所 c:"です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Getting Functions</source>
          <target state="translated">関数を取得する</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">例 1</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This command gets the list of all the functions in the current session.</source>
          <target state="translated">このコマンドは現在のセッションのすべての関数の一覧を取得します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can use this command from any Windows PowerShell drive.</source>
          <target state="translated">このコマンドはすべての Windows PowerShell ドライブから使用できます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">例 2</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This command gets the "man" function from the Function: drive.</source>
          <target state="translated">このコマンドは Function: ドライブから関数「man」を取得します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>It uses the Get<ph id="ph1">\-</ph>Item cmdlet to get the function.</source>
          <target state="translated">Get を使用して<ph id="ph1">\-</ph>コマンドレット、関数を取得します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The pipeline operator <ph id="ph1">\(</ph>&amp;#124;<ph id="ph2">\)</ph> sends the result to Format<ph id="ph3">\-</ph>Table.</source>
          <target state="translated">パイプライン演算子 <ph id="ph1">\(</ph>&amp;#124;<ph id="ph2">\)</ph> 形式に結果を送信<ph id="ph3">\-</ph>テーブルです。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The Wrap parameter directs text that does not fit on the line onto the next line.</source>
          <target state="translated">Wrap パラメーターは行に合わないテキストを次の行に向けます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The Autosize parameter resizes the table columns to accommodate the text.</source>
          <target state="translated">Autosize パラメーターはテキストが入るようにテーブルの列のサイズを変更します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If you are in a different drive, add the drive name <ph id="ph1">\(</ph>Function:<ph id="ph2">\)</ph> to the path.</source>
          <target state="translated">別のドライブの場合は、追加のドライブ名 <ph id="ph1">\(</ph>関数:<ph id="ph2">\)</ph> パスにします。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>EXAMPLE 3</source>
          <target state="translated">例 3</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>These commands both get the function named "c:".</source>
          <target state="translated">これらのコマンドはいずれも「c:」という名前の関数を取得します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The first command can be used in any drive.</source>
          <target state="translated">最初のコマンドはすべてのドライブで使用できます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The second command is used in the Function: drive.</source>
          <target state="translated">2 番目のコマンドは Function: ドライブで使用されます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Because the name ends in a colon, which is the syntax for a drive, you must qualify the path with the drive name.</source>
          <target state="translated">ドライブの構文であり、名前がコロンで終わるため、ドライブ名でパスを修飾する必要があります。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Within the Function: drive, you can use either format.</source>
          <target state="translated">Function: ドライブ内では、いずれの形式も使用できます。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In the second command, the dot <ph id="ph1">\(</ph>.</source>
          <target state="translated">2 番目のコマンドでは、ドットで <ph id="ph1">\(</ph>します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>represents the current location.</source>
          <target state="translated">現在の場所を表します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Creating a Function</source>
          <target state="translated">関数の作成</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">例 1</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This command uses the New<ph id="ph1">\-</ph>Item cmdlet to create a function called "HKLM:".</source>
          <target state="translated">このコマンドは、新規<ph id="ph1">\-</ph>関数を作成するコマンドレットと呼ばれる"HKLM:"です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The expression in braces is the script block that is represented by the function name.</source>
          <target state="translated">括弧で囲まれた式は関数名により表されるスクリプト ブロックです。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can also create a function by typing it at the Windows PowerShell command line.</source>
          <target state="translated">Windows PowerShell コマンド ラインで入力し、関数を作成することもできます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For example, tpe "function:hklm: {set<ph id="ph1">\-</ph>location hklm:}".</source>
          <target state="translated">たとえば、tpe"関数: hklm: {設定<ph id="ph1">\-</ph>場所 hklm:}"。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If you are in the Function: drive, you can omit the drive name.</source>
          <target state="translated">Function: ドライブにいる場合、ドライブ名を省略できます。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Because you cannot specify the "Filter" label in New<ph id="ph1">\-</ph>Item, filters are labeled as functions, but they operate properly with any label.</source>
          <target state="translated">[新しいラベル「Filter」を指定することはできませんので<ph id="ph1">\-</ph>、の項目フィルターは、関数ラベルが付けられますが、どのようなラベル適切に動作します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>To create a filter with the "Filter" label, type the filter at the command line.</source>
          <target state="translated">ラベルが「Filter」のフィルターを作成するには、コマンド ラインでフィルターを入力します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For example, type "filter:Running {$<ph id="ph1">\_</ph>.Status <ph id="ph2">\-</ph>eq "Running"}".</source>
          <target state="translated">たとえば、「"Filter:running {$<ph id="ph1">\_</ph>です。ステータス <ph id="ph2">\-</ph>eq"Running"}"。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">例 2</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This command uses the New<ph id="ph1">\-</ph>Item cmdlet to create a function called Csrss.</source>
          <target state="translated">このコマンドは、新規<ph id="ph1">\-</ph>項目コマンドレットを Csrss という名前の関数を作成します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>It uses the Options dynamic parameter to specify a value of ReadOnly for the Options property of the function.</source>
          <target state="translated">Options 動的パラメーターを使用し、関数の Options プロパティの ReadOnly の値を指定します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This command works from any location.</source>
          <target state="translated">このコマンドはどの場所からでも実行できます。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If you are in the Function: drive, you can use a dot <ph id="ph1">\(</ph>.</source>
          <target state="translated">関数の場合: ドライブ、ドットを使用する <ph id="ph1">\(</ph>です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>to specify the path.</source>
          <target state="translated">パスを指定します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The dot represents the current location.</source>
          <target state="translated">ドットは現在の場所を表します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Deleting a Function</source>
          <target state="translated">関数の削除</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">例 1</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This command deletes the "hklm:" function from the current session.</source>
          <target state="translated">このコマンドは現在のセッションから関数「hklm:」を削除します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">例 2</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This command deletes all the functions from the current session except for the functions whose Options property has a value of Constant.</source>
          <target state="translated">このコマンドは現在のセッションからすべての関数を削除します。ただし、Options プロパティの値が Constant のものは除きます。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Without the Force parameter, the command does not delete functions whose Options property has a value of ReadOnly.</source>
          <target state="translated">Force パラメーターがない場合、このコマンドでは Options プロパティの値が ReadOnly の関数は削除されません。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>When you delete all the functions, the command prompt changes because the prompt function, which defines the content of the command prompt, is deleted.</source>
          <target state="translated">すべての関数を削除すると、コマンド プロンプトが変わります。コマンド プロンプトのコンテンツを決めるプロンプト関数が削除されるためです。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Displaying the Properties and Methods of Functions</source>
          <target state="translated">関数のプロパティとメソッドの表示</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">例 1</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This command uses the Get<ph id="ph1">\-</ph>Item cmdlet to get all the functions.</source>
          <target state="translated">このコマンドは、Get を使用して<ph id="ph1">\-</ph>項目コマンドレットをすべての関数を取得します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The pipeline operator sends the results to the Get<ph id="ph1">\-</ph>Member cmdlet, which displays the methods and the properties of the object.</source>
          <target state="translated">パイプライン演算子では、その結果を Get に送信<ph id="ph1">\-</ph>メンバー コマンドレットは、メソッドとオブジェクトのプロパティを表示します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>When you pipe a collection of objects <ph id="ph1">\(</ph>such as the collection of functions in the Function: drive<ph id="ph2">\)</ph> to Get<ph id="ph3">\-</ph>Member, Get<ph id="ph4">\-</ph>Member evaluates each object in the collection separately and returns information about each object type that it finds.</source>
          <target state="translated">オブジェクトのコレクションをパイプする <ph id="ph1">\(</ph>など、関数の関数のコレクション: ドライブ<ph id="ph2">\)</ph> Get に<ph id="ph3">\-</ph>メンバーを取得<ph id="ph4">\-</ph>メンバーがコレクション内の各オブジェクトを個別に評価し、検出された各オブジェクトの種類に関する情報を返します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If all of the objects are of the same type, it returns information about the single object type.</source>
          <target state="translated">すべてのオブジェクトが同じ種類の場合、その 1 つのオブジェクト タイプに関する情報が返されます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>In this case, all of the functions are FunctionInfo objects.</source>
          <target state="translated">この場合、すべての関数が FunctionInfo オブジェクトです。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>To get information about the collection of FunctionInfo objects, use the InputObject parameter of Get<ph id="ph1">\-</ph>Member.</source>
          <target state="translated">FunctionInfo オブジェクトのコレクションに関する情報を取得するには、Get の InputObject パラメーターを使用<ph id="ph1">\-</ph>メンバーです。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For example, type "get<ph id="ph1">\-</ph>member <ph id="ph2">\-</ph>InputObject <ph id="ph3">\(</ph>get<ph id="ph4">\-</ph>item function:<ph id="ph5">\*\)</ph>".</source>
          <target state="translated">たとえば、「"取得<ph id="ph1">\-</ph>メンバー <ph id="ph2">\-</ph>InputObject <ph id="ph3">\(</ph>取得<ph id="ph4">\-</ph>項目関数:<ph id="ph5">\*\)</ph>"です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When you use the InputObject parameter, Get<ph id="ph1">\-</ph>Member evaluates the collection, not the objects in the collection.</source>
          <target state="translated">InputObject パラメーターを使用すると取得<ph id="ph1">\-</ph>メンバーは、コレクション内のオブジェクトではなくのコレクションを評価します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">例 2</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This command lists the values of the properties of the "prompt" function.</source>
          <target state="translated">このコマンドは関数「prompt」のプロパティの値を一覧表示します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>It uses the Get<ph id="ph1">\-</ph>Item cmdlet to get an object that represents the "prompt" function.</source>
          <target state="translated">Get を使用して<ph id="ph1">\-</ph>コマンドレット関数「prompt」を表すオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The pipeline operator <ph id="ph1">\(</ph>&amp;#124;<ph id="ph2">\)</ph> sends the results to the Format<ph id="ph3">\-</ph>List command.</source>
          <target state="translated">パイプライン演算子 <ph id="ph1">\(</ph>&amp;#124;<ph id="ph2">\)</ph> 形式に、その結果を送信<ph id="ph3">\-</ph>コマンドを一覧表示します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The Format<ph id="ph1">\-</ph>List command uses the Property parameter with a wildcard character <ph id="ph2">\(\*\)</ph> to format and to display the values of all of the properties of the "prompt" function.</source>
          <target state="translated">形式<ph id="ph1">\-</ph>List コマンドとワイルドカード文字は Property パラメーターを使用する <ph id="ph2">\(\*\)</ph> を書式設定し、すべての関数「prompt」プロパティ値を表示します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Changing the Properties of a Function</source>
          <target state="translated">関数のプロパティの変更</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">例 1</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You can use the Set<ph id="ph1">\-</ph>Item cmdlet with the Options dynamic parameter to change the value of the Options property of a function.</source>
          <target state="translated">セットを使用する<ph id="ph1">\-</ph>コマンドレットと関数の Options プロパティの値を変更するオプションの動的パラメーターです。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This command sets the AllScope and ReadOnly options for the "prompt" function.</source>
          <target state="translated">このコマンドは、prompt 関数の AllScope オプションと ReadOnly オプションを設定します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This command uses the Options dynamic parameter of the Set<ph id="ph1">\-</ph>Item cmdlet.</source>
          <target state="translated">このコマンドは、一連の Options 動的パラメーターを使用して<ph id="ph1">\-</ph>コマンドレットです。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The Options parameter is available in Set<ph id="ph1">\-</ph>Item only when you use it with the Alias or Function provider.</source>
          <target state="translated">オプション パラメーターはセットで使用できる<ph id="ph1">\-</ph>項目のエイリアスまたは関数のプロバイダーで使用する場合のみです。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">例 2</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>This command uses the Set<ph id="ph1">\-</ph>Item cmdlet to change the "prompt" function so that it displays the time before the path.</source>
          <target state="translated">このコマンド セットを使用して<ph id="ph1">\-</ph>コマンドレット「プロンプト」を変更するパスの前に時間を表示するように機能します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The change affects both the Definition and ScriptBlock properties of the FunctionInfo object.</source>
          <target state="translated">この変更は FunctionInfo オブジェクトの Definition プロパティと ScriptBlock プロパティの両方に影響を与えます。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>To see the effect of the change, type "get<ph id="ph1">\-</ph>item <ph id="ph2">\-</ph>path function:prompt &amp;#124; format<ph id="ph3">\-</ph>list <ph id="ph4">\-</ph>property <ph id="ph5">\*</ph>".</source>
          <target state="translated">変更の結果を表示するには、次のように入力します。"get<ph id="ph1">\-</ph>項目 <ph id="ph2">\-</ph>-path function:prompt &amp; #124 文字です。形式<ph id="ph3">\-</ph>リスト <ph id="ph4">\-</ph>プロパティ <ph id="ph5">\*</ph>"です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>EXAMPLE 3</source>
          <target state="translated">例 3</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This command uses the Rename<ph id="ph1">\-</ph>Item cmdlet to change the name of the "help" function to "gh".</source>
          <target state="translated">このコマンドは、名前の変更を使用して<ph id="ph1">\-</ph>"help"関数の名前を「gh」に変更するコマンドレットです。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Copying a Function</source>
          <target state="translated">関数のコピー</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">例 1</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This command copies the "prompt" function to "oldPrompt", effectively creating a new name for the script block that is associated with the prompt function.</source>
          <target state="translated">このコマンドは関数「prompt」を「oldPrompt」にコピーします。プロンプト関数に関連付けられているスクリプト ブロックの新しい名前を効率的に作成できます。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>You can use this to save the original prompt function if you plan to change it.</source>
          <target state="translated">これを利用し、変更予定のプロンプト関数のオリジナルを保存できます。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The Options property of the new function has a value of None.</source>
          <target state="translated">新しい関数の Options プロパティの値は None です。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>To change the value of the Options property, use Set<ph id="ph1">\-</ph>Item.</source>
          <target state="translated">Options プロパティの値を変更するには、セットを使用して<ph id="ph1">\-</ph>項目。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>DYNAMIC PARAMETERS</source>
          <target state="translated">動的パラメーター</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Dynamic parameters are cmdlet parameters that are added by a Windows PowerShell provider and are available only when the cmdlet is being used in the provider<ph id="ph1">\-</ph>enabled drive.</source>
          <target state="translated">動的パラメーターは、コマンドレットは、プロバイダーで使用されている場合にのみ、Windows PowerShell プロバイダーと使用可能ですが追加されるコマンドレット パラメーター<ph id="ph1">\-</ph>ドライブを有効にします。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Options <ph id="ph1">\&lt;</ph>System.Management.Automation.ScopedItemOptions</source>
          <target state="translated">オプション <ph id="ph1">\&lt;</ph>System.Management.Automation.ScopedItemOptions</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Determines the value of the Options property of a function.</source>
          <target state="translated">関数の Options プロパティの値を決定します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">値</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>No options.</source>
          <target state="translated">オプションはありません。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>"None" is the default.</source>
          <target state="translated">"None" が既定値です。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Constant</source>
          <target state="translated">Constant</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The function cannot be deleted, and its properties cannot be changed.</source>
          <target state="translated">関数は削除できず、そのプロパティは変更できません。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Constant is available only when you are creating a function.</source>
          <target state="translated">Constant は関数を作成するときだけ利用できます。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>You cannot change the option of an existing function to Constant.</source>
          <target state="translated">既存関数のオプションを Constant に変更することはできません。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Private</source>
          <target state="translated">Kirkland</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The function is visible only in the current scope <ph id="ph1">\(</ph>not in child scopes<ph id="ph2">\)</ph>.</source>
          <target state="translated">現在のスコープ内だけで、関数が表示されている <ph id="ph1">\(</ph>子スコープではなく<ph id="ph2">\)</ph>です。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>ReadOnly</source>
          <target state="translated">ReadOnly</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The properties of the function cannot be changed except by using the Force parameter.</source>
          <target state="translated">Force パラメーターの使用時を除き、関数のパラメーターは変更できません。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">[</bpt>Remove<ph id="ph1">\-</ph>Item &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///f98b4219-60df-408b-bdc8-994f920fc7bd)</ept> to delete the function.</source>
          <target state="translated">使用することができます <bpt id="p1">[</bpt>削除<ph id="ph1">\-</ph>アイテム #91; m2 &amp;#93;<ept id="p1">](assetId:///f98b4219-60df-408b-bdc8-994f920fc7bd)</ept> 、関数を削除します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>AllScope</source>
          <target state="translated">AllScope</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The function is copied to any new scopes that are created.</source>
          <target state="translated">関数は作成される新しい範囲にコピーされます。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Cmdlets supported:</source>
          <target state="translated">サポートされているコマンドレット:</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>New<ph id="ph1">\-</ph>Item &amp;#91;m2&amp;#93;</source>
          <target state="translated">新しい<ph id="ph1">\-</ph>アイテム #91; m2 &amp; #93 です。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Set<ph id="ph1">\-</ph>Item &amp;#91;m2&amp;#93;</source>
          <target state="translated">設定<ph id="ph1">\-</ph>アイテム #91; m2 &amp; #93 です。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">参照</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>about<ph id="ph1">\_</ph>Functions &amp;#91;m2&amp;#93;</source>
          <target state="translated">に関する<ph id="ph1">\_</ph>関数 #91; m2 &amp; #93 です。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>about<ph id="ph1">\_</ph>Providers</source>
          <target state="translated">に関する<ph id="ph1">\_</ph>プロバイダー</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>