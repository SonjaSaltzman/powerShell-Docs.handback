<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1cd21b0dc35874d947a0167d4442162d67ee428</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Invoke-Expression.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f92192fd2d7446dcfd5cf67e63ff87dc8bb86db0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">70437a5a81cd1458d4a33638620a044880e20b97</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Invoke-Expression</source>
          <target state="translated">呼び出す式</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Invoke-Expression</source>
          <target state="translated">呼び出す式</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Runs commands or expressions on the local computer.</source>
          <target state="translated">ローカル コンピューター上でコマンドまたは式を実行します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> cmdlet evaluates or runs a specified string as a command and returns the results of the expression or command.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Invoke-expression<ept id="p1">**</ept> コマンドレットは、評価、またはコマンドとして指定した文字列を実行し、式またはコマンドの結果が返されます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Without <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept>, a string submitted at the command line would be returned (echoed) unchanged.</source>
          <target state="translated">せず <bpt id="p1">**</bpt>Invoke-expression<ept id="p1">**</ept>, 、コマンドラインで送信された文字列返されます (エコー) 変更します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Example 1: Evaluate an expression</source>
          <target state="translated">例 1: 式を評価します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This example demonstrates the use of <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> to evaluate an expression.</source>
          <target state="translated">この例では、使用 <bpt id="p1">**</bpt>Invoke-expression<ept id="p1">**</ept> 式を評価します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Without <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept>, the expression is printed, but not evaluated.</source>
          <target state="translated">せず <bpt id="p1">**</bpt>Invoke-expression<ept id="p1">**</ept>, 、式が出力されますが、評価されません。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The first command assigns a value of Get-Process (a string) to the $Command variable.</source>
          <target state="translated">最初のコマンドは、$Command 変数に Get-process (文字列) の値を割り当てます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The second command shows the effect of typing the variable name at the command line.</source>
          <target state="translated">2 番目のコマンドは、コマンド ラインで変数名を入力した場合の効果を示しています。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Windows PowerShell echoes the string.</source>
          <target state="translated">Windows PowerShell により、文字列がエコーされます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The third command uses <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> to evaluate the string.</source>
          <target state="translated">3 番目のコマンドを使用して <bpt id="p1">**</bpt>Invoke-expression<ept id="p1">**</ept> 文字列を評価します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example 2: Run a script on the local computer</source>
          <target state="translated">例 2: ローカル コンピューターでスクリプトを実行します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>These commands use <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> to run a script, TestScript.ps1, on the local computer.</source>
          <target state="translated">これらのコマンドを使用して <bpt id="p1">**</bpt>Invoke-expression<ept id="p1">**</ept> をローカル コンピューター上で TestScript.ps1 スクリプトを実行します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The two commands are equivalent.</source>
          <target state="translated">2 つのコマンドは同等です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The first uses the <bpt id="p1">*</bpt>Command<ept id="p1">*</ept> parameter to specify the command to run.</source>
          <target state="translated">最初の使用、 <bpt id="p1">*</bpt>コマンド<ept id="p1">*</ept> パラメーターを実行するコマンドを指定します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The second uses a pipeline operator (|) to send the command string to <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept>.</source>
          <target state="translated">2 つ目は、パイプライン演算子 (|) をコマンド文字列を送信するを使用 <bpt id="p1">**</bpt>Invoke-expression<ept id="p1">**</ept>します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Example 3: Run a command in a variable</source>
          <target state="translated">例 3: 変数にコマンドを実行します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This example runs a command string that is saved in the $Command variable.</source>
          <target state="translated">この例は、$Command 変数に保存されているコマンド文字列を実行します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The command string is enclosed in single quotation marks because it includes a variable, $<bpt id="p1">_</bpt>, which represents the current object. If it were enclosed in double quotation marks, the $<ept id="p1">_</ept> variable would be replaced by its value before it was saved in the $Command variable.</source>
          <target state="translated">変数 $this が含まれているために、コマンド文字列が単一引用符で囲まれた<bpt id="p1">_</bpt>, 、現在のオブジェクトを表します。二重引用符は、$ で囲んだかどうか<ept id="p1">_</ept> 変数は、$Command 変数に保存された前に、その値で置換とします。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Example 4: Get and run a cmdlet Help example</source>
          <target state="translated">例 4: 取得し、コマンドレット ヘルプの例を実行</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This command retrieves and runs the first example in the Get-EventLog cmdlet Help topic.</source>
          <target state="translated">このコマンドは、取得し、Get-eventlog コマンドレットのヘルプ トピックの最初の例を実行します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To run an example of a different cmdlet, change the value of the $Cmdlet_name variable to the name of the cmdlet.</source>
          <target state="translated">さまざまなコマンドレットの例を実行するには、コマンドレットの名前に、$cmdlet_name 変数の値を変更します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>And, change the $Example_number variable to the example number you want to run.</source>
          <target state="translated">実行する例の数に、$example_number 変数を変更します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command will fail if the example number is not valid.</source>
          <target state="translated">例の数が有効でない場合、コマンドは失敗します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">パラメータ</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>-Command</source>
          <target state="translated">-Command</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Specifies the command or expression to run.</source>
          <target state="translated">実行するコマンドまたは式を指定します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Type the command or expression or enter a variable that contains the command or expression.</source>
          <target state="translated">コマンドまたは式を入力するか、コマンドまたは式を含む変数を入力します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Command<ept id="p1">*</ept> parameter is required.</source>
          <target state="translated"> <bpt id="p1">*</bpt>コマンド<ept id="p1">*</ept> パラメーターは必須です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">このコマンドレットは、共通のパラメーターをサポートしています:-デバッグ、-erroraction、-errorvariable、- InformationAction-InformationVariable、- OutVariable、-OutBuffer、- PipelineVariable、- Verbose、および - WarningVariable です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">詳細については、about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216) を参照してください。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">入力</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>System.String or PSObject</source>
          <target state="translated">System.String または PSObject</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can pipe an object that represents the command to <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept>.</source>
          <target state="translated">コマンドを表すオブジェクトをパイプする <bpt id="p1">**</bpt>Invoke-expression<ept id="p1">**</ept>します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Use the $Input automatic variable to represent the input objects in the command.</source>
          <target state="translated">$Input 自動変数を使用して、コマンドの入力オブジェクトを表します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">出力</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>PSObject</source>
          <target state="translated">PSObject</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Returns the output that is generated by the invoked command (the value of the <bpt id="p1">*</bpt>Command<ept id="p1">*</ept> parameter).</source>
          <target state="translated">呼び出されたコマンドによって生成される出力が返されます (の値、 <bpt id="p1">*</bpt>コマンド<ept id="p1">*</ept> パラメーター)。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ノート</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An expression is a statement that can be evaluated and produces a result, such as a Windows PowerShell command.</source>
          <target state="translated">式を評価することができ、Windows PowerShell コマンドなどの結果を生成するステートメントとは。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Take reasonable precautions when using the <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> cmdlet in scripts.</source>
          <target state="translated">使用する場合は、適切な予防措置を講じる、 <bpt id="p1">**</bpt>Invoke-expression<ept id="p1">**</ept> スクリプト内のコマンドレットです。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When using <bpt id="p1">**</bpt>Invoke-Expression<ept id="p1">**</ept> to run a command that the user enters, verify that the command is safe to run before running it.</source>
          <target state="translated">使用する場合 <bpt id="p1">**</bpt>Invoke-expression<ept id="p1">**</ept> ユーザーが入力したコマンドを実行するには、コマンドが実行する前に実行できることを確認します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In general, it is best to design your script with predefined input options, rather than allowing freeform input.</source>
          <target state="translated">一般的には、自由な入力を許可するのではなく、定義済みの入力オプションを使用してスクリプトを設計することをお勧めします。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">関連リンク</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Invoke-Command</source>
          <target state="translated">Invoke-Command</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Where-Object</source>
          <target state="translated">Where-Object</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>