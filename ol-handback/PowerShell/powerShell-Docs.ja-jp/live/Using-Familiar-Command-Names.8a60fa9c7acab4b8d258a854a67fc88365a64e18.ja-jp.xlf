<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc235dee1af01c1f3d29118e4824d6a2b49b113a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\fundamental\Using-Familiar-Command-Names.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22cf02bbdd565e76ea0602b94b6a8d1339f82a78</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">111605e2480751d098a7b48dd659c6ffafbe861e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Using Familiar Command Names</source>
          <target state="translated">使い慣れたコマンド名の使用</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">PowerShell, コマンドレット</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Using Familiar Command Names</source>
          <target state="translated">使い慣れたコマンド名の使用</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Using a mechanism called <bpt id="p1">*</bpt>aliasing<ept id="p1">*</ept>, Windows PowerShell allows users to refer to commands by alternate names.</source>
          <target state="translated">Windows PowerShell では、<bpt id="p1">*</bpt>エイリアス<ept id="p1">*</ept>というメカニズムにより、ユーザーは代替名でコマンドを表せます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Aliasing allows users with experience in other shells to reuse common command names that they already know to perform similar operations in Windows PowerShell.</source>
          <target state="translated">エイリアスがあることで、他のシェルの経験のあるユーザーは、既に知っている一般的なコマンド名を再使用して、Windows PowerShell でも同様の操作を行えます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Although we will not discuss Windows PowerShell aliases in detail, you can still use them as you get started with Windows PowerShell.</source>
          <target state="translated">Windows PowerShell のエイリアスについて詳しくは解説しませんが、Windows PowerShell の入門段階でもエイリアスを使用できます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Aliasing associates a command name that you type with another command.</source>
          <target state="translated">エイリアスは、ユーザーが入力したコマンド名を別のコマンドに関連付けます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, Windows PowerShell has an internal function named <bpt id="p1">**</bpt>Clear-Host<ept id="p1">**</ept> that clears the output window.</source>
          <target state="translated">たとえば、出力ウィンドウをクリアする <bpt id="p1">**</bpt>Clear-Host<ept id="p1">**</ept> という内部関数が Windows PowerShell にあります。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you type either the <bpt id="p1">**</bpt>cls<ept id="p1">**</ept> or <bpt id="p2">**</bpt>clear<ept id="p2">**</ept> command at a command prompt, Windows PowerShell interprets that this is an alias for the <bpt id="p3">**</bpt>Clear-Host<ept id="p3">**</ept> function and runs the <bpt id="p4">**</bpt>Clear-Host<ept id="p4">**</ept> function.</source>
          <target state="translated"><bpt id="p1">**</bpt>cls<ept id="p1">**</ept> または <bpt id="p2">**</bpt>clear<ept id="p2">**</ept> のどちらかのコマンドをコマンド プロンプトで入力すると、Windows PowerShell はそれを <bpt id="p3">**</bpt>Clear-Host<ept id="p3">**</ept> 関数のエイリアスであると解釈し、<bpt id="p4">**</bpt>Clear-Host<ept id="p4">**</ept> 関数を実行します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This feature helps users to learn Windows PowerShell.</source>
          <target state="translated">この機能は、ユーザーが Windows PowerShell を習得するうえで役立ちます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>First, most Cmd.exe and UNIX users have a large repertoire of commands that users already know by name, and although the Windows PowerShell equivalents may not produce identical results, they are close enough in form that users can use them to do work without having to first memorize the Windows PowerShell names.</source>
          <target state="translated">何よりもまず、Cmd.exe および UNIX ユーザーのほとんどは、幅広いレパートリーのコマンドの名前を既に知っています。相当する Windows PowerShell コマンドがまったく同じ結果を生成するとは限りませんが、形の上ではほぼ同じです。したがって、ユーザーは Windows PowerShell での名前を最初に覚えなくても、既に知っているコマンド名を使用できます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Second, the major source of frustration in learning a new shell when the user is already familiar with another shell, is the errors that are caused by "finger memory".</source>
          <target state="translated">第 2 に、別のシェルを既に使い慣れているユーザーが新しいシェルを習得する際に感じるフラストレーションの主な原因は、"指が覚えていること" によって引き起こされるエラーです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you have used Cmd.exe for years, when you have a screen full of output and want to clean it up, you would reflexively type the <bpt id="p1">**</bpt>cls<ept id="p1">**</ept> command and press the ENTER key.</source>
          <target state="translated">Cmd.exe を長年使用しているユーザーであれば、画面が出力でいっぱいになったために画面をクリーンアップしたい場合は、無意識に <bpt id="p1">**</bpt>cls<ept id="p1">**</ept> コマンドを入力して ENTER キーを押すでしょう。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Without the alias to the <bpt id="p1">**</bpt>Clear-Host<ept id="p1">**</ept> function in Windows PowerShell, you would simply get the error message "<bpt id="p2">**</bpt>'cls' is not recognized as a cmdlet, function, operable program, or script file.<ept id="p2">**</ept>"</source>
          <target state="translated">Windows PowerShell に <bpt id="p1">**</bpt>Clear-Host<ept id="p1">**</ept> 関数のエイリアスがなければ、"<bpt id="p2">**</bpt>'cls' is not recognized as a cmdlet, function, operable program, or script file.<ept id="p2">**</ept>" というエラー メッセージが表示されるだけで、</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>and be left with no idea of what to do to clear the output.</source>
          <target state="translated">出力をクリアするにはどうすればよいかまったく分からないまま置き去りにされてしまいます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following is a brief listing of the common Cmd.exe and UNIX commands that you can use inside Windows PowerShell:</source>
          <target state="translated">Windows PowerShell 内で使用できる一般的な Cmd.exe および UNIX コマンドの簡潔な一覧を次に示します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>cat</source>
          <target state="translated">cat</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>dir</source>
          <target state="translated">dir</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>mount</source>
          <target state="translated">マウント</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>rm</source>
          <target state="translated">rm</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>cd</source>
          <target state="translated">cd</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>echo</source>
          <target state="translated">echo</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>move</source>
          <target state="translated">move</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>rmdir</source>
          <target state="translated">rmdir</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>chdir</source>
          <target state="translated">chdir</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>erase</source>
          <target state="translated">erase</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>popd</source>
          <target state="translated">popd</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>sleep</source>
          <target state="translated">sleep</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>clear</source>
          <target state="translated">clear</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>h</source>
          <target state="translated">h</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>ps</source>
          <target state="translated">ps</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>sort</source>
          <target state="translated">sort</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>cls</source>
          <target state="translated">cls</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>history</source>
          <target state="translated">history</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>pushd</source>
          <target state="translated">pushd</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>tee</source>
          <target state="translated">tee</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>copy</source>
          <target state="translated">copy</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>kill</source>
          <target state="translated">kill</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>pwd</source>
          <target state="translated">pwd</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>type</source>
          <target state="translated">型</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>del</source>
          <target state="translated">del</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>lp</source>
          <target state="translated">lp</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>r</source>
          <target state="translated">r</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>write</source>
          <target state="translated">write</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>diff</source>
          <target state="translated">diff</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>ls</source>
          <target state="translated">ls</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>ren</source>
          <target state="translated">ren</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If you find yourself using one of these commands reflexively and want to learn the real name of the native Windows PowerShell command, you can use the <bpt id="p1">**</bpt>Get-Alias<ept id="p1">**</ept> command:</source>
          <target state="translated">これらのコマンドのいずれかを無意識に使っていたことに気づいたが、Windows PowerShell ネイティブ コマンドの実名を知りたいという場合は、<bpt id="p1">**</bpt>Get-Alias<ept id="p1">**</ept> コマンドを使用できます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To make examples more readable, the Windows PowerShell User's Guide generally avoids using aliases.</source>
          <target state="translated">Windows PowerShell ユーザー ガイドでは一般に、例を読みやすくするために、エイリアスの使用は避けています。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>However, knowing more about aliases this early can still be useful if you are working with arbitrary snippets of Windows PowerShell code from another source or want to define your own aliases.</source>
          <target state="translated">しかし、早い段階でエイリアスについて詳しく知ることは、別のソースにある Windows PowerShell コードの不特定のスニペットを扱う場合や、独自のエイリアスを定義する場合にも役立ちます。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The rest of this section will discuss standard aliases and how to define your own aliases.</source>
          <target state="translated">このセクションの残りの部分で、標準エイリアスについて、および独自のエイリアスを定義する方法について説明します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Interpreting Standard Aliases</source>
          <target state="translated">標準エイリアスの解釈</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Unlike the aliases described above, which were designed for name-compatibility with other interfaces, the aliases built into Windows PowerShell are generally designed for brevity.</source>
          <target state="translated">他のインターフェイスとの名前の互換性を目的とした上記のエイリアスとは異なり、Windows PowerShell に組み込まれたエイリアスは一般に、簡潔さを目的に設計されています。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>These shorter names can be typed quickly, but are impossible to read if you do not know what they refer to.</source>
          <target state="translated">こうした短い名前はすばやく入力できますが、何を表しているかが分かっていなければ、意味を読み取ることはできません。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Windows PowerShell tries to compromise between clarity and brevity by providing a set of standard aliases that are based on shorthand names for common verbs and nouns.</source>
          <target state="translated">Windows PowerShell では、一般的な動詞および名詞を表す省略名に基づいた標準エイリアスのセットを定義することで、明確さと簡潔さの妥協を図っています。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This allows a core set of aliases for common cmdlets that are readable when you know the shorthand names.</source>
          <target state="translated">これにより、一般的なコマンドレットについて、省略名でその意味を読み取ることができるエイリアスのコア セットが可能になっています。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example, in standard aliases the verb <bpt id="p1">**</bpt>Get<ept id="p1">**</ept> is abbreviated to <bpt id="p2">**</bpt>g<ept id="p2">**</ept>, the verb <bpt id="p3">**</bpt>Set<ept id="p3">**</ept> is abbreviated to <bpt id="p4">**</bpt>s<ept id="p4">**</ept>, the noun <bpt id="p5">**</bpt>Item<ept id="p5">**</ept> is abbreviated to <bpt id="p6">**</bpt>i<ept id="p6">**</ept>, the noun <bpt id="p7">**</bpt>Location<ept id="p7">**</ept> is abbreviated to <bpt id="p8">**</bpt>l<ept id="p8">**</ept>, and the noun Command is abbreviated to <bpt id="p9">**</bpt>cm<ept id="p9">**</ept>.</source>
          <target state="translated">たとえば、標準エイリアスでは、動詞 <bpt id="p1">**</bpt>Get<ept id="p1">**</ept> は <bpt id="p2">**</bpt>g<ept id="p2">**</ept> に、動詞 <bpt id="p3">**</bpt>Set<ept id="p3">**</ept> は <bpt id="p4">**</bpt>s<ept id="p4">**</ept> に、名詞 <bpt id="p5">**</bpt>Item<ept id="p5">**</ept> は <bpt id="p6">**</bpt>i<ept id="p6">**</ept> に、名詞 <bpt id="p7">**</bpt>Location<ept id="p7">**</ept> は <bpt id="p8">**</bpt>l<ept id="p8">**</ept> に、名詞 Command は <bpt id="p9">**</bpt>cm<ept id="p9">**</ept> にそれぞれ省略されます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Here is a brief example to illustrate how this works.</source>
          <target state="translated">どういうことになるか簡単な例で説明します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The standard alias for Get-Item comes from combining <bpt id="p1">**</bpt>g<ept id="p1">**</ept> for Get and <bpt id="p2">**</bpt>i<ept id="p2">**</ept> for Item: <bpt id="p3">**</bpt>gi<ept id="p3">**</ept>.</source>
          <target state="translated">Get-Item の標準エイリアスは、Get の <bpt id="p1">**</bpt>g<ept id="p1">**</ept> と Item の <bpt id="p2">**</bpt>i<ept id="p2">**</ept> の組み合わせから、<bpt id="p3">**</bpt>gi<ept id="p3">**</ept> になっています。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The standard alias for Set-Item comes from combining <bpt id="p1">**</bpt>s<ept id="p1">**</ept> for Set and <bpt id="p2">**</bpt>i<ept id="p2">**</ept> for Item: <bpt id="p3">**</bpt>si<ept id="p3">**</ept>.</source>
          <target state="translated">Set-Item の標準エイリアスは、Set の <bpt id="p1">**</bpt>s<ept id="p1">**</ept> と Item の <bpt id="p2">**</bpt>i<ept id="p2">**</ept> の組み合わせから、<bpt id="p3">**</bpt>si<ept id="p3">**</ept> になっています。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The standard alias for Get-Location comes from combining <bpt id="p1">**</bpt>g<ept id="p1">**</ept> for Get and <bpt id="p2">**</bpt>l<ept id="p2">**</ept> for Location, <bpt id="p3">**</bpt>gl<ept id="p3">**</ept>.</source>
          <target state="translated">Get-Location の標準エイリアスは、Get の <bpt id="p1">**</bpt>g<ept id="p1">**</ept> と Location の <bpt id="p2">**</bpt>l<ept id="p2">**</ept> の組み合わせから、<bpt id="p3">**</bpt>gl<ept id="p3">**</ept> になっています。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The standard alias for Set-Location comes from combining <bpt id="p1">**</bpt>s<ept id="p1">**</ept> for Set and <bpt id="p2">**</bpt>l<ept id="p2">**</ept> for Location, <bpt id="p3">**</bpt>sl<ept id="p3">**</ept>.</source>
          <target state="translated">Set-Location の標準エイリアスは、Set の <bpt id="p1">**</bpt>s<ept id="p1">**</ept> と Location の <bpt id="p2">**</bpt>l<ept id="p2">**</ept> の組み合わせから、<bpt id="p3">**</bpt>sl<ept id="p3">**</ept> になっています。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The standard alias for Get-Command comes from combining <bpt id="p1">**</bpt>g<ept id="p1">**</ept> for Get and <bpt id="p2">**</bpt>cm<ept id="p2">**</ept> for Command, <bpt id="p3">**</bpt>gcm<ept id="p3">**</ept>.</source>
          <target state="translated">Get-Command の標準エイリアスは、Get の <bpt id="p1">**</bpt>g<ept id="p1">**</ept> と Command の <bpt id="p2">**</bpt>cm<ept id="p2">**</ept> の組み合わせから、<bpt id="p3">**</bpt>gcm<ept id="p3">**</ept> になっています。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>There is no Set-Command cmdlet, but if there were, we would be able to guess that the standard alias comes from <bpt id="p1">**</bpt>s<ept id="p1">**</ept> for Set and <bpt id="p2">**</bpt>cm<ept id="p2">**</ept> for Command: <bpt id="p3">**</bpt>scm<ept id="p3">**</ept>.</source>
          <target state="translated">Set-Command コマンドレットはありませんが、あるとすれば、その標準エイリアスは、Set の <bpt id="p1">**</bpt>s<ept id="p1">**</ept> と Command の <bpt id="p2">**</bpt>cm<ept id="p2">**</ept> から <bpt id="p3">**</bpt>scm<ept id="p3">**</ept> になると推測できます。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Furthermore, people familiar with Windows PowerShell aliasing who encounter <bpt id="p1">**</bpt>scm<ept id="p1">**</ept> would be able to guess that the alias refers to Set-Command.</source>
          <target state="translated">さらに、Windows PowerShell エイリアスを使い慣れたユーザーであれば、<bpt id="p1">**</bpt>scm<ept id="p1">**</ept> を目にしたら、そのエイリアスは Set-Command を表していると推測できるでしょう。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Creating New Aliases</source>
          <target state="translated">新しいエイリアスの作成</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You can create your own aliases using the Set-Alias cmdlet.</source>
          <target state="translated">Set-Alias コマンドレットを使用して、独自のエイリアスを作成できます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For example, the following statements create the standard cmdlet aliases discussed in Interpreting Standard Aliases:</source>
          <target state="translated">たとえば、次のステートメントは、「標準エイリアスの解釈」で説明した標準コマンドレット エイリアスを作成します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Internally, Windows PowerShell uses commands like these during startup, but these aliases are not changeable.</source>
          <target state="translated">Windows PowerShell はこうしたコマンドを起動時に内部で使用しますが、これらのエイリアスは変更できません。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If you attempt to actually execute one of these commands, you will get an error explaining that the alias cannot be modified.</source>
          <target state="translated">これらのコマンドのいずれかを実際に実行しようとすると、エイリアスは変更できないことを示すエラーが表示されます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">たとえば、次のように入力します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>