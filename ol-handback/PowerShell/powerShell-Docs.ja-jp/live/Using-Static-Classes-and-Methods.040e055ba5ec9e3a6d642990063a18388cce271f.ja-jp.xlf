<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28bc665c3ffb1b74a2ff922584c31a8657842a0f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\cookbooks\Using-Static-Classes-and-Methods.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a8fe44b832ea242e165c4c4bcfd6c0206667460</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f4f32246dec25e5855b96aca75396eaa56c7e854</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Using Static Classes and Methods</source>
          <target state="translated">静的なクラスとメソッドの使用</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">PowerShell, コマンドレット</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Using Static Classes and Methods</source>
          <target state="translated">静的なクラスとメソッドの使用</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Not all .NET Framework classes can be created by using <bpt id="p1">**</bpt>New-Object<ept id="p1">**</ept>.</source>
          <target state="translated">.NET Framework のクラスの中には、<bpt id="p1">**</bpt>New-Object<ept id="p1">**</ept> では作成できないものもあります。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For example, if you try to create a <bpt id="p1">**</bpt>System.Environment<ept id="p1">**</ept> or a <bpt id="p2">**</bpt>System.Math<ept id="p2">**</ept> object with <bpt id="p3">**</bpt>New-Object<ept id="p3">**</ept>, you will get the following error messages:</source>
          <target state="translated">たとえば、<bpt id="p3">**</bpt>New-Object<ept id="p3">**</ept> で <bpt id="p1">**</bpt>System.Environment<ept id="p1">**</ept> オブジェクトや <bpt id="p2">**</bpt>System.Math<ept id="p2">**</ept> オブジェクトを作成しようとすると、次のようなエラー メッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>These errors occur because there is no way to create a new object from these classes.</source>
          <target state="translated">エラーが発生する理由は、これらのクラスからは、新しいオブジェクトを作成することができないためです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>These classes are reference libraries of methods and properties that do not change state.</source>
          <target state="translated">これらのクラスは、メソッドおよびプロパティが収められている参照用のライブラリであり、状態の変化を伴いません。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You don't need to create them, you simply use them.</source>
          <target state="translated">これらのメソッドやプロパティは、オブジェクトを作成しなくても使用できます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Classes and methods such as these are called <bpt id="p1">*</bpt>static classes<ept id="p1">*</ept> because they are not created, destroyed, or changed.</source>
          <target state="translated">これらのクラスやメソッドは、作成、破棄、変更されないため、<bpt id="p1">*</bpt>静的クラス<ept id="p1">*</ept>と呼ばれます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To make this clear we will provide examples that use static classes.</source>
          <target state="translated">この点をわかりやすく説明するために、実際に静的クラスを使用する例を紹介します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Getting Environment Data with System.Environment</source>
          <target state="translated">System.Environment による環境データの取得</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Usually, the first step in working with an object in Windows PowerShell is to use Get-Member to find out what members it contains.</source>
          <target state="translated">通常、Windows PowerShell でオブジェクトを操作するために最初に行うことは、Get-Member を使用して、そのオブジェクトに含まれているメンバーを調べることです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>With static classes, the process is a little different because the actual class is not an object.</source>
          <target state="translated">静的クラスの場合、実際のクラスがオブジェクトではないため、このプロセスが若干異なります。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Referring to the Static System.Environment Class</source>
          <target state="translated">静的クラス System.Environment の参照</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can refer to a static class by surrounding the class name with square brackets.</source>
          <target state="translated">静的クラスを参照するには、そのクラス名を角かっこで囲みます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, you can refer to <bpt id="p1">**</bpt>System.Environment<ept id="p1">**</ept> by typing the name within brackets.</source>
          <target state="translated">たとえば、<bpt id="p1">**</bpt>System.Environment<ept id="p1">**</ept> を参照するには、角かっこの内側に名前を入力します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Doing so displays some generic type information:</source>
          <target state="translated">これにより、型に関する一般的な情報が表示されます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>As we mentioned previously, Windows PowerShell automatically prepends '<bpt id="p1">**</bpt>System.<ept id="p1">**</ept>'</source>
          <target state="translated">既に説明したように、<bpt id="p1">**</bpt>New-Object<ept id="p1">**</ept> を使用するとき、</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>to type names when you use <bpt id="p1">**</bpt>New-Object<ept id="p1">**</ept>.</source>
          <target state="translated">型名の前には ’<bpt id="p1">**</bpt>System.<ept id="p1">**</ept>’ が自動的に追加されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The same thing happens when using a bracketed type name, so you can specify <bpt id="p1">**</bpt><ph id="ph1">\[</ph>System.Environment]<ept id="p1">**</ept> as <bpt id="p2">**</bpt><ph id="ph2">\[</ph>Environment]<ept id="p2">**</ept>.</source>
          <target state="translated">角かっこで囲まれた型名を使用する場合も同様です。つまり、<bpt id="p1">**</bpt><ph id="ph1">\[</ph>System.Environment]<ept id="p1">**</ept> は、<bpt id="p2">**</bpt><ph id="ph2">\[</ph>Environment]<ept id="p2">**</ept> と指定することもできます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>System.Environment<ept id="p1">**</ept> class contains general information about the working environment for the current process, which is powershell.exe when working within Windows PowerShell.</source>
          <target state="translated"><bpt id="p1">**</bpt>System.Environment<ept id="p1">**</ept> クラスには、現在のプロセス (Windows PowerShell 内で作業している場合は powershell.exe) の作業環境に関する一般情報が格納されます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you try to view details of this class by typing <bpt id="p1">**</bpt><ph id="ph1">\[</ph>System.Environment] | Get-Member<ept id="p1">**</ept>, the object type is reported as being <bpt id="p2">**</bpt>System.RuntimeType<ept id="p2">**</ept> , not <bpt id="p3">**</bpt>System.Environment<ept id="p3">**</ept>:</source>
          <target state="translated">「<bpt id="p1">**</bpt><ph id="ph1">\[</ph>System.Environment] | Get-Member<ept id="p1">**</ept>」と入力してこのクラスの詳細を表示しようとすると、オブジェクトの種類は、<bpt id="p3">**</bpt>System.Environment<ept id="p3">**</ept> ではなく、<bpt id="p2">**</bpt>System.RuntimeType<ept id="p2">**</ept> であると報告されます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To view static members with Get-Member, specify the <bpt id="p1">**</bpt>Static<ept id="p1">**</ept> parameter:</source>
          <target state="translated">Get-Member で静的メンバーを表示するには、<bpt id="p1">**</bpt>Static<ept id="p1">**</ept> パラメーターを指定します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>We can now select properties to view from System.Environment.</source>
          <target state="translated">これで、System.Environment から、必要なプロパティを選んで表示できます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Displaying Static Properties of System.Environment</source>
          <target state="translated">System.Environment の静的プロパティの表示</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The properties of System.Environment are also static, and must be specified in a different way than normal properties.</source>
          <target state="translated">System.Environment の場合はプロパティも静的です。通常のプロパティとは異なる方法で指定する必要があります。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>We use <bpt id="p1">**</bpt>::<ept id="p1">**</ept> to indicate to Windows PowerShell that we want to work with a static method or property.</source>
          <target state="translated">操作の対象が静的メソッドまたは静的プロパティであることを Windows PowerShell に伝えるには <bpt id="p1">**</bpt>::<ept id="p1">**</ept> を使用します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To see the command that was used to launch Windows PowerShell, we check the <bpt id="p1">**</bpt>CommandLine<ept id="p1">**</ept> property by typing:</source>
          <target state="translated">Windows PowerShell の起動に使ったコマンドを表示するには、次のように入力して、<bpt id="p1">**</bpt>CommandLine<ept id="p1">**</ept> プロパティを確認します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To check the operating system version, display the OSVersion property by typing:</source>
          <target state="translated">オペレーティング システムのバージョンを確認するには、次のように入力して、OSVersion プロパティを表示します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>We can check whether the computer is in the process of shutting down by displaying the <bpt id="p1">**</bpt>HasShutdownStarted<ept id="p1">**</ept> property:</source>
          <target state="translated">コンピューターがシャットダウンの処理中であるかどうかを確認するには、<bpt id="p1">**</bpt>HasShutdownStarted<ept id="p1">**</ept> プロパティを表示します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Doing Math with System.Math</source>
          <target state="translated">System.Math による数学的演算の実行</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The System.Math static class is useful for performing some mathematical operations.</source>
          <target state="translated">System.Math 静的クラスは、数学的演算を行うのに役立ちます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The important members of <bpt id="p1">**</bpt>System.Math<ept id="p1">**</ept> are mostly methods, which we can display by using <bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>System.Math<ept id="p1">**</ept> の重要なメンバーのほとんどはメソッドであり、<bpt id="p2">**</bpt>Get-Member<ept id="p2">**</ept> を使って表示できます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>System.Math has several methods with the same name, but they are distinguished by the type of their parameters.</source>
          <target state="translated">System.Math には同じ名前の複数のメソッドが存在しますが、これらはパラメーターの型が異なります。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Type the following command to list the methods of the <bpt id="p1">**</bpt>System.Math<ept id="p1">**</ept> class.</source>
          <target state="translated"><bpt id="p1">**</bpt>System.Math<ept id="p1">**</ept> クラスのメソッドを一覧表示するには、次のコマンドを入力します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This displays several mathematical methods.</source>
          <target state="translated">これにより、いくつかの数学的メソッドが表示されます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Here is a list of commands that demonstrate how some of the common methods work:</source>
          <target state="translated">以下は、いくつかの一般的なメソッドを実行した結果を示すコマンドの一覧です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>