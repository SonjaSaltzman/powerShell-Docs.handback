<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-c5d768e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">966cab74cb2519893d4744e8bd0ca12f93f73136</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\whats-new\What-s-New-in-Windows-PowerShell-50.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2bd34c28bc8dd2b63c79110739db54b44d3a4972</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ed8feee58febc2fb72dc42f47afd56803e51d36d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>What s New in Windows PowerShell 50</source>
          <target state="translated">Windows PowerShell 50 の新機能</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">PowerShell, コマンドレット</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>What&amp;#39;s New in Windows PowerShell</source>
          <target state="translated">Windows PowerShell の新機能</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Windows PowerShell ® 5.0 includes significant new features that extend its use, improve its usability, and allow you to control and manage Windows-based environments more easily and comprehensively.</source>
          <target state="translated">Windows PowerShell® 5.0 には、その用途を拡大し、使いやすさを向上させる重要な機能や、Windows ベースの環境をより簡単かつ包括的に制御および管理できるようにする重要な新しい機能が含まれています。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 5.0 is backward-compatible.</source>
          <target state="translated">Windows PowerShell 5.0 には下位互換性があります。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Cmdlets, providers, modules, snap-ins, scripts, functions, and profiles that were designed for Windows PowerShell 4.0, Windows PowerShell 3.0, and Windows PowerShell 2.0 generally work in Windows PowerShell 5.0 without changes.</source>
          <target state="translated">Windows PowerShell 4.0、Windows PowerShell 3.0、Windows PowerShell 2.0 用に設計されたコマンドレット、プロバイダー、モジュール、スナップイン、スクリプト、関数、およびプロファイルは、全般的に変更なしで Windows PowerShell 5.0 でも動作します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Installing Windows PowerShell</source>
          <target state="translated">Windows PowerShell のインストール</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 5.0 is installed by default on Windows Server ® 2016 Technical Preview and Windows 10 ®.</source>
          <target state="translated">Windows PowerShell 5.0 は、Windows Server® 2016 Technical Preview および Windows 10® に既定でインストールされています。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To install Windows PowerShell 5.0 on Windows Server 2012 R2, Windows 8.1 Enterprise, or Windows 8.1 Pro, download and install <bpt id="p1">[</bpt>Windows Management Framework 5.0<ept id="p1">](http://aka.ms/wmf5download)</ept>.</source>
          <target state="translated">Windows PowerShell 5.0 を Windows Server 2012 R2、Windows 8.1 Enterprise または Windows 8.1 Pro にインストールするには、<bpt id="p1">[</bpt>Windows Management Framework 5.0<ept id="p1">](http://aka.ms/wmf5download)</ept> をダウンロードしてインストールします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Be sure to read the download details, and meet all system requirements, before you install Windows Management Framework 5.0.</source>
          <target state="translated">Windows Management Framework 5.0 をインストールする前に、ダウンロードの詳細を読み、システム要件がすべて満たされていることを確認してください。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In this topic</source>
          <target state="translated">このトピックの内容</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 4.0 DSC updates in KB 3000850</source>
          <target state="translated">KB 3000850 の Windows PowerShell 4.0 DSC の更新プログラム</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell 5.0</source>
          <target state="translated">Windows PowerShell 5.0 の新機能</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell 4.0</source>
          <target state="translated">Windows PowerShell 4.0 の新機能</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell 3.0</source>
          <target state="translated">Windows PowerShell 3.0 の新機能</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 4.0 updates in November 2014 update rollup (KB 3000850)</source>
          <target state="translated">2014 年 11 月の更新プログラムのロールアップ (KB 3000850) での Windows PowerShell 4.0 の更新</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Many updates and improvements to Windows PowerShell Desired State Configuration (DSC) in Windows PowerShell 4.0 are available in the <bpt id="p1">[</bpt>November 2014 update rollup for Windows RT 8.1, Windows 8.1, and Windows Server 2012 R2<ept id="p1">](https://support.microsoft.com/kb/3000850/)</ept> (KB 3000850).</source>
          <target state="translated">Windows PowerShell 4.0 での Windows PowerShell Desired State Configuration (DSC) に対する多くの更新と機能強化が、<bpt id="p1">[</bpt>Windows RT 8.1、Windows 8.1、Windows Server 2012 R2 の 2014 年 11 月の更新プログラムのロールアップ<ept id="p1">](https://support.microsoft.com/kb/3000850/)</ept> (KB 3000850) で利用可能になりました。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can determine if KB 3000850 is installed on your system by running <ph id="ph1">`Get-Hotfix -Id KB3000850`</ph> in Windows PowerShell.</source>
          <target state="translated">Windows PowerShell で <ph id="ph1">`Get-Hotfix -Id KB3000850`</ph> を実行することで、KB 3000850 がシステムにインストールされているかどうかを判断できます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Updates to existing cmdlets in the <bpt id="p1">[</bpt>PSDesiredStateConfiguration<ept id="p1">](https://technet.microsoft.com/library/dn391651(v=wps.640).aspx)</ept> module</source>
          <target state="translated"><bpt id="p1">[</bpt>PSDesiredStateConfiguration<ept id="p1">](https://technet.microsoft.com/library/dn391651(v=wps.640).aspx)</ept> モジュールの既存のコマンドレットの更新</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Get-DscResource<ept id="p1">](http://technet.microsoft.com/library/dn521625.aspx)</ept> is faster (especially in ISE).</source>
          <target state="translated"><bpt id="p1">[</bpt>Get-DscResource<ept id="p1">](http://technet.microsoft.com/library/dn521625.aspx)</ept> が高速になりました (特に ISE で)。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Start-DscConfiguration<ept id="p1">](http://technet.microsoft.com/library/dn521623.aspx)</ept> has a new parameter, -UseExisting, which reapplies the last applied configuration.</source>
          <target state="translated"><bpt id="p1">[</bpt>Start-DscConfiguration<ept id="p1">](http://technet.microsoft.com/library/dn521623.aspx)</ept> に新しいパラメーター、-UseExisting が追加されました。これは最後に適用した構成を再適用します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Start-DscConfiguration<ept id="p1">](http://technet.microsoft.com/library/dn521623.aspx)</ept> -Force has been fixed.</source>
          <target state="translated"><bpt id="p1">[</bpt>Start-DscConfiguration<ept id="p1">](http://technet.microsoft.com/library/dn521623.aspx)</ept> -Force が修正されました。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Get-DscLocalConfigurationManager<ept id="p1">](http://technet.microsoft.com/library/dn407378.aspx)</ept> displays more useful information about the engine state.</source>
          <target state="translated"><bpt id="p1">[</bpt>Get-DscLocalConfigurationManager<ept id="p1">](http://technet.microsoft.com/library/dn407378.aspx)</ept> がエンジン状態に関するより有用な情報を表示します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Test-DscConfiguration<ept id="p1">](http://technet.microsoft.com/library/dn407382.aspx)</ept> now returns the computer name along with True or False.</source>
          <target state="translated"><bpt id="p1">[</bpt>Test-DscConfiguration<ept id="p1">](http://technet.microsoft.com/library/dn407382.aspx)</ept> が True または False と共にコンピューター名を返すようになりました。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>New-DscChecksum<ept id="p1">](http://technet.microsoft.com/library/dn521622.aspx)</ept> now supports UNC paths.</source>
          <target state="translated"><bpt id="p1">[</bpt>New-DscChecksum<ept id="p1">](http://technet.microsoft.com/library/dn521622.aspx)</ept> が UNC パスをサポートするようになりました。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>New cmdlets in the <bpt id="p1">[</bpt>PSDesiredStateConfiguration<ept id="p1">](http://technet.microsoft.com/library/dn391651(v=wps.640).aspx)</ept> module</source>
          <target state="translated"><bpt id="p1">[</bpt>PSDesiredStateConfiguration<ept id="p1">](http://technet.microsoft.com/library/dn391651(v=wps.640).aspx)</ept> モジュールの新しいコマンドレット</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Update-DscConfiguration<ept id="p1">](http://technet.microsoft.com/library/mt143541(v=wps.630).aspx)</ept>:  Performs an on-demand pull server check.</source>
          <target state="translated"><bpt id="p1">[</bpt>Update-DscConfiguration<ept id="p1">](http://technet.microsoft.com/library/mt143541(v=wps.630).aspx)</ept>: オンデマンド プル サーバー チェックを実行します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Stop-DscConfiguration<ept id="p1">](http://technet.microsoft.com/library/mt143542(v=wps.630).aspx)</ept>:  Stops a configuration that is already running.</source>
          <target state="translated"><bpt id="p1">[</bpt>Stop-DscConfiguration<ept id="p1">](http://technet.microsoft.com/library/mt143542(v=wps.630).aspx)</ept>: 既に実行されている構成を停止します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Remove-DscConfigurationDocument<ept id="p1">](http://technet.microsoft.com/library/mt143544(v=wps.630).aspx)</ept>:  Lets you remove configuration documents in various stages (pending, previous, or current).</source>
          <target state="translated"><bpt id="p1">[</bpt>Remove-DscConfigurationDocument<ept id="p1">](http://technet.microsoft.com/library/mt143544(v=wps.630).aspx)</ept>: さまざまな段階 (保留中、以前、または現在) の構成に関するドキュメントを削除できます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Language enhancements</source>
          <target state="translated">言語の機能強化</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>DependsOn now supports composite resources.</source>
          <target state="translated">DependsOn が複合リソースをサポートするようになりました。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>DependsOn now supports numbers in resource instance names.</source>
          <target state="translated">DependsOn がリソース インスタンス名の番号をサポートするようになりました。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Node expressions that evaluate to empty no longer throw errors.</source>
          <target state="translated">ノード式の評価が空の場合に、エラーをスローしなくなりました。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An error that occurs if a node expression evaluates to empty has been fixed.</source>
          <target state="translated">ノード式の評価が空の場合に発生するエラーが修正されました。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Configurations calling configurations now work in the Windows PowerShell console.</source>
          <target state="translated">構成を呼び出す構成が Windows PowerShell コンソールで機能するようになりました。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Pull mode enhancements</source>
          <target state="translated">プル モードの機能強化</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Pull mode now supports all ZIP files.</source>
          <target state="translated">プル モードがすべての ZIP ファイルをサポートするようになりました。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AllowModuleOverwrite<ept id="p1">**</ept> now works correctly.</source>
          <target state="translated"><bpt id="p1">**</bpt>AllowModuleOverwrite<ept id="p1">**</ept> が正しく動作するようになりました。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Resiliency improvements</source>
          <target state="translated">回復性の向上</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>New <bpt id="p1">**</bpt>DebugMode<ept id="p1">**</ept> lets you reload resource modules.</source>
          <target state="translated">新しい <bpt id="p1">**</bpt>DebugMode<ept id="p1">**</ept> でリソース モジュールを再読み込みすることができます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If a configuration failure occurs, the pending.mof file is not deleted.</source>
          <target state="translated">構成エラーが発生した場合は、pending.mof ファイルは削除されません。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The Local Configuration Manager (LCM) is now more resilient when metaconfiguration settings have become corrupted.</source>
          <target state="translated">メタ構成の設定が破損した場合のローカル構成マネージャー (LCM) の回復性が向上しました。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Diagnostic improvements</source>
          <target state="translated">診断の向上</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A warning is displayed when the LCM sets the timer to different settings than you have specified.</source>
          <target state="translated">LCM がタイマーを、ユーザーが指定した以外の別の設定に設定すると、警告が表示されます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Error log files now contain the call stack for Windows PowerShell resources.</source>
          <target state="translated">エラー ログ ファイルに Windows PowerShell リソースの呼び出し履歴が含まれるようになりました。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Flexibility improvements</source>
          <target state="translated">スケーラビリティの向上</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The LocalConfigurationManager resource has a new property, <bpt id="p1">**</bpt>ActionAfterReboot<ept id="p1">**</ept>.</source>
          <target state="translated">LocalConfigurationManager リソースに新しいプロパティ、<bpt id="p1">**</bpt>ActionAfterReboot<ept id="p1">**</ept> が追加されました。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>ContinueConfiguration (default value): Automatically resumes a configuration after a target node restarts.</source>
          <target state="translated">ContinueConfiguration (既定値): ターゲット ノードの再起動後に、構成を自動的に再開します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>StopConfiguration: Do not automatically resume a configuration after a node restarts.</source>
          <target state="translated">StopConfiguration: ノードの再起動後、構成を自動的に再開しません。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A consistency run can now occur more often than a PULL operation, or vice-versa.</source>
          <target state="translated">整合性の実行をプル操作よりも頻繁に行えるようになりました。また、その逆も可能です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Versioning support:  DSC can now recognize a document that was generated on a newer client (included with <bpt id="p1">[</bpt>WMF 5.0<ept id="p1">](http://aka.ms/wmf5download)</ept>).</source>
          <target state="translated">バージョン管理のサポート: DSC が新しいクライアント (<bpt id="p1">[</bpt>WMF 5.0<ept id="p1">](http://aka.ms/wmf5download)</ept> に含まれる) で生成されたドキュメントを認識できるようになりました。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Error prevention improvements</source>
          <target state="translated">エラー防止の向上</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Module version is now enforced before a configuration is applied.</source>
          <target state="translated">構成が適用される前に、モジュールのバージョンが適用されるようになりました。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DebugPreference<ept id="p1">**</ept> is now set correctly for Get-, Set-, or Test-TargetResource calls.</source>
          <target state="translated"><bpt id="p1">**</bpt>DebugPreference<ept id="p1">**</ept> が、Get-、Set-、または Test-TargetResource の各呼び出しに対して適切に設定されるようになりました。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Credential handling improvements</source>
          <target state="translated">資格情報の処理の向上</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A certificate is now used, if both <bpt id="p1">**</bpt>Certificate<ept id="p1">**</ept> and <bpt id="p2">**</bpt>PSDscAllowPlainTextPassword<ept id="p2">**</ept> are specified.</source>
          <target state="translated"><bpt id="p1">**</bpt>Certificate<ept id="p1">**</ept> と <bpt id="p2">**</bpt>PSDscAllowPlainTextPassword<ept id="p2">**</ept> の両方が指定される場合、証明書が使用されるようになりました。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Credentials are decrypted, even for Get-TargetResource.</source>
          <target state="translated">資格情報は、暗号化が解除されます。Get-TargetResource でも暗号化解除されます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Metaconfiguration credentials are encrypted and decrypted.</source>
          <target state="translated">メタ構成の資格情報は暗号化および暗号化解除されます。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>PSCredentials are now decrypted when they are in an embedded object.</source>
          <target state="translated">PSCredentials は、埋め込みオブジェクトにある場合に暗号化が解除されるようになりました。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Built-in resource improvements</source>
          <target state="translated">組み込みリソースの向上</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The Package resource</source>
          <target state="translated">パッケージ リソース</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>No longer installs the wrong package (either from local or web sources).</source>
          <target state="translated">正しくないパッケージはインストールされなくなりました (ローカルまたは Web ソースのどちらからも)。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Now supports HTTPS.</source>
          <target state="translated">HTTPS をサポートするようになりました。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>There is now support for HTTPS in the <bpt id="p1">[</bpt>Package resource<ept id="p1">](http://technet.microsoft.com/library/dn282132.aspx)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>パッケージ リソース<ept id="p1">](http://technet.microsoft.com/library/dn282132.aspx)</ept>で HTTPS がサポートされるようになりました。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Archive resource<ept id="p1">](http://technet.microsoft.com/library/dn249917.aspx)</ept> now supports credentials.</source>
          <target state="translated"><bpt id="p1">[</bpt>アーカイブ リソース<ept id="p1">](http://technet.microsoft.com/library/dn249917.aspx)</ept>が資格情報をサポートするようになりました。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell 5.0</source>
          <target state="translated">Windows PowerShell 5.0 の新機能</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell</source>
          <target state="translated">Windows PowerShell の新機能</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell Desired State Configuration</source>
          <target state="translated">Windows PowerShell Desired State Configuration の新機能</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell ISE</source>
          <target state="translated">Windows PowerShell ISE の新機能</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell Web Services</source>
          <target state="translated">Windows PowerShell Web サービスの新機能</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Notable bug fixes in Windows PowerShell 5.0</source>
          <target state="translated">Windows PowerShell 5.0 での主なバグ修正</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell</source>
          <target state="translated">Windows PowerShell の新機能</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 5.0, you can develop by using classes, by using formal syntax and semantics that are similar to other object-oriented programming languages.</source>
          <target state="translated">Windows PowerShell 5.0 以降では、クラスを使用して、他のオブジェクト指向のプログラミング言語に類似した正式な構文とセマンティクスを使用して開発することができます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Class<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Enum<ept id="p2">**</ept>, and other keywords have been added to the Windows PowerShell language to support the new feature.</source>
          <target state="translated"><bpt id="p1">**</bpt>Class<ept id="p1">**</ept>、<bpt id="p2">**</bpt>Enum<ept id="p2">**</ept> などのキーワードが、新しい機能をサポートするために Windows PowerShell 言語に追加されました。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For more information about working with classes, see about_Classes.</source>
          <target state="translated">クラスに関する作業の詳細については、「about_Classes」を参照してください。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 5.0 introduces a new, structured information stream that you can use to transmit structured data between a script and its callers (or hosting environment).</source>
          <target state="translated">Windows PowerShell 5.0 では、スクリプトとその呼び出し元 (またはホスト環境) の間で構造化データを転送するために使用できる新しい構造化された情報ストリームが導入されています。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You can now use Write-Host to emit output to the information stream.</source>
          <target state="translated">Write-Host を使用して、情報ストリームに出力を生成できるようになりました。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Information streams also work for PowerShell.Streams, jobs, scheduled jobs, and workflows.</source>
          <target state="translated">また、情報ストリームは PowerShell.Streams、ジョブ、スケジュールされたジョブ、およびワークフローでも機能します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The following features support the information stream.</source>
          <target state="translated">次の機能は情報ストリームをサポートしています。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A new Write-Information cmdlet that lets you specify how Windows PowerShell handles information stream data for a command.</source>
          <target state="translated">Windows PowerShell がコマンドの情報ストリーム データを処理する方法を指定できる新しい Write-Information コマンドレット。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Write-Host is a wrapper for Write-Information.</source>
          <target state="translated">Write-Host は、Write-Information のラッパーです。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Write-Information is also a supported workflow activity.</source>
          <target state="translated">Write-Information はサポートされているワークフロー アクティビティでもあります。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Two new common parameters, InformationVariable and InformationAction, let you determine how information streams from a command are displayed.</source>
          <target state="translated">2 つの新しい共通パラメーター、InformationVariable と InformationAction を使用して、コマンドからの情報ストリームを表示する方法を決定できます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Valid values for InformationAction are SilentlyContinue, Stop, Continue, Inquire, Ignore, or Suspend, with SilentlyContinue being the default.</source>
          <target state="translated">InformationAction の有効な値は、SilentlyContinue、Stop、Continue、Inquire、Ignore、または Suspend です。既定値は SilentlyContinue です。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>InformationVariable specifies a string as the name of a variable to which you want the Write-Host data from a command saved.</source>
          <target state="translated">InformationVariable は、保存されたコマンドからの必要な Write-Host データに対する変数の名前として文字列を指定します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A new preference variable, InformationPreference, specifies your default preference for information stream data in a Windows PowerShell session.</source>
          <target state="translated">新しいユーザー設定変数、InformationPreference は、Windows PowerShell セッション内の情報ストリーム データの既定の基本設定を指定します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The default value is SilentlyContinue.</source>
          <target state="translated">既定値は SilentlyContinue です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Two new workflow common parameters, PSInformation and InformationAction, have been added.</source>
          <target state="translated">2 つの新しいワークフロー共通パラメーター、PSInformation と InformationAction が追加されました。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>When you use the Format-Table command, table columns are now automatically formatted by evaluating the first 300ms of data that passes through the stream.</source>
          <target state="translated">Format-Table コマンドを使用すると、ストリームを通過する最初の 300 ミリ秒のデータが評価され、テーブル列が自動的に書式設定されるようになりました。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>In collaboration with <bpt id="p1">[</bpt>Microsoft Research<ept id="p1">](http://research.microsoft.com/)</ept>, a new cmdlet, ConvertFrom-String, has been added.</source>
          <target state="translated"><bpt id="p1">[</bpt>Microsoft Research<ept id="p1">](http://research.microsoft.com/)</ept> とのコラボレーションにより、新しいコマンドレット、ConvertFrom-String が追加されました。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>ConvertFrom-String lets you extract and parse structured objects from the content of text strings.</source>
          <target state="translated">ConvertFrom-String では、テキスト文字列のコンテンツから構造化されたオブジェクトを抽出して、解析することができます。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For more information, see ConvertFrom-String.</source>
          <target state="translated">詳細については、ConvertFrom-String を参照してください。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A new Convert-String cmdlet automatically formats text based on an example that you provide in an -Example parameter.</source>
          <target state="translated">新しい Convert-String コマンドレットは、-Example パラメーターで指定する例を基にテキストを自動的に書式設定します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A new module, Microsoft.PowerShell.Archive, includes cmdlets that let you compress files and folders into archive (also known as ZIP) files, extract files from existing ZIP files, and update ZIP files with newer versions of files compressed within them.</source>
          <target state="translated">新しいモジュール、Microsoft.PowerShell.Archive には、コマンドレットが含まれています。そのコマンドレットでは、ファイルとフォルダーをアーカイブ (ZIP とも呼ばれる) ファイルに圧縮して、既存の ZIP ファイルからファイルを抽出し、ZIP ファイル内で圧縮されたファイルの新しいバージョンで ZIP ファイルを更新できます。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>A new module, PackageManagement, lets you discover and install software packages on the Internet.</source>
          <target state="translated">新しいモジュール、PackageManagement では、インターネット上のソフトウェア パッケージを検出してインストールすることができます。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The PackageManagement (formerly known as OneGet) module is a manager or multiplexer of existing package managers (also called package providers) to unify Windows package management with a single Windows PowerShell interface.</source>
          <target state="translated">PackageManagement (旧 OneGet) モジュールは、Windows のパッケージ管理を単一の Windows PowerShell インターフェイスと統一するための、マネージャー、または既存のパッケージ マネージャー (パッケージ プロバイダーとも呼ばれる) のマルチプレクサーです。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A new module, PowerShellGet, lets you find, install, publish, and update modules and DSC resources on the <bpt id="p1">[</bpt>PowerShell Gallery<ept id="p1">](http://www.powershellgallery.com/)</ept>, or on an internal module repository that you can set up by running the Register-PSRepository cmdlet.</source>
          <target state="translated">新しいモジュール、PowerShellGet では、<bpt id="p1">[</bpt>PowerShell ギャラリー<ept id="p1">](http://www.powershellgallery.com/)</ept>上、または Register-PSRepository コマンドレットを実行することでセットアップできる内部モジュール リポジトリ上で、モジュールと DSC リソースを検索、インストール、発行、および更新することができます。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A new language keyword, <bpt id="p1">**</bpt>Hidden<ept id="p1">**</ept>, has been added to specify that a member (a property or a method) is not shown by default in Get-Member results (unless you add the -Force parameter).</source>
          <target state="translated">新しい言語キーワード、<bpt id="p1">**</bpt>Hidden<ept id="p1">**</ept> が追加され、メンバー (プロパティまたはメソッド) が Get-Member の結果に既定で表示されないように指定できるようになりました (-Force パラメーターを追加する場合を除く)。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Properties or methods that have been marked hidden also do not show up in IntelliSense results, unless you are in a context where the member should be visible; for example, the automatic variable $This should show hidden members when in the class method.</source>
          <target state="translated">非表示としてマークされているプロパティやメソッドは、IntelliSense の結果にも表示されません。ただし、メンバーが表示される必要のあるコンテキスト内で作業している場合を除きます。たとえば、クラス メソッドを使用している場合、自動変数 $This は非表示のメンバーを表示する必要があります。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>New-Item, Remove-Item, and Get-ChildItem have been enhanced to support creating and managing <bpt id="p1">[</bpt>symbolic links<ept id="p1">](http://en.wikipedia.org/wiki/Symbolic_link)</ept>.</source>
          <target state="translated">New-Item、Remove-Item、および Get-ChildItem が<bpt id="p1">[</bpt>シンボリック リンク<ept id="p1">](http://en.wikipedia.org/wiki/Symbolic_link)</ept>の作成と管理をサポートするために強化されました。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>-ItemType<ept id="p1">**</ept> parameter for New-Item accepts a new value, <bpt id="p2">**</bpt>SymbolicLink<ept id="p2">**</ept>.</source>
          <target state="translated">New-Item の <bpt id="p1">**</bpt>-ItemType<ept id="p1">**</ept> パラメーターでは、新しい値、<bpt id="p2">**</bpt>SymbolicLink<ept id="p2">**</ept> を使用できます。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Now you can create symbolic links in a single line by running the New-Item cmdlet.</source>
          <target state="translated">シンボリック リンクは、New-Item コマンドレットを実行することで、1 つの行で作成できるようになりました。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Get-ChildItem also has a new -Depth parameter, which you use with the -Recurse parameter to limit the recursion.</source>
          <target state="translated">また、Get-ChildItem には新しい -Depth パラメーターも追加されました。これを -Recurse パラメーターと共に使用すると再帰を制限します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For example, Get-ChildItem -Recurse -Depth 2 returns results from the current folder, all of the child folders within the current folder, and all of the folders within the child folders.</source>
          <target state="translated">たとえば、Get-ChildItem -Recurse -Depth 2 は、現在のフォルダー、現在のフォルダー内のすべての子フォルダー、および子フォルダー内のすべてのフォルダーから結果を返します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Copy-Item now lets you copy files or folders from one Windows PowerShell session to another, meaning that you can copy files to sessions that are connected to remote computers, (including computers that are running <bpt id="p1">[</bpt>Nano Server<ept id="p1">](http://blogs.technet.com/b/windowsserver/archive/2015/04/08/microsoft-announces-nano-server-for-modern-apps-and-cloud.aspx)</ept>, and thus have no other interface).</source>
          <target state="translated">Copy-Item で、1 つの Windows PowerShell セッションから別のセッションにファイルまたはフォルダーをコピーできるようになりました。つまり、リモート コンピューター (<bpt id="p1">[</bpt>Nano Server<ept id="p1">](http://blogs.technet.com/b/windowsserver/archive/2015/04/08/microsoft-announces-nano-server-for-modern-apps-and-cloud.aspx)</ept> を実行しているため他のインターフェイスを持たないコンピューターを含む) に接続されているセッションにファイルをコピーできるようになりました。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>To copy files, specify PSSession IDs as the value of the new -FromSession and -ToSession parameters, and add -Path and -Destination to specify origin path and destination, respectively.</source>
          <target state="translated">ファイルをコピーするには、新しい -FromSession と -ToSession パラメーターの値として PSSession ID を指定し、-Path と -Destination を追加して元のパスと宛先をそれぞれ指定します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For example, Copy-Item -Path c:<ph id="ph1">\\</ph>myFile.txt -ToSession $s -Destination d:<ph id="ph2">\\</ph>destinationFolder.</source>
          <target state="translated">例: Copy-Item -Path c:<ph id="ph1">\\</ph>myFile.txt -ToSession $s -Destination d:<ph id="ph2">\\</ph>destinationFolder</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Windows PowerShell transcription has been improved to apply to all hosting applications (such as Windows PowerShell ISE) in addition to the console host (<bpt id="p1">**</bpt>powershell.exe<ept id="p1">**</ept>).</source>
          <target state="translated">Windows PowerShell トランスクリプションが強化され、コンソール ホスト (<bpt id="p1">**</bpt>powershell.exe<ept id="p1">**</ept>) に加えて、すべてのホスト アプリケーション (Windows PowerShell ISE など) に適用されるようになりました。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Transcription options (including enabling a system-wide transcript) can be configured by enabling the <bpt id="p1">**</bpt>Turn on PowerShell Transcription<ept id="p1">**</ept> Group Policy setting, found in Administrative Templates/Windows Components/Windows PowerShell.</source>
          <target state="translated">トランスクリプション オプション (システム全体のトランスクリプトの有効化を含む) は、<bpt id="p1">**</bpt>[PowerShell トランスクリプションを有効にする]<ept id="p1">**</ept> グループ ポリシー設定 ([管理用テンプレート]/[Windows コンポーネント]/[Windows PowerShell]) を有効にすることで設定できます。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A new detailed script tracing feature lets you enable detailed tracking and analysis of Windows PowerShell scripting use on a system.</source>
          <target state="translated">新しい詳細スクリプト トレース機能では、システムで使用される Windows PowerShell スクリプトの詳細な追跡や分析を有効にすることができます。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>After you enable detailed script tracing, Windows PowerShell logs all script blocks to the Event Tracing for Windows (ETW) event log, <bpt id="p1">**</bpt>Microsoft-Windows-PowerShell/Operational<ept id="p1">**</ept>.</source>
          <target state="translated">詳細なスクリプト トレースを有効にすると、Windows PowerShell はすべてのスクリプト ブロックを Windows イベント トレーシング (ETW) イベント ログ、<bpt id="p1">**</bpt>Microsoft-Windows-PowerShell/Operational<ept id="p1">**</ept> に記録します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 5.0, new Cryptographic Message Syntax cmdlets support encryption and decryption of content by using the IETF standard format for cryptographically protecting messages as documented by <bpt id="p1">[</bpt>RFC5652<ept id="p1">](http://tools.ietf.org/html/rfc5652)</ept>.</source>
          <target state="translated">Windows PowerShell 5.0 以降では、新しい Cryptographic Message Syntax コマンドレットが、<bpt id="p1">[</bpt>RFC5652<ept id="p1">](http://tools.ietf.org/html/rfc5652)</ept> で説明されているように暗号によってメッセージを保護するための IETF 標準書式を使用して、コンテンツの暗号化と暗号化解除をサポートします。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The Get-CmsMessage, Protect-CmsMessage, and Unprotect-CmsMessage cmdlets have been added to the <bpt id="p1">[</bpt>Microsoft.PowerShell.Security<ept id="p1">](http://technet.microsoft.com/library/hh849807.aspx)</ept> module.</source>
          <target state="translated">Get-CmsMessage、Protect-CmsMessage、および Unprotect-CmsMessage の各コマンドレットが <bpt id="p1">[</bpt>Microsoft.PowerShell.Security<ept id="p1">](http://technet.microsoft.com/library/hh849807.aspx)</ept> モジュールに追加されました。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>New cmdlets in the <bpt id="p1">[</bpt>Microsoft.PowerShell.Utility<ept id="p1">](http://technet.microsoft.com/library/hh849958.aspx)</ept> module, Get-Runspace, Debug-Runspace, Get-RunspaceDebug, Enable-RunspaceDebug, and Disable-RunspaceDebug, let you set debug options on a runspace, and start and stop debugging on a runspace.</source>
          <target state="translated"><bpt id="p1">[</bpt>Microsoft.PowerShell.Utility<ept id="p1">](http://technet.microsoft.com/library/hh849958.aspx)</ept> モジュールの新しいコマンドレット、Get-Runspace、Debug-Runspace、Get-RunspaceDebug、Enable-RunspaceDebug、および Disable-RunspaceDebug を使用すると、実行空間でのデバッグ オプションを設定して、実行空間でのデバッグを開始、停止できます。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For debugging arbitrary runspaces—that is, runspaces that are not the default runspace for a Windows PowerShell console or Windows PowerShell ISE session—Windows PowerShell lets you set breakpoints in a script, and have added breakpoints stop the script from running until you can attach a debugger to debug the runspace script.</source>
          <target state="translated">任意の実行空間をデバッグする場合、つまり、Windows PowerShell コンソールまたは Windows PowerShell ISE セッションの既定の実行空間ではない実行空間をデバッグする場合、Windows PowerShell では、スクリプトにブレークポイントを設定し、追加されたブレークポイントを使用して、実行空間スクリプトをデバッグするデバッガーをアタッチするまでスクリプトが実行されないようにすることができます。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Nested debugging support for arbitrary runspaces has been added to the Windows PowerShell script debugger for runspaces.</source>
          <target state="translated">実行空間用の Windows PowerShell スクリプト デバッガーに、任意の実行空間に対する入れ子になったデバッグのサポートが追加されました。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A new Format-Hex cmdlet has been added to the <bpt id="p1">[</bpt>Microsoft.PowerShell.Utility<ept id="p1">](http://technet.microsoft.com/library/hh849958.aspx)</ept> module.</source>
          <target state="translated">新しい Format-Hex コマンドレットが <bpt id="p1">[</bpt>Microsoft.PowerShell.Utility<ept id="p1">](http://technet.microsoft.com/library/hh849958.aspx)</ept> モジュールに追加されました。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Format-Hex lets you view text or binary data in hexadecimal format.</source>
          <target state="translated">Format-Hex を使うと、テキスト データやバイナリ データを 16 進数形式で表示できます。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Get-Clipboard and Set-Clipboard cmdlets have been added to the <bpt id="p1">[</bpt>Microsoft.PowerShell.Utility<ept id="p1">](http://technet.microsoft.com/library/hh849958.aspx)</ept> module; they ease the transfer of content to and from a Windows PowerShell session.</source>
          <target state="translated">Get-Clipboard コマンドレットと Set-Clipboard コマンドレットが、<bpt id="p1">[</bpt>Microsoft.PowerShell.Utility<ept id="p1">](http://technet.microsoft.com/library/hh849958.aspx)</ept> モジュールに追加されました。これらのコマンドレットにより、Windows PowerShell セッションとの間のコンテンツの転送が容易になります。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The Clipboard cmdlets support images, audio files, file lists, and text.</source>
          <target state="translated">クリップボードのコマンドレットは、画像、オーディオ ファイル、ファイルのリスト、およびテキストをサポートします。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A new cmdlet, Clear-RecycleBin, has been added to the <bpt id="p1">[</bpt>Microsoft.PowerShell.Management<ept id="p1">](http://technet.microsoft.com/library/hh849827(v=wps.640).aspx)</ept> module; this cmdlet empties the Recycle Bin for a fixed drive, which includes external drives.</source>
          <target state="translated">新しいコマンドレット、Clear-RecycleBin が、<bpt id="p1">[</bpt>Microsoft.PowerShell.Management<ept id="p1">](http://technet.microsoft.com/library/hh849827(v=wps.640).aspx)</ept> モジュールに追加されました。このコマンドレットは、外部ドライブを含む固定ドライブのゴミ箱を空にします。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>By default, you are prompted to confirm a Clear-RecycleBin command, because the ConfirmImpact property of the cmdlet is set to ConfirmImpact.High.</source>
          <target state="translated">既定では、コマンドレットの ConfirmImpact プロパティが ConfirmImpact.High に設定されているため、Clear-RecycleBin コマンドを確認するよう求めるメッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A new cmdlet, New-TemporaryFile, lets you create a temporary file as part of scripting.</source>
          <target state="translated">新しいコマンドレット、New-TemporaryFile では、スクリプトの一部として一時ファイルを作成できます。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>By default, the new temporary file is created in <ph id="ph1">```C:\Users\&lt;user name&gt;\AppData\Local\Temp```</ph>.</source>
          <target state="translated">既定では、新しい一時ファイルは <ph id="ph1">```C:\Users\&lt;user name&gt;\AppData\Local\Temp```</ph> に作成されます。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The Out-File, Add-Content, and Set-Content cmdlets now have a new -NoNewline parameter, which omits a new line after the output.</source>
          <target state="translated">Out-File、Add-Content、および Set-Content の各コマンドレットに新しい -NoNewline パラメーターが追加されました。これを指定すると、出力後の改行が省略されます。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The New-Guid cmdlet leverages the .NET Framework Guid class to generate a GUID, useful when you are writing scripts or DSC resources.</source>
          <target state="translated">New-Guid コマンドレットは、.NET Framework Guid クラスを利用して GUID を生成します。これはスクリプトまたは DSC リソースを作成している場合に便利です。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Because file version information can be misleading, particularly after a file is patched, new FileVersionRaw and ProductVersionRaw script properties are available for FileInfo objects.</source>
          <target state="translated">ファイルのバージョン情報は、特にファイルにパッチが適用された場合に、解釈を間違えやすいデータであるため、新しいスクリプト プロパティ、FileVersionRaw と ProductVersionRaw が FileInfo オブジェクトに対して使用できます。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>For example, you can run the following command to display the values of these properties for powershell.exe, where $pid contains the process ID for a running session of Windows PowerShell:</source>
          <target state="translated">たとえば、次のコマンドを実行して、PowerShell.exe のこれらのプロパティ値を表示できます。ここで、$pid には Windows PowerShell の実行中のセッションのプロセス ID が含まれます。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>New cmdlets Enter-PSHostProcess and Exit-PSHostProcess let you debug Windows PowerShell scripts in processes separate from the current process that is running in the Windows PowerShell console.</source>
          <target state="translated">新しいコマンドレット、Enter-PSHostProcess と Exit-PSHostProcess を使用すると、Windows PowerShell コンソールで実行している現在のプロセスとは別のプロセスで Windows PowerShell スクリプトをデバッグできます。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Run Enter-PSHostProcess to enter, or attach to, a specific process ID, and then run Get-Runspace to return the active runspaces within the process.</source>
          <target state="translated">Enter-PSHostProcess を実行して、特定のプロセス ID を入力するか、特定のプロセス ID にアタッチしてから、Get-Runspace を実行して、プロセス内のアクティブな実行空間を返します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Run Exit-PSHostProcess to detach from the process when you are finished debugging the script within the process.</source>
          <target state="translated">プロセス内でスクリプトのデバッグが完了したら、Exit-PSHostProcess を実行して、プロセスからデタッチします。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>A new Wait-Debugger cmdlet has been added to the <bpt id="p1">[</bpt>Microsoft.PowerShell.Utility<ept id="p1">](http://technet.microsoft.com/library/hh849958.aspx)</ept> module.</source>
          <target state="translated">新しい Wait-Debugger コマンドレットが <bpt id="p1">[</bpt>Microsoft.PowerShell.Utility<ept id="p1">](http://technet.microsoft.com/library/hh849958.aspx)</ept> モジュールに追加されました。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>You can run Wait-Debugger to stop a script in the debugger before running the next statement in the script.</source>
          <target state="translated">Wait-Debugger を実行すると、スクリプトの次のステートメントを実行する前に、デバッガー内のスクリプトを停止することができます。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell Workflow debugger now supports command or tab completion, and you can debug nested workflow functions.</source>
          <target state="translated">Windows PowerShell ワークフロー デバッガーで、コマンドまたはタブ補完をサポートするようになったため、入れ子になったワークフロー関数をデバッグすることができます。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>You can now press <bpt id="p1">**</bpt>Ctrl+Break<ept id="p1">**</ept> to enter the debugger in a running script, in both local and remote sessions, and in a workflow script.</source>
          <target state="translated"><bpt id="p1">**</bpt>Ctrl+Break<ept id="p1">**</ept> キーを押すと、実行中のスクリプト、ローカルとリモートの両方のセッション、およびワークフロー スクリプトで、デバッガーに入れるようになりました。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A Debug-Job cmdlet has been added to the <bpt id="p1">[</bpt>Microsoft.PowerShell.Core<ept id="p1">](http://technet.microsoft.com/library/hh849695.aspx)</ept> module to debug running job scripts for Windows PowerShell Workflow, background, and jobs running in remote sessions.</source>
          <target state="translated">Debug-Job コマンドレットが <bpt id="p1">[</bpt>Microsoft.PowerShell.Core<ept id="p1">](http://technet.microsoft.com/library/hh849695.aspx)</ept> モジュールに追加され、Windows PowerShell ワークフローの実行中のジョブ スクリプト、バックグラウンド、およびリモート セッションで実行するジョブをデバッグできます。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A new state, AtBreakpoint, has been added for Windows PowerShell jobs.</source>
          <target state="translated">新しい状態、AtBreakpoint が Windows PowerShell ジョブに追加されました。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The AtBreakpoint state applies when a job is running a script that includes set breakpoints, and the script has hit a breakpoint.</source>
          <target state="translated">AtBreakpoint 状態は、ジョブがブレークポイントの設定を含むスクリプトを実行し、スクリプトがブレークポイントにヒットした場合に適用されます。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>When a job is stopped at a debug breakpoint, you must debug the job by running the Debug-Job cmdlet.</source>
          <target state="translated">ジョブがデバッグ ブレークポイントで停止したら、Debug-Job コマンドレットを実行して、ジョブをデバッグする必要があります。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 5.0 implements support for multiple versions of a single Windows PowerShell module in the same folder in $PSModulePath.</source>
          <target state="translated">Windows PowerShell 5.0 では、$PSModulePath の同一フォルダーにある 1 つの Windows PowerShell モジュールの複数のバージョンに対するサポートを実装しています。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A RequiredVersion property has been added to the ModuleSpecification class to help you get the desired version of a module; this property is mutually exclusive with the ModuleVersion property.</source>
          <target state="translated">RequiredVersion プロパティが ModuleSpecification クラスに追加され、必要なバージョンのモジュールを取得できるようになりました。このプロパティは、ModuleVersion プロパティとは相互に排他的です。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>RequiredVersion is now supported as part of the value of the FullyQualifiedName parameter of the Get-Module, Import-Module, and Remove-Module cmdlets.</source>
          <target state="translated">RequiredVersion が、Get-Module、Import-Module、および Remove-Module コマンドレットの FullyQualifiedName パラメーターの値の一部としてサポートされるようになりました。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>You can now perform module version validation by running the Test-ModuleManifest cmdlet.</source>
          <target state="translated">Test-ModuleManifest コマンドレットを実行して、モジュール バージョンを検証できるようになりました。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Results of the Get-Command cmdlet now display a Version column; a new Version property has been added to the CommandInfo class.</source>
          <target state="translated">Get-Command コマンドレットの結果が、バージョン列に表示されるようになりました。新しい Version プロパティが CommandInfo クラスに追加されました。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Get-Command shows commands from multiple versions of the same module.</source>
          <target state="translated">Get-Command では、同じモジュールの複数のバージョンからのコマンドが表示されます。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The Version property is also part of derived classes of CmdletInfo: CmdletInfo and ApplicationInfo.</source>
          <target state="translated">Version プロパティは、CmdletInfo の派生クラスの一部 (CmdletInfo と ApplicationInfo) でもあります。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Get-Command has a new parameter, -ShowCommandInfo, that returns ShowCommand information as PSObjects.</source>
          <target state="translated">Get-Command に、ShowCommand の情報を PSObject として返す新しいパラメーター、-ShowCommandInfo が追加されました。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This is especially useful functionality for when Show-Command is run in Windows PowerShell ISE by using Windows PowerShell remoting.</source>
          <target state="translated">これは、Windows PowerShell リモート処理を使用して、Windows PowerShell ISE で Show-Command を実行する場合に、特に便利な機能です。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The -ShowCommandInfo parameter replaces the existing Get-SerializedCommand function in the Microsoft.PowerShell.Utility module, but the Get-SerializedCommand script is still available to support downlevel scripting.</source>
          <target state="translated">Microsoft.PowerShell.Utility モジュールの既存の Get-SerializedCommand 関数は、-ShowCommandInfo に置き換えられます。ただし、Get-SerializedCommand スクリプトは、ダウンレベルのスクリプトをサポートするために引き続き使用できます。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>A new Get-ItemPropertyValue cmdlet lets you get the value of a property without using dot notation.</source>
          <target state="translated">新しい Get-ItemPropertyValue コマンドレットでは、ドット表記を使用せずにプロパティの値を取得できます。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>For example, in older releases of Windows PowerShell, you can run the following command to get the value of the Application Base property of the PowerShellEngine registry key: <bpt id="p1">**</bpt>(Get-ItemProperty -Path HKLM:<ph id="ph1">\\</ph>SOFTWARE<ph id="ph2">\\</ph>Microsoft<ph id="ph3">\\</ph>PowerShell<ph id="ph4">\\</ph>3<ph id="ph5">\\</ph>PowerShellEngine -Name ApplicationBase).ApplicationBase<ept id="p1">**</ept>.</source>
          <target state="translated">たとえば、Windows PowerShell の以前のリリースでは、PowerShellEngine レジストリ キーの Application Base プロパティの値を取得するには、<bpt id="p1">**</bpt>(Get-ItemProperty -Path HKLM:<ph id="ph1">\\</ph>SOFTWARE<ph id="ph2">\\</ph>Microsoft<ph id="ph3">\\</ph>PowerShell<ph id="ph4">\\</ph>3<ph id="ph5">\\</ph>PowerShellEngine -Name ApplicationBase).ApplicationBase<ept id="p1">**</ept> を実行します。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 5.0, you can run <bpt id="p1">**</bpt>Get-ItemPropertyValue -Path HKLM:<ph id="ph1">\\</ph>SOFTWARE<ph id="ph2">\\</ph>Microsoft<ph id="ph3">\\</ph>PowerShell<ph id="ph4">\\</ph>3<ph id="ph5">\\</ph>PowerShellEngine -Name ApplicationBase<ept id="p1">**</ept>.</source>
          <target state="translated">Windows PowerShell 5.0 以降では、<bpt id="p1">**</bpt>Get-ItemPropertyValue -Path HKLM:<ph id="ph1">\\</ph>SOFTWARE<ph id="ph2">\\</ph>Microsoft<ph id="ph3">\\</ph>PowerShell<ph id="ph4">\\</ph>3<ph id="ph5">\\</ph>PowerShellEngine -Name ApplicationBase<ept id="p1">**</ept> を実行できます。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell console now uses syntax coloring, just as in Windows PowerShell ISE.</source>
          <target state="translated">Windows PowerShell コンソールでは、Windows PowerShell ISE と同じ方法の構文の色分けを使用するようになりました。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>A new NetworkSwitch module contains cmdlets that enable you to apply switch, virtual LAN (VLAN), and basic Layer 2 network switch port configuration to Windows Server 2012 R2 logo-certified network switches.</source>
          <target state="translated">新しい NetworkSwitch モジュールには、スイッチ、仮想 LAN (VLAN)、および基本的なレイヤー 2 ネットワーク スイッチ ポートの構成を、Windows Server 2012 R2 ロゴ認定を受けたネットワーク スイッチに適用できるコマンドレットが含まれます。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The FullyQualifiedName parameter has been added to Import-Module and Remove-Module cmdlets, to support storing multiple versions of a single module.</source>
          <target state="translated">FullyQualifiedName パラメーターが、Import-Module コマンドレットと Remove-Module コマンドレットに追加され、1 つのモジュールの複数のバージョンの保存をサポートします。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Save-Help, Update-Help, Import-PSSession, Export-PSSession, and Get-Command have a new parameter, FullyQualifiedModule, of type ModuleSpecification.</source>
          <target state="translated">Save-Help、Update-Help、Import-PSSession、Export-PSSession、および Get-Command に、ModuleSpecification 型の新しいパラメーター、FullyQualifiedModule が追加されました。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Add this parameter to specify a module by its fully qualified name.</source>
          <target state="translated">このパラメーターを追加して、完全修飾名でモジュールを指定します。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The value of <bpt id="p1">**</bpt>$PSVersionTable.PSVersion<ept id="p1">**</ept> has been updated to 5.0.</source>
          <target state="translated"><bpt id="p1">**</bpt>$PSVersionTable.PSVersion<ept id="p1">**</ept> の値が 5.0 に更新されました。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell Desired State Configuration</source>
          <target state="translated">Windows PowerShell Desired State Configuration の新機能</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Windows PowerShell language enhancements let you define Windows PowerShell Desired State Configuration (DSC) resources by using classes.</source>
          <target state="translated">Windows PowerShell 言語の機能が強化され、クラスを使用して、Windows PowerShell Desired State Configuration (DSC) のリソースを定義できるようになりました。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Import-DscResource is now a true dynamic keyword; Windows PowerShell parses the specified module’s root module, searching for classes that contain the DscResource attribute.</source>
          <target state="translated">Import-DscResource は真の動的キーワードになりました。Windows PowerShell は、DscResource 属性を含むクラスを探して、指定されたモジュールのルート モジュールを解析します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>You can now use classes to define DSC resources, in which neither a MOF file nor a DSCResource subfolder in the module folder is required.</source>
          <target state="translated">クラスを使用して DSC リソースを定義できるようになりました。このリソースには、MOF ファイルも、モジュール フォルダー内の DSCResource サブフォルダーも必要ありません。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>A Windows PowerShell module file can contain multiple DSC resource classes.</source>
          <target state="translated">Windows PowerShell モジュールのファイルには、複数の DSC リソース クラスを含めることができます。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A new parameter, ThrottleLimit, has been added to the following cmdlets in the PSDesiredStateConfiguration module.</source>
          <target state="translated">新しいパラメーター、ThrottleLimit が PSDesiredStateConfiguration モジュールの次のコマンドレットに追加されました。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Add the ThrottleLimit parameter to specify the number of target computers or devices on which you want the command to work at the same time.</source>
          <target state="translated">ThrottleLimit パラメーターを追加して、コマンドを同時に実行する対象のコンピューターまたはデバイスの数を指定します。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Get-DscConfiguration</source>
          <target state="translated">Get-DscConfiguration</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Get-DscConfigurationStatus</source>
          <target state="translated">Get-DscConfigurationStatus</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Get-DscLocalConfigurationManager</source>
          <target state="translated">Get-DscLocalConfigurationManager</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Restore-DscConfiguration</source>
          <target state="translated">Restore-DscConfiguration</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Test-DscConfiguration</source>
          <target state="translated">Test-DscConfiguration</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Compare-DscConfiguration</source>
          <target state="translated">Compare-DscConfiguration</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Publish-DscConfiguration</source>
          <target state="translated">Publish-DscConfiguration</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Set-DscLocalConfigurationManager</source>
          <target state="translated">Set-DscLocalConfigurationManager</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Start-DscConfiguration</source>
          <target state="translated">Start-DscConfiguration</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Update-DscConfiguration</source>
          <target state="translated">Update-DscConfiguration</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>With centralized DSC error reporting, rich error information is not only logged in the event log, but it can be sent to a central location for later analysis.</source>
          <target state="translated">一元化された DSC エラー報告では、詳細なエラー情報がログに記録されるだけでなく、後で分析できるように中央の場所に送信できます。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>You can use this central location to store DSC configuration errors that have occurred for any server in their environment.</source>
          <target state="translated">この中央の場所を使用して、環境内でサーバーに対して発生した DSC 構成エラーを保存することができます。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>After the report server is defined in the meta-configuration, all errors are sent to the report server, and then stored in a database.</source>
          <target state="translated">メタ構成でレポート サーバーが定義されると、すべてのエラーがレポート サーバーに送信され、データベースに保存されます。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>You can set up this functionality regardless of whether or not a target node is configured to pull configurations from a pull server.</source>
          <target state="translated">ターゲット ノードがプル サーバーから構成を引き出すように構成されているかどうかに関係なく、この機能をセットアップすることができます。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Improvements to Windows PowerShell ISE ease DSC resource authoring.</source>
          <target state="translated">Windows PowerShell ISE の機能向上により、DSC リソースを簡単に作成できるようになりました。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>You can now do the following.</source>
          <target state="translated">次のことを行うことができます。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>List all DSC resources within a <bpt id="p1">**</bpt>configuration<ept id="p1">**</ept> or <bpt id="p2">**</bpt>node<ept id="p2">**</ept> block by entering <bpt id="p3">**</bpt>Ctrl+Space<ept id="p3">**</ept> on a blank line within the block.</source>
          <target state="translated"><bpt id="p1">**</bpt>構成<ept id="p1">**</ept>ブロック内や<bpt id="p2">**</bpt>ノード<ept id="p2">**</ept> ブロック内の空白行に <bpt id="p3">**</bpt>Ctrl+Space<ept id="p3">**</ept> を入力して、ブロック内の DSC リソースをすべて一覧表示する。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Automatic completion on resource properties of the <bpt id="p1">**</bpt>enumeration<ept id="p1">**</ept> type.</source>
          <target state="translated"><bpt id="p1">**</bpt>列挙<ept id="p1">**</ept>型のリソース プロパティにおけるオート コンプリート。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Automatic completion on the <bpt id="p1">**</bpt>DependsOn<ept id="p1">**</ept> property of DSC resources, based on other resource instances in the configuration.</source>
          <target state="translated">構成内の他のリソース インスタンスに応じた、DSC リソースの <bpt id="p1">**</bpt>DependsOn<ept id="p1">**</ept> プロパティにおけるオート コンプリート。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Improved tab completion of resource property values.</source>
          <target state="translated">リソース プロパティ値のタブ補完の強化。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>A user can now run a resource under a specified set of credentials by adding the <bpt id="p1">**</bpt>PSDscRunAsCredential<ept id="p1">**</ept> attribute to a Node block.</source>
          <target state="translated">ユーザーは、<bpt id="p1">**</bpt>PSDscRunAsCredential<ept id="p1">**</ept> 属性をノード ブロックに追加することで、指定した資格情報セットの下でリソースを実行できるようになりました。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>For example, PSDscRunAsCredential = Get-Credential Contoso<ph id="ph1">\\</ph>DscUser.</source>
          <target state="translated">例: PSDscRunAsCredential = Get-Credential Contoso<ph id="ph1">\\</ph>DscUser。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>This functionality is useful for creating configurations that run Windows Installer and executable installers, access the per-user registry hive, or perform other tasks outside the current user context.</source>
          <target state="translated">この機能は、Windows インストーラーと実行可能インストーラーを実行する構成、ユーザーごとのレジストリ ハイブにアクセスする構成、または現在のユーザー コンテキストの外部の他のタスクを実行する構成を作成するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>32-bit (x86-based) support has been added for the <bpt id="p1">**</bpt>Configuration<ept id="p1">**</ept> keyword.</source>
          <target state="translated">32 ビット (x86 ベース) のサポートが、<bpt id="p1">**</bpt>Configuration<ept id="p1">**</ept> キーワードに追加されました。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Windows PowerShell now includes support for custom help for DSC configurations, defined by adding <ph id="ph1">\[</ph>CmdletBinding()] to the generated configuration function.</source>
          <target state="translated">Windows PowerShell には、生成された構成関数に <ph id="ph1">\[</ph>CmdletBinding()] を追加することで定義される、DSC 構成のカスタム ヘルプに対するサポートが含まれるようになりました。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">**</bpt>DscLocalConfigurationManager<ept id="p1">**</ept> attribute designates a configuration block as a meta-configuration, which is used to configure the DSC Local Configuration Manager.</source>
          <target state="translated">新しい <bpt id="p1">**</bpt>DscLocalConfigurationManager<ept id="p1">**</ept> 属性では、メタ構成として構成ブロックを指定します。その構成ブロックを使って DSC ローカル構成マネージャーが構成されます。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>This attribute restricts a configuration to containing only items which configure the DSC Local Configuration Manager.</source>
          <target state="translated">この属性は、DSC ローカル構成マネージャーを構成するアイテムのみが含まれるように、構成を制限します。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>During processing, this configuration generates a <ph id="ph1">\*</ph>.meta.mof file that is then sent to the appropriate target nodes by running the Set-DscLocalConfigurationManager cmdlet.</source>
          <target state="translated">処理中に、この構成によって <ph id="ph1">\*</ph>.meta.mof ファイルが生成されます。その後、Set-DscLocalConfigurationManager コマンドレットを実行して、そのファイルは該当するターゲット ノードに送られます。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Partial configurations are now allowed in Windows PowerShell 5.0.</source>
          <target state="translated">Windows PowerShell 5.0 で、部分構成ができるようになりました。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>You can deliver configuration documents to a node in fragments.</source>
          <target state="translated">ノードに対して構成ドキュメントをフラグメントとして提供できます。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>For a node to receive multiple fragments of a configuration document, the node’s Local Configuration Manager must be first set to specify the expected fragments</source>
          <target state="translated">構成ドキュメントの複数のフラグメントをノードが受け取るには、想定されるフラグメントを指定するように、そのノードのローカル構成マネージャーをまず設定する必要があります</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Cross-computer synchronization is new in DSC in Windows PowerShell 5.0.</source>
          <target state="translated">コンピューター間の同期は、Windows PowerShell 5.0 の DSC での新機能です。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>By using the built-in WaitFor<ph id="ph1">\*</ph> resources (<bpt id="p1">**</bpt>WaitForAll<ept id="p1">**</ept>, <bpt id="p2">**</bpt>WaitForAny<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>WaitForSome<ept id="p3">**</ept>), you can now specify dependencies across computers during configuration runs, without external orchestrations.</source>
          <target state="translated">組み込みの WaitFor<ph id="ph1">\*</ph> リソース (<bpt id="p1">**</bpt>WaitForAll<ept id="p1">**</ept>、<bpt id="p2">**</bpt>WaitForAny<ept id="p2">**</ept>、および <bpt id="p3">**</bpt>WaitForSome<ept id="p3">**</ept>) を使用すると、コンピューター間の依存関係を外部のオーケストレーションなしで構成の実行中に指定できます。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>These resources provide node-to-node synchronization by using CIM connections over the WS-Man protocol.</source>
          <target state="translated">これらのリソースは、WS-Man プロトコルで CIM 接続を使用して、ノード間の同期を提供します。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>A configuration can wait for another computer’s specific resource state to change.</source>
          <target state="translated">構成は、別のコンピューターの特定のリソースの状態が変更されるまで待機できます。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Just Enough Administration (JEA), a new delegation security feature, leverages DSC and Windows PowerShell constrained runspaces to help secure enterprises from data loss or compromise by employees, whether intentional or unintentional.</source>
          <target state="translated">新しい委任セキュリティ機能である Just Enough Administration (JEA) は、DSC と Windows PowerShell の制限付き実行空間を活用して、意図的であるかどうかに関わらず、従業員によるデータの損失や侵害から企業をセキュリティで保護します。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>For more information about JEA, including where you can download the xJEA DSC resource, see <bpt id="p1">[</bpt>Just Enough Administration, Step by Step<ept id="p1">](http://blogs.technet.com/b/privatecloud/archive/2014/05/14/just-enough-administration-step-by-step.aspx)</ept>.</source>
          <target state="translated">xJEA DSC リソースをダウンロードできる場所など、JEA に関する詳細については、「<bpt id="p1">[</bpt>Just Enough Administration の使用手順<ept id="p1">](http://blogs.technet.com/b/privatecloud/archive/2014/05/14/just-enough-administration-step-by-step.aspx)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The following new cmdlets have been added to the PSDesiredStateConfiguration module.</source>
          <target state="translated">PSDesiredStateConfiguration モジュールには、次の新しいコマンドレットが追加されました。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>A new Get-DscConfigurationStatus cmdlet gets high-level information about configuration status from a target node.</source>
          <target state="translated">新しい Get-DscConfigurationStatus コマンドレットは、ターゲット ノードから構成状態に関する高レベルの情報を取得します。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>You can obtain the status of the last, or of all configurations.</source>
          <target state="translated">最後の状態、またはすべての構成の状態を取得できます。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>A new Compare-DscConfiguration cmdlet compares a specified configuration with the actual state of one or more target nodes.</source>
          <target state="translated">新しい Compare-DscConfiguration コマンドレットは、指定した構成を 1 つ以上のターゲット ノードの実際の状態と比較します。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>A new Publish-DscConfiguration cmdlet copies a configuration MOF file to a target node, but does not apply the configuration.</source>
          <target state="translated">新しい Publish-DscConfiguration コマンドレットでは、構成の MOF ファイルをターゲット ノードにコピーしますが、その構成は適用しません。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The configuration is applied during the next consistency pass, or when you run the Update-DscConfiguration cmdlet.</source>
          <target state="translated">この構成が適用されるのは、次の整合性パス中、または Update-DscConfiguration コマンドレットの実行時です。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>A new Test-DscConfiguration cmdlet lets you verify that a resulting configuration matches the desired configuration, returning either True if the configuration matches the desired configuration, or False if the actual configuration does not match the desired configuration.</source>
          <target state="translated">新しい Test-DscConfiguration コマンドレットを使用すると、結果の構成が必要な構成と一致することを確認して、構成が必要な構成と一致する場合は True を、実際の構成が必要な構成と一致しない場合は False を返すようにできます。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>A new Update-DscConfiguration cmdlet forces a configuration to be processed.</source>
          <target state="translated">新しい Update-DscConfiguration コマンドレットは、構成が処理されるようにします。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>If the Local Configuration Manager is in pull mode, the cmdlet gets the configuration from the pull server before applying it.</source>
          <target state="translated">ローカル構成マネージャーがプル モードの場合は、コマンドレットは、構成を適用する前にプル サーバーから構成を取得します。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell ISE</source>
          <target state="translated">Windows PowerShell ISE の新機能</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>You can now edit remote Windows PowerShell scripts and files in a local copy of Windows PowerShell ISE, by running Enter-PSSession to start a remote session on the computer that’s storing the files you want to edit, and then running <bpt id="p1">**</bpt>PSEdit <ph id="ph1">&lt;path and file name on the remote computer&gt;</ph><ept id="p1">**</ept>.</source>
          <target state="translated">Windows PowerShell ISE のローカル コピーでリモートの Windows PowerShell のスクリプトとファイルを編集できるようになりました。この編集を行うには、Enter-PSSession を実行して、編集するファイルを保存しているコンピューター上でリモート セッションを開始し、<bpt id="p1">**</bpt>PSEdit <ph id="ph1">&lt;path and file name on the remote computer&gt;</ph><ept id="p1">**</ept> を実行します。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>This feature eases editing Windows PowerShell files that are stored on the Server Core installation option of Windows Server, where Windows PowerShell ISE cannot run.</source>
          <target state="translated">この機能を使用すると、Windows PowerShell ISE を実行できない Windows Server の Server Core インストール オプションに保存されている Windows PowerShell ファイルの編集が簡単になります。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The Start-Transcript cmdlet is now supported in Windows PowerShell ISE.</source>
          <target state="translated">Start-Transcript コマンドレットが Windows PowerShell ISE でサポートされるようになりました。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>You can now debug remote scripts in Windows PowerShell ISE.</source>
          <target state="translated">Windows PowerShell ISE でリモート スクリプトをデバッグできるようになりました。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>A new menu command, <bpt id="p1">**</bpt>Break All<ept id="p1">**</ept> (Ctrl+B), breaks into the debugger for both local and remotely-running scripts.</source>
          <target state="translated">新しいメニュー コマンド、<bpt id="p1">**</bpt>Break All<ept id="p1">**</ept> (Ctrl+B) は、ローカルとリモートで実行中の両方のスクリプトを中断し、デバッガーに移ります。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell Web Services (Management OData IIS Extension)</source>
          <target state="translated">Windows PowerShell Web サービス (Management OData IIS 拡張機能) の新機能</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 5.0, you can generate a set of Windows PowerShell cmdlets based on the functionality exposed by a given OData endpoint, by running the Export-ODataEndpointProxy cmdlet, found in the new <bpt id="p1">[</bpt>Microsoft.PowerShell.OdataUtils<ept id="p1">](http://technet.microsoft.com/library/dn818507(v=wps.640).aspx)</ept> module.</source>
          <target state="translated">Windows PowerShell 5.0 以降では、新しい <bpt id="p1">[</bpt>Microsoft.PowerShell.OdataUtils<ept id="p1">](http://technet.microsoft.com/library/dn818507(v=wps.640).aspx)</ept> モジュールにある Export-ODataEndpointProxy コマンドレットを実行すると、指定した OData エンドポイントによって公開される機能に基づいて、Windows PowerShell コマンドレットのセットを生成できます。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Notable bug fixes in Windows PowerShell 5.0</source>
          <target state="translated">Windows PowerShell 5.0 での主なバグ修正</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 5.0 includes a new COM implementation, which offers significant performance improvements when you are working with COM objects.</source>
          <target state="translated">Windows PowerShell 5.0 には、新しい COM 実装が含まれます。この実装により、COM オブジェクトを操作する場合のパフォーマンスが大幅に向上します。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>For a video demonstration of the effect, see <bpt id="p1">[</bpt>Com_Perf_Improvements<ept id="p1">](http://1drv.ms/1qu3UPZ)</ept>.</source>
          <target state="translated">その効果を示すビデオ デモについては、「<bpt id="p1">[</bpt>Com_Perf_Improvements<ept id="p1">](http://1drv.ms/1qu3UPZ)</ept>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Significant performance improvements have been made to the first tab completion in a Windows PowerShell session, shortening tab completion time by nearly 500 ms.</source>
          <target state="translated">Windows PowerShell セッションでの最初のタブ補完に対するパフォーマンスが大幅に改善され、タブ補完に要する時間が 500 ミリ秒近く短縮されました。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell 4.0</source>
          <target state="translated">Windows PowerShell 4.0 の新機能</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 4.0 is backward-compatible.</source>
          <target state="translated">Windows PowerShell 4.0 には下位互換性があります。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Cmdlets, providers, modules, snap-ins, scripts, functions, and profiles that were designed for Windows PowerShell 3.0 and Windows PowerShell 2.0 work in Windows PowerShell 4.0 without changes.</source>
          <target state="translated">Windows PowerShell 3.0 および Windows PowerShell 2.0 用に設計されたコマンドレット、プロバイダー、モジュール、スナップイン、スクリプト、関数、およびプロファイルは、変更なしで Windows PowerShell 4.0 でも動作します。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 4.0 is installed by default on Windows® 8.1 and Windows Server 2012 R2.</source>
          <target state="translated">Windows PowerShell 4.0 は、既定で Windows® 8.1 と Windows Server 2012 R2 にインストールされています。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>To install Windows PowerShell 4.0 on Windows 7 with SP1, or Windows Server 2008 R2, download and install <bpt id="p1">[</bpt>Windows Management Framework 4.0<ept id="p1">](http://www.microsoft.com/download/details.aspx?id=40855)</ept>.</source>
          <target state="translated">Windows 7 SP1 または Windows Server 2008 R2 に Windows PowerShell 4.0 をインストールするには、<bpt id="p1">[</bpt>Windows Management Framework 4.0<ept id="p1">](http://www.microsoft.com/download/details.aspx?id=40855)</ept> をダウンロードしてインストールします。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Be sure to read the download details, and meet all system requirements, before you install Windows Management Framework 4.0.</source>
          <target state="translated">Windows Management Framework 4.0 をインストールする前に、ダウンロードの詳細を読み、システム要件がすべて満たされていることを確認してください。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell</source>
          <target state="translated">Windows PowerShell の新機能</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell Integrated Scripting Environment (ISE)</source>
          <target state="translated">Windows PowerShell Integrated Scripting Environment (ISE) の新機能</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell Workflow</source>
          <target state="translated">Windows PowerShell ワークフローの新機能</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell Web Services</source>
          <target state="translated">Windows PowerShell Web サービスの新機能</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell Web Access</source>
          <target state="translated">Windows PowerShell Web Access の新機能</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Notable bug fixes in Windows PowerShell 4.0</source>
          <target state="translated">Windows PowerShell 4.0 での主なバグ修正</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 4.0 includes the following new features.</source>
          <target state="translated">Windows PowerShell 4.0 には、次に示す新機能があります。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell</source>
          <target state="translated">Windows PowerShell の新機能</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Windows PowerShell Desired State Configuration<ept id="p1">**</ept> (DSC) is a new management system in Windows PowerShell 4.0 that enables the deployment and management of configuration data for software services and the environment in which these services run.</source>
          <target state="translated"><bpt id="p1">**</bpt>Windows PowerShell Desired State Configuration<ept id="p1">**</ept> (DSC) は、ソフトウェア サービスとそれらのサービスが実行される環境に対して構成データのデプロイと管理を実行できる Windows PowerShell 4.0 の新しい管理システムです。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>For more information about DSC, see <bpt id="p1">[</bpt>Get Started with Windows PowerShell Desired State Configuration<ept id="p1">](https://technet.microsoft.com/en-us/library/c134aa32-b085-4656-9a89-955d8ff768d0)</ept>.</source>
          <target state="translated">DSC の詳細については、「<bpt id="p1">[</bpt>Windows PowerShell Desired State Configuration の概要<ept id="p1">](https://technet.microsoft.com/en-us/library/c134aa32-b085-4656-9a89-955d8ff768d0)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Save-Help<ept id="p1">**</ept> now lets you save help for modules that are installed on remote computers.</source>
          <target state="translated"><bpt id="p1">**</bpt>Save-Help<ept id="p1">**</ept> では、リモート コンピューターにインストールされているモジュールのヘルプを保存できるようになりました。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>You can use Save-Help to download module Help from an Internet-connected client (on which not all of the modules for which you want help are necessarily installed), and then copy the saved Help to a remote shared folder or a remote computer that does not have Internet access.</source>
          <target state="translated">Save-Help を使用すると、インターネットに接続されたクライアント (ヘルプが必要なモジュールのすべてがインストールされているとは限らない) でヘルプのモジュールをダウンロードし、リモート共有フォルダーまたはインターネットへのアクセスがないリモート コンピューターにヘルプをコピーして保存できます。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell debugger has been enhanced to allow debugging of Windows PowerShell workflows, as well as scripts that are running on remote computers.</source>
          <target state="translated">Windows PowerShell デバッガーが拡張され、Windows PowerShell ワークフローのデバッグと、リモート コンピューターで実行されているスクリプトのデバッグが可能になりました。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Windows PowerShell workflows can now be debugged at the script level from either the Windows PowerShell command line or Windows PowerShell ISE.</source>
          <target state="translated">Windows PowerShell ワークフローは、Windows PowerShell コマンド ラインまたは Windows PowerShell ISE からスクリプト レベルでデバッグできるようになりました。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Windows PowerShell scripts, including script workflows, can now be debugged over remote sessions.</source>
          <target state="translated">Windows PowerShell スクリプト (スクリプト ワークフローを含む) は、リモート セッション経由でデバッグできるようになりました。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Remote debugging sessions are preserved over Windows PowerShell remote sessions that are disconnected and then later reconnected.</source>
          <target state="translated">リモート デバッグ セッションは、切断されても Windows PowerShell リモート セッション上に保存され、後で再接続されます。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>RunNow<ept id="p1">**</ept> parameter for <bpt id="p2">**</bpt>Register-ScheduledJob<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Set-ScheduledJob<ept id="p3">**</ept> eliminates the need to set an immediate start date and time for jobs by using the <bpt id="p4">**</bpt>Trigger<ept id="p4">**</ept> parameter.</source>
          <target state="translated"><bpt id="p2">**</bpt>Register-ScheduledJob<ept id="p2">**</ept> および <bpt id="p3">**</bpt>Set-ScheduledJob<ept id="p3">**</ept> で <bpt id="p1">**</bpt>RunNow<ept id="p1">**</ept> パラメーターを使用できるようになり、<bpt id="p4">**</bpt>Trigger<ept id="p4">**</ept> パラメーターを使用して直後のジョブ開始日時を設定する必要がなくなりました。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Invoke-RestMethod<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Invoke-WebRequest<ept id="p2">**</ept> now let you set all headers by using the Headers parameter.</source>
          <target state="translated"><bpt id="p1">**</bpt>Invoke-RestMethod<ept id="p1">**</ept> と <bpt id="p2">**</bpt>Invoke-WebRequest<ept id="p2">**</ept> で、Headers パラメーターを使用してすべてのヘッダーを設定できるようになりました。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Although this parameter has always existed, it was one of several parameters for the web cmdlets that resulted in exceptions or errors.</source>
          <target state="translated">このパラメーターは以前から存在しますが、使用すると例外やエラーが発生する Web コマンドレットのいくつかのパラメーターの 1 つでした。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> has a new parameter, <bpt id="p2">**</bpt>FullyQualifiedName<ept id="p2">**</ept>, of the type <bpt id="p3">**</bpt>ModuleSpecification<ph id="ph1">\[</ph>]<ept id="p3">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> に、新しいパラメーター <bpt id="p2">**</bpt>FullyQualifiedName<ept id="p2">**</ept> が追加されました (<bpt id="p3">**</bpt>ModuleSpecification<ph id="ph1">\[</ph>]<ept id="p3">**</ept> 型)。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>FullyQualifiedName<ept id="p1">**</ept> parameter of Get-Module now lets you specify a module by using the module's name, version, and optionally, its GUID.</source>
          <target state="translated">Get-Module の <bpt id="p1">**</bpt>FullyQualifiedName<ept id="p1">**</ept> パラメーターを使用すると、モジュール名やバージョンを使用してモジュールを指定でき、オプションとして GUID でも指定できます。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The default execution policy setting on Windows Server 2012 R2 is <bpt id="p1">**</bpt>RemoteSigned<ept id="p1">**</ept>.</source>
          <target state="translated">Windows Server 2012 R2 での既定の実行ポリシー設定は <bpt id="p1">**</bpt>RemoteSigned<ept id="p1">**</ept> です。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>On Windows 8.1, there is no change in default setting.</source>
          <target state="translated">Windows 8.1 では、既定の設定に変更はありません。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 4.0, method invocation by using dynamic method names is supported.</source>
          <target state="translated">Windows PowerShell 4.0 以降で、動的なメソッド名を使用したメソッド呼び出しがサポートされるようになりました。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>You can use a variable to store a method name, and then dynamically invoke the method by calling the variable.</source>
          <target state="translated">変数にメソッド名を格納し、その変数を呼び出すことによって動的にメソッドを呼び出せます。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Asynchronous workflow jobs are no longer deleted when the time-out period that is specified by the <bpt id="p1">**</bpt>PSElapsedTimeoutSec<ept id="p1">**</ept> workflow common parameter has elapsed.</source>
          <target state="translated"><bpt id="p1">**</bpt>PSElapsedTimeoutSec<ept id="p1">**</ept> ワークフロー共通パラメーターで指定したタイムアウト期間が経過したとき、非同期のワークフロー ジョブは削除されなくなりました。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>A new parameter, <bpt id="p1">**</bpt>RepeatIndefinitely<ept id="p1">**</ept>, has been added to the <bpt id="p2">**</bpt>New-JobTrigger<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Set-JobTrigger<ept id="p3">**</ept> cmdlets.</source>
          <target state="translated">新しいパラメーター <bpt id="p1">**</bpt>RepeatIndefinitely<ept id="p1">**</ept> が <bpt id="p2">**</bpt>New-JobTrigger<ept id="p2">**</ept> および <bpt id="p3">**</bpt>Set-JobTrigger<ept id="p3">**</ept> コマンドレットに追加されました。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>This eliminates the necessity of specifying a <bpt id="p1">**</bpt>TimeSpan.MaxValue<ept id="p1">**</ept> value for the <bpt id="p2">**</bpt>RepetitionDuration<ept id="p2">**</ept> parameter to run a scheduled job repeatedly for an indefinite period.</source>
          <target state="translated">これを使用すると、スケジュールされたジョブの実行を無期限に繰り返す場合に、<bpt id="p2">**</bpt>RepetitionDuration<ept id="p2">**</ept> パラメーターの <bpt id="p1">**</bpt>TimeSpan.MaxValue<ept id="p1">**</ept> 値に指定する必要がなくなります。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>Passthru<ept id="p1">**</ept> parameter has been added to the <bpt id="p2">**</bpt>Enable-JobTrigger<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Disable-JobTrigger<ept id="p3">**</ept> cmdlets.</source>
          <target state="translated"><bpt id="p1">**</bpt>Passthru<ept id="p1">**</ept> パラメーターが <bpt id="p2">**</bpt>Enable-JobTrigger<ept id="p2">**</ept> および <bpt id="p3">**</bpt>Disable-JobTrigger<ept id="p3">**</ept> コマンドレットに追加されました。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The Passthru parameter displays any objects that are created or modified by your command.</source>
          <target state="translated">Passthru パラメーターを使用すると、実行するコマンドによって作成または変更されるすべてのオブジェクトが表示されます。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The parameter names for specifying a workgroup in the <bpt id="p1">**</bpt>Add-Computer<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Remove-Computer<ept id="p2">**</ept> cmdlets are now consistent.</source>
          <target state="translated"><bpt id="p1">**</bpt>Add-Computer<ept id="p1">**</ept> および <bpt id="p2">**</bpt>Remove-Computer<ept id="p2">**</ept> コマンドレットにワークグループを指定するパラメーターの名前が整合性のあるものになりました。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Both cmdlets now use the parameter <bpt id="p1">**</bpt>WorkgroupName<ept id="p1">**</ept>.</source>
          <target state="translated">どちらのコマンドレットでも、パラメーター <bpt id="p1">**</bpt>WorkgroupName<ept id="p1">**</ept> を使用します。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>A new common parameter, <bpt id="p1">**</bpt>PipelineVariable<ept id="p1">**</ept>, has been added.</source>
          <target state="translated">新しい共通パラメーター <bpt id="p1">**</bpt>PipelineVariable<ept id="p1">**</ept> が追加されました。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>PipelineVariable lets you save the results of a piped command (or part of a piped command) as a variable that can be passed through the remainder of the pipeline.</source>
          <target state="translated">PipelineVariable を使用すると、パイプされたコマンド (またはパイプされたコマンドの一部) の結果を変数として保存し、パイプラインの残りの部分に引き渡すことができます。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Collection filtering by using a method syntax is now supported.</source>
          <target state="translated">メソッド構文を使用したコレクションのフィルター処理がサポートされるようになりました。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>This means that you can now filter a collection of objects by using simplified syntax, similar to that for Where() or Where-Object, formatted as a method call.</source>
          <target state="translated">Where() または Where-Object の構文に似た簡潔なメソッド呼び出しの形式を使用して、オブジェクトのコレクションをフィルター処理できます。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The following is an example: (Get-Process).where({$_.Name -match 'powershell'})</source>
          <target state="translated">次に例を示します: (Get-Process).where({$_.Name -match 'powershell'})</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Process<ept id="p1">**</ept> cmdlet has a new switch parameter, <bpt id="p2">**</bpt>IncludeUserName<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-Process<ept id="p1">**</ept> コマンドレットに新しいスイッチ パラメーター <bpt id="p2">**</bpt>IncludeUserName<ept id="p2">**</ept> が追加されました。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>A new cmdlet, <bpt id="p1">**</bpt>Get-FileHash<ept id="p1">**</ept>, that returns a file hash in one of several formats for a specified file, has been added.</source>
          <target state="translated">新しいコマンドレット <bpt id="p1">**</bpt>Get-FileHash<ept id="p1">**</ept> が追加されました。これは、指定したファイルのファイル ハッシュをいくつかの形式の中から 1 つ返します。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 4.0, if a module uses the <bpt id="p1">**</bpt>DefaultCommandPrefix<ept id="p1">**</ept> key in its manifest, or if the user imports a module with the <bpt id="p2">**</bpt>Prefix<ept id="p2">**</ept> parameter, the <bpt id="p3">**</bpt>ExportedCommands<ept id="p3">**</ept> property of the module shows the commands in the module with the prefix.</source>
          <target state="translated">Windows PowerShell 4.0 では、モジュールが自らのマニフェストの中で <bpt id="p1">**</bpt>DefaultCommandPrefix<ept id="p1">**</ept> キーを使用している場合、またはユーザーが <bpt id="p2">**</bpt>Prefix<ept id="p2">**</ept> パラメーターを指定してモジュールをインポートした場合、モジュールの <bpt id="p3">**</bpt>ExportedCommands<ept id="p3">**</ept> プロパティにモジュール内のコマンドがプレフィックス付きで表示されます。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>When you run the commands by using the module-qualified syntax, ModuleName<ph id="ph1">\\</ph>CommandName, the command names must include the prefix.</source>
          <target state="translated">モジュールで修飾された構文 (ModuleName<ph id="ph1">\\</ph>CommandName) を使用してコマンドを実行するときは、コマンド名にプレフィックスを含める必要があります。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The value of <bpt id="p1">**</bpt>$PSVersionTable.PSVersion<ept id="p1">**</ept> has been updated to 4.0.</source>
          <target state="translated"><bpt id="p1">**</bpt>$PSVersionTable.PSVersion<ept id="p1">**</ept> の値が 4.0 に更新されました。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Where()<ept id="p1">**</ept> operator behavior has changed.</source>
          <target state="translated"><bpt id="p1">**</bpt>Where()<ept id="p1">**</ept> 演算子の動作が変更されました。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>accepting a string expression in the format <ph id="ph1">`"Property -CompareOperator Value"`</ph> is no longer supported.</source>
          <target state="translated">形式 <ph id="ph1">`"Property -CompareOperator Value"`</ph> の文字列式は受け入れられなくなりました。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>However, the <bpt id="p1">**</bpt>Where()<ept id="p1">**</ept> operator accepts string expressions in the format of a scriptblock; this is still supported.</source>
          <target state="translated">ただし、<bpt id="p1">**</bpt>Where()<ept id="p1">**</ept> 演算子は、スクリプト ブロック形式の文字列式を受け入れます。これは、引き続きサポートされます。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell Integrated Scripting Environment (ISE)</source>
          <target state="translated">Windows PowerShell Integrated Scripting Environment (ISE) の新機能</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Windows PowerShell ISE supports both Windows PowerShell Workflow debugging and remote script debugging.</source>
          <target state="translated">Windows PowerShell ISE では、Windows PowerShell ワークフローのデバッグとリモート スクリプト デバッグの両方がサポートされます。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>IntelliSense support has been added for Windows PowerShell Desired State Configuration providers and configurations.</source>
          <target state="translated">Windows PowerShell Desired State Configuration のプロバイダーおよび構成に IntelliSense サポートが追加されました。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell Workflow</source>
          <target state="translated">Windows PowerShell ワークフローの新機能</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Support has been added for a new <bpt id="p1">**</bpt>PipelineVariable<ept id="p1">**</ept> common parameter in the context of iterative pipelines, such as those used by System Center Orchestrator; that is, pipelines that run commands simply left-to-right, as opposed to interspersed running by using streaming.</source>
          <target state="translated">System Center Orchestrator などで使用されている反復パイプラインのコンテキストで、新しい <bpt id="p1">**</bpt>PipelineVariable<ept id="p1">**</ept> 共通パラメーターのサポートが追加されました。反復パイプラインとは、ストリーミングを使用することによって散発的に実行するのではなく、コマンドを単純に左から右へと実行するパイプラインです。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Parameter binding has been significantly enhanced to work outside of tab completion scenarios, such as with commands that do not exist in the current runspace.</source>
          <target state="translated">パラメーターのバインドが大幅に拡張され、Tab 補完のシナリオを越えて、たとえば、現在の実行空間に存在しないコマンドでも機能するようになりました。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Support for custom container activities has been added to Windows PowerShell Workflow.</source>
          <target state="translated">Windows PowerShell ワークフローにカスタム コンテナー アクティビティのサポートが追加されました。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>If an activity parameter is of the types <bpt id="p1">**</bpt>Activity<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Activity<ph id="ph1">\[</ph>]<ept id="p2">**</ept>—or is a generic collection of activities—and the user has supplied a script block as an argument, then Windows PowerShell Workflow converts the script block to XAML, as with normal Windows PowerShell script-to-workflow compilation.</source>
          <target state="translated">アクティビティのパラメーターの型が <bpt id="p1">**</bpt>Activity<ept id="p1">**</ept> または <bpt id="p2">**</bpt>Activity<ph id="ph1">\[</ph>]<ept id="p2">**</ept> であるか、アクティビティのジェネリック コレクションである場合に、ユーザーが引数としてスクリプト ブロックを提供すると、Windows PowerShell ワークフローはそのスクリプト ブロックを通常の Windows PowerShell によるスクリプトからワークフローへのコンパイルと同様に XAML に変換します。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>After a crash, Windows PowerShell Workflow automatically reconnects to managed nodes.</source>
          <target state="translated">クラッシュの後、Windows PowerShell ワークフローは自動的に管理対象ノードに再接続します。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>You can now throttle <bpt id="p1">**</bpt>Foreach -Parallel<ept id="p1">**</ept> activity statements by using the <bpt id="p2">**</bpt>ThrottleLimit<ept id="p2">**</ept> property.</source>
          <target state="translated"><bpt id="p1">**</bpt>Foreach-Parallel<ept id="p1">**</ept> アクティビティ ステートメントのスロットルを、<bpt id="p2">**</bpt>ThrottleLimit<ept id="p2">**</ept> プロパティを使用して調整できるようになりました。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ErrorAction<ept id="p1">**</ept> common parameter has a new valid value, <bpt id="p2">**</bpt>Suspend<ept id="p2">**</ept>, that is exclusively for workflows.</source>
          <target state="translated"><bpt id="p1">**</bpt>ErrorAction<ept id="p1">**</ept> 共通パラメーターに新しい有効値 <bpt id="p2">**</bpt>Suspend<ept id="p2">**</ept> が追加されました。これはワークフロー専用です。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>A workflow endpoint now automatically closes if there are no active sessions, no in-progress jobs, and no pending jobs.</source>
          <target state="translated">ワークフロー エンドポイントは、アクティブなセッション、処理中のジョブ、および保留中のジョブがいずれもなくなった時点で、自動的に閉じるようになりました。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>This feature conserves resources on the computer that is acting as the workflow server, when the automatic closure conditions have been met.</source>
          <target state="translated">この機能は、自動クローズ条件を満たしている場合に、ワークフロー サーバーとして機能しているコンピューターでリソースの節約になります。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell Web Services</source>
          <target state="translated">Windows PowerShell Web サービスの新機能</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>When an error occurs in Windows PowerShell Web Services (PSWS, also called Management OData IIS Extension), while a cmdlet is running, more detailed error messages are returned to the caller.</source>
          <target state="translated">コマンドレットの実行中に Windows PowerShell Web サービス (PSWS、Management OData IIS 拡張機能ともいう) でエラーが発生した場合に、より詳細なエラー メッセージが呼び出し元に返されます。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>In addition, error codes follow <bpt id="p1">[</bpt>Windows Azure REST API error code guidelines<ept id="p1">](http://msdn.microsoft.com/library/windowsazure/dd179357.aspx)</ept>.</source>
          <target state="translated">さらに、エラーコードは「<bpt id="p1">[</bpt>Windows Azure REST API のエラー コードのガイドライン<ept id="p1">](http://msdn.microsoft.com/library/windowsazure/dd179357.aspx)</ept>」に従います。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>An endpoint can now define the API version, as well as enforce the usage of a specific API version.</source>
          <target state="translated">エンドポイントで API のバージョンを定義したり、特定の API バージョンの使用を強制したりできるようになりました。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Whenever version mismatches occur between client and server, errors are displayed to both the client and the server.</source>
          <target state="translated">クライアントとサーバーの間でバージョンの不一致が発生すると、クライアントとサーバーの両方にエラーが表示されます。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Management of the dispatch schema has been simplified by automatically generating values for any missing fields in the schema.</source>
          <target state="translated">ディスパッチ スキーマの管理が簡略化され、スキーマで欠落しているフィールドの値が自動的に生成されるようになりました。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Generation occurs, as a helpful starting point, even if the dispatch schema does not exist.</source>
          <target state="translated">ディスパッチ スキーマが存在しない場合でも、生成された値は出発点として役立ちます。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Type handling in PSWS has been improved to support types that use a different constructor than the default constructor, by behaving similarly to the <bpt id="p1">**</bpt>PSTypeConverter<ept id="p1">**</ept> in Windows PowerShell.</source>
          <target state="translated">PSWS での型の処理が改良され、既定のコンストラクターとは異なるコンストラクターを使用する型がサポートされ、Windows PowerShell での <bpt id="p1">**</bpt>PSTypeConverter<ept id="p1">**</ept> と同様の動作になりました。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>This lets you use complex types with PSWS.</source>
          <target state="translated">これにより、PSWS で複合型を使用できます。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>PSWS now allows expanding an associated instance while running a query.</source>
          <target state="translated">PSWS で、クエリの実行中に、関連付けられているインスタンスを展開できるようになりました。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>For larger binary contents (such as images, audio, or video), the transfer cost is significant, and it is better to transfer binary data without encoding.</source>
          <target state="translated">バイナリ コンテンツ (イメージ、オーディオ、ビデオなど) のサイズが大きくなると、転送のコストが重要になるため、エンコードせずにバイナリ データを転送するほうが適切です。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>PSWS uses named resource streams for transferring without encoding.</source>
          <target state="translated">エンコードせずに転送する場合、PSWS では名前付きリソース ストリームを使用します。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The named resource stream is a property of an entity of the <bpt id="p1">**</bpt>Edm.Stream<ept id="p1">**</ept> type.</source>
          <target state="translated">名前付きリソース ストリームは、<bpt id="p1">**</bpt>Edm.Stream<ept id="p1">**</ept> 型のエンティティのプロパティです。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Each named resource stream has a separate URI for GET or UPDATE operations.</source>
          <target state="translated">それぞれの名前付きリソース ストリームには、GET 操作用と UPDATE 操作用に別個の URI があります。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>OData actions now provide a mechanism for invoking non-CRUD (Create, Read, Update, and Delete) methods on a resource.</source>
          <target state="translated">OData アクションで、リソースに対して CRUD (作成、読み取り、更新、および削除) 以外のメソッドを呼び出すメカニズムが提供されるようになりました。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>You can invoke an action by sending an HTTP POST request to the URI that is defined for the action.</source>
          <target state="translated">アクションを呼び出すには、そのアクションに対して定義された URI に HTTP POST 要求を送信します。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The parameters for the action are defined in the body of the POST request.</source>
          <target state="translated">アクションに対するパラメーターは、POST 要求の本体で定義します。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>To be consistent with Windows Azure guidelines, all URLs should be simplified.</source>
          <target state="translated">Windows Azure のガイドラインと一貫性を保つため、すべての URL を単純化する必要があります。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>A change included in <bpt id="p1">**</bpt>Key As Segment<ept id="p1">**</ept> allows single keys to be represented as segments.</source>
          <target state="translated"><bpt id="p1">**</bpt>Key As Segment<ept id="p1">**</ept> に組み込まれた変更により、1 つのキーでセグメントを表現できます。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Note that references that use multiple key values require comma-separated values in parenthetical notation, as before.</source>
          <target state="translated">なお、複数のキー値を使用する参照は、これまでと同様、かっこで囲んだコンマ区切り値で表記する必要があることに注意してください。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Before this release of PSWS, the only way to perform Create, Update, or Delete operations was to invoke Post, Put, or Delete on a top-level resource.</source>
          <target state="translated">PSWS の今回より前のリリースでは、作成、更新、または削除操作を実行する唯一の方法は、最上位レベルのリソースに対して Post、Put、または Delete を呼び出すことでした。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>New in this release of PSWS, Contained Resource operations let users achieve the same results while reaching the same resource less directly, approaching as if these resources were contained.</source>
          <target state="translated">今回のリリースの PSWS では、Contained Resource 操作という新しい機能で同じ結果を得ることができます。これを使用すると、同じリソースにより間接的に到達し、それらのリソースが含まれているかのようにアクセスできます。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell Web Access</source>
          <target state="translated">Windows PowerShell Web Access の新機能</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>You can disconnect from and reconnect to existing sessions in the web-based Windows PowerShell Web Access console.</source>
          <target state="translated">Web ベースの Windows PowerShell Web Access コンソールで、既存のセッションを切断および再接続できます。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>Save<ept id="p1">**</ept> button in the web-based console lets you disconnect from a session without deleting it and reconnect to the session another time.</source>
          <target state="translated">Web ベースのコンソールで <bpt id="p1">**</bpt>[保存]<ept id="p1">**</ept> ボタンを使用すると、削除せずにセッションを切断し、あとでセッションに再接続できます。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Default parameters can be displayed on the sign-in page.</source>
          <target state="translated">サインイン ページに既定のパラメーターを表示できます。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>To display default parameters, configure values for all of the settings displayed in the <bpt id="p1">**</bpt>Optional Connection Settings<ept id="p1">**</ept> area of the sign-in page in a file named <bpt id="p2">**</bpt>web.config<ept id="p2">**</ept>.</source>
          <target state="translated">既定のパラメーターを表示するには、サインイン ページの <bpt id="p1">**</bpt>[オプションの接続設定]<ept id="p1">**</ept> 領域に表示されるすべての設定に対して、<bpt id="p2">**</bpt>web.config<ept id="p2">**</ept> という名前のファイルに値を構成します。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>web.config<ept id="p1">**</ept> file to configure all optional connection settings except for a second or alternate set of credentials.</source>
          <target state="translated"><bpt id="p1">**</bpt>web.config<ept id="p1">**</ept> ファイルを使用すると、2 次資格情報と代替資格情報を除くすべてのオプションの接続設定を構成できます。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>In Windows Server 2012 R2, you can remotely manage authorization rules for Windows PowerShell Web Access.</source>
          <target state="translated">Windows Server 2012 R2 で、Windows PowerShell Web Access の承認規則をリモートで管理できます。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Add-PswaAuthorizationRule<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Test-PswaAuthorizationRule<ept id="p2">**</ept> cmdlets now include a Credential parameter that enables administrators to manage authorization rules from a remote computer or in a Windows PowerShell Web Access session.</source>
          <target state="translated"><bpt id="p1">**</bpt>Add-PswaAuthorizationRule<ept id="p1">**</ept> および <bpt id="p2">**</bpt>Test-PswaAuthorizationRule<ept id="p2">**</ept> コマンドレットに、管理者がリモート コンピューターから、または Windows PowerShell Web Access セッションで承認規則を管理できるようにするために Credential パラメーターが用意されました。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>You can now have multiple Windows PowerShell Web Access sessions in a single browser session by using a new browser tab for each session.</source>
          <target state="translated">1 つのブラウザー セッションで各セッションに対して新しいブラウザー タブを使用することにより、複数の Windows PowerShell Web Access セッションに接続できるようになりました。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>You no longer need to open a new browser session to connect to a new session in the web-based Windows PowerShell console.</source>
          <target state="translated">Web ベースの Windows PowerShell コンソールで新しいセッションに接続するとき、新しいブラウザー セッションを開く必要がなくなりました。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Notable bug fixes in Windows PowerShell 4.0</source>
          <target state="translated">Windows PowerShell 4.0 での主なバグ修正</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Counter<ept id="p1">**</ept> can now return counters that contain an apostrophe character in French editions of Windows.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-Counter<ept id="p1">**</ept> で、フランス語エディションの Windows で返されるカウンターにアポストロフィ文字を含められるようになりました。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>You can now view the <bpt id="p1">**</bpt>GetType<ept id="p1">**</ept> method on deserialized objects.</source>
          <target state="translated">逆シリアル化されたオブジェクトの <bpt id="p1">**</bpt>GetType<ept id="p1">**</ept> メソッドを表示できるようになりました。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>#Requires<ept id="p1">**</ept> statements now let users require Administrator access rights, if needed.</source>
          <target state="translated"><bpt id="p1">**</bpt>#Requires<ept id="p1">**</ept> ステートメントで、必要な場合に、管理者アクセス権限をユーザーに要求するようになりました。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet now ignores blank lines.</source>
          <target state="translated"><bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> コマンドレットで、ブランク行が無視されるようになりました。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>A problem where Windows PowerShell ISE uses too much memory when you are running an <bpt id="p1">**</bpt>Invoke-WebRequest<ept id="p1">**</ept> command has been fixed.</source>
          <target state="translated"><bpt id="p1">**</bpt>Invoke-WebRequest<ept id="p1">**</ept> コマンドの実行中に Windows PowerShell ISE が使用するメモリが多すぎるという問題が修正されました。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> now displays module versions in a <bpt id="p2">**</bpt>Version<ept id="p2">**</ept> column.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> で、<bpt id="p2">**</bpt>Version<ept id="p2">**</ept> 列にモジュールのバージョンが表示されるようになりました。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Remove-Item -Recurse now removes items from subfolders as expected.</source>
          <target state="translated">Remove-Item -Recurse で、想定どおりにサブフォルダーから項目が削除されるようになりました。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>UserName<ept id="p1">**</ept> property has been added to <bpt id="p2">**</bpt>Get-Process<ept id="p2">**</ept> output objects.</source>
          <target state="translated"><bpt id="p2">**</bpt>Get-Process<ept id="p2">**</ept> 出力オブジェクトに <bpt id="p1">**</bpt>UserName<ept id="p1">**</ept> プロパティが追加されました。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Invoke-RestMethod<ept id="p1">**</ept> cmdlet now returns all available results.</source>
          <target state="translated"><bpt id="p1">**</bpt>Invoke-RestMethod<ept id="p1">**</ept> コマンドレットがすべての使用可能な結果を返すようになりました。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept> now takes effect on hashtables, even if the hashtables have not yet been accessed.</source>
          <target state="translated"><bpt id="p1">**</bpt>Add-Member<ept id="p1">**</ept> が、ハッシュ テーブルがまだアクセスされていない場合でも、ハッシュ テーブルに効果を与えるようになりました。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Select-Object -Expand<ept id="p1">**</ept> no longer fails or generates an exception if the value of the property is null or empty.</source>
          <target state="translated"><bpt id="p1">**</bpt>Select-Object -Expand<ept id="p1">**</ept> が、プロパティの値が null または空の場合に、失敗したり、例外を生成したりしなくなりました。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Process<ept id="p1">**</ept> can now be used in a pipeline with other commands that get the <bpt id="p2">**</bpt>ComputerName<ept id="p2">**</ept> property from objects.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-Process<ept id="p1">**</ept> が、オブジェクトから <bpt id="p2">**</bpt>ComputerName<ept id="p2">**</ept> プロパティを取得する他のコマンドと一緒にパイプラインで使用できるようになりました。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ConvertFrom-Json<ept id="p2">**</ept> can now accept terms within double quotes, and its error messages are now localizable.</source>
          <target state="translated"><bpt id="p1">**</bpt>ConvertTo-Json<ept id="p1">**</ept> および <bpt id="p2">**</bpt>ConvertFrom-Json<ept id="p2">**</ept> が、二重引用符で囲まれた用語を受け付けるようになり、エラー メッセージがローカライズ可能になりました。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-Job<ept id="p1">**</ept> now returns any completed scheduled jobs, even in new sessions.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-Job<ept id="p1">**</ept> が、新しいセッションでも、スケジュールされたジョブのうちすべての完了したジョブを返すようになりました。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Issues with mounting and unmounting VHDs by using the <bpt id="p1">**</bpt>FileSystem<ept id="p1">**</ept> provider in Windows PowerShell 4.0 have been fixed.</source>
          <target state="translated">Windows PowerShell 4.0 で <bpt id="p1">**</bpt>FileSystem<ept id="p1">**</ept> プロバイダーを使用した VHD のマウントとマウント解除に関する問題が修正されました。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Windows PowerShell is now able to detect new drives when they are mounted in the same session.</source>
          <target state="translated">Windows PowerShell で、同じセッション内でマウントされた新しいドライブを検出できるようになりました。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>You no longer need to explicitly load <bpt id="p1">**</bpt>ScheduledJob<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Workflow<ept id="p2">**</ept> modules to work with their job types.</source>
          <target state="translated"><bpt id="p1">**</bpt>ScheduledJob<ept id="p1">**</ept> または <bpt id="p2">**</bpt>Workflow<ept id="p2">**</ept> モジュールのジョブ タイプを操作するとき、それらのモジュールを明示的に読み込む必要がなくなりました。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Performance improvements have been made to the process of importing workflows that define nested workflows; this process is now faster.</source>
          <target state="translated">入れ子になったワークフローを定義するワークフローのインポート処理のパフォーマンスが改善され、高速に処理されるようになりました。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>New features in Windows PowerShell 3.0</source>
          <target state="translated">Windows PowerShell 3.0 の新機能</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 3.0 includes the following new features.</source>
          <target state="translated">Windows PowerShell 3.0 には、次に示す新機能があります。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Windows PowerShell Workflow</source>
          <target state="translated">Windows PowerShell ワークフロー</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Windows PowerShell Web Access</source>
          <target state="translated">Windows PowerShell Web Access</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>New Windows PowerShell ISE Features</source>
          <target state="translated">Windows PowerShell ISE の新機能</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Support for Microsoft .NET Framework 4.0</source>
          <target state="translated">Microsoft .NET Framework 4.0 のサポート</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Support for Windows Preinstallation Environment</source>
          <target state="translated">Windows プレインストール環境のサポート</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Disconnected Sessions</source>
          <target state="translated">切断されたセッション</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Robust Session Connectivity</source>
          <target state="translated">堅牢なセッション接続</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Updatable Help System</source>
          <target state="translated">更新可能なヘルプ システム</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Enhanced Online Help</source>
          <target state="translated">強化されたオンライン ヘルプ</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>CIM integration</source>
          <target state="translated">CIM の統合</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Session Configuration Files</source>
          <target state="translated">セッション構成ファイル</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Scheduled Jobs and Task Scheduler Integration</source>
          <target state="translated">スケジュールされたジョブ、およびタスク スケジューラとの統合</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Windows PowerShell Language Enhancements</source>
          <target state="translated">Windows PowerShell 言語の機能強化</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>New Core Cmdlets</source>
          <target state="translated">新しいコア コマンドレット</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Improvements to Existing Core Cmdlets and Providers</source>
          <target state="translated">既存のコア コマンドレットとプロバイダーの機能強化</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Remote module import and discovery</source>
          <target state="translated">リモート モジュールのインポートと検出</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Enhanced Tab Completion</source>
          <target state="translated">強化された Tab 補完機能</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Module Auto-Loading</source>
          <target state="translated">モジュールの自動読み込み</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Module Experience Improvements</source>
          <target state="translated">モジュールのエクスペリエンスの改善</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Simplified Command Discovery</source>
          <target state="translated">コマンド検出の単純化</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Improved Logging, Diagnostics, and Group Policy Support</source>
          <target state="translated">ログ記録、診断、およびグループ ポリシーのサポートの改善</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>Formatting and Output Improvements</source>
          <target state="translated">書式設定と出力の機能強化</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Enhanced Console Host Experience</source>
          <target state="translated">コンソール ホストのエクスペリエンスの改善</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>New Cmdlet and Hosting APIs</source>
          <target state="translated">新しい Cmdlet API および Hosting API</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Performance Improvements</source>
          <target state="translated">パフォーマンスの向上</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>RunAs and Shared Host Support</source>
          <target state="translated">RunAs および共有ホストのサポート</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Special Character Handling Improvements</source>
          <target state="translated">特殊文字の処理の改善</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Windows PowerShell Workflow</source>
          <target state="translated">Windows PowerShell ワークフロー</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Windows PowerShell® Workflow brings the power of Windows Workflow Foundation to Windows PowerShell.</source>
          <target state="translated">Windows PowerShell® ワークフローによって、Windows Workflow Foundation の機能を Windows PowerShell で利用できます。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>You can write workflows in XAML or in the Windows PowerShell language and run them just as you would run a cmdlet.</source>
          <target state="translated">ワークフローは、XAML または Windows PowerShell 言語で記述し、コマンドレットを実行するのとまったく同様に実行できます。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Get-Command<ept id="p1">](https://technet.microsoft.com/en-us/library/59c6d302-6e8c-48b7-a6f6-f0172df936ad)</ept> cmdlet gets workflw commands and the <bpt id="p2">[</bpt>Get-Help<ept id="p2">](https://technet.microsoft.com/en-us/library/1f46eeb4-49d7-4bec-bb29-395d9b42f54a)</ept> cmdlet gets help for workflows.</source>
          <target state="translated"><bpt id="p1">[</bpt>Get-Command<ept id="p1">](https://technet.microsoft.com/en-us/library/59c6d302-6e8c-48b7-a6f6-f0172df936ad)</ept> コマンドレットはワークフロー コマンドを取得し、<bpt id="p2">[</bpt>Get-help<ept id="p2">](https://technet.microsoft.com/en-us/library/1f46eeb4-49d7-4bec-bb29-395d9b42f54a)</ept> コマンドレットは、ワークフローのヘルプを取得します。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Workflows are sequences of multicomputer management activities that are long-running, repeatable, frequent, parallelizable, interruptible, suspendable, and restartable.</source>
          <target state="translated">ワークフローは、複数のコンピューターを管理するアクティビティのシーケンスです。これは、実行時間が長く、反復可能な、頻繁に実行できるシーケンスで、並列実行、割り込み、中断、および再起動が可能です。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Workflows can be resumed from an intentional or accidental interruption, such as a network outage, a Windows restart, or a power failure.</source>
          <target state="translated">ワークフローは、ネットワークの停止、Windows の再起動、電源障害などの意図的または偶発的な割り込みから再開できます。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Workflows are also portable; they can be exported as or imported from XAML files.</source>
          <target state="translated">また、ワークフローは移植可能で、XAML ファイルとしてエクスポートしたり、XAML ファイルからインポートしたりできます。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>You can write custom session configurations that allow workflow or activities in a workflow to be run by delegated or subordinate users.</source>
          <target state="translated">カスタム セッション構成を記述することにより、委任されたユーザーまたは下位ユーザーがワークフローまたはワークフロー内のアクティビティを実行可能にすることができます。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The following are the benefits of Windows PowerShell Workflow</source>
          <target state="translated">Windows PowerShell ワークフローの利点を次に示します。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Automation of sequenced, long-running tasks.</source>
          <target state="translated">実行時間の長いタスクのシーケンスを自動化します。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Remote monitoring of long-running tasks<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>実行時間の長いタスクをリモート監視します<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Status and progress of activities are visible at any time.</source>
          <target state="translated">アクティビティの状態と進行状況をいつでも表示できます。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Multicomputer management.</source>
          <target state="translated">複数コンピューターの管理。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Simultaneously run tasks as workflows on hundreds of managed nodes.</source>
          <target state="translated">数百の管理対象ノードでタスクをワークフローとして同時に実行できます。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Windows PowerShell Workflow includes a built-in library of common management parameters, such as <bpt id="p1">**</bpt>PSComputerName<ept id="p1">**</ept>, which enable multi-computer management scenarios.</source>
          <target state="translated">Windows PowerShell ワークフローには、<bpt id="p1">**</bpt>PSComputerName<ept id="p1">**</ept> などの共通管理パラメーターで構成される組み込みライブラリが含まれているため、複数のコンピューターを管理するシナリオに対応できます。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Single task execution of complex processes.</source>
          <target state="translated">複雑なプロセスを 1 つのタスクで実行します。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>You can combine related scripts that implement an entire end-to-end scenario into a single workflow.</source>
          <target state="translated">エンド ツー エンドのシナリオ全体を実装する関連したスクリプトを 1 つのワークフローにまとめることができます。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Persistence.<ept id="p1">**</ept>: a workflow is saved (or check-pointed) at specific points defined by its author so you can resume the workflow from the last persisted task (or checkpoint), instead of restarting the workflow from the beginning.</source>
          <target state="translated"><bpt id="p1">**</bpt>永続化。<ept id="p1">**</ept>ワークフローは、作成者によって定義された特定の時点で保存 (またはチェックポイントを作成) できるため、ワークフローを最初から再開する代わりに、最後の永続化されたタスク (またはチェックポイント) からワークフローを再開できます。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Robustness.</source>
          <target state="translated">信頼性。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Automated failure recovery.</source>
          <target state="translated">エラー回復が自動化されます。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Workflows survive planned and unplanned restarts.</source>
          <target state="translated">ワークフローは、計画的な、および計画外の再起動の後も残ります。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>You can suspend workflow execution and then resume the workflow from the last persistence point.</source>
          <target state="translated">ワークフローの実行を中断した後、最後の永続化ポイントからワークフローを再開できます。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Workflow authors can designate specific activities to be re-run in case of failure on one or more managed nodes.</source>
          <target state="translated">ワークフローの作成者は、1 つまたは複数の管理対象ノードで障害が発生した時に再実行する特定のアクティビティを指定できます。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Ability to disconnect, reconnect, and run in disconnected sessions.</source>
          <target state="translated">切断、再接続、切断されたセッションでの実行が可能。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Users can connect and disconnect from the workflow server, but the workflow runs continuously.</source>
          <target state="translated">ユーザーがワークフロー サーバーに接続したり切断したりしても、ワークフローは継続的に実行されます。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>You can log off of the client computer or restart the client computer and monitor the workflow execution from another computer without interrupting the workflow.</source>
          <target state="translated">クライアント コンピューターからログオフするか、クライアント コンピューターを再始動しても、ワークフローに割り込むことなく別のコンピューターからワークフローの実行を監視できます。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Scheduling.</source>
          <target state="translated">スケジュール設定。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Workflow tasks can be scheduled like any Windows PowerShell cmdlet or script.</source>
          <target state="translated">ワークフロー タスクは、Windows PowerShell のコマンドレットまたはスクリプトと同じようにスケジュール設定できます。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Workflow and Connection Throttling.</source>
          <target state="translated">ワークフローと接続のスロットル調整。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Workflow execution and connections to nodes can be throttled, thus enabling scalability and high-availability scenarios.</source>
          <target state="translated">ワークフローの実行とノードへの接続をスロットルで調整できるため、スケーラビリティと高可用性のシナリオに対応できます。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Windows PowerShell Web Access</source>
          <target state="translated">Windows PowerShell Web Access</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Windows PowerShell® Web Access is a Windows Server 2012 feature that lets users run Windows PowerShell commands and scripts in a web-based console.</source>
          <target state="translated">Windows PowerShell® Web Access は、Windows PowerShell のコマンドとスクリプトをユーザーが Web ベースのコンソールで実行できる Windows Server 2012 の機能です。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Devices that use the web-based console do not require Windows PowerShell, remote management software, or browser plug-in installations.</source>
          <target state="translated">Web ベースのコンソールを使用するデバイスでは、Windows PowerShell、リモート管理ソフトウェアまたはブラウザー プラグインをインストールする必要はありません。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>All that is required is a properly-configured Windows PowerShell Web Access gateway and a client device browser that supports JavaScript® and accepts cookies.</source>
          <target state="translated">必要なのは、適切に構成された Windows PowerShell Web Access ゲートウェイと、JavaScript® をサポートし、Cookie を許可するクライアント デバイスのブラウザーのみです。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Deploy Windows PowerShell Web Access<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkID=221050)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt> Windows PowerShell Web Access の展開<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkID=221050)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>New Windows PowerShell ISE Features</source>
          <target state="translated">Windows PowerShell ISE の新機能</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>For Windows PowerShell 3.0, Windows PowerShell® Integrated Scripting Environment (ISE) has many new features, including IntelliSense, Show-Command window, a unified Console Pane, snippets, brace-matching, expand-collapse sections, auto-save, recent items list, rich copy, block copy, and full support for writing Windows PowerShell script workflows.</source>
          <target state="translated">Windows PowerShell 3.0 では、 Windows PowerShell® Integrated Scripting Environment (ISE) に多くの新機能が追加されました。たとえば、IntelliSense、Show-Command ウィンドウ、統合されたコンソール ウィンドウ、スニペット、かっこの一致に基づくセクションの展開/折りたたみ、自動保存、最近使った項目の一覧、機能豊富なコピー、ブロックのコピー、および Windows PowerShell スクリプト ワークフローの記述を完全サポートする機能などです。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>about_Windows_PowerShell_ISE [v3]<ept id="p1">](https://technet.microsoft.com/en-us/library/dfa54d47-60c6-4fff-8197-c747e8d411bb)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>about_Windows_PowerShell_ISE [v3]<ept id="p1">](https://technet.microsoft.com/en-us/library/dfa54d47-60c6-4fff-8197-c747e8d411bb)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>Support for Microsoft .NET Framework 4</source>
          <target state="translated">Microsoft .NET Framework 4 のサポート</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Windows PowerShell is built against the Common Language Runtime 4.0.</source>
          <target state="translated">Windows PowerShell は、共通言語ランタイム 4.0 を背景にして作成されました。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Cmdlet, script, and workflow authors can use the new Microsoft .NET Framework 4 classes in Windows PowerShell, with features that include Application Compatibility and Deployment, Managed Extensibility Framework, Parallel Computing, Networking, Windows Communication Foundation and Windows Workflow Foundation.</source>
          <target state="translated">コマンドレット、スクリプト、およびワークフローの作成者は、新しい Microsoft .NET Framework 4 のクラスを Windows PowerShell で使用できます。たとえば、アプリケーションの互換性と配置、Managed Extensibility Framework、並列コンピューティング、ネットワーク接続、Windows Communication Foundation、および Windows Workflow Foundation があります。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Support for Windows Preinstallation Environment</source>
          <target state="translated">Windows プレインストール環境のサポート</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 3.0 is an optional component of Windows Preinstallation Environment (Windows PE) 4.0 for Windows 8.</source>
          <target state="translated">Windows PowerShell 3.0 は、Windows 8 用の Windows プレインストール環境 (Windows PE) 4.0 に含まれるオプションのコンポーネントです。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Windows PE is a minimal operating system that starts a computer that has no operating system and prepares it for Windows installation.</source>
          <target state="translated">Windows PE は、オペレーティング システムのないコンピューターを起動して Windows のインストール用に準備する、最小限のオペレーティング システムです。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>Windows PE can be used to partition and format hard drives, copy disk images to a computer, and initiate Windows Setup from a network share.</source>
          <target state="translated">Windows PE を使用すると、ハード ドライブのパーティションの作成やフォーマット、ディスク イメージのコンピューターへのコピー、ネットワーク共有からの Windows セットアップの開始などを実行できます。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 3.0 can be used on Windows PE to manage deployment, diagnostics, and recovery scenarios.</source>
          <target state="translated">Windows PowerShell 3.0 は、展開、診断、および復旧のシナリオを管理するために Windows PE で使用できます。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Disconnected Sessions</source>
          <target state="translated">切断されたセッション</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, persistent user-managed sessions ("PSSessions") that you create by using the New-PSSession cmdlet are saved on the remote computer.</source>
          <target state="translated">Windows PowerShell 3.0 以降では、New-PSSession コマンドレットを使用してユーザーが作成した、ユーザーが管理する永続的なセッション ("PSSessions") がリモート コンピューター上に保存されます。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>They are no longer dependent on the session in which they were created.</source>
          <target state="translated">それらのセッションは、作成元のセッションに依存しなくなりました。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>You can now disconnect from a session without disrupting the commands that are running in the session.</source>
          <target state="translated">セッションで実行されているコマンドを中断せずに、セッションから切断できるようになりました。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>You can close the session and shut down your computer.</source>
          <target state="translated">セッションを終了したり、コンピューターをシャットダウンしたりできます。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>Later, you can reconnect to the session from a different session on the same or on a different computer.</source>
          <target state="translated">後で、同じまたは異なるコンピューター上の異なるセッションから、元のセッションに再接続できます。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ComputerName<ept id="p1">**</ept> parameter of the <bpt id="p2">[</bpt>Get-PSSession<ept id="p2">](https://technet.microsoft.com/en-us/library/b2b10531-d0df-4746-b877-e75c09955cb6)</ept> cmdlet now gets all of the user's sessions that connect to the computer, even if they were started in a different session on a different computer.</source>
          <target state="translated"><bpt id="p2">[</bpt>Get-PSSession<ept id="p2">](https://technet.microsoft.com/en-us/library/b2b10531-d0df-4746-b877-e75c09955cb6)</ept> コマンドレットの <bpt id="p1">**</bpt>ComputerName<ept id="p1">**</ept> パラメーターで、コンピューターに接続されているすべてのユーザー セッション (異なるコンピューター上の異なるセッションで開始されたセッションを含む) を取得できるようになりました。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>You can connect to the sessions, get the results of commands, start new commands, and then disconnect from the session.</source>
          <target state="translated">そのセッションへの接続、コマンドの結果の取得、新しいコマンドの開始、セッションの切断を実行できます。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>New cmdlets have been added to support the Disconnected Sessions feature, including <bpt id="p1">[</bpt>Disconnect-PSSession<ept id="p1">](https://technet.microsoft.com/en-us/library/f8f95111-612f-4cba-9098-77904b0473d8)</ept>, <bpt id="p2">[</bpt>Connect-PSSession<ept id="p2">](https://technet.microsoft.com/en-us/library/b803dd29-f208-4079-80d4-db04d778f060)</ept>, and Receive-PSSession, and new parameters have been added to cmdlets that manage PSSessions, such as the <bpt id="p3">**</bpt>InDisconnectedSession<ept id="p3">**</ept> parameter of the <bpt id="p4">[</bpt>Invoke-Command<ept id="p4">](https://technet.microsoft.com/en-us/library/906b4b41-7da8-4330-9363-e7164e5e6970)</ept> cmdlet.</source>
          <target state="translated">"切断されたセッション" 機能をサポートする新しいコマンドレットが追加されました。たとえば、<bpt id="p1">[</bpt>Disconnect-PSSession<ept id="p1">](https://technet.microsoft.com/en-us/library/f8f95111-612f-4cba-9098-77904b0473d8)</ept>、<bpt id="p2">[</bpt>Connect-PSSession<ept id="p2">](https://technet.microsoft.com/en-us/library/b803dd29-f208-4079-80d4-db04d778f060)</ept>、Receive-PSSession などです。また、PSSessions を管理するコマンドレットに新しいパラメーターが追加されました。たとえば、<bpt id="p4">[</bpt>Invoke-Command<ept id="p4">](https://technet.microsoft.com/en-us/library/906b4b41-7da8-4330-9363-e7164e5e6970)</ept> コマンドレットの <bpt id="p3">**</bpt>InDisconnectedSession<ept id="p3">**</ept> パラメーターなどです。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>The Disconnected Sessions feature is supported only when the computers at both the originating ("client") and terminating ("server") ends of the connection are running Windows PowerShell 3.0.</source>
          <target state="translated">"切断されたセッション" 機能がサポートされるのは、接続の両端、つまり、開始側 ("クライアント") と終了側 ("サーバー") にある両方のコンピューターで Windows PowerShell 3.0 が実行されている場合のみです。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Robust Session Connectivity</source>
          <target state="translated">堅牢なセッション接続</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 3.0 detects unexpected losses of connectivity between the client and server and attempts to reestablish connectivity and resume execution automatically.</source>
          <target state="translated">Windows PowerShell 3.0 は、クライアントとサーバー間の接続が予期せずに失われた状態を検出すると、自動的に接続を再接続し、実行を再開しようとします。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>If the client-server connection cannot be reestablished in the allotted time, the user is notified and the session is disconnected.</source>
          <target state="translated">割り当てられた時間内にクライアントとサーバー間の接続を再確立できなかった場合は、ユーザーに通知され、セッションは切断されます。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>During the attempt to reconnect, Windows PowerShell provides continuous feedback to the user.</source>
          <target state="translated">再接続を試行している間、Windows PowerShell はユーザーに通知を継続的にフィードバックします。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>If the disconnected session was started by using the InvokeCommand, Windows PowerShell creates a job for the disconnected session to make it easier to reconnect and resume execution.</source>
          <target state="translated">切断されたセッションが InvokeCommand を使用して開始されたものである場合、Windows PowerShell は、容易に再接続して実行を再開できるようにするために、切断されたセッションのためのジョブを作成します。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>These features provide a more reliable and recoverable remoting experience and allow users to perform long-running tasks that require robust sessions, such as workflows.</source>
          <target state="translated">これらの機能により、さらに信頼性が高く、再開可能なリモート処理エクスペリエンスが提供されるため、ワークフローなど、堅牢なセッションを必要とする長時間実行されるタスクを実行できます。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>Updatable Help System</source>
          <target state="translated">更新可能なヘルプ システム</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>You can now download updated help files for the cmdlets in your modules.</source>
          <target state="translated">モジュール内のコマンドレットに関する更新されたヘルプ ファイルをダウンロードできるようになりました。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Update-Help<ept id="p1">](https://technet.microsoft.com/en-us/library/93e1d870-ace6-432b-8778-8920291d7545)</ept> cmdlet identifies the newest help files, downloads them from the Internet, unpacks them, validates them, and installs them in the correct language-specific directory for the module.</source>
          <target state="translated"><bpt id="p1">[</bpt>Update-Help<ept id="p1">](https://technet.microsoft.com/en-us/library/93e1d870-ace6-432b-8778-8920291d7545)</ept> コマンドレットは、最新のヘルプ ファイルを識別し、それらのファイルをインターネットからダウンロードし、アンパックし、検証し、モジュール用の言語固有の該当するディレクトリにインストールします。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>To use the updated help files, just type <ph id="ph1">`Get-Help`</ph>.</source>
          <target state="translated">更新されたヘルプ ファイルは、<ph id="ph1">`Get-Help`</ph> と入力するだけで使用できます。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>You do not need to restart Windows or Windows PowerShell.</source>
          <target state="translated">Windows または Windows PowerShell を再起動する必要はありません。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>To update help for modules in the $pshome directory, start Windows PowerShell with the "Run as administrator" option.</source>
          <target state="translated">$pshome ディレクトリのモジュールのヘルプを更新するには、[管理者として実行] オプションを使用して Windows PowerShell を起動します。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>To support users who don't have Internet access and users behind firewalls, the new <bpt id="p1">[</bpt>Save-Help<ept id="p1">](https://technet.microsoft.com/en-us/library/aed94f90-b73f-4e25-a25d-7c18d9f161fa)</ept> cmdlet downloads help files to a file system directory, such as a file share.</source>
          <target state="translated">インターネットにアクセスできないユーザーやファイアウォールの内側にいるユーザーをサポートするには、新しいコマンドレット <bpt id="p1">[</bpt>Save-Help<ept id="p1">](https://technet.microsoft.com/en-us/library/aed94f90-b73f-4e25-a25d-7c18d9f161fa)</ept> を使用して、ファイル共有などのファイル システム ディレクトリにヘルプ ファイルをダウンロードします。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Users can then use the <bpt id="p1">[</bpt>Update-Help<ept id="p1">](https://technet.microsoft.com/en-us/library/93e1d870-ace6-432b-8778-8920291d7545)</ept> cmdlet to get updated help files from the file share.</source>
          <target state="translated">その後、ユーザーは <bpt id="p1">[</bpt>Update-Help<ept id="p1">](https://technet.microsoft.com/en-us/library/93e1d870-ace6-432b-8778-8920291d7545)</ept> コマンドレットを使用して、更新されたヘルプ ファイルをファイル共有から入手します。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>Update-Help<ept id="p1">](https://technet.microsoft.com/en-us/library/93e1d870-ace6-432b-8778-8920291d7545)</ept> cmdlet to update help files for all or particular modules in all supported UI cultures.</source>
          <target state="translated"><bpt id="p1">[</bpt>Update-Help<ept id="p1">](https://technet.microsoft.com/en-us/library/93e1d870-ace6-432b-8778-8920291d7545)</ept> コマンドレットを使用してヘルプ ファイルを更新する際は、すべてのサポートされる UI カルチャのすべてのモジュール、または特定のモジュールに対して更新を実行できます。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>You can even put an <bpt id="p1">[</bpt>Update-Help<ept id="p1">](https://technet.microsoft.com/en-us/library/93e1d870-ace6-432b-8778-8920291d7545)</ept> command in your Windows PowerShell profile.</source>
          <target state="translated">Windows PowerShell プロファイルに <bpt id="p1">[</bpt>Update-Help<ept id="p1">](https://technet.microsoft.com/en-us/library/93e1d870-ace6-432b-8778-8920291d7545)</ept> コマンドを置くこともできます。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>By default, Windows PowerShell downloads the help files for a module no more than once each day.</source>
          <target state="translated">既定では、Windows PowerShell は、モジュールに対するヘルプ ファイルを 1 日に 1 回を超えてダウンロードすることはありません。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Windows 8 and Windows Server 2012 modules do not include help files.</source>
          <target state="translated">Windows 8 および Windows Server 2012 モジュールにはヘルプ ファイルが含まれていません。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>To download the latest help files, type <ph id="ph1">`Update-Help`</ph>.</source>
          <target state="translated">最新のヘルプ ファイルをダウンロードするには、<ph id="ph1">`Update-Help`</ph> と入力します。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>For more information, type <ph id="ph1">`Get-Help`</ph> (without parameters) or see <bpt id="p1">[</bpt>about_Updatable_Help<ept id="p1">](https://technet.microsoft.com/en-us/library/10bba75c-f4ac-4ca1-bbf3-8f34dd521ffe)</ept>.</source>
          <target state="translated">詳細については、<ph id="ph1">`Get-Help`</ph> と入力する (パラメーターなし) か、「<bpt id="p1">[</bpt>about_Updatable_Help<ept id="p1">](https://technet.microsoft.com/en-us/library/10bba75c-f4ac-4ca1-bbf3-8f34dd521ffe)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>When the help files for a cmdlet are not installed on the computer, the <bpt id="p1">[</bpt>Get-Help<ept id="p1">](https://technet.microsoft.com/en-us/library/1f46eeb4-49d7-4bec-bb29-395d9b42f54a)</ept> cmdlet now displays auto-generated help.</source>
          <target state="translated">コンピューターにコマンドレットのヘルプ ファイルがインストールされていない場合、<bpt id="p1">[</bpt>Get-Help<ept id="p1">](https://technet.microsoft.com/en-us/library/1f46eeb4-49d7-4bec-bb29-395d9b42f54a)</ept> コマンドレットは、自動生成されたヘルプを表示するようになりました。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>The auto-generated help includes the command syntax and instructions for using the <bpt id="p1">[</bpt>Update-Help<ept id="p1">](https://technet.microsoft.com/en-us/library/93e1d870-ace6-432b-8778-8920291d7545)</ept> cmdlet to download help files.</source>
          <target state="translated">自動生成されたヘルプには、コマンドの構文と、<bpt id="p1">[</bpt>Update-Help<ept id="p1">](https://technet.microsoft.com/en-us/library/93e1d870-ace6-432b-8778-8920291d7545)</ept> コマンドレットを使用してヘルプ ファイルをダウンロードする方法が記載されています。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>Any module author can support Updatable Help for their module.</source>
          <target state="translated">モジュールの作成者は、自分のモジュールに対して更新可能なヘルプをサポートできます。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>You can include help files in the module and use Updatable Help to update them or omit the help files and use Updatable Help to install them.</source>
          <target state="translated">モジュールにヘルプ ファイルを組み込んでおき、更新可能なヘルプを使用してそれらのヘルプ ファイルを更新することができます。あるいは、ヘルプ ファイルを省略し、更新可能なヘルプを使用してヘルプ ファイルをインストールすることもできます。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>For more information about supporting Updatable Help, see <bpt id="p1">[</bpt>Supporting Updatable Help<ept id="p1">](http://go.microsoft.com/FWLink/?LinkID=242129)</ept> in MSDN.</source>
          <target state="translated">更新可能なヘルプのサポートに関する詳細は、MSDN にある「<bpt id="p1">[</bpt>更新可能なヘルプのサポート<ept id="p1">](http://go.microsoft.com/FWLink/?LinkID=242129)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>Enhanced Online Help</source>
          <target state="translated">強化されたオンライン ヘルプ</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Windows PowerShell online help is a valuable resource for all users, but it is especially important to users who do not or cannot install updated help files.</source>
          <target state="translated">Windows PowerShell のオンライン ヘルプはすべてのユーザーにとって価値のあるリソースですが、更新されたヘルプ ファイルをインストールしない、またはインストールできないユーザーにとっては特に重要です。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>To get online help for any Windows PowerShell cmdlet, type:</source>
          <target state="translated">Windows PowerShell コマンドレットのオンライン ヘルプを取得するには、次のように入力します。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Windows PowerShell opens the online version of the help topic in your default Internet browser.</source>
          <target state="translated">Windows PowerShell は、既定のインターネット ブラウザーでオンライン版のヘルプ トピックを開きます。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Help -Online<ept id="p1">**</ept> feature in Windows PowerShell 3.0 is now even more powerful because it works even when help files for the cmdlet are not installed on the computer.</source>
          <target state="translated">Windows PowerShell 3.0 の <bpt id="p1">**</bpt>Get-Help -Online<ept id="p1">**</ept> はさらに機能が強化され、コマンドレットのヘルプ ファイルがコンピューターにインストールされていない場合でも機能します。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Help -Online<ept id="p1">**</ept> feature gets the URI for online help topic from the HelpUri property of cmdlets and advanced functions.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-Help -Online<ept id="p1">**</ept> 機能では、コマンドレットおよび高度な関数の HelpUri プロパティからオンライン ヘルプ トピックの URI を取得します。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, authors of C# cmdlets can populate the <bpt id="p1">**</bpt>HelpUri<ept id="p1">**</ept> property by creating a <bpt id="p2">**</bpt>HelpUri<ept id="p2">**</ept> attribute on the cmdlet class.</source>
          <target state="translated">Windows PowerShell 3.0 以降では、C# コマンドレットの作成者は、コマンドレット クラスで <bpt id="p2">**</bpt>HelpUri<ept id="p2">**</ept> 属性を作成することにより <bpt id="p1">**</bpt>HelpUri<ept id="p1">**</ept> プロパティに値を設定できます。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Authors of advanced functions can define a <bpt id="p1">**</bpt>HelpUri<ept id="p1">**</ept> property on the <bpt id="p2">**</bpt>CmdletBinding<ept id="p2">**</ept> attribute.</source>
          <target state="translated">高度な関数の作成者は、<bpt id="p2">**</bpt>CmdletBinding<ept id="p2">**</ept> 属性に <bpt id="p1">**</bpt>HelpUri<ept id="p1">**</ept> プロパティを定義できます。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">**</bpt>HelpUri<ept id="p1">**</ept> property must begin with "http" or "https".</source>
          <target state="translated"><bpt id="p1">**</bpt>HelpUri<ept id="p1">**</ept> プロパティの値は、"http" または "https" で始まる必要があります。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>You can also include a <bpt id="p1">**</bpt>HelpUri<ept id="p1">**</ept> value in the first related link of an XML-based cmdlet help file or the .Link directive of comment-based help in a function.</source>
          <target state="translated">さらに、<bpt id="p1">**</bpt>HelpUri<ept id="p1">**</ept> の値は、コマンドレットの XML ベースのヘルプ ファイルにある最初の関連リンク内や、関数内のコメント ベースのヘルプにある .Link ディレクティブにも組み込めます。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>For more information about supporting online help, see <bpt id="p1">[</bpt>Supporting Online Help<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=242132)</ept> in MSDN.</source>
          <target state="translated">オンライン ヘルプのサポートに関する詳細は、MSDN にある「<bpt id="p1">[</bpt>オンライン ヘルプのサポート<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=242132)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>CIM integration</source>
          <target state="translated">CIM の統合</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 3.0 includes support for the Common Information Model (CIM), which provides common definitions of management information for systems, networks, applications, and services, allowing them the exchange of management information between heterogeneous systems.</source>
          <target state="translated">Windows PowerShell 3.0 には、Common Information Model (CIM) のサポートが組み込まれています。CIM は、システム、ネットワーク、アプリケーション、およびサービスの管理情報について共通の定義を提供するもので、異種システム間での管理情報の交換を可能にします。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>Support for CIM in Windows PowerShell 3.0, including the ability to author Windows PowerShell cmdlets based on new or existing CIM classes, commands based on cmdlet definition XML files, support for CIM .NET Framework.</source>
          <target state="translated">Windows PowerShell 3.0 での CIM のサポートには、新規または既存の CIM クラスに基づいて Windows PowerShell コマンドレットを作成する機能、コマンドレットを定義する XML ファイルに基づいてコマンドを作成する機能のほか、CIM .NET Framework</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>API, CIM management cmdlets and WMI 2.0 providers.</source>
          <target state="translated">API、CIM 管理コマンドレット、および WMI 2.0 プロバイダーのサポートが含まれます。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Session Configuration Files</source>
          <target state="translated">セッション構成ファイル</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can design a custom session configuration by using a file.</source>
          <target state="translated">Windows PowerShell 3.0 以降では、ファイルを使用してカスタム セッションの構成を設計できます。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>The new session configuration file lets you determine the environment of sessions that use the session configuration, including which modules, scripts, and format files are loaded into sessions, which cmdlets and language elements users can use, which modules and scripts they can run, and which variables they can see.</source>
          <target state="translated">新しいセッション構成ファイルでは、そのセッション構成を使用するセッションの環境を決定できます。たとえば、セッションに読み込むモジュール、スクリプト、およびフォーマット ファイル、ユーザーが使用できるコマンドレットおよび言語要素、ユーザーが実行できるモジュールおよびスクリプト、ユーザーが見ることのできる変数を決定します。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>You can design a session in which users can only run the cmdlets from one particular module, or a session in which users have full language, access to all modules, and access to scripts that perform advanced tasks.</source>
          <target state="translated">ユーザーが特定の 1 つのモジュールからコマンドレットを実行できるだけのセッションを設計できます。あるいは、ユーザーが完全な言語を持ち、すべてのモジュールにアクセスでき、高度なタスクを実行するスクリプトにアクセスできるセッションを設計できます。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>In previous versions of Windows PowerShell, control at this level was available only to those who could write a C# program or a complex start-up script.</source>
          <target state="translated">以前のバージョンの Windows PowerShell では、このレベルの制御は、C# プログラムや複雑なスタートアップ スクリプトを作成できる人のみが使用できました。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>Now, any member of the Administrators group on the computer can customize a session configuration by using a configuration file.</source>
          <target state="translated">現在は、コンピューターの Administrators グループのすべてのメンバーが、構成ファイルを使用してセッションの構成をカスタマイズできます。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>To create a session configuration file, use the <bpt id="p1">[</bpt>New-PSSessionConfigurationFile<ept id="p1">](https://technet.microsoft.com/en-us/library/5f3e3633-6e90-479c-aea9-ba45a1954866)</ept> cmdlet.</source>
          <target state="translated">セッション構成ファイルを作成するには、<bpt id="p1">[</bpt>New-PSSessionConfigurationFile<ept id="p1">](https://technet.microsoft.com/en-us/library/5f3e3633-6e90-479c-aea9-ba45a1954866)</ept> コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>To apply the session configuration file to a session configuration, use the <bpt id="p1">[</bpt>Register-PSSessionConfiguration<ept id="p1">](https://technet.microsoft.com/en-us/library/e9152ae2-bd6d-4056-9bc7-dc1893aa29ea)</ept> or <bpt id="p2">[</bpt>Set-PSSessionConfiguration<ept id="p2">](https://technet.microsoft.com/en-us/library/b21fbad3-1759-4260-b206-dcb8431cd6ea)</ept> cmdlets.</source>
          <target state="translated">セッション構成ファイルをセッション構成に適用するには、<bpt id="p1">[</bpt>Register-PSSessionConfiguration<ept id="p1">](https://technet.microsoft.com/en-us/library/e9152ae2-bd6d-4056-9bc7-dc1893aa29ea)</ept> コマンドレットまたは <bpt id="p2">[</bpt>Set-PSSessionConfiguration<ept id="p2">](https://technet.microsoft.com/en-us/library/b21fbad3-1759-4260-b206-dcb8431cd6ea)</ept> コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>about_Session_Configuration_Files<ept id="p1">](https://technet.microsoft.com/en-us/library/c7217447-1ebf-477b-a8ef-4dbe9a1473b8)</ept> and <bpt id="p2">[</bpt>New-PSSessionConfigurationFile<ept id="p2">](https://technet.microsoft.com/en-us/library/5f3e3633-6e90-479c-aea9-ba45a1954866)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>about_Session_Configuration_Files<ept id="p1">](https://technet.microsoft.com/en-us/library/c7217447-1ebf-477b-a8ef-4dbe9a1473b8)</ept>」および「<bpt id="p2">[</bpt>New-PSSessionConfigurationFile<ept id="p2">](https://technet.microsoft.com/en-us/library/5f3e3633-6e90-479c-aea9-ba45a1954866)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Scheduled Jobs and Task Scheduler Integration</source>
          <target state="translated">スケジュールされたジョブ、およびタスク スケジューラとの統合</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>You can now schedule Windows PowerShell background jobs and manage them in Windows PowerShell and in Task Scheduler.</source>
          <target state="translated">Windows PowerShell のバックグラウンド ジョブは、Windows PowerShell およびタスク スケジューラでスケジュールを設定し、管理できるようになりました。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Windows PowerShell scheduled jobs are a useful hybrid of Windows PowerShell background jobs and Task Scheduler tasks.</source>
          <target state="translated">Windows PowerShell のスケジュール設定されたジョブは、Windows PowerShell のバックグラウンド ジョブとタスク スケジューラのタスクを統合した便利なハイブリッドです。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Like Windows PowerShell background jobs, scheduled jobs run asynchronously in the background.</source>
          <target state="translated">Windows PowerShell のバックグラウンド ジョブと同様、スケジュールされたジョブはバックグラウンドで非同期に実行されます。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>Instances of scheduled jobs that have completed can be managed by using the job cmdlets, such as <bpt id="p1">[</bpt>Start-Job<ept id="p1">](https://technet.microsoft.com/en-us/library/2bc04935-0deb-4ec0-b856-d7290cca6442)</ept> and <bpt id="p2">[</bpt>Get-Job<ept id="p2">](https://technet.microsoft.com/en-us/library/1352c534-7193-46ca-9ab1-0c5219a661ad)</ept>.</source>
          <target state="translated">スケジュールされたジョブが完了したインスタンスは、<bpt id="p1">[</bpt>Start-Job<ept id="p1">](https://technet.microsoft.com/en-us/library/2bc04935-0deb-4ec0-b856-d7290cca6442)</ept> および <bpt id="p2">[</bpt>Get-Job<ept id="p2">](https://technet.microsoft.com/en-us/library/1352c534-7193-46ca-9ab1-0c5219a661ad)</ept> などのジョブ コマンドレットを使用して管理できます。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>Like Task Scheduler tasks, you can run scheduled jobs on a one-time or recurrent schedule, or in response to an action or event.</source>
          <target state="translated">タスク スケジューラのタスクと同様、スケジュールされたジョブは 1 回または繰り返し実行したり、特定のアクションまたはイベントへの応答として実行したりできます。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>You can view and manage scheduled jobs in Task Scheduler, enable and disable them as needed, run them or use them as templates, and set conditions under which the jobs start.</source>
          <target state="translated">スケジュールされたジョブはタスク スケジューラで表示および管理できます。必要に応じて有効または無効にする、実行する、テンプレートとして使用する、ジョブが開始される条件を設定するなどの操作が可能です。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>In addition, scheduled jobs come with a customized set of cmdlets for managing them.</source>
          <target state="translated">さらに、スケジュールされたジョブには、それらのジョブを管理するためのカスタマイズされた一連のコマンドレットがあります。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>The cmdlets let you create, edit, manage, disable, and re-enable scheduled jobs, create scheduled job triggers and set scheduled job options.</source>
          <target state="translated">それらのコマンドレットでは、スケジュールされたジョブの作成、編集、管理、無効化、再有効化を実行したり、スケジュールされたジョブのトリガーを作成したり、スケジュールされたジョブのオプションを設定したりできます。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>For more information about scheduled jobs, see <bpt id="p1">[</bpt>about_Scheduled_Jobs<ept id="p1">](https://technet.microsoft.com/en-us/library/3b546629-703c-4939-b44f-52dd567bce92)</ept>.</source>
          <target state="translated">スケジュールされたジョブの詳細については、「<bpt id="p1">[</bpt>about_Scheduled_Jobs<ept id="p1">](https://technet.microsoft.com/en-us/library/3b546629-703c-4939-b44f-52dd567bce92)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>Windows PowerShell Language Enhancements</source>
          <target state="translated">Windows PowerShell 言語の機能強化</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 3.0 includes many features that are designed to make its language simpler, easier to use, and to avoid common errors.</source>
          <target state="translated">Windows PowerShell 3.0 には、言語を単純化し、使いやすくし、一般的なエラーを回避するために設計された多くの機能が含まれます。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>The improvements include property enumeration, count and length properties on scalar objects, new redirection operators, the $Using scope modifier, PSItem automatic variable, flexible script formatting, attributes of variables, simplified attribute arguments, numeric command names, the Stop-Parsing operator, improved array splatting, new bit operators, ordered dictionaries, PSCustomObject casting, and improved comment-based help.</source>
          <target state="translated">強化された機能としては、スカラー オブジェクトに対するプロパティの列挙、カウントや長さのプロパティ、新しいリダイレクト演算子、$Using スコープ修飾子、PSItem 自動変数、柔軟性の高いスクリプトの書式設定、変数の属性、簡略化された属性の引数、数値のコマンド名、Stop-Parsing 演算子、強化された配列スプラッティング、新しいビット演算子、順序付けられた辞書、PSCustomObject のキャスト、および強化されたコメント ベースのヘルプがあります。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>New Core Cmdlets</source>
          <target state="translated">新しいコア コマンドレット</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>New cmdlets were added to the Windows PowerShell Core installation, including cmdlets to manage scheduled jobs, disconnected sessions, CIM integration and the Updatable Help System.</source>
          <target state="translated">新しいコマンドレットが Windows PowerShell コアのインストールに追加されました。スケジュールされたジョブ、切断されたセッション、CIM 統合、更新可能なヘルプ システムを管理するコマンドレットです。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>Add-JobTrigger</source>
          <target state="translated">Add-JobTrigger</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>New-JobTrigger</source>
          <target state="translated">New-JobTrigger</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>Connect-PSSession</source>
          <target state="translated">Connect-PSSession</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>New-PSSessionConfigurationFile</source>
          <target state="translated">New-PSSessionConfigurationFile</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>ConvertFrom-Json</source>
          <target state="translated">ConvertFrom-Json</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>New-PSTransportOption</source>
          <target state="translated">New-PSSessionOption</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>ConvertTo-Json</source>
          <target state="translated">ConvertTo-Json</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>New-PSWorkflowExecutionOption</source>
          <target state="translated">New-PSWorkflowExecutionOption</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>Disable-JobTrigger</source>
          <target state="translated">Disable-JobTrigger</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>New-PSWorkflowSession</source>
          <target state="translated">New-PSWorkflowSession</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>Disable-ScheduledJob</source>
          <target state="translated">Disable-ScheduledJob</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>New-ScheduledJobOption</source>
          <target state="translated">New-ScheduledJobOption</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Disconnect-PSSession</source>
          <target state="translated">Disconnect-PSSession</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>New-WinEvent</source>
          <target state="translated">New-WinEvent</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>Enable-JobTrigger</source>
          <target state="translated">Enable-JobTrigger</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>Receive-PSSession</source>
          <target state="translated">Receive-PSSession</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Enable-ScheduledJob</source>
          <target state="translated">Enable-ScheduledJob</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>Register-CimIndicationEvent</source>
          <target state="translated">Register-CimIndicationEvent</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>Get-CimAssociatedInstance</source>
          <target state="translated">Get-CimAssociatedInstance</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Register-ScheduledJob</source>
          <target state="translated">Register-ScheduledJob</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>Get-CimClass</source>
          <target state="translated">Get-CimClass</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>Remove-CimInstance</source>
          <target state="translated">Remove-CimInstance</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>Get-CimInstance</source>
          <target state="translated">Get-CimInstance</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>Remove-CimSession</source>
          <target state="translated">Remove-CimSession</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Get-CimSession</source>
          <target state="translated">Get-CimSession</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>Remove-TypeData</source>
          <target state="translated">Remove-TypeData</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>Get-ControlPanelItem</source>
          <target state="translated">Get-ControlPanelItem</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>Rename-Computer</source>
          <target state="translated">Rename-Computer</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>Get-IseSnippet</source>
          <target state="translated">Get-IseSnippet</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>Resume-Job</source>
          <target state="translated">Resume-Job</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>Get-JobTrigger</source>
          <target state="translated">Get-JobTrigger</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>Save-Help</source>
          <target state="translated">Save-Help</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Get-ScheduledJob</source>
          <target state="translated">Get-ScheduledJob</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>Set-CimInstance</source>
          <target state="translated">Set-CimInstance</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>Get-ScheduledJobOption</source>
          <target state="translated">Get-ScheduledJobOption</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>Set-JobTrigger</source>
          <target state="translated">Set-JobTrigger</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Get-TypeData</source>
          <target state="translated">Get-TypeData</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>Set-ScheduledJob</source>
          <target state="translated">Set-ScheduledJob</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>Import-IseSnippet</source>
          <target state="translated">Import-IseSnippet</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>Set-ScheduledJobOption</source>
          <target state="translated">Set-ScheduledJobOption</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>Invoke-AsWorkflow</source>
          <target state="translated">Invoke-AsWorkflow</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Show-Command</source>
          <target state="translated">Show-Command</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>Invoke-CimMethod</source>
          <target state="translated">Invoke-CimMethod</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>Show-ControlPanelItem</source>
          <target state="translated">Show-ControlPanelItem</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>Invoke-RestMethod</source>
          <target state="translated">Invoke-RestMethod</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>Suspend-Job</source>
          <target state="translated">Suspend-Job</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>Invoke-WebRequest</source>
          <target state="translated">Invoke-WebRequest</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>Test-PSSessionConfigurationFile</source>
          <target state="translated">Test-PSSessionConfigurationFile</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>New-CimInstance</source>
          <target state="translated">New-CimInstance</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>Unblock-File</source>
          <target state="translated">Unblock-File</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>New-CimSession</source>
          <target state="translated">New-CimSession</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>Unregister-ScheduledJob</source>
          <target state="translated">Unregister-ScheduledJob</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>New-CimSessionOption</source>
          <target state="translated">New-CimSessionOption</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>Update-Help</source>
          <target state="translated">Update-Help</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>New-IseSnippet</source>
          <target state="translated">New-IseSnippet</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>Improvements to Existing Core Cmdlets and Providers</source>
          <target state="translated">既存のコア コマンドレットとプロバイダーの機能強化</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 3.0 includes new features for existing cmdlets including the simplified syntax, and new parameters for the following cmdlets: Computer cmdlets, CSV cmdlets, Get-ChildItem, Get-Command, Get-Content, Get-History, Measure-Object, Security cmdlets, Select-Object, Select-String, Split-Path, Start-Process, Tee-Object, Test-Connection, Add-Member, and WMI cmdlets.</source>
          <target state="translated">Windows PowerShell 3.0 には、単純化された構文を含む既存のコマンドレットの新機能と次のコマンドレットの新しいパラメーターが含まれています。Computer コマンドレット、CSV コマンドレット、Get-ChildItem、Get-Command、Get-Content、Get-History、Measure-Object、Security コマンドレット、Select-Object、Select-String、Split-Path、Start-Process、Tee-Object、Test-Connection、Add-Member、および WMI コマンドレット。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell providers were also improved significantly, including Certificate provider support for managing Secure Socket Layer (SSL) certificates for web hosting, support for credential, persistent network drives, and alternate data streams in file system drives.</source>
          <target state="translated">また、Windows PowerShell プロバイダーも大幅に機能強化され、Web ホスト用の Secure Socket Layer (SSL) 証明書を管理するための証明書プロバイダーのサポート、資格情報のサポート、およびファイル システム ドライブにおける永続化されたネットワーク ドライブと代替データ ストリームのサポートが改善されました。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>Remote module import and discovery</source>
          <target state="translated">リモート モジュールのインポートと検出</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 3.0 extends module discovery, importing, and implicit remoting capabilities on remote computers.</source>
          <target state="translated">Windows PowerShell 3.0 では、リモート コンピューター上でのモジュールの検出、インポート、および暗黙的なリモート処理の機能が拡張されました。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>The Module cmdlets get modules on remote computers and import the modules to the remote or local computer by using Windows PowerShell remoting.</source>
          <target state="translated">Module コマンドレットは、Windows PowerShell のリモート処理を使用してリモート コンピューター上のモジュールを取得し、モジュールをリモートまたはローカル コンピューターにインポートします。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>New CIM session support allows you to use CIM and WMI to manage non-Windows computers by importing commands to the local computer that run implicitly on the remote computer.</source>
          <target state="translated">新しい CIM セッションのサポートでは、Windows 以外のコンピューターを管理するために CIM および WMI を使用して、リモート コンピューター上で暗黙的に実行されるコマンドをローカル コンピューターにインポートできます。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>For more information, see the help topics for the <bpt id="p1">[</bpt>Get-Module<ept id="p1">](https://technet.microsoft.com/en-us/library/2cccd4c4-9a21-4c77-b691-984ee57242e1)</ept> and <bpt id="p2">[</bpt>Import-Module<ept id="p2">](https://technet.microsoft.com/en-us/library/af616c24-e122-4098-930e-1e3ea2080ade)</ept> cmdlets.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>Get-module<ept id="p1">](https://technet.microsoft.com/en-us/library/2cccd4c4-9a21-4c77-b691-984ee57242e1)</ept>」コマンドレットと「<bpt id="p2">[</bpt>Import-module<ept id="p2">](https://technet.microsoft.com/en-us/library/af616c24-e122-4098-930e-1e3ea2080ade)</ept>」コマンドレットのヘルプ トピックを参照してください。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>Enhanced Tab Completion</source>
          <target state="translated">強化された Tab 補完機能</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>Tab completion in the Windows PowerShell console now completes the names of cmdlets, parameters, parameter values, enumerations, .NET Frameworks types, COM objects, hidden directories, and more.</source>
          <target state="translated">Windows PowerShell コンソールの Tab 補完機能では、コマンドレット、パラメーター、パラメーター値、列挙、.NET Framework 型、COM オブジェクト、隠しディレクトリなどの名前が補完されるようになりました。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>The tab completion feature is completely rewritten based on a new parser and abstract syntax tree to support more scenarios, including in-memory parsing trees and midline tab completion.</source>
          <target state="translated">Tab 補完機能は、新しいパーサーと抽象構文ツリーに基づいて完全に再作成され、インメモリ解析ツリーや行の途中での Tab 補完を含むより多くのシナリオをサポートします。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>Module Auto-Loading</source>
          <target state="translated">モジュールの自動読み込み</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Get-Command<ept id="p1">](https://technet.microsoft.com/en-us/library/59c6d302-6e8c-48b7-a6f6-f0172df936ad)</ept> cmdlet now gets all cmdlets and functions from all modules that are installed on the computer, even if the module is not imported into the current session.</source>
          <target state="translated"><bpt id="p1">[</bpt>Get-Command<ept id="p1">](https://technet.microsoft.com/en-us/library/59c6d302-6e8c-48b7-a6f6-f0172df936ad)</ept> コマンドレットにより、コンピューターにインストールされているすべてのモジュール (現在のセッションでインポートされないモジュールを含む) のすべてのコマンドレットと関数を取得できるようになりました。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>When you get the cmdlet that you need, you can use it immediately without importing any modules.</source>
          <target state="translated">必要なコマンドレットを取得したら、何かのモジュールをインポートすることなく、すぐに使用できます。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>Windows PowerShell modules are now imported automatically when you use any cmdlet in the module.</source>
          <target state="translated">Windows PowerShell のモジュールは、モジュール内のいずれかのコマンドレットを使用した時点で自動的にインポートされるようになりました。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>You no longer need to search for the module and import it to use its cmdlets.</source>
          <target state="translated">モジュールを検索したり、それに含まれるコマンドレットを使用するためにインポートしたりする必要がありません。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>Automatic importing of modules is triggered by using the cmdlet in a command, running <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> for a cmdlet without wildcards, or running <bpt id="p2">[</bpt>Get-Help<ept id="p2">](https://technet.microsoft.com/en-us/library/1f46eeb4-49d7-4bec-bb29-395d9b42f54a)</ept> for a cmdlet without wildcards.</source>
          <target state="translated">モジュールの自動インポートがトリガーされるのは、コマンド内でコマンドレットを使用した場合、コマンドレットの <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> をワイルドカードなしで実行した場合、コマンドレットの <bpt id="p2">[</bpt>Get-Help<ept id="p2">](https://technet.microsoft.com/en-us/library/1f46eeb4-49d7-4bec-bb29-395d9b42f54a)</ept> をワイルドカードなしで実行した場合です。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>You can enable, disable, and configure automatic importing of modules by using the <bpt id="p1">**</bpt>$PSModuleAutoLoadingPreference<ept id="p1">**</ept> preference variable.</source>
          <target state="translated">モジュールの自動インポートの有効/無効の切り替えや構成を行うには、<bpt id="p1">**</bpt>$PSModuleAutoLoadingPreference<ept id="p1">**</ept> ユーザー設定変数を使用します。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>about_Modules [v4]<ept id="p1">](https://technet.microsoft.com/en-us/library/94f57429-a539-4aee-bb0d-205cd7e801f9)</ept>, <bpt id="p2">[</bpt>about_Preference_Variables [v4]<ept id="p2">](https://technet.microsoft.com/en-us/library/31344314-be29-4286-b039-afa5460cbe8b)</ept>, and the help topics for the <bpt id="p3">[</bpt>Get-Command<ept id="p3">](https://technet.microsoft.com/en-us/library/59c6d302-6e8c-48b7-a6f6-f0172df936ad)</ept> and <bpt id="p4">[</bpt>Import-Module<ept id="p4">](https://technet.microsoft.com/en-us/library/af616c24-e122-4098-930e-1e3ea2080ade)</ept> cmdlets.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>about_Modules [v4]<ept id="p1">](https://technet.microsoft.com/en-us/library/94f57429-a539-4aee-bb0d-205cd7e801f9)</ept>」、「<bpt id="p2">[</bpt>about_Preference_Variables [v4]<ept id="p2">](https://technet.microsoft.com/en-us/library/31344314-be29-4286-b039-afa5460cbe8b)</ept>」、および「<bpt id="p3">[</bpt>Get-Command<ept id="p3">](https://technet.microsoft.com/en-us/library/59c6d302-6e8c-48b7-a6f6-f0172df936ad)</ept>」コマンドレットと「<bpt id="p4">[</bpt>Import-Module<ept id="p4">](https://technet.microsoft.com/en-us/library/af616c24-e122-4098-930e-1e3ea2080ade)</ept>」コマンドレットのヘルプ トピックを参照してください。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>Module Experience Improvements</source>
          <target state="translated">モジュールのエクスペリエンスの改善</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 3.0 brings advanced feature support to modules, including the following new features.</source>
          <target state="translated">Windows PowerShell 3.0 は、高度な機能のサポートをモジュールに提供する次のような新機能があります。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>Module logging for individual modules (LogPipelineExecutionDetails) and the new "Turn on Module Logging" Group Policy setting</source>
          <target state="translated">個々のモジュールを対象にしたモジュール ログ (LogPipelineExecutionDetails) と、新しい "モジュール ログをオンにする" グループ ポリシー設定。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>Extended module objects that expose the values from the module manifest</source>
          <target state="translated">モジュール マニフェストから値を公開する拡張されたモジュール オブジェクト。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>New <bpt id="p1">**</bpt>ExportedCommands<ept id="p1">**</ept> property of modules, including nested modules, that combines commands of all types</source>
          <target state="translated">モジュール (入れ子になったモジュールを含む) の新しい <bpt id="p1">**</bpt>ExportedCommands<ept id="p1">**</ept> プロパティ。これは、すべての種類のコマンドを結合するプロパティです。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>Improved discovery of available (un-imported) modules, including allowing the <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ListAvailable<ept id="p2">**</ept> parameters in the same command</source>
          <target state="translated">利用可能な (まだインポートされていない) モジュール検出の機能強化。たとえば、同じコマンド内で <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> および <bpt id="p2">**</bpt>ListAvailable<ept id="p2">**</ept> パラメーターを使用できます。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>New <bpt id="p1">**</bpt>DefaultCommandPrefix<ept id="p1">**</ept> key in module manifests that avoids name conflicts without changing module code.</source>
          <target state="translated">モジュールのコードを変更せずに名前の競合を回避する、モジュール マニフェストの新しい <bpt id="p1">**</bpt>DefaultCommandPrefix<ept id="p1">**</ept> キー。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>Improved module requirements, including fully-qualified required modules with version and GUID and automatic importing of required modules</source>
          <target state="translated">モジュールの要件の改善。必要なモジュールをバージョンと GUID によって完全修飾して指定する機能や、必要なモジュールの自動インポートなどがあります。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>Quieter, streamlined operation of the <bpt id="p1">[</bpt>New-ModuleManifest<ept id="p1">](https://technet.microsoft.com/en-us/library/512adced-f42f-4e88-ba7c-834fc9e5d047)</ept> cmdlet.</source>
          <target state="translated"><bpt id="p1">[</bpt>New-ModuleManifest<ept id="p1">](https://technet.microsoft.com/en-us/library/512adced-f42f-4e88-ba7c-834fc9e5d047)</ept> コマンドレットの操作が効率化され、実行時の対話が減りました。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>New <bpt id="p1">**</bpt>Module<ept id="p1">**</ept> parameter for #Requires</source>
          <target state="translated">#Requires の新しい <bpt id="p1">**</bpt>Module<ept id="p1">**</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>Improved <bpt id="p1">[</bpt>Import-Module<ept id="p1">](https://technet.microsoft.com/en-us/library/af616c24-e122-4098-930e-1e3ea2080ade)</ept> cmdlet with both <bpt id="p2">**</bpt>MinimumVersion<ept id="p2">**</ept> and <bpt id="p3">**</bpt>RequiredVersion<ept id="p3">**</ept> parameters.</source>
          <target state="translated"><bpt id="p1">[</bpt>Import-Module<ept id="p1">](https://technet.microsoft.com/en-us/library/af616c24-e122-4098-930e-1e3ea2080ade)</ept> コマンドレットが改善され、<bpt id="p2">**</bpt>MinimumVersion<ept id="p2">**</ept> および <bpt id="p3">**</bpt>RequiredVersion<ept id="p3">**</ept> の両パラメーターが追加されました。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>Simplified Command Discovery</source>
          <target state="translated">コマンド検出の単純化</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>You no longer need to import all modules to discover the commands available to your session.</source>
          <target state="translated">すべてのモジュールをインポートしないでも、現在のセッションで使用可能なコマンドを検出できるようになりました。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 3.0, the <bpt id="p1">[</bpt>Get-Command<ept id="p1">](https://technet.microsoft.com/en-us/library/59c6d302-6e8c-48b7-a6f6-f0172df936ad)</ept> cmdlet gets all commands from all installed modules.</source>
          <target state="translated">Windows PowerShell 3.0 では、インストールされているすべてのモジュールからすべてのコマンドを <bpt id="p1">[</bpt>Get-Command<ept id="p1">](https://technet.microsoft.com/en-us/library/59c6d302-6e8c-48b7-a6f6-f0172df936ad)</ept> コマンドレットが取得します。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>And, if you use a command, the module that exports the command is automatically imported into your session.</source>
          <target state="translated">また、あるコマンドを使用すると。そのコマンドをエクスポートするモジュールがセッションに自動的にインポートされます。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">[</bpt>Show-Command<ept id="p1">](https://technet.microsoft.com/en-us/library/65bba50b-91a8-49d5-80a2-a30fc684ba41)</ept> cmdlet is designed especially for beginners.</source>
          <target state="translated">新しい <bpt id="p1">[</bpt>Show-Command<ept id="p1">](https://technet.microsoft.com/en-us/library/65bba50b-91a8-49d5-80a2-a30fc684ba41)</ept> コマンドレットは、特に初級ユーザー向けに設計されています。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>You can search for commands in a window.</source>
          <target state="translated">ウィンドウでコマンドを検索できます。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>You can view all commands or filter by module, import a module by clicking a button, use text boxes and drop-down lists to construct a valid command, and then copy or run the command without ever leaving the window.</source>
          <target state="translated">すべてのコマンドを表示するかモジュールによってフィルター処理し、ボタンをクリックしてモジュールをインポートし、テキスト ボックスやドロップダウン リストを使用して有効なコマンドを作成した後、そのコマンドをコピーしたり、このウィンドウを開いたままでコマンドを実行したりできます。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>Improved Logging, Diagnostics, and Group Policy Support</source>
          <target state="translated">ログ記録、診断、およびグループ ポリシーのサポートの改善</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 3.0 improves the logging and tracing support for commands and modules with support for Event Tracing in Windows (ETW) logs, an editable <bpt id="p1">**</bpt>LogPipelineExecutionDetails<ept id="p1">**</ept> property of modules, and the "Turn on Module Logging" Group Policy setting.</source>
          <target state="translated">Windows PowerShell 3.0 において、コマンドとモジュールのログ記録とトレースのサポートが機能強化されました。Windows イベント トレーシング (ETW) ログのサポートが追加され、モジュールの <bpt id="p1">**</bpt>LogPipelineExecutionDetails<ept id="p1">**</ept> プロパティが編集可能になり、グループ ポリシー設定に "モジュール ログを有効にする" が追加されました。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>You can now get parameter values from log details by displaying the log properties.</source>
          <target state="translated">ログ プロパティを表示すれば、ログの詳細からパラメーター値を取得できるようになりました。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>Formatting and Output Improvements</source>
          <target state="translated">書式設定と出力の機能強化</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>New formatting and output improvements improve the efficiency of all Windows PowerShell users.</source>
          <target state="translated">書式設定と出力の新たな機能向上により、すべての Windows PowerShell ユーザーの効率が改善されました。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>The improvements include output redirection for all streams, an enhanced Update-Type cmdlet that adds types dynamically without Format.ps1xml files, word wrap in output, default formatting properties of custom objects, the <bpt id="p1">**</bpt>PSCustomObject<ept id="p1">**</ept> type, improved formatting for WMI objects and heterogeneous objects, and support for discovering method overloads.</source>
          <target state="translated">向上した機能には、すべてのストリームの出力リダイレクト、Format.ps1xml ファイルなしで動的に型を追加できる拡張された Update-Type コマンドレット、出力の右端での折り返し、カスタム オブジェクトの既定の書式設定プロパティ、<bpt id="p1">**</bpt>PSCustomObject<ept id="p1">**</ept> 型、WMI オブジェクトと異種オブジェクトの書式設定の改善、メソッドのオーバーロードを検出する機能のサポートなどがあります。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>Enhanced Console Host Experience</source>
          <target state="translated">コンソール ホストのエクスペリエンスの改善</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell console host program has new features in Windows PowerShell 3.0 including single threaded apartment by default.</source>
          <target state="translated">Windows PowerShell コンソール ホスト プログラムは Windows PowerShell 3.0 で新機能が追加され、既定でシングル スレッド アパートメントがサポートされます。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>The new "Run with PowerShell" option in File Explorer lets you run scripts in a unrestricted session just by right-clicking.</source>
          <target state="translated">エクスプローラーの新しい [PowerShell で実行] オプションを使用すると、右クリックするだけで、制限なしのセッションでスクリプトを実行できます。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>New console host launch logic starts Windows PowerShell faster and new fonts allow you to personalize the familiar console window experience.</source>
          <target state="translated">コンソール ホストの起動ロジックが新しくなり、Windows PowerShell を高速で起動できるようになりました。また、新しいフォントを使用すると、使い慣れたコンソールのウィンドウ エクペリエンスにカスタマイズできます。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>about_Run_With_PowerShell<ept id="p1">](https://technet.microsoft.com/en-us/library/c9d9ca5f-eff9-4409-be9d-e43b5b4087eb)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>about_Run_With_PowerShell<ept id="p1">](https://technet.microsoft.com/en-us/library/c9d9ca5f-eff9-4409-be9d-e43b5b4087eb)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>New Cmdlet and Hosting APIs</source>
          <target state="translated">新しい Cmdlet API および Hosting API</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>The new Cmdlet API and Hosting API include public advanced syntax tree (AST) APIs, and APIs for pipeline paging, nested pipelines, runspace pools tab completion, Windows RT, the Obsolete cmdlet attribute, and Verb and Noun properties of the FunctionInfo object.</source>
          <target state="translated">新しい Cmdlet API および Hosting API には、公開 Advanced Syntax Tree (AST) API、パイプライン ページング、入れ子になったパイプライン、実行空間プールの Tab 補完、Windows RT のための各 API、Obsolete コマンドレット属性、FunctionInfo オブジェクトの Verb および Noun プロパティが含まれています。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>Performance Improvements</source>
          <target state="translated">パフォーマンスの向上</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>Significant performance improvements in Windows PowerShell come from the new language parser, which is built on Dynamic Runtime Language (DLR) in .NET Framework 4., along with runtime script compilation, engine reliability improvements, and changes to the algorithm of the <bpt id="p1">[</bpt>Get-ChildItem<ept id="p1">](https://technet.microsoft.com/en-us/library/75cf79bb-4db6-4a67-8c36-3d20754e2190)</ept> that improve its performance, especially when searching network shares.</source>
          <target state="translated">Windows PowerShell での大幅なパフォーマンスの向上は、.NET Framework 4. の動的言語ランタイム (DLR) 上で構築された新しい言語パーサーの成果です。さらに、ランタイム スクリプトのコンパイルの向上、エンジンの信頼性の向上、および <bpt id="p1">[</bpt>Get-ChildItem<ept id="p1">](https://technet.microsoft.com/en-us/library/75cf79bb-4db6-4a67-8c36-3d20754e2190)</ept> のアルゴリズム変更によるパフォーマンスの向上 (特にネットワーク共有の検索時) なども貢献しています。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>RunAs and Shared Host Support</source>
          <target state="translated">RunAs および共有ホストのサポート</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 3.0 includes support for RunAs and Shared Host features.</source>
          <target state="translated">Windows PowerShell 3.0 には、RunAs 機能と共有ホスト機能のサポートが組み込まれました。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>RunAs<ept id="p1">*</ept> feature, designed for Windows PowerShell Workflow, lets users of a session configuration create sessions that run with the permission of a shared user account.</source>
          <target state="translated"><bpt id="p1">*</bpt>RunAs<ept id="p1">*</ept> 機能は、Windows PowerShell のワークフロー用に設計されたもので、これによりセッション構成のユーザーが共有ユーザー アカウントのアクセス許可で実行するセッションを作成できます。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>This enables less privileged users to run particular commands and scripts with administrator permissions, and reduces the need for adding less senior users to the Administrators group.</source>
          <target state="translated">管理者のアクセス許可が必要な特定のコマンドおよびスクリプトを権限の少ないユーザーが実行できるようになるため、スキルの限られたユーザーを Administrators グループに追加する必要性を削減できます。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>SharedHost<ept id="p1">**</ept> feature allows multiple users on multiple computers to connect to a workflow session concurrently and monitor the progress of a workflow.</source>
          <target state="translated"><bpt id="p1">**</bpt>SharedHost<ept id="p1">**</ept> 機能を使用すると、複数のコンピューター上の複数のユーザーがワークフロー セッションに同時に接続して、ワークフローの進行状況をモニターできます。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>Users can start a workflow on one computer and then connect to the workflow session on another computer without disconnecting the session from the original computer.</source>
          <target state="translated">ユーザーは、1 つのコンピューター上でワークフローを開始した後、別のコンピューター上でそのワークフロー セッションに接続することができ、その際に元のコンピューターからのセッションを切断する必要がありません。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>Users must have the same permissions and be using the same session configuration.</source>
          <target state="translated">ユーザーは、同じアクセス許可を持ち、同じセッション構成を使用している必要があります。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>For more information, see "Running a Windows PowerShell Workflow" in Getting Started with Windows PowerShell Workflow.</source>
          <target state="translated">詳細については、「Windows PowerShell ワークフローについて」の「Windows PowerShell ワークフローの実行」を参照してください。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>Special Character Handling Improvements</source>
          <target state="translated">特殊文字の処理の改善</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>To improve the ability of Windows PowerShell 3.0 to interpret and correctly handle special characters, the <bpt id="p1">**</bpt>LiteralPath<ept id="p1">**</ept> parameter, which handles special characters in paths, is valid on almost all cmdlets that have a <bpt id="p2">**</bpt>Path<ept id="p2">**</ept> parameter, including the new <bpt id="p3">[</bpt>Update-Help<ept id="p3">](https://technet.microsoft.com/en-us/library/93e1d870-ace6-432b-8778-8920291d7545)</ept> and <bpt id="p4">[</bpt>Save-Help<ept id="p4">](https://technet.microsoft.com/en-us/library/aed94f90-b73f-4e25-a25d-7c18d9f161fa)</ept> cmdlets.</source>
          <target state="translated">Windows PowerShell 3.0 では、特殊文字を正しく解釈して処理する機能が改善されました。パスに含まれる特殊文字を処理する <bpt id="p1">**</bpt>LiteralPath<ept id="p1">**</ept> パラメーターが、新しい <bpt id="p3">[</bpt>Update-Help<ept id="p3">](https://technet.microsoft.com/en-us/library/93e1d870-ace6-432b-8778-8920291d7545)</ept> および <bpt id="p4">[</bpt>Save-Help<ept id="p4">](https://technet.microsoft.com/en-us/library/aed94f90-b73f-4e25-a25d-7c18d9f161fa)</ept> コマンドレットを含む、<bpt id="p2">**</bpt>Path<ept id="p2">**</ept> パラメーターを持つほとんどすべてのコマンドレットで有効になりました。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>The parser also includes special logic to improve handling of the backtick character (<ph id="ph1">\`</ph>) and square brackets in file names and paths.</source>
          <target state="translated">また、ファイル名やパスに含まれるアクサングラーブ文字 (<ph id="ph1">\`</ph>) と角かっこの処理を改善する特別なロジックがパーサーに組み込まれました。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">参照</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>about_Windows_PowerShell_4.0</source>
          <target state="translated">about_Windows_PowerShell_4.0</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>about_Windows_PowerShell_5.0</source>
          <target state="translated">about_Windows_PowerShell_5.0</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>Windows PowerShell</source>
          <target state="translated">Windows PowerShell</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>