<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cdc7f45c9fa8a6bf748a52b460a1ac190d283971</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\cookbooks\Working-with-Registry-Entries.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6182788f3935a3078bb040fe96964ae448e0e532</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c040f03b372b90cc34732143000e5c045cd686cc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Working with Registry Entries</source>
          <target state="translated">레지스트리 항목 작업</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">powershell,cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Working with Registry Entries</source>
          <target state="translated">레지스트리 항목 작업</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Because registry entries are properties of keys and, as such, cannot be directly browsed, we need to take a slightly different approach when working with them.</source>
          <target state="translated">레지스트리 항목은 키의 속성이어서 직접 검색할 수 없으므로 레지스트리 항목으로 작업할 경우 약간 다른 방법으로 접근해야 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Listing Registry Entries</source>
          <target state="translated">레지스트리 항목 나열</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>There are many different ways to examine registry entries.</source>
          <target state="translated">다양한 방법으로 레지스트리 항목을 검사할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The simplest way is to get the property names associated with a key.</source>
          <target state="translated">가장 간단한 방법은 속성 이름을 키와 연결하는 것입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, to see the names of the entries in the registry key <bpt id="p1">**</bpt>HKEY_LOCAL_MACHINE<ph id="ph1">\\</ph>Software<ph id="ph2">\\</ph>Microsoft<ph id="ph3">\\</ph>Windows<ph id="ph4">\\</ph>CurrentVersion<ept id="p1">**</ept>, use <bpt id="p2">**</bpt>Get-Item<ept id="p2">**</ept>.</source>
          <target state="translated">예를 들어 <bpt id="p1">**</bpt>HKEY_LOCAL_MACHINE<ph id="ph1">\\</ph>Software<ph id="ph2">\\</ph>Microsoft<ph id="ph3">\\</ph>Windows<ph id="ph4">\\</ph>CurrentVersion<ept id="p1">**</ept> 레지스트리 키에 있는 항목의 이름을 표시하려면 <bpt id="p2">**</bpt>Get-Item<ept id="p2">**</ept>을 사용합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Registry keys have a property with the generic name of "Property" that is a list of registry entries in the key.</source>
          <target state="translated">레지스트리 키에는 키에 있는 레지스트리 항목의 목록인 "Property" 제네릭 이름을 가진 속성이 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following command selects the Property property and expands the items so that they are displayed in a list:</source>
          <target state="translated">다음 명령은 Property 속성을 선택하고 목록에 표시되도록 항목을 확장합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To view the registry entries in a more readable form, use <bpt id="p1">**</bpt>Get-ItemProperty<ept id="p1">**</ept>:</source>
          <target state="translated">레지스트리 항목을 읽기 쉽게 표시하려면 <bpt id="p1">**</bpt>Get-ItemProperty<ept id="p1">**</ept>를 사용합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell-related properties for the key are all prefixed with "PS", such as <bpt id="p1">**</bpt>PSPath<ept id="p1">**</ept>, <bpt id="p2">**</bpt>PSParentPath<ept id="p2">**</ept>, <bpt id="p3">**</bpt>PSChildName<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>PSProvider<ept id="p4">**</ept>.</source>
          <target state="translated">키의 Windows PowerShell 관련 속성은 모두 "PS" 접두사가 붙어 있습니다(예: <bpt id="p1">**</bpt>PSPath<ept id="p1">**</ept>, <bpt id="p2">**</bpt>PSParentPath<ept id="p2">**</ept>, <bpt id="p3">**</bpt>PSChildName<ept id="p3">**</ept> 및 <bpt id="p4">**</bpt>PSProvider<ept id="p4">**</ept>).</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can use the "<bpt id="p1">**</bpt>.<ept id="p1">**</ept>" notation for referring to the current location.</source>
          <target state="translated">"<bpt id="p1">**</bpt>.<ept id="p1">**</ept>" 표기법을 사용하여 현재 위치를 나타낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">**</bpt>Set-Location<ept id="p1">**</ept> to change to the <bpt id="p2">**</bpt>CurrentVersion<ept id="p2">**</ept> registry container first:</source>
          <target state="translated">먼저 <bpt id="p1">**</bpt>Set-Location<ept id="p1">**</ept>을 사용하여 <bpt id="p2">**</bpt>CurrentVersion<ept id="p2">**</ept> 레지스트리 컨테이너로 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the built-in HKLM PSDrive with <bpt id="p1">**</bpt>Set-Location<ept id="p1">**</ept>:</source>
          <target state="translated">또는 기본 제공 HKLM PSDrive를 <bpt id="p1">**</bpt>Set-Location<ept id="p1">**</ept>과 함께 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can then use the "<bpt id="p1">**</bpt>.<ept id="p1">**</ept>" notation for the current location to list the properties without specifying a full path:</source>
          <target state="translated">그런 다음 현재 위치에 "<bpt id="p1">**</bpt>.<ept id="p1">**</ept>" 표기법을 사용하여 전체 경로를 지정하지 않고 속성을 나열할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Path expansion works the same as it does within the file system, so from this location you can get the <bpt id="p1">**</bpt>ItemProperty<ept id="p1">**</ept> listing for <bpt id="p2">**</bpt>HKLM:<ph id="ph1">\\</ph>SOFTWARE<ph id="ph2">\\</ph>Microsoft<ph id="ph3">\\</ph>Windows<ph id="ph4">\\</ph>Help<ept id="p2">**</ept> by using <bpt id="p3">**</bpt>Get-ItemProperty -Path ..<ph id="ph5">\\</ph>Help<ept id="p3">**</ept>.</source>
          <target state="translated">경로 확장은 파일 시스템에서와 동일하게 작동하므로 이 위치에서 <bpt id="p3">**</bpt>Get-ItemProperty -Path ..<ph id="ph5">\\</ph>Help<ept id="p3">**</ept>를 사용하여 <bpt id="p2">**</bpt>HKLM:<ph id="ph1">\\</ph>SOFTWARE<ph id="ph2">\\</ph>Microsoft<ph id="ph3">\\</ph>Windows<ph id="ph4">\\</ph>Help<ept id="p2">**</ept>에 대한 <bpt id="p1">**</bpt>ItemProperty<ept id="p1">**</ept> 목록을 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Getting a Single Registry Entry</source>
          <target state="translated">단일 레지스트리 항목 가져오기</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you want to retrieve a specific entry in a registry key, you can use one of several possible approaches.</source>
          <target state="translated">레지스트리 키에서 특정 항목을 검색하려면 여러 가지 방법 중 하나를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This example finds the value of <bpt id="p1">**</bpt>DevicePath<ept id="p1">**</ept> in <bpt id="p2">**</bpt>HKEY_LOCAL_MACHINE<ph id="ph1">\\</ph>SOFTWARE<ph id="ph2">\\</ph>Microsoft<ph id="ph3">\\</ph>Windows<ph id="ph4">\\</ph>CurrentVersion<ept id="p2">**</ept>.</source>
          <target state="translated">이 예제에서는 <bpt id="p2">**</bpt>HKEY_LOCAL_MACHINE<ph id="ph1">\\</ph>SOFTWARE<ph id="ph2">\\</ph>Microsoft<ph id="ph3">\\</ph>Windows<ph id="ph4">\\</ph>CurrentVersion<ept id="p2">**</ept>에서 <bpt id="p1">**</bpt>DevicePath<ept id="p1">**</ept> 값을 찾습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Using <bpt id="p1">**</bpt>Get-ItemProperty<ept id="p1">**</ept>, use the <bpt id="p2">**</bpt>Path<ept id="p2">**</ept> parameter to specify the name of the key, and the <bpt id="p3">**</bpt>Name<ept id="p3">**</ept> parameter to specify the name of the <bpt id="p4">**</bpt>DevicePath<ept id="p4">**</ept> entry.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-ItemProperty<ept id="p1">**</ept>에서 <bpt id="p2">**</bpt>Path<ept id="p2">**</ept> 매개 변수를 사용하여 키의 이름을 지정하고, <bpt id="p3">**</bpt>Name<ept id="p3">**</ept> 매개 변수를 사용하여 <bpt id="p4">**</bpt>DevicePath<ept id="p4">**</ept> 항목의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This command returns the standard Windows PowerShell properties as well as the <bpt id="p1">**</bpt>DevicePath<ept id="p1">**</ept> property.</source>
          <target state="translated">이 명령은 표준 Windows PowerShell 속성과 <bpt id="p1">**</bpt>DevicePath<ept id="p1">**</ept> 속성을 반환합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Although <bpt id="p1">**</bpt>Get-ItemProperty<ept id="p1">**</ept> has <bpt id="p2">**</bpt>Filter<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Include<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>Exclude<ept id="p4">**</ept> parameters, they cannot be used to filter by property name.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-ItemProperty<ept id="p1">**</ept>에는 <bpt id="p2">**</bpt>Filter<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Include<ept id="p3">**</ept> 및 <bpt id="p4">**</bpt>Exclude<ept id="p4">**</ept> 매개 변수가 있지만 속성 이름을 필터링하는 데 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>These parameters refer to registry keys—which are item paths—and not registry entries—which are item properties.</source>
          <target state="translated">이러한 매개 변수를 레지스트리 키(항목 경로)라고 하며 레지스트리 항목(항목 속성)이 아닙니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Another option is to use the Reg.exe command line tool.</source>
          <target state="translated">다른 옵션으로 Reg.exe 명령줄 도구를 사용합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For help with reg.exe, type <bpt id="p1">**</bpt>reg.exe /?<ept id="p1">**</ept></source>
          <target state="translated">reg.exe에 대한 도움말을 보려면 명령 프롬프트에서 <bpt id="p1">**</bpt>reg.exe /?<ept id="p1">**</ept>를 입력합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>at a command prompt.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To find the DevicePath entry, use reg.exe as shown in the following command:</source>
          <target state="translated">DevicePath 항목을 찾으려면 다음 명령에 표시된 대로 reg.exe를 사용합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">**</bpt>WshShell COM<ept id="p1">**</ept> object as well to find some registry entries, although this method does not work with large binary data or with registry entry names that include characters such as "<ph id="ph1">\\</ph>").</source>
          <target state="translated"><bpt id="p1">**</bpt>WshShell COM<ept id="p1">**</ept> 개체를 사용하여 일부 레지스트리 항목을 찾을 수도 있습니다. 이 방법은 대규모 이진 데이터나 "<ph id="ph1">\\</ph>"와 같은 문자를 포함하는 레지스트리 항목 이름에는 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Append the property name to the item path with a <ph id="ph1">\\</ph> separator:</source>
          <target state="translated"><ph id="ph1">\\</ph> 구분 기호를 사용하여 속성 이름을 항목 경로에 추가합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Creating New Registry Entries</source>
          <target state="translated">새 레지스트리 항목 만들기</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To add a new entry named "PowerShellPath" to the <bpt id="p1">**</bpt>CurrentVersion<ept id="p1">**</ept> key, use <bpt id="p2">**</bpt>New-ItemProperty<ept id="p2">**</ept> with the path to the key, the entry name, and the value of the entry.</source>
          <target state="translated">"PowerShellPath"라는 새 항목을 <bpt id="p1">**</bpt>CurrentVersion<ept id="p1">**</ept> 키에 추가하려면 키 경로, 항목 이름, 항목 값과 함께 <bpt id="p2">**</bpt>New-ItemProperty<ept id="p2">**</ept>를 사용합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For this example, we will take the value of the Windows PowerShell variable <bpt id="p1">**</bpt>$PSHome<ept id="p1">**</ept>, which stores the path to the installation directory for Windows PowerShell.</source>
          <target state="translated">이 예제에서는 Windows PowerShell의 설치 디렉터리 경로를 저장하는 Windows PowerShell 변수 값 <bpt id="p1">**</bpt>$PSHome<ept id="p1">**</ept>을 사용합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can add the new entry to the key by using the following command, and the command also returns information about the new entry:</source>
          <target state="translated">다음 명령을 사용하여 새 항목을 키에 추가할 수 있습니다. 이 명령은 새 항목에 대한 정보도 반환합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>PropertyType<ept id="p1">**</ept> must be the name of a <bpt id="p2">**</bpt>Microsoft.Win32.RegistryValueKind<ept id="p2">**</ept> enumeration member from the following table:</source>
          <target state="translated"><bpt id="p1">**</bpt>PropertyType<ept id="p1">**</ept>은 다음 표에서 <bpt id="p2">**</bpt>Microsoft.Win32.RegistryValueKind<ept id="p2">**</ept> 열거형 멤버의 이름이어야 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>PropertyType Value</source>
          <target state="translated">PropertyType 값</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">의미</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Binary</source>
          <target state="translated">이진</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Binary data</source>
          <target state="translated">이진 데이터</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>DWord</source>
          <target state="translated">Dword</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A number that is a valid UInt32</source>
          <target state="translated">유효한 UInt32 숫자</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>ExpandString</source>
          <target state="translated">ExpandString</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A string that can contain environment variables that are dynamically expanded</source>
          <target state="translated">동적으로 확장되는 환경 변수를 포함할 수 있는 문자열</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>MultiString</source>
          <target state="translated">MultiString</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A multiline string</source>
          <target state="translated">다중 행 문자열</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">문자열</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Any string value</source>
          <target state="translated">임의의 문자열 값</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>QWord</source>
          <target state="translated">Qword</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>8 bytes of binary data</source>
          <target state="translated">8바이트 이진 데이터</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can add a registry entry to multiple locations by specifying an array of values for the <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> parameter:</source>
          <target state="translated"><bpt id="p1">**</bpt>Path<ept id="p1">**</ept> 매개 변수에 대한 값의 배열을 지정하여 여러 위치에 레지스트리 항목을 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can also overwrite a pre-existing registry entry value by adding the <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> parameter to any <bpt id="p2">**</bpt>New-ItemProperty<ept id="p2">**</ept> command.</source>
          <target state="translated"><bpt id="p1">**</bpt>Force<ept id="p1">**</ept> 매개 변수를 <bpt id="p2">**</bpt>New-ItemProperty<ept id="p2">**</ept> 명령에 추가하여 기존 레지스트리 항목 값을 덮어쓸 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Renaming Registry Entries</source>
          <target state="translated">레지스트리 항목 이름 바꾸기</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To rename the <bpt id="p1">**</bpt>PowerShellPath<ept id="p1">**</ept> entry to "PSHome," use <bpt id="p2">**</bpt>Rename-ItemProperty<ept id="p2">**</ept>:</source>
          <target state="translated"><bpt id="p1">**</bpt>PowerShellPath<ept id="p1">**</ept> 항목의 이름을 "PSHome"으로 바꾸려면 <bpt id="p2">**</bpt>Rename-ItemProperty<ept id="p2">**</ept>를 사용합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To display the renamed value, add the <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> parameter to the command.</source>
          <target state="translated">이름을 바꾼 값을 표시하려면 <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> 매개 변수를 명령에 추가합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Deleting Registry Entries</source>
          <target state="translated">레지스트리 항목 삭제</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To delete both the PSHome and PowerShellPath registry entries, use <bpt id="p1">**</bpt>Remove-ItemProperty<ept id="p1">**</ept>:</source>
          <target state="translated">PSHome 및 PowerShellPath 레지스트리 항목을 모두 삭제하려면 <bpt id="p1">**</bpt>Remove-ItemProperty<ept id="p1">**</ept>를 사용합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>