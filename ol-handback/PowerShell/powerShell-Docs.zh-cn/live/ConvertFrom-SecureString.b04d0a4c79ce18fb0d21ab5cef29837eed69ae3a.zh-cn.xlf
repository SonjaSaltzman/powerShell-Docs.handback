<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2620c57583a00f65bfd026d478adffb82526f8e5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Security\ConvertFrom-SecureString.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4874d1ab6bfc2f71f69e92503ec4460678186896</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">857c9640555c612edd2442920919e90ead963e75</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ConvertFrom-SecureString</source>
          <target state="translated">Convertfrom-securestring</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ConvertFrom-SecureString</source>
          <target state="translated">Convertfrom-securestring</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Converts a secure string to an encrypted standard string.</source>
          <target state="translated">将安全字符串转换为加密的标准字符串。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Secure (Default)</source>
          <target state="translated">安全 （默认值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Open</source>
          <target state="translated">打开</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertFrom-SecureString<ept id="p1">**</ept> cmdlet converts a secure string (<bpt id="p2">**</bpt>System.Security.SecureString<ept id="p2">**</ept>) to an encrypted standard string (<bpt id="p3">**</bpt>System.String<ept id="p3">**</ept>).</source>
          <target state="translated"> <bpt id="p1">**</bpt>Convertfrom-securestring<ept id="p1">**</ept> cmdlet 将安全字符串转换 (<bpt id="p2">**</bpt>System.Security.SecureString<ept id="p2">**</ept>) 到加密的标准字符串 (<bpt id="p3">**</bpt>System.String<ept id="p3">**</ept>)。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Unlike a secure string, an encrypted standard string can be saved in a file for later use.</source>
          <target state="translated">和安全字符串不同，加密的标准字符串可保存在文件中以供以后使用。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The encrypted standard string can be converted back to a secure string by using the ConvertTo-SecureString cmdlet.</source>
          <target state="translated">加密的标准字符串可转换回一个安全字符串使用 Convertto-securestring cmdlet。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If an encryption key is specified by using the <bpt id="p1">*</bpt>Key<ept id="p1">*</ept> or <bpt id="p2">*</bpt>SecureKey<ept id="p2">*</ept> parameters, the Advanced Encryption Standard (AES) encryption algorithm is used.</source>
          <target state="translated">如果通过使用指定的加密密钥 <bpt id="p1">*</bpt>密钥<ept id="p1">*</ept> 或 <bpt id="p2">*</bpt>SecureKey<ept id="p2">*</ept> 高级加密标准 (AES) 加密算法使用的参数。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The specified key must have a length of 128, 192, or 256 bits, because those are the key lengths supported by the AES encryption algorithm.</source>
          <target state="translated">指定的键必须具有的长度为 128、 192 或 256 位，因为这些是 AES 加密算法所支持的密钥长度。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If no key is specified, the Windows Data Protection API (DPAPI) is used to encrypt the standard string representation.</source>
          <target state="translated">如果未指定密钥，则使用 Windows 数据保护 API (DPAPI) 加密标准字符串表示形式。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Example 1: Create a secure string</source>
          <target state="translated">示例 1︰ 创建一个安全字符串</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This command creates a secure string from characters that you type at the command prompt.</source>
          <target state="translated">此命令从你在命令提示符处键入的字符创建安全字符串。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>After entering the command, type the string you want to store as a secure string.</source>
          <target state="translated">输入命令后，键入要存储为安全字符串的字符串。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An asterisk (*) is displayed to represent each character that you type.</source>
          <target state="translated">将显示一个星号 (*) 以表示你键入的每个字符。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Example 2: Convert a secure string to an encrypted standard string</source>
          <target state="translated">示例 2︰ 将安全字符串转换为加密的标准字符串</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This command converts the secure string in the $SecureString variable to an encrypted standard string.</source>
          <target state="translated">此命令将 $SecureString 变量中的安全字符串转换为加密的标准字符串。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The resulting encrypted standard string is stored in the $StandardString variable.</source>
          <target state="translated">生成的加密标准字符串存储在 $StandardString 变量中。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example 3: Convert a secure string to an encrypted standard string with a 192-bit key</source>
          <target state="translated">示例 3︰ 使用 192 位密钥将安全字符串转换为加密的标准字符串</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>These commands use the AES algorithm to convert the secure string stored in the $SecureString variable to an encrypted standard string with a 192-bit key.</source>
          <target state="translated">这些命令使用 AES 算法具有 192 位密钥存储在加密的标准字符串 $SecureString 变量中的安全字符串转换。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The resulting encrypted standard string is stored in the $StandardString variable.</source>
          <target state="translated">生成的加密标准字符串存储在 $StandardString 变量中。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The first command stores a key in the $Key variable.</source>
          <target state="translated">第一个命令将密钥保存在 $Key 变量中。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The key is an array of 24 digits, all of which are less than 256.</source>
          <target state="translated">该密钥是 24 个数字的数组，所有数字都小于 256。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Because each digit represents a byte (8 bits), the key has 24 digits for a total of 192 bits (8 x 24).</source>
          <target state="translated">因为每个数字表示一个字节（8 位），该密钥有 24 个数字，对应于总共 192 (8 x 24) 位。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This is a valid key length for the AES algorithm.</source>
          <target state="translated">这是用于 AES 算法的有效的密钥长度值。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Each individual value is less than 256, which is the maximum value that can be stored in an unsigned byte.</source>
          <target state="translated">每个单个值小于 256，这是可存储在无符号字节中的最大值。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The second command uses the key in the $Key variable to convert the secure string to an encrypted standard string.</source>
          <target state="translated">第二个命令使用 $Key 变量中的密钥将安全字符串转换为加密的标准字符串。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-Key</source>
          <target state="translated">键</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Specifies the encryption key as a byte array.</source>
          <target state="translated">将加密密钥指定为字节数组。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>-SecureKey</source>
          <target state="translated">-SecureKey</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Specifies the encryption key as a secure string.</source>
          <target state="translated">将加密密钥指定为安全字符串。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The secure string value is converted to a byte array before being used as the key.</source>
          <target state="translated">在将安全字符串值用作密钥之前，需将其转换为字节数组。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-SecureString</source>
          <target state="translated">-SecureString</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Specifies the secure string to convert to an encrypted standard string.</source>
          <target state="translated">指定安全字符串转换为加密的标准字符串。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>System.Security.SecureString</source>
          <target state="translated">System.Security.SecureString</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can pipe a <bpt id="p1">**</bpt>SecureString<ept id="p1">**</ept> object to <bpt id="p2">**</bpt>ConvertFrom-SecureString<ept id="p2">**</ept>.</source>
          <target state="translated">您可以通过管道传递 <bpt id="p1">**</bpt>SecureString<ept id="p1">**</ept> 对象传递给 <bpt id="p2">**</bpt>Convertfrom-securestring<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ConvertFrom-SecureString<ept id="p1">**</ept> returns a standard string object.</source>
          <target state="translated"><bpt id="p1">**</bpt>Convertfrom-securestring<ept id="p1">**</ept> 返回标准字符串对象。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To create a secure string from characters that are typed at the command prompt, use the <bpt id="p1">*</bpt>AsSecureString<ept id="p1">*</ept> parameter of the Read-Host cmdlet.</source>
          <target state="translated">若要从命令提示符处键入的字符创建安全字符串，请使用 <bpt id="p1">*</bpt>AsSecureString<ept id="p1">*</ept> Read-host cmdlet 的参数。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>Key<ept id="p1">*</ept> or <bpt id="p2">*</bpt>SecureKey<ept id="p2">*</ept> parameters to specify a key, the key length must be correct.</source>
          <target state="translated">当您使用 <bpt id="p1">*</bpt>密钥<ept id="p1">*</ept> 或 <bpt id="p2">*</bpt>SecureKey<ept id="p2">*</ept> 参数，以指定一个密钥，密钥长度必须正确。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, a key of 128 bits can be specified as a byte array of 16 digits.</source>
          <target state="translated">例如，128 位的密钥可以指定为 16 位的字节数组。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Similarly, 192-bit and 256-bit keys correspond to byte arrays of 24 and 32 digits, respectively.</source>
          <target state="translated">同样，192 位和 256 位的密钥分别对应于 24 和 32 位的字节数组。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>ConvertTo-SecureString</source>
          <target state="translated">Convertto-securestring</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Read-Host</source>
          <target state="translated">Read-Host</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>