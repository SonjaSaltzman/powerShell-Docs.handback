<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb0962c0f81d40d7916ff2e6f61f1d2f75493051</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Security\ConvertTo-SecureString.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">49785309f4685f15d297602d1c89a87b41469b8c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0698bf15b9fe00b28f40c82b10165bba3eaee610</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ConvertTo-SecureString</source>
          <target state="translated">Convertto-securestring</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ConvertTo-SecureString</source>
          <target state="translated">Convertto-securestring</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Converts encrypted standard strings to secure strings.</source>
          <target state="translated">将加密的标准字符串转换为安全字符串。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It can also convert plain text to secure strings.</source>
          <target state="translated">它还可以将纯文本转换为安全字符串。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>It is used with ConvertFrom-SecureString and Read-Host.</source>
          <target state="translated">它可与 ConvertFrom-SecureString 和 Read-Host 一起使用。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Secure (Default)</source>
          <target state="translated">安全 （默认值）</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>PlainText</source>
          <target state="translated">纯文本</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Open</source>
          <target state="translated">打开</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertTo-SecureString<ept id="p1">**</ept> cmdlet converts encrypted standard strings into secure strings.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Convertto-securestring<ept id="p1">**</ept> cmdlet 将加密的标准字符串转换为安全字符串。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It can also convert plain text to secure strings.</source>
          <target state="translated">它还可以将纯文本转换为安全字符串。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It is used with ConvertFrom-SecureString and Read-Host.</source>
          <target state="translated">它可与 ConvertFrom-SecureString 和 Read-Host 一起使用。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The secure string created by the cmdlet can be used with cmdlets or functions that require a parameter of type SecureString.</source>
          <target state="translated">由 cmdlet 创建的安全字符串可与需要类型为 SecureString 的参数的 cmdlet 或函数一起使用。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The secure string can be converted back to an encrypted, standard string using the ConvertFrom-SecureString cmdlet.</source>
          <target state="translated">通过使用 ConvertFrom-SecureString cmdlet，可将安全字符串重新转换为加密的标准字符串。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This enables it to be stored in a file for later use.</source>
          <target state="translated">这使它能够存储在文件中以供以后使用。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the standard string being converted was encrypted with <bpt id="p1">**</bpt>ConvertFrom-SecureString<ept id="p1">**</ept> using a specified key, that same key must be provided as the value of the <bpt id="p2">*</bpt>Key<ept id="p2">*</ept> or <bpt id="p3">*</bpt>SecureKey<ept id="p3">*</ept> parameter of the <bpt id="p4">**</bpt>ConvertTo-SecureString<ept id="p4">**</ept> cmdlet.</source>
          <target state="translated">如果要转换的标准字符串已使用了加密 <bpt id="p1">**</bpt>Convertfrom-securestring<ept id="p1">**</ept> 使用指定的键，相同的密钥必须提供的值作为 <bpt id="p2">*</bpt>密钥<ept id="p2">*</ept> 或 <bpt id="p3">*</bpt>SecureKey<ept id="p3">*</ept> 参数 <bpt id="p4">**</bpt>Convertto-securestring<ept id="p4">**</ept> cmdlet。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Example 1: Convert a secure string to an encrypted string</source>
          <target state="translated">示例 1︰ 将安全字符串转换为加密的字符串</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This example shows how to create a secure string from user input, convert the secure string to an encrypted standard string, and then convert the encrypted standard string back to a secure string.</source>
          <target state="translated">此示例显示了从用户输入创建安全字符串、将安全字符串转换为加密的标准字符串，然后将加密的标准字符串重新转换为安全字符串的方式。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">*</bpt>AsSecureString<ept id="p1">*</ept> parameter of the Read-Host cmdlet to create a secure string.</source>
          <target state="translated">第一个命令使用 <bpt id="p1">*</bpt>AsSecureString<ept id="p1">*</ept> Read-host cmdlet 来创建一个安全字符串参数。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>After you enter the command, any characters that you type are converted into a secure string and then saved in the $Secure variable.</source>
          <target state="translated">输入该命令后，您键入的任何字符都转换为安全字符串，然后保存在 $Secure 变量。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The second command displays the contents of the $Secure variable.</source>
          <target state="translated">第二个命令显示 $Secure 变量的内容。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Because the $Secure variable contains a secure string, Windows PowerShell displays only the System.Security.SecureString type.</source>
          <target state="translated">由于 $Secure 变量包含一个安全字符串，Windows PowerShell 仅显示 System.Security.SecureString 类型。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The third command uses the ConvertFrom-SecureString cmdlet to convert the secure string in the $Secure variable into an encrypted standard string.</source>
          <target state="translated">第三个命令使用 Convertfrom-securestring cmdlet 将 $Secure 变量中的安全字符串转换为加密的标准字符串。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>It saves the result in the $Encrypted variable.</source>
          <target state="translated">它将结果保存在 $Encrypted 变量中。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The fourth command displays the encrypted string in the value of the $Encrypted variable.</source>
          <target state="translated">第四个命令显示 $Encrypted 变量的值中的加密的字符串。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The fifth command uses the <bpt id="p1">**</bpt>ConvertTo-SecureString<ept id="p1">**</ept> cmdlet to convert the encrypted standard string in the $Encrypted variable back into a secure string.</source>
          <target state="translated">第五个命令使用 <bpt id="p1">**</bpt>Convertto-securestring<ept id="p1">**</ept> cmdlet 转换 $Encrypted 变量中的加密标准字符串重新转换为安全字符串。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>It saves the result in the $Secure2 variable.</source>
          <target state="translated">它将结果保存在 $Secure2 变量中。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The sixth command displays the value of the $Secure2 variable.</source>
          <target state="translated">第六个命令显示 $Secure2 变量的值。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The SecureString type indicates that the command was successful.</source>
          <target state="translated">SecureString 类型指示命令已成功。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Example 2: Create a secure string from an encrypted string in a file</source>
          <target state="translated">示例 2︰ 从文件中加密的字符串创建一个安全字符串</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This example shows how to create a secure string from an encrypted standard string that is saved in a file.</source>
          <target state="translated">此示例显示了如何从保存在文件中的加密的标准字符串中创建安全字符串。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">*</bpt>AsSecureString<ept id="p1">*</ept> parameter of the Read-Host cmdlet to create a secure string.</source>
          <target state="translated">第一个命令使用 <bpt id="p1">*</bpt>AsSecureString<ept id="p1">*</ept> Read-host cmdlet 来创建一个安全字符串参数。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>After you enter the command, any characters that you type are converted into a secure string and then saved in the $Secure variable.</source>
          <target state="translated">输入该命令后，您键入的任何字符都转换为安全字符串，然后保存在 $Secure 变量。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The second command uses the ConvertFrom-SecureString cmdlet to convert the secure string in the $Secure variable into an encrypted standard string by using the specified key.</source>
          <target state="translated">第二个命令使用 Convertfrom-securestring cmdlet 通过使用指定的键将 $Secure 变量中的安全字符串转换为加密的标准字符串。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The contents are saved in the $Encrypted variable.</source>
          <target state="translated">内容将保存在 $Encrypted 变量中。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The third command uses a pipeline operator (|) to send the value of the $Encrypted variable to the Set-Content cmdlet, which saves the value in the Encrypted.txt file.</source>
          <target state="translated">第三个命令使用管道运算符 (|) 将 $Encrypted 变量的值发送到 Set-content cmdlet，后者会将该值保存在 Encrypted.txt 文件中。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The fourth command uses the Get-Content cmdlet to get the encrypted standard string in the Encrypted.txt file.</source>
          <target state="translated">第四个命令使用 Get-Content cmdlet 获取 Encrypted.txt 文件中的加密的标准字符串。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator to send the encrypted string to the <bpt id="p1">**</bpt>ConvertTo-SecureString<ept id="p1">**</ept> cmdlet, which converts it to a secure string by using the specified key.</source>
          <target state="translated">该命令使用管道运算符将加密的字符串发送到 <bpt id="p1">**</bpt>Convertto-securestring<ept id="p1">**</ept> cmdlet，后者会将其转换为安全字符串，使用指定的键。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The results are saved in the $Secure2 variable.</source>
          <target state="translated">结果将保存在 $Secure2 变量中。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Example 3: Convert a plain text string to a secure string</source>
          <target state="translated">示例 3︰ 将纯文本字符串转换为一个安全字符串</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This command converts the plain text string P@ssW0rD!</source>
          <target state="translated">此命令将转换的纯文本字符串 P@ssW0rD ！</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>into a secure string and stores the result in the $Secure_String_Pwd variable.</source>
          <target state="translated">为安全字符串，并将结果存储在 $Secure_String_Pwd 变量中。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To use the <bpt id="p1">*</bpt>AsPlainText<ept id="p1">*</ept> parameter, the <bpt id="p2">*</bpt>Force<ept id="p2">*</ept> parameter must also be included in the command.</source>
          <target state="translated">若要使用 <bpt id="p1">*</bpt>AsPlainText<ept id="p1">*</ept> 参数， <bpt id="p2">*</bpt>强制<ept id="p2">*</ept> 还必须在命令中包含参数。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-AsPlainText</source>
          <target state="translated">-AsPlainText</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Specifies a plain text string to convert to a secure string.</source>
          <target state="translated">指定要转换为安全字符串的纯文本字符串。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The secure string cmdlets help protect confidential text.</source>
          <target state="translated">安全字符串 cmdlet 有助于保护机密文本。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The text is encrypted for privacy and is deleted from computer memory after it is used.</source>
          <target state="translated">为保护隐私，应对文本进行加密，并在使用后将其从计算机内存中删除。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If you use this parameter to provide plain text as input, the system cannot protect that input in this manner.</source>
          <target state="translated">如果你使用此参数来提供纯文本作为输入，则系统无法采用此方式保护该输入。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To use this parameter, you must also specify the <bpt id="p1">*</bpt>Force<ept id="p1">*</ept> parameter.</source>
          <target state="translated">若要使用此参数，您必须指定 <bpt id="p1">*</bpt>强制<ept id="p1">*</ept> 参数。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Confirms that you understand the implications of using the <bpt id="p1">*</bpt>AsPlainText<ept id="p1">*</ept> parameter and still want to use it.</source>
          <target state="translated">确认你了解使用的隐患的 <bpt id="p1">*</bpt>AsPlainText<ept id="p1">*</ept> 参数并仍想要使用它。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>-Key</source>
          <target state="translated">键</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Specifies the encryption key to use when converting a secure string into an encrypted standard string.</source>
          <target state="translated">指定要在将安全字符串转换为加密的标准字符串时使用的加密密钥。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Valid key lengths are 16, 24, and 32 bytes.</source>
          <target state="translated">有效的密钥长度为 16、24 和 32 个字节。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>-SecureKey</source>
          <target state="translated">-SecureKey</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Specifies the encryption key to use when converting a secure string into an encrypted standard string.</source>
          <target state="translated">指定要在将安全字符串转换为加密的标准字符串时使用的加密密钥。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The key must be provided in the format of a secure string.</source>
          <target state="translated">必须采用安全字符串的格式提供密钥。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The secure string is converted to a byte array before being used as the key.</source>
          <target state="translated">在将安全字符串用作密钥之前，需将其转换为字节数组。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Valid key lengths are 16, 24, and 32 bytes.</source>
          <target state="translated">有效的密钥长度为 16、24 和 32 个字节。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>-String</source>
          <target state="translated">字符串</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Specifies the string to convert to a secure string.</source>
          <target state="translated">指定要转换为安全字符串的字符串。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can pipe a standard encrypted string to <bpt id="p1">**</bpt>ConvertTo-SecureString<ept id="p1">**</ept>.</source>
          <target state="translated">您可以通过管道传递到加密的标准字符串 <bpt id="p1">**</bpt>Convertto-securestring<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>System.Security.SecureString</source>
          <target state="translated">System.Security.SecureString</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>ConvertTo-SecureString returns a <bpt id="p1">**</bpt>SecureString<ept id="p1">**</ept> object.</source>
          <target state="translated">Convertto-securestring 将返回 <bpt id="p1">**</bpt>SecureString<ept id="p1">**</ept> 对象。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>ConvertFrom-SecureString</source>
          <target state="translated">Convertfrom-securestring</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Read-Host</source>
          <target state="translated">Read-Host</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>