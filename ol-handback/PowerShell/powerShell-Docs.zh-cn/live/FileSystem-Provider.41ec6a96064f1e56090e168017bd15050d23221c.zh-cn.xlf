<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">542a5b9bfd6b4574eeee1eb3276f6f5f7e80019b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\Providers\FileSystem-Provider.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ded73b48f24256343dc76d294b54d43c6281156c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4d1d18b445258f32673598af3b6c87acf5ede09</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>FileSystem Provider</source>
          <target state="translated">FileSystem 提供程序</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>FileSystem Provider</source>
          <target state="translated">FileSystem 提供程序</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>PROVIDER NAME</source>
          <target state="translated">提供程序名称</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>FileSystem</source>
          <target state="translated">FileSystem</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>DRIVES</source>
          <target state="translated">驱动器</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>C, D</source>
          <target state="translated">C、D</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">简短说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Provides access to files and directories.</source>
          <target state="translated">提供对文件和目录的访问权限。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DETAILED DESCRIPTION</source>
          <target state="translated">详细说明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell FileSystem provider lets you get, add, change, clear, and delete files and directories in Windows PowerShell.</source>
          <target state="translated">通过 Windows PowerShell FileSystem 提供程序，你可以获取、添加、更改、清除和删除 Windows PowerShell 中的文件和目录。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The FileSystem provider exposes Windows PowerShell drives that correspond to the logical drives on your computer, including drives that are mapped to network shares.</source>
          <target state="translated">FileSystem 提供程序公开了与你的计算机上逻辑驱动器（包括映射到网络共享的驱动器）相对应的 Windows PowerShell 驱动器。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This lets you reference these drives from within Windows PowerShell.</source>
          <target state="translated">这允许你从 Windows PowerShell 内引用这些驱动器。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The FileSystem provider lets you refer to files and folders in Windows PowerShell in the same way that you refer to them in Windows.</source>
          <target state="translated">FileSystem 提供程序允许你在 Windows PowerShell 中以与在 Windows 中进行引用的相同方式引用文件和文件夹。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To refer to a drive, specify the drive name followed by a colon.</source>
          <target state="translated">若要引用某个驱动器，请指定该驱动器的名称，后跟一个冒号。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Like most of Windows PowerShell, the FileSystem provider is not case<ph id="ph1">\-</ph>sensitive.</source>
          <target state="translated">大多数的 Windows PowerShell 中，如 FileSystem 提供程序是不区分大小<ph id="ph1">\-</ph>敏感。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, to get the files and folders on the C drive, you refer to the "C:" drive or the "c:" drive.</source>
          <target state="translated">例如，若要获取 C 驱动器上的文件和文件夹，请引用“C:”驱动器或“c:”驱动器。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A fully qualified name includes the drive name, followed by a colon, any directory and subdirectory names, and the file name <ph id="ph1">\(</ph>when applicable<ph id="ph2">\)</ph>.</source>
          <target state="translated">完全限定的名称包括驱动器的名称后, 跟冒号、 任何目录和子目录的名称和文件名称 <ph id="ph1">\(</ph>时适用<ph id="ph2">\)</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Each element of the fully qualified name must be separated either by a backslash <ph id="ph1">\(\\\)</ph> or a forward slash <ph id="ph2">\(\/\)</ph>.</source>
          <target state="translated">每个元素的完全限定名必须分隔通过一个反斜杠 <ph id="ph1">\(\\\)</ph> 或正斜杠 <ph id="ph2">\(\/\)</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following example shows the fully qualified name for the Shell.dll file in the System32 subdirectory of the Windows directory on the C drive:</source>
          <target state="translated">以下示例显示了 Shell.dll 文件的完全限定名称，该文件位于 C 驱动器上 Windows 目录的 System32 子目录中：</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>C:<ph id="ph1">\\</ph>Windows<ph id="ph2">\\</ph>System32<ph id="ph3">\\</ph>shell.dll</source>
          <target state="translated">C:<ph id="ph1">\\</ph>Windows<ph id="ph2">\\</ph>System32<ph id="ph3">\\</ph>shell.dll</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If any element in the fully qualified name includes spaces, you must enclose the name in quotation marks.</source>
          <target state="translated">如果完全限定名称中的任何元素包含空格，则必须将此名称用引号括起来。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">例如，</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>"C:<ph id="ph1">\\</ph>Program Files<ph id="ph2">\\</ph>Internet Explorer<ph id="ph3">\\</ph>iexplore.exe"</source>
          <target state="translated">"C:<ph id="ph1">\\</ph>程序文件<ph id="ph2">\\</ph>Internet Explorer<ph id="ph3">\\</ph>iexplore.exe"</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The current location in the file system is represented by a dot or period character <ph id="ph1">\(</ph>.</source>
          <target state="translated">文件系统中的当前位置由圆点或句点字符 <ph id="ph1">\(</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, the current location is the C:<ph id="ph1">\\</ph>Windows<ph id="ph2">\\</ph>System32 directory, then you can refer to the Shell.dll file in that directory as the following:</source>
          <target state="translated">例如，当前的位置是 c︰ 驱动器<ph id="ph1">\\</ph>Windows<ph id="ph2">\\</ph>System32 目录中，则您可以参考的 Shell.dll 文件，在该目录中如下所示︰</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>.<ph id="ph1">\\</ph>Shell.dll</source>
          <target state="translated">.<ph id="ph1">\\</ph>Shell.dll</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To use the FileSystem provider to view and manage files and folders, use the provider cmdlets, such as <bpt id="p1">[</bpt>Get<ph id="ph1">\-</ph>ChildItem<ept id="p1">](assetId:///75cf79bb-4db6-4a67-8c36-3d20754e2190)</ept> <ph id="ph2">\(</ph>"dir", "ls"<ph id="ph3">\)</ph> and <bpt id="p2">[</bpt>Set<ph id="ph4">\-</ph>Location<ept id="p2">](assetId:///d7f353cd-ebd7-462a-bd57-1498dc8b88a6)</ept> <ph id="ph5">\(</ph>"cd"<ph id="ph6">\)</ph>.</source>
          <target state="translated">若要使用 FileSystem 提供程序来查看和管理文件和文件夹，使用提供程序 cmdlet，如 <bpt id="p1">[</bpt>获取<ph id="ph1">\-</ph>ChildItem<ept id="p1">](assetId:///75cf79bb-4db6-4a67-8c36-3d20754e2190)</ept> <ph id="ph2">\(</ph>"dir"、"ls"<ph id="ph3">\)</ph> 和 <bpt id="p2">[</bpt>设置<ph id="ph4">\-</ph>位置<ept id="p2">](assetId:///d7f353cd-ebd7-462a-bd57-1498dc8b88a6)</ept> <ph id="ph5">\(</ph>"cd"<ph id="ph6">\)</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Windows PowerShell also includes a "mkdir" function <ph id="ph1">\(</ph>alias <ph id="ph2">\=</ph> "md"<ph id="ph3">\)</ph> that uses the <bpt id="p1">[</bpt>New<ph id="ph4">\-</ph>Item<ept id="p1">](assetId:///67038d02-6598-49c6-b5bd-77b59d445abe)</ept> cmdlet to create a new directory.</source>
          <target state="translated">Windows PowerShell 还包括"mkdir"函数 <ph id="ph1">\(</ph>别名 <ph id="ph2">\=</ph> "md"<ph id="ph3">\)</ph> ，它使用 <bpt id="p1">[</bpt>新建<ph id="ph4">\-</ph>项<ept id="p1">](assetId:///67038d02-6598-49c6-b5bd-77b59d445abe)</ept> cmdlet 来创建一个新目录。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can get customized help topics for provider cmdlets that explain how those cmdlets behave in a file system drive.</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，你可以获取有关提供程序 cmdlet 的自定义帮助主题，它们介绍了这些 cmdlet 在文件系统驱动器中的行为方式。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To get the help topics that are customized for the file system drive, run a <bpt id="p1">[</bpt>Get<ph id="ph1">\-</ph>Help<ept id="p1">](assetId:///1f46eeb4-49d7-4bec-bb29-395d9b42f54a)</ept> command in a file system drive or use the Path parameter of <bpt id="p2">[</bpt>Get<ph id="ph2">\-</ph>Help<ept id="p2">](assetId:///1f46eeb4-49d7-4bec-bb29-395d9b42f54a)</ept> to specify a file system drive.</source>
          <target state="translated">若要获取的文件系统驱动器进行了自定义帮助主题，请运行 <bpt id="p1">[</bpt>获取<ph id="ph1">\-</ph>帮助<ept id="p1">](assetId:///1f46eeb4-49d7-4bec-bb29-395d9b42f54a)</ept> 命令在文件系统驱动器中，或使用的 Path 参数 <bpt id="p2">[</bpt>获取<ph id="ph2">\-</ph>帮助<ept id="p2">](assetId:///1f46eeb4-49d7-4bec-bb29-395d9b42f54a)</ept> 来指定文件系统驱动器。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">例如，</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>PS C:<ph id="ph1">\\\&gt;</ph> <bpt id="p1">[</bpt>Get<ph id="ph2">\-</ph>Help<ept id="p1">](assetId:///1f46eeb4-49d7-4bec-bb29-395d9b42f54a)</ept> get<ph id="ph3">\-</ph>childitem</source>
          <target state="translated">PS c:<ph id="ph1">\\\&gt;</ph> <bpt id="p1">[</bpt>获取<ph id="ph2">\-</ph>帮助<ept id="p1">](assetId:///1f46eeb4-49d7-4bec-bb29-395d9b42f54a)</ept> 获取<ph id="ph3">\-</ph>childitem</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>PS HKLM:<ph id="ph1">\\\&gt;</ph> <bpt id="p1">[</bpt>Get<ph id="ph2">\-</ph>Help<ept id="p1">](assetId:///1f46eeb4-49d7-4bec-bb29-395d9b42f54a)</ept><bpt id="p2">[</bpt>Get<ph id="ph3">\-</ph>ChildItem<ept id="p2">](assetId:///75cf79bb-4db6-4a67-8c36-3d20754e2190)</ept> <ph id="ph4">\-</ph>path c:</source>
          <target state="translated">PS HKLM:<ph id="ph1">\\\&gt;</ph> <bpt id="p1">[</bpt>获取<ph id="ph2">\-</ph>帮助<ept id="p1">](assetId:///1f46eeb4-49d7-4bec-bb29-395d9b42f54a)</ept><bpt id="p2">[</bpt>获取<ph id="ph3">\-</ph>ChildItem<ept id="p2">](assetId:///75cf79bb-4db6-4a67-8c36-3d20754e2190)</ept> <ph id="ph4">\-</ph>path c:</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Also, beginning in Windows PowerShell 3.0, the FileSystem provider supports credentials for the <bpt id="p1">[</bpt>New<ph id="ph1">\-</ph>PSDrive<ept id="p1">](assetId:///a90ffe5f-a576-4c4a-b392-822bcec17ffd)</ept> cmdlet.</source>
          <target state="translated">此外，从 Windows PowerShell 3.0 开始，FileSystem 提供程序支持使用凭据为 <bpt id="p1">[</bpt>新建<ph id="ph1">\-</ph>PSDrive<ept id="p1">](assetId:///a90ffe5f-a576-4c4a-b392-822bcec17ffd)</ept> cmdlet。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information, see the help topic for the <bpt id="p1">[</bpt>New<ph id="ph1">\-</ph>PSDrive<ept id="p1">](assetId:///a90ffe5f-a576-4c4a-b392-822bcec17ffd)</ept> cmdlet.</source>
          <target state="translated">有关详细信息，请参阅帮助主题 <bpt id="p1">[</bpt>新建<ph id="ph1">\-</ph>PSDrive<ept id="p1">](assetId:///a90ffe5f-a576-4c4a-b392-822bcec17ffd)</ept> cmdlet。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>CAPABILITIES</source>
          <target state="translated">功能</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Filter, ShouldProcess</source>
          <target state="translated">Filter，ShouldProcess</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Splitting a Large File</source>
          <target state="translated">拆分大型文件</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>By default, the Get<ph id="ph1">\-</ph>Content cmdlet uses the end<ph id="ph2">\-</ph>of<ph id="ph3">\-</ph>line character as its delimiter, so it gets a file as a collection of strings, with each line as one string in the file.</source>
          <target state="translated">默认情况下，Get<ph id="ph1">\-</ph>内容 cmdlet 使用结束<ph id="ph2">\-</ph>的<ph id="ph3">\-</ph>作为其分隔符，行字符，因此它将获取一个文件作为一个字符串的每一行作为文件中的一个字符串集合。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can use the Delimiter parameter to specify an alternate delimiter.</source>
          <target state="translated">可以使用 Delimiter 参数来指定备用分隔符。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you set it to the characters that denote the end of a section or the beginning of the next section, you can split the file into logical parts.</source>
          <target state="translated">如果将该分隔符设置为表示一个部分的结尾或下一部分开头的字符，则可以将该文件拆分为多个逻辑部分。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The first command gets the Employees.txt file and splits it into sections, each of which ends with the words "End of Employee Record" and it saves it in the $e variable.</source>
          <target state="translated">第一个命令将获取 Employees.txt 文件，并将其拆分为多个部分，其中每个部分均以字词“End of Employee Record”结尾，并且将其保存在 $e 变量中。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The second command uses array notation to get the first item in the collection in $e.</source>
          <target state="translated">第二个命令使用数组表示法中 $e 集合中获取的第一项。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>It uses an index of 0, because Windows PowerShell arrays are zero<ph id="ph1">\-</ph>based.</source>
          <target state="translated">它使用的索引为 0，因为 Windows PowerShell 数组是零<ph id="ph1">\-</ph>基于。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more information about arrays, see about<ph id="ph1">\_</ph>Arrays.</source>
          <target state="translated">有关数组的详细信息，请参阅关于<ph id="ph1">\_</ph>数组。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Navigating the File System</source>
          <target state="translated">在文件系统中导航</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This command gets the current location:</source>
          <target state="translated">此命令将获取当前位置：</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The Get<ph id="ph1">\-</ph>Location cmdlet includes the functionality of commands like the cd command in the Windows Command Prompt and the pwd command in UNIX.</source>
          <target state="translated">Get<ph id="ph1">\-</ph>位置 cmdlet 将包括在 Windows 命令提示符，然后在 UNIX 中的 pwd 命令类似 cd 命令的命令功能。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more information, type:</source>
          <target state="translated">有关详细信息，请键入：</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>get<ph id="ph1">\-</ph>help get<ph id="ph2">\-</ph>location</source>
          <target state="translated">获取<ph id="ph1">\-</ph>帮助 get<ph id="ph2">\-</ph>位置</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This command sets the current location:</source>
          <target state="translated">此命令将设置当前位置：</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Getting File and Directory Information</source>
          <target state="translated">获取文件和目录信息</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This command gets all the files and directories in the current directory:</source>
          <target state="translated">此命令将获取当前目录中的所有文件和目录：</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>By default, the Get<ph id="ph1">\-</ph>ChildItem cmdlet does not recurse.</source>
          <target state="translated">默认情况下，Get<ph id="ph1">\-</ph>ChildItem cmdlet 不进行递归。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If files and folders are present in the current directory when you run this command, a System.IO.FileInfo object and a System.IO.DirectoryInfo object are returned.</source>
          <target state="translated">如果在运行此命令时当前目录中存在文件和文件夹，则将返回一个 System.IO.FileInfo 对象和一个 System.IO.DirectoryInfo 对象。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This command gets all the files in the current directory:</source>
          <target state="translated">此命令将获取当前目录中的所有文件：</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The command uses the Get<ph id="ph1">\-</ph>ChildItem cmdlet to get all files and directories.</source>
          <target state="translated">该命令使用 Get<ph id="ph1">\-</ph>ChildItem cmdlet 来获取所有文件和目录。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>It pipes the results to the Where<ph id="ph1">\-</ph>Object cmdlet, which selects only the objects that are not <ph id="ph2">\(\!\)</ph> containers.</source>
          <target state="translated">管道将结果传递给 Where<ph id="ph1">\-</ph>对象 cmdlet，后者选择不一些对象 <ph id="ph2">\(\!\)</ph> 容器。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>EXAMPLE 3</source>
          <target state="translated">示例 3</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The command uses the Get<ph id="ph1">\-</ph>ChildItem cmdlet to get all files and directories.</source>
          <target state="translated">该命令使用 Get<ph id="ph1">\-</ph>ChildItem cmdlet 来获取所有文件和目录。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>It pipes the results to Where<ph id="ph1">\-</ph>Object, which select only the objects that are containers.</source>
          <target state="translated">管道将结果传递给 Where<ph id="ph1">\-</ph>对象，选择是容器对象。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>EXAMPLE 4</source>
          <target state="translated">示例 4</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This command displays the properties of a directory:</source>
          <target state="translated">此命令将显示目录的属性：</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The command uses the Path parameter of the Get<ph id="ph1">\-</ph>Item cmdlet to get the C:<ph id="ph2">\\</ph>ps<ph id="ph3">\-</ph>test directory.</source>
          <target state="translated">该命令使用 Path 参数的 get<ph id="ph1">\-</ph>项 cmdlet 来获取 c︰ 驱动器<ph id="ph2">\\</ph>ps<ph id="ph3">\-</ph>测试目录。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>It pipes the directory object to the Format<ph id="ph1">\-</ph>List cmdlet, which displays all <ph id="ph2">\(\*\)</ph> the properties and values of the directory in a list.</source>
          <target state="translated">它通过管道传递到格式的目录对象<ph id="ph1">\-</ph>列表 cmdlet，后者会显示所有 <ph id="ph2">\(\*\)</ph> 的属性和值的列表中的目录。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>EXAMPLE 5</source>
          <target state="translated">示例 5</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This command displays the properties of a file:</source>
          <target state="translated">此命令将显示文件的属性：</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The command uses the Path parameter of the Get<ph id="ph1">\-</ph>Item cmdlet to get the test.txt file.</source>
          <target state="translated">该命令使用 Path 参数的 get<ph id="ph1">\-</ph>项 cmdlet 来获取 test.txt 文件。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>It pipes the file object to the Format<ph id="ph1">\-</ph>List cmdlet, which displays all <ph id="ph2">\(\*\)</ph> the properties and values of the file in a list.</source>
          <target state="translated">它通过管道传递到格式的文件对象<ph id="ph1">\-</ph>列表 cmdlet，后者会显示所有 <ph id="ph2">\(\*\)</ph> 的属性和值的列表中的文件。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Copying Files and Directories</source>
          <target state="translated">复制文件和目录</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This command copies the A.txt file from the C:<ph id="ph1">\\</ph>A directory to the C:<ph id="ph2">\\</ph>A<ph id="ph3">\\</ph>Bb directory:</source>
          <target state="translated">此命令将 A.txt 文件从 c︰ 驱动器复制<ph id="ph1">\\</ph>c︰ 驱动器的目录<ph id="ph2">\\</ph>A<ph id="ph3">\\</ph>Bb 目录︰</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>It overwrites files in the destination directory without prompting for confirmation.</source>
          <target state="translated">它将覆盖目标目录中的文件，并且不会提示你进行确认。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This command copies all the files in the C:<ph id="ph1">\\</ph>A<ph id="ph2">\\</ph>Bb directory that have the .txt file name extension to the C:<ph id="ph3">\\</ph>A<ph id="ph4">\\</ph>Cc<ph id="ph5">\\</ph>Ccc<ph id="ph6">\\</ph> directory:</source>
          <target state="translated">此命令将 c︰ 驱动器中复制的所有文件<ph id="ph1">\\</ph>A<ph id="ph2">\\</ph>c︰ 驱动器的.txt 文件扩展名的 Bb 目录<ph id="ph3">\\</ph>A<ph id="ph4">\\</ph>抄送<ph id="ph5">\\</ph>Ccc<ph id="ph6">\\</ph> 目录︰</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>It uses the original names of the files.</source>
          <target state="translated">它使用文件的原始名称。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The command overwrites the existing files in the destination directory without prompting for confirmation.</source>
          <target state="translated">该命令将覆盖目标目录中的现有文件，并且不提示你进行确认。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>EXAMPLE 3</source>
          <target state="translated">示例 3</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Copies all the directories and files in the C:<ph id="ph1">\\</ph>a directory to the C:<ph id="ph2">\\</ph>c directory.</source>
          <target state="translated">在 c︰ 驱动器中复制所有目录和文件<ph id="ph1">\\</ph>c︰ 驱动器的目录<ph id="ph2">\\</ph>c 目录。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>If any of the directories to copy already exist in the destination directory, the command will fail unless you specify the Force parameter.</source>
          <target state="translated">如果要复制的所有目录已存在于目标目录中，则除非指定 Force 参数，否则此命令将会失败。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Moving Files and Directories</source>
          <target state="translated">移动文件和目录</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This command moves the C.txt file in the C:<ph id="ph1">\\</ph>A directory to the C:<ph id="ph2">\\</ph>A<ph id="ph3">\\</ph>Aa directory:</source>
          <target state="translated">此命令将 c︰ 驱动器中的 C.txt 文件移动<ph id="ph1">\\</ph>c︰ 驱动器的目录<ph id="ph2">\\</ph>A<ph id="ph3">\\</ph>Aa 目录︰</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The command will not automatically overwrite an existing file that has the same name.</source>
          <target state="translated">该命令将不会自动覆盖现有的同名文件。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>To force the cmdlet to overwrite an existing file, specify the Force parameter.</source>
          <target state="translated">若要强制该 cmdlet 覆盖现有文件，请指定 Force 参数。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This command moves the C:<ph id="ph1">\\</ph>A directory and all its contents to the C:<ph id="ph2">\\</ph>B directory:</source>
          <target state="translated">此命令将 c︰ 驱动器<ph id="ph1">\\</ph>目录及其所有内容 c︰ 驱动器<ph id="ph2">\\</ph>B 目录︰</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>You cannot move a directory when that directory is the current location.</source>
          <target state="translated">无法移动当前所在的目录。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Managing File Content</source>
          <target state="translated">管理文件内容</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This command appends the "test content" string to the Test.txt file:</source>
          <target state="translated">此命令将“test content”字符串追加到 Test.txt 文件：</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The existing content in the Test.txt file is not deleted.</source>
          <target state="translated">不会删除 Test.txt 文件中的现有内容。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This command gets the contents of the Test.txt file and displays them in the console:</source>
          <target state="translated">此命令将获取 Test.txt 文件的内容并在控制台中显示这些内容：</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>You can pipe the contents of the file to another cmdlet.</source>
          <target state="translated">你可以通过管道将文件内容传递给其他 cmdlet。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For example, the following command reads the contents of the Test.txt file and then supplies them as input to the ConvertTo<ph id="ph1">\-</ph>HTML cmdlet:</source>
          <target state="translated">例如，下面的命令读取 Test.txt 文件的内容并提供作为输入 ConvertTo<ph id="ph1">\-</ph>HTML cmdlet:</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>get<ph id="ph1">\-</ph>content <ph id="ph2">\-</ph>path test.txt &amp;#124; convertto<ph id="ph3">\-</ph>html</source>
          <target state="translated">获取<ph id="ph1">\-</ph>内容 <ph id="ph2">\-</ph>path test.txt &amp;#124; convertto<ph id="ph3">\-</ph>html</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>EXAMPLE 3</source>
          <target state="translated">示例 3</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This command replaces the contents of the Test.txt file with the "test content" string:</source>
          <target state="translated">此命令将使用“test content”字符串替换 Test.txt 文件的内容：</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>It overwrites the contents of Test.txt.</source>
          <target state="translated">它将覆盖 Test.txt 的内容。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>You can use the Value parameter of the New<ph id="ph1">\-</ph>Item cmdlet to add content to a file when you create it.</source>
          <target state="translated">可以使用新建的 Value 参数<ph id="ph1">\-</ph>项 cmdlet 来创建它时将内容添加到文件。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Managing Security Descriptors</source>
          <target state="translated">管理安全描述符</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This command returns a System.Security.AccessControl.FileSecurity object:</source>
          <target state="translated">此命令将返回一个 System.Security.AccessControl.FileSecurity 对象：</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>For more information about this object, pipe the command to the Get<ph id="ph1">\-</ph>Member cmdlet.</source>
          <target state="translated">有关此对象的详细信息，通过管道传递到 Get 命令<ph id="ph1">\-</ph>成员 cmdlet。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Or, see "FileSecurity Class" in the MSDN <ph id="ph1">\(</ph>Microsoft Developer Network<ph id="ph2">\)</ph> library at http:<ph id="ph3">\/\/</ph>go.microsoft.com<ph id="ph4">\/</ph>fwlink<ph id="ph5">\/</ph>?LinkId<ph id="ph6">\=</ph>145718.</source>
          <target state="translated">或者，请参阅 MSDN 中的"FileSecurity 类" <ph id="ph1">\(</ph>Microsoft Developer Network<ph id="ph2">\)</ph> 库在 http:<ph id="ph3">\/\/</ph>go.microsoft.com<ph id="ph4">\/</ph>fwlink<ph id="ph5">\/</ph>？LinkId<ph id="ph6">\=</ph>145718。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This command returns a System.Security.AccessControl.DirectorySecurity object:</source>
          <target state="translated">此命令将返回一个 System.Security.AccessControl.DirectorySecurity 对象：</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For more information about this object, pipe the command to the Get<ph id="ph1">\-</ph>Member cmdlet.</source>
          <target state="translated">有关此对象的详细信息，通过管道传递到 Get 命令<ph id="ph1">\-</ph>成员 cmdlet。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Or, see "DirectorySecurity Class" in the MSDN library at http:<ph id="ph1">\/\/</ph>go.microsoft.com<ph id="ph2">\/</ph>fwlink<ph id="ph3">\/</ph>?LinkId<ph id="ph4">\=</ph>145736.</source>
          <target state="translated">或者，请参阅 http 上的 MSDN library 中的"DirectorySecurity 类":<ph id="ph1">\/\/</ph>go.microsoft.com<ph id="ph2">\/</ph>fwlink<ph id="ph3">\/</ph>？LinkId<ph id="ph4">\=</ph>145736。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Creating Files and Directories</source>
          <target state="translated">创建文件和目录</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>This command creates the Logfiles directory on the C drive:</source>
          <target state="translated">此命令将在 C 驱动器上创建 Logfiles 目录：</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This command creates the Log2.txt file in the C:<ph id="ph1">\\</ph>Logfiles directory and then adds the "test log" string to the file:</source>
          <target state="translated">此命令在 c︰ 驱动器中创建 Log2.txt 文件<ph id="ph1">\\</ph>Logfiles 目录，然后将"test log"字符串添加到该文件︰</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>EXAMPLE 3</source>
          <target state="translated">示例 3</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Creates a file called Log2.txt in the C:<ph id="ph1">\\</ph>logfiles directory and adds the string "test log" to the file.</source>
          <target state="translated">创建 c︰ 驱动器中的名为 Log2.txt 文件<ph id="ph1">\\</ph>logfiles 目录，并将字符串"test log"添加到该文件。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Renaming Files and Directories</source>
          <target state="translated">重命名文件和目录</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>This command renames the A.txt file in the C:<ph id="ph1">\\</ph>A directory to B.txt:</source>
          <target state="translated">此命令将 c︰ 驱动器中的 A.txt 文件重命名<ph id="ph1">\\</ph>为 B.txt 目录︰</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>This command renames the C:<ph id="ph1">\\</ph>A<ph id="ph2">\\</ph>Cc directory to C:<ph id="ph3">\\</ph>A<ph id="ph4">\\</ph>Dd:</source>
          <target state="translated">此命令重命名 c︰ 驱动器<ph id="ph1">\\</ph>A<ph id="ph2">\\</ph>抄送目录更改为 c:<ph id="ph3">\\</ph>A<ph id="ph4">\\</ph>Dd:</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Deleting Files and Directories</source>
          <target state="translated">删除文件和目录</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>This command deletes the Test.txt file in the current directory:</source>
          <target state="translated">此命令将删除当前目录中的 Test.txt 文件：</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This command deletes all the files in the current directory that have the .xml file name extension:</source>
          <target state="translated">此命令将删除当前目录中文件扩展名为 .xml 的所有文件：</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Starting a Program by Invoking an Associated File</source>
          <target state="translated">通过调用关联文件启动程序</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The first command uses the Get<ph id="ph1">\-</ph>Service cmdlet to get information about local services.</source>
          <target state="translated">第一个命令使用 Get<ph id="ph1">\-</ph>服务 cmdlet 来获取有关本地服务的信息。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>It pipes the information to the Export<ph id="ph1">\-</ph>Csv cmdlet and then stores that information in the Services.csv file.</source>
          <target state="translated">它通过管道传递到导出的信息<ph id="ph1">\-</ph>Csv cmdlet，然后将该信息存储在 Services.csv 文件中。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The second command uses Invoke<ph id="ph1">\-</ph>Item to open the Services.csv file in the program associated with the .csv extension:</source>
          <target state="translated">第二个命令使用 Invoke<ph id="ph1">\-</ph>项在与.csv 扩展名相关联的程序中打开 Services.csv 文件︰</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Getting Files and Folders with Specified Attributes</source>
          <target state="translated">获取具有指定属性的文件和文件夹</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This command gets system files in the current directory and its subdirectories.</source>
          <target state="translated">此命令将获取当前目录及其子目录中的系统文件。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>It uses the File parameter to get only files <ph id="ph1">\(</ph>not directories<ph id="ph2">\)</ph> and the System parameter to get only items with the System attribute.</source>
          <target state="translated">它使用 File 参数来仅获取文件 <ph id="ph1">\(</ph>而不是目录<ph id="ph2">\)</ph> 和 System 参数来仅获取具有 System 属性项。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>It uses the Recurse parameter to get the items in the current directory and all subdirectories.</source>
          <target state="translated">它使用 Recurse 参数获取当前目录以及所有子目录中的项。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>This command gets all files, including hidden files, in the current directory.</source>
          <target state="translated">此命令将获取当前目录中的所有文件，其中包括隐藏文件。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>It uses the Attributes parameter with two values, <ph id="ph1">\!</ph>Directory<ph id="ph2">\+</ph>Hidden, which gets hidden files, and <ph id="ph3">\!</ph>Directory, which gets all other files.</source>
          <target state="translated">它具有两个值结合使用 Attributes 参数 <ph id="ph1">\!</ph>目录<ph id="ph2">\+</ph>Hidden，用于获取隐藏的文件，和 <ph id="ph3">\!</ph>目录中，后者将获取所有其他文件。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>"dir <ph id="ph1">\-</ph>att <ph id="ph2">\!</ph>d,<ph id="ph3">\!</ph>d<ph id="ph4">\+</ph>h" is the equivalent of this command.</source>
          <target state="translated">"dir <ph id="ph1">\-</ph>att <ph id="ph2">\!</ph>d，<ph id="ph3">\!</ph>d<ph id="ph4">\+</ph>h"是此命令的等效项。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>EXAMPLE 3</source>
          <target state="translated">示例 3</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>This command gets files in the current directory that are either compressed or encrypted.</source>
          <target state="translated">此命令将获取当前目录中已压缩或加密的文件。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>It uses the Attributes parameter with two values, Compressed and Encrypted.</source>
          <target state="translated">它将结合使用 Attributes 参数与以下两个值：Compressed 和 Encrypted。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The values are separated by a comma <ph id="ph1">\(</ph>,<ph id="ph2">\)</ph> which represents the OR operator.</source>
          <target state="translated">这些值隔开逗号 <ph id="ph1">\(</ph>,，<ph id="ph2">\)</ph> 表示或运算符。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>DYNAMIC PARAMETERS</source>
          <target state="translated">动态参数</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Dynamic parameters are cmdlet parameters that are added by a Windows PowerShell provider and are available only when the cmdlet is being used in the provider<ph id="ph1">\-</ph>enabled drive.</source>
          <target state="translated">动态参数是 cmdlet 参数，仅当该 cmdlet 中使用的是提供程序时由 Windows PowerShell 提供程序，并且可以添加<ph id="ph1">\-</ph>启用驱动器。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Encoding <ph id="ph1">\&lt;</ph>Microsoft.PowerShell.Commands.FileSystemCmdletProviderEncoding</source>
          <target state="translated">编码 <ph id="ph1">\&lt;</ph>Microsoft.PowerShell.Commands.FileSystemCmdletProviderEncoding</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Specifies the file encoding.</source>
          <target state="translated">指定文件编码。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The default is ASCII.</source>
          <target state="translated">默认值为 ASCII。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Unknown</source>
          <target state="translated">Unknown</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The encoding type is unknown or invalid.</source>
          <target state="translated">编码类型未知或无效。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The data can be treated as binary.</source>
          <target state="translated">数据可作为二进制处理。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">字符串</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Uses the encoding type for a string.</source>
          <target state="translated">使用针对字符串的编码类型。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Unicode</source>
          <target state="translated">Unicode</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Encodes in UTF<ph id="ph1">\-</ph>16 format using the little<ph id="ph2">\-</ph>endian byte order.</source>
          <target state="translated">在 UTF 编码<ph id="ph1">\-</ph>16 格式使用的一小<ph id="ph2">\-</ph>endian 字节顺序。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Byte</source>
          <target state="translated">Byte</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Encodes a set of characters into a sequence of bytes.</source>
          <target state="translated">将一组字符编码为一个字节序列。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>BigEndianUnicode</source>
          <target state="translated">BigEndianUnicode</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Encodes in UTF<ph id="ph1">\-</ph>16 format using the big<ph id="ph2">\-</ph>endian byte order.</source>
          <target state="translated">在 UTF 编码<ph id="ph1">\-</ph>16 格式并使用大型<ph id="ph2">\-</ph>endian 字节顺序。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>UTF8</source>
          <target state="translated">UTF8</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Encodes in UTF<ph id="ph1">\-</ph>8 format.</source>
          <target state="translated">在 UTF 编码<ph id="ph1">\-</ph>8 格式。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>UTF7</source>
          <target state="translated">UTF7</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Encodes in UTF<ph id="ph1">\-</ph>7 format.</source>
          <target state="translated">在 UTF 编码<ph id="ph1">\-</ph>7 格式。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>ASCII</source>
          <target state="translated">ASCII</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Uses the encoding for the ASCII <ph id="ph1">\(</ph>7<ph id="ph2">\-</ph>bit<ph id="ph3">\)</ph> character set.</source>
          <target state="translated">使用 ASCII 编码 <ph id="ph1">\(</ph>7<ph id="ph2">\-</ph>位<ph id="ph3">\)</ph> 字符集。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Cmdlets supported:</source>
          <target state="translated">支持的 Cmdlet：</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Add<ph id="ph1">\-</ph>Content</source>
          <target state="translated">添加<ph id="ph1">\-</ph>内容</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Get<ph id="ph1">\-</ph>Content</source>
          <target state="translated">Get<ph id="ph1">\-</ph>Content</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Set<ph id="ph1">\-</ph>Content</source>
          <target state="translated">设置<ph id="ph1">\-</ph>内容</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Delimiter <ph id="ph1">\&lt;</ph>System.String</source>
          <target state="translated">分隔符 <ph id="ph1">\&lt;</ph>System.String</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Specifies the delimiter that <bpt id="p1">[</bpt>Get<ph id="ph1">\-</ph>Content<ept id="p1">](assetId:///4d594e54-2c28-4052-b3f8-1c27ea724561)</ept> uses to divide the file into objects while it reads.</source>
          <target state="translated">指定的分隔符， <bpt id="p1">[</bpt>获取<ph id="ph1">\-</ph>内容<ept id="p1">](assetId:///4d594e54-2c28-4052-b3f8-1c27ea724561)</ept> 将该文件划分为对象，它读取数据时使用。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The default is "<ph id="ph1">\\</ph>n", the end<ph id="ph2">\-</ph>of<ph id="ph3">\-</ph>line character.</source>
          <target state="translated">默认值是"<ph id="ph1">\\</ph>n"，结束<ph id="ph2">\-</ph>的<ph id="ph3">\-</ph>行字符。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Therefore, by default, when reading a text file, <bpt id="p1">[</bpt>Get<ph id="ph1">\-</ph>Content<ept id="p1">](assetId:///4d594e54-2c28-4052-b3f8-1c27ea724561)</ept> returns a collection of string objects, each of which ends with an end<ph id="ph2">\-</ph>of<ph id="ph3">\-</ph>line character.</source>
          <target state="translated">因此，默认情况下，当读取文本文件， <bpt id="p1">[</bpt>获取<ph id="ph1">\-</ph>内容<ept id="p1">](assetId:///4d594e54-2c28-4052-b3f8-1c27ea724561)</ept> 返回的字符串对象的集合，其中每个结尾结束<ph id="ph2">\-</ph>的<ph id="ph3">\-</ph>行字符。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>When you enter a delimiter that does not exist in the file, <bpt id="p1">[</bpt>Get<ph id="ph1">\-</ph>Content<ept id="p1">](assetId:///4d594e54-2c28-4052-b3f8-1c27ea724561)</ept> returns the entire file as a single, undelimited object.</source>
          <target state="translated">当你输入该文件中不存在的分隔符 <bpt id="p1">[</bpt>获取<ph id="ph1">\-</ph>内容<ept id="p1">](assetId:///4d594e54-2c28-4052-b3f8-1c27ea724561)</ept> 返回整个文件作为单个未分隔的对象。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>You can use this parameter to split a large file into smaller files by specifying a file separator, such as "End of Example", as the delimiter.</source>
          <target state="translated">你可以使用此参数将大文件拆分为较小的文件，方法是指定文件分隔符（例如“End of Example”）作为分隔符。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The delimiter is preserved <ph id="ph1">\(</ph>not discarded<ph id="ph2">\)</ph> and becomes the last item in each file section.</source>
          <target state="translated">保留分隔符 <ph id="ph1">\(</ph>不会被放弃<ph id="ph2">\)</ph> 并且成为每个文件部分中的最后一项。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Troubleshooting Note: Currently, when the value of the Delimiter parameter is an empty string, <bpt id="p1">[</bpt>Get<ph id="ph1">\-</ph>Content<ept id="p1">](assetId:///4d594e54-2c28-4052-b3f8-1c27ea724561)</ept> does not return anything.</source>
          <target state="translated">故障排除注释︰ 目前，当 Delimiter 参数的值为空字符串， <bpt id="p1">[</bpt>获取<ph id="ph1">\-</ph>内容<ept id="p1">](assetId:///4d594e54-2c28-4052-b3f8-1c27ea724561)</ept> 不返回任何结果。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>This is a known issue.</source>
          <target state="translated">这是一个已知问题。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>To force <bpt id="p1">[</bpt>Get<ph id="ph1">\-</ph>Content<ept id="p1">](assetId:///4d594e54-2c28-4052-b3f8-1c27ea724561)</ept> to return the entire file as a single, undelimited string, enter a value that does not exist in the file.</source>
          <target state="translated">若要强制 <bpt id="p1">[</bpt>获取<ph id="ph1">\-</ph>内容<ept id="p1">](assetId:///4d594e54-2c28-4052-b3f8-1c27ea724561)</ept> 返回整个文件作为单个未分隔字符串中，输入一个值，该文件中不存在。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Cmdlets supported:</source>
          <target state="translated">支持的 Cmdlet：</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Get<ph id="ph1">\-</ph>Content</source>
          <target state="translated">Get<ph id="ph1">\-</ph>Content</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Wait <ph id="ph1">\&lt;</ph>System.Management.Automation.SwitchParameter</source>
          <target state="translated">等待 <ph id="ph1">\&lt;</ph>System.Management.Automation.SwitchParameter</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Waits for content to be appended to the file.</source>
          <target state="translated">等待要追加到文件的内容。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>If content is appended, it returns the appended content.</source>
          <target state="translated">如果已追加内容，则返回追加的内容。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>If the content has changed, it returns the entire file.</source>
          <target state="translated">如果已更改内容，则返回整个文件。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>When waiting, <bpt id="p1">[</bpt>Get<ph id="ph1">\-</ph>Content<ept id="p1">](assetId:///4d594e54-2c28-4052-b3f8-1c27ea724561)</ept> checks the file once each second until you interrupt it, such as by pressing CTRL<ph id="ph2">\+</ph>C.</source>
          <target state="translated">在等待过程中， <bpt id="p1">[</bpt>获取<ph id="ph1">\-</ph>内容<ept id="p1">](assetId:///4d594e54-2c28-4052-b3f8-1c27ea724561)</ept> 检查一次每秒，直到你中断该操作，如按下 ctrl 键的文件<ph id="ph2">\+</ph>c。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Cmdlets supported:</source>
          <target state="translated">支持的 Cmdlet：</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Get<ph id="ph1">\-</ph>Content</source>
          <target state="translated">Get<ph id="ph1">\-</ph>Content</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Attributes <ph id="ph1">\&lt;</ph>FlagsExpression<ph id="ph2">\[</ph>System.IO.FileAttributes</source>
          <target state="translated">属性 <ph id="ph1">\&lt;</ph>FlagsExpression<ph id="ph2">\[</ph>System.IO.FileAttributes</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Gets files and folders with the specified attributes.</source>
          <target state="translated">获取具有指定属性的文件和文件夹。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>This parameter supports all attributes and lets you specify complex combinations of attributes.</source>
          <target state="translated">此参数支持所有属性，并且允许你指定复杂的属性组合。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The Attributes parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">已在 Windows PowerShell 3.0 中引入了 Attributes 参数。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The Attributes parameter supports the following attributes: Archive, Compressed, Device, Directory, Encrypted, Hidden, Normal, NotContentIndexed, Offline, ReadOnly, ReparsePoint, SparseFile, System, and Temporary.</source>
          <target state="translated">Attributes 参数支持以下属性︰ 存档、 压缩、 设备、 目录、 加密、 Hidden、 Normal、 NotContentIndexed、 Offline、 ReadOnly、 ReparsePoint、 SparseFile、 系统中和临时。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>For a description of these attributes, see the FileAttributes enumeration at http:<ph id="ph1">\/\/</ph>go.microsoft.com<ph id="ph2">\/</ph>fwlink<ph id="ph3">\/</ph>?LinkId<ph id="ph4">\=</ph>201508.</source>
          <target state="translated">有关这些属性的说明，请参阅 FileAttributes 枚举，http:<ph id="ph1">\/\/</ph>go.microsoft.com<ph id="ph2">\/</ph>fwlink<ph id="ph3">\/</ph>？LinkId<ph id="ph4">\=</ph>201508。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Use the following operators to combine attributes.</source>
          <target state="translated">使用以下运算符合并属性。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>NOT</source>
          <target state="translated">NOT</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>AND</source>
          <target state="translated">和</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>, OR</source>
          <target state="translated">、OR</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>No spaces are permitted between an operator and its attribute.</source>
          <target state="translated">运算符与其属性之间不允许有空格。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>However, spaces are permitted before commas.</source>
          <target state="translated">但是，在逗号之前允许有空格。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Cmdlets supported:</source>
          <target state="translated">支持的 Cmdlet：</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Get<ph id="ph1">\-</ph>ChildItem</source>
          <target state="translated">Get<ph id="ph1">\-</ph>ChildItem</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Directory <ph id="ph1">\&lt;</ph>System.Management.Automation.SwitchParameter</source>
          <target state="translated">目录 <ph id="ph1">\&lt;</ph>System.Management.Automation.SwitchParameter</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Gets directories <ph id="ph1">\(</ph>folders<ph id="ph2">\)</ph>.</source>
          <target state="translated">获取目录 <ph id="ph1">\(</ph>文件夹<ph id="ph2">\)</ph>。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The Directory parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">已在 Windows PowerShell 3.0 中引入了 Directory 参数。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>To get only directories, use the Directory parameter and omit the File parameter.</source>
          <target state="translated">若要仅获取目录，请使用 Directory 参数并省略 File 参数。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>To exclude directories, use the File parameter and omit the Directory parameter, or use the Attributes parameter.</source>
          <target state="translated">若要排除目录，请使用 File 参数并省略 Directory 参数，或者使用 Attributes 参数。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Cmdlets supported:</source>
          <target state="translated">支持的 Cmdlet：</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Get<ph id="ph1">\-</ph>ChildItem</source>
          <target state="translated">Get<ph id="ph1">\-</ph>ChildItem</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>File <ph id="ph1">\&lt;</ph>System.Management.Automation.SwitchParameter</source>
          <target state="translated">文件 <ph id="ph1">\&lt;</ph>System.Management.Automation.SwitchParameter</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Gets files.</source>
          <target state="translated">获取文件。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The File parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">已在 Windows PowerShell 3.0 中引入了 File 参数。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>To get only files, use the File parameter and omit the Directory parameter.</source>
          <target state="translated">若要仅获取文件，请使用 File 参数并省略 Directory 参数。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>To exclude files, use the Directory parameter and omit the File parameter, or use the Attributes parameter.</source>
          <target state="translated">若要排除文件，请使用 Directory 参数并省略 File 参数，或者使用 Attributes 参数。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Cmdlets supported:</source>
          <target state="translated">支持的 Cmdlet：</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Get<ph id="ph1">\-</ph>ChildItem</source>
          <target state="translated">Get<ph id="ph1">\-</ph>ChildItem</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Hidden <ph id="ph1">\&lt;</ph>System.Management.Automation.SwitchParameter</source>
          <target state="translated">隐藏 <ph id="ph1">\&lt;</ph>System.Management.Automation.SwitchParameter</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Gets only hidden files and directories <ph id="ph1">\(</ph>folders<ph id="ph2">\)</ph>.</source>
          <target state="translated">仅获取隐藏的文件和目录 <ph id="ph1">\(</ph>文件夹<ph id="ph2">\)</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">[</bpt>Get<ph id="ph1">\-</ph>ChildItem<ept id="p1">](assetId:///75cf79bb-4db6-4a67-8c36-3d20754e2190)</ept> gets only non<ph id="ph2">\-</ph>hidden items.</source>
          <target state="translated">默认情况下， <bpt id="p1">[</bpt>获取<ph id="ph1">\-</ph>ChildItem<ept id="p1">](assetId:///75cf79bb-4db6-4a67-8c36-3d20754e2190)</ept> 仅获取非<ph id="ph2">\-</ph>隐藏的项目。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The Hidden parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">已在 Windows PowerShell 3.0 中引入了 Hidden 参数。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>To get only hidden items, use the Hidden parameter, its "h" or "ah" aliases, or the Hidden value of the Attributes parameter.</source>
          <target state="translated">若要仅获取隐藏项，请使用 Hidden 参数、其“h”或“ah”别名或 Attributes 参数的 Hidden 值。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>To exclude hidden items, omit the Hidden parameter or use the Attributes parameter.</source>
          <target state="translated">若要排除隐藏项，请省略 Hidden 参数或使用 Attributes 参数。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Cmdlets supported:</source>
          <target state="translated">支持的 Cmdlet：</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Get<ph id="ph1">\-</ph>ChildItem</source>
          <target state="translated">Get<ph id="ph1">\-</ph>ChildItem</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>ReadOnly <ph id="ph1">\&lt;</ph>System.Management.Automation.SwitchParameter</source>
          <target state="translated">ReadOnly <ph id="ph1">\&lt;</ph>System.Management.Automation.SwitchParameter</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Gets only read<ph id="ph1">\-</ph>only files and directories <ph id="ph2">\(</ph>folders<ph id="ph3">\)</ph>.</source>
          <target state="translated">获取只能读取<ph id="ph1">\-</ph>只有文件和目录 <ph id="ph2">\(</ph>文件夹<ph id="ph3">\)</ph>。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The ReadOnly parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">已在 Windows PowerShell 3.0 中引入了 ReadOnly 参数。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>To get only read<ph id="ph1">\-</ph>only items, use the ReadOnly parameter, its "ar" alias, or the ReadOnly value of the Attributes parameter.</source>
          <target state="translated">若要获取只读取<ph id="ph1">\-</ph>仅项，使用 ReadOnly 参数、 其"ar"别名或 Attributes 参数的 ReadOnly 值。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>To exclude read<ph id="ph1">\-</ph>only items, use the Attributes parameter.</source>
          <target state="translated">若要排除读取<ph id="ph1">\-</ph>仅项，使用 Attributes 参数。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Cmdlets supported:</source>
          <target state="translated">支持的 Cmdlet：</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Get<ph id="ph1">\-</ph>ChildItem</source>
          <target state="translated">Get<ph id="ph1">\-</ph>ChildItem</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>System <ph id="ph1">\&lt;</ph>System.Management.Automation.SwitchParameter</source>
          <target state="translated">系统 <ph id="ph1">\&lt;</ph>System.Management.Automation.SwitchParameter</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Gets only system files and directories <ph id="ph1">\(</ph>folders<ph id="ph2">\)</ph>.</source>
          <target state="translated">仅获取系统文件和目录 <ph id="ph1">\(</ph>文件夹<ph id="ph2">\)</ph>。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The System parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">已在 Windows PowerShell 3.0 中引入了 System 参数。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>To get only system files and folders, use the System parameter, its "as" alias, or the System value of the Attributes parameter.</source>
          <target state="translated">若要仅获取系统文件和文件夹，请使用 System 参数、其“as”别名或 Attributes 参数的 System 值。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>To exclude system files and folders, use the Attributes parameter.</source>
          <target state="translated">若要排除系统文件和文件夹，请使用 Attributes 参数。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Cmdlets supported:</source>
          <target state="translated">支持的 Cmdlet：</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Get<ph id="ph1">\-</ph>ChildItem</source>
          <target state="translated">Get<ph id="ph1">\-</ph>ChildItem</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>NewerThan <ph id="ph1">\&lt;</ph>System.DateTime</source>
          <target state="translated">NewerThan <ph id="ph1">\&lt;</ph>System.DateTime</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Returns "True" <ph id="ph1">\(</ph>$True<ph id="ph2">\)</ph> when the LastWriteTime value of a file is greater than the specified date.</source>
          <target state="translated">返回"True" <ph id="ph1">\(</ph>$True<ph id="ph2">\)</ph> 当文件的 LastWriteTime 值大于指定的日期。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns "False" <ph id="ph1">\(</ph>$False<ph id="ph2">\)</ph>.</source>
          <target state="translated">否则，它将返回"False" <ph id="ph1">\(</ph>$False<ph id="ph2">\)</ph>。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Enter a DateTime object, such as one that the <bpt id="p1">[</bpt>Get<ph id="ph1">\-</ph>Date<ept id="p1">](assetId:///277ba77f-f2be-44d7-8f15-23069faf0a4b)</ept> cmdlet returns, or a string that can be converted to a DateTime object, such as "August 10, 2011 2:00 PM".</source>
          <target state="translated">输入一个 DateTime 对象，例如， <bpt id="p1">[</bpt>获取<ph id="ph1">\-</ph>日期<ept id="p1">](assetId:///277ba77f-f2be-44d7-8f15-23069faf0a4b)</ept> cmdlet 返回时或可以转换为 DateTime 对象，例如"August 10，2011 2:00 PM"的字符串。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Cmdlets supported:</source>
          <target state="translated">支持的 Cmdlet：</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Test<ph id="ph1">\-</ph>Path</source>
          <target state="translated">测试<ph id="ph1">\-</ph>路径</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>OlderThan <ph id="ph1">\&lt;</ph>System.DateTime</source>
          <target state="translated">OlderThan <ph id="ph1">\&lt;</ph>System.DateTime</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Returns "True" <ph id="ph1">\(</ph>$True<ph id="ph2">\)</ph> when the LastWriteTime value of a file is less than the specified date.</source>
          <target state="translated">返回"True" <ph id="ph1">\(</ph>$True<ph id="ph2">\)</ph> 时文件的 LastWriteTime 值小于指定的日期。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns "False" <ph id="ph1">\(</ph>$False<ph id="ph2">\)</ph>.</source>
          <target state="translated">否则，它将返回"False" <ph id="ph1">\(</ph>$False<ph id="ph2">\)</ph>。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Enter a DateTime object, such as one that the <bpt id="p1">[</bpt>Get<ph id="ph1">\-</ph>Date<ept id="p1">](assetId:///277ba77f-f2be-44d7-8f15-23069faf0a4b)</ept> cmdlet returns, or a string that can be converted to a DateTime object, such as "August 10, 2011 2:00 PM".</source>
          <target state="translated">输入一个 DateTime 对象，例如， <bpt id="p1">[</bpt>获取<ph id="ph1">\-</ph>日期<ept id="p1">](assetId:///277ba77f-f2be-44d7-8f15-23069faf0a4b)</ept> cmdlet 返回时或可以转换为 DateTime 对象，例如"August 10，2011 2:00 PM"的字符串。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Cmdlets supported:</source>
          <target state="translated">支持的 Cmdlet：</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Test<ph id="ph1">\-</ph>Path</source>
          <target state="translated">测试<ph id="ph1">\-</ph>路径</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Stream <ph id="ph1">\&lt;</ph>System.String</source>
          <target state="translated">流 <ph id="ph1">\&lt;</ph>System.String</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Manages alternate data streams.</source>
          <target state="translated">管理备用数据流。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Enter the stream name.</source>
          <target state="translated">输入流名称。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted only in <bpt id="p1">[</bpt>Get<ph id="ph1">\-</ph>Item for FileSystem<ept id="p1">](../Topic/Get-Item-for-FileSystem.md)</ept> and <bpt id="p2">[</bpt>Remove<ph id="ph2">\-</ph>Item for FileSystem<ept id="p2">](../Topic/Remove-Item-for-FileSystem.md)</ept> commands in a file system drive.</source>
          <target state="translated">仅在允许使用通配符 <bpt id="p1">[</bpt>获取<ph id="ph1">\-</ph>为文件系统项<ept id="p1">](../Topic/Get-Item-for-FileSystem.md)</ept> 和 <bpt id="p2">[</bpt>删除<ph id="ph2">\-</ph>为文件系统项<ept id="p2">](../Topic/Remove-Item-for-FileSystem.md)</ept> 文件系统驱动器中的命令。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Cmdlets supported:</source>
          <target state="translated">支持的 Cmdlet：</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Add<ph id="ph1">\-</ph>Content</source>
          <target state="translated">添加<ph id="ph1">\-</ph>内容</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Clear<ph id="ph1">\-</ph>Content</source>
          <target state="translated">清除<ph id="ph1">\-</ph>内容</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Get<ph id="ph1">\-</ph>Item</source>
          <target state="translated">获取<ph id="ph1">\-</ph>项</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Get<ph id="ph1">\-</ph>Content</source>
          <target state="translated">Get<ph id="ph1">\-</ph>Content</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Remove<ph id="ph1">\-</ph>Item</source>
          <target state="translated">Remove<ph id="ph1">\-</ph>Item</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Set<ph id="ph1">\-</ph>Content</source>
          <target state="translated">设置<ph id="ph1">\-</ph>内容</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Raw <ph id="ph1">\&lt;</ph>SwitchParameter</source>
          <target state="translated">原始 <ph id="ph1">\&lt;</ph>SwitchParameter</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Ignores newline characters.</source>
          <target state="translated">忽略换行符。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Returns contents as a single item.</source>
          <target state="translated">返回作为单个项的内容。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Cmdlets supported:</source>
          <target state="translated">支持的 Cmdlet：</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Get<ph id="ph1">\-</ph>Content</source>
          <target state="translated">Get<ph id="ph1">\-</ph>Content</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>about<ph id="ph1">\_</ph>Providers</source>
          <target state="translated">有关<ph id="ph1">\_</ph>提供程序</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>