<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b2b6bc4d4e003e7531bfd38c44ac9dabf51e9e63</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\Get-FileHash.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d66071e4550513b33dbe78615db102e4575b0270</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">748f60fdcb46b049a2442a2ef67b969241820784</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-FileHash</source>
          <target state="translated">Get-filehash</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-FileHash</source>
          <target state="translated">Get-filehash</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Computes the hash value for a file by using a specified hash algorithm.</source>
          <target state="translated">通过使用指定的哈希算法，计算文件的哈希值。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Path (Default)</source>
          <target state="translated">路径 （默认值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LiteralPath</source>
          <target state="translated">LiteralPath</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Stream</source>
          <target state="translated">流</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Get-FileHash computes the hash value for a file by using a specified hash algorithm.</source>
          <target state="translated">通过使用指定的哈希算法，Get-FileHash 计算文件的哈希值。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A hash value is a unique value that corresponds to the content of the file.</source>
          <target state="translated">哈希值是对应文件内容的唯一值。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Rather than identifying the contents of a file by its file name, extension, or other designation, a hash assigns a unique value to the contents of a file.</source>
          <target state="translated">哈希将唯一值分配到文件的内容，而不是通过其文件名、扩展名或其他指定标识文件的内容。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>File names and extensions can be changed without altering the content of the file, and without changing the hash value.</source>
          <target state="translated">可以更改文件名和扩展名，而无需更改文件的内容，而且无需更改哈希值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Similarly, the file's content can be changed without changing the name or extension.</source>
          <target state="translated">同样，该文件的内容可以更改而无需更改名称或扩展名。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, changing even a single character in the contents of a file changes the hash value of the file.</source>
          <target state="translated">但是，即使更改文件内容中的单个字符也会更改该文件的哈希值。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The purpose of hash values is to provide a cryptographically-secure way to verify that the contents of a file have not been changed.</source>
          <target state="translated">哈希值的用途是提供加密型安全的方式，以验证尚未更改文件的内容。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>While some hash algorithms, including MD5 and SHA1, are no longer considered secure against attack, the goal of a secure hash algorithm is to render it impossible to change the contents of a file-either by accident, or by malicious or unauthorized attempt-and maintain the same hash value.</source>
          <target state="translated">尽管某些哈希算法，包括 MD5 和 SHA1，不再认为安全，免受攻击，安全哈希算法的目标是来呈现不可能通过意外，或通过恶意或未经授权的尝试更改的是文件的内容-和维护相同的哈希值。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can also use hash values to determine if two different files have exactly the same content.</source>
          <target state="translated">你还可以使用哈希值来确定两个不同的文件是否具有完全相同的内容。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the hash values of two files are identical, the contents of the files are also identical.</source>
          <target state="translated">如果两个文件的哈希值相同，则文件的内容也相同。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>By default, the Get-FileHash cmdlet uses the SHA256 algorithm, although any hash algorithm that is supported by the target operating system can be used.</source>
          <target state="translated">默认情况下，尽管可以使用任何受目标操作系统支持的哈希算法，但是 Get-FileHash cmdlet 使用 SHA256 算法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Example 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This example uses the Get-FileHash cmdlet to compute the hash value for the <bpt id="p1">**</bpt>Powershell.exe<ept id="p1">**</ept> file.</source>
          <target state="translated">此示例使用 Get-filehash cmdlet 来计算的哈希值 <bpt id="p1">**</bpt>Powershell.exe<ept id="p1">**</ept> 文件。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The hash algorithm used is the default, SHA256.</source>
          <target state="translated">使用的哈希算法是默认算法 SHA256。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The output is piped to the Format-List cmdlet to format the output as a list.</source>
          <target state="translated">将输出传送到 Format-list cmdlet 来设置以列表形式输出格式。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Example 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This command uses the Get-FileHash cmdlet and the SHA384 algorithm to compute the hash value for an ISO file that an administrator has downloaded from the Internet.</source>
          <target state="translated">此命令使用 Get-FileHash cmdlet 和 SHA384 算法来计算管理员已从 Internet 下载的 ISO 文件的哈希值。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The output is piped to the Format-List cmdlet to format the output as a list.</source>
          <target state="translated">将输出传送到 Format-list cmdlet 来设置以列表形式输出格式。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-Algorithm</source>
          <target state="translated">-算法</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Specifies the cryptographic hash function to use for computing the hash value of the contents of the specified file.</source>
          <target state="translated">指定加密哈希函数，以用来计算指定文件的内容的哈希值。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A cryptographic hash function includes the property that it is not possible to find two distinct inputs that generate the same hash values.</source>
          <target state="translated">加密哈希函数包括不可能找到生成相同哈希值的两个不同的输入的属性。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Hash functions are commonly used with digital signatures and for data integrity.</source>
          <target state="translated">哈希函数通常与数字签名一起使用并用来保持数据的完整性。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Valid values for this parameter are SHA1, SHA256, SHA384, SHA512, MACTripleDES, MD5, and RIPEMD160.</source>
          <target state="translated">此参数的有效值为 SHA1、SHA256、SHA384、SHA512、MACTripleDES、MD5 和 RIPEMD160。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If no value is specified, or if the parameter is omitted, the default value is SHA256.</source>
          <target state="translated">如果未指定任何值，或省略了参数，则默认值为 SHA256。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For security reasons, MD5 and SHA1, which are no longer considered secure, should only be used for simple change validation, and should not be used to generate hash values for files that require protection from attack or tampering.</source>
          <target state="translated">出于安全原因，MD5 和 SHA1（不再认为是安全的）仅应该用于简单的更改验证，而且不应该用于生成要求保护免受攻击或篡改的文件的哈希值。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Specifies the path to a file.</source>
          <target state="translated">指定到文件的路径。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Unlike the Path parameter, the value of the LiteralPath parameter is used exactly as it is typed.</source>
          <target state="translated">与 Path 参数不同，LiteralPath 参数的值严格按照其键入形式使用。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcard characters.</source>
          <target state="translated">不会将任何字符解释为通配字符。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose the path in single quotation marks.</source>
          <target state="translated">如果路径包括转义符，则请将其括在单引号中。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Single quotation marks instruct Windows PowerShell not to interpret characters as escape sequences.</source>
          <target state="translated">单引号会告知 Windows PowerShell 不要将字符解释为转义序列。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Specifies the path to one or more files.</source>
          <target state="translated">指定一个或多个文件的路径。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-InputStream</source>
          <target state="translated">-InputStream</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>{{Fill InputStream Description}}</source>
          <target state="translated">{{填充 InputStream 描述}}</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can pipe a string to the Get-FileHash cmdlet that contains a path to one or more files.</source>
          <target state="translated">你可以通过管道将字符串传递给 Get-FileHash cmdlet，其中包含一个或多个文件的路径。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Microsoft.Powershell.Utility.FileHash</source>
          <target state="translated">Microsoft.Powershell.Utility.FileHash</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Get-FileHash returns an object that represents the path to the specified file, the value of the computed hash, and the algorithm used to compute the hash.</source>
          <target state="translated">Get-FileHash 返回一个对象，它表示指定的文件、计算出的哈希的值以及用于计算哈希的算法的路径。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>