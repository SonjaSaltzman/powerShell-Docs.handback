<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a4faf2c09abdc3e3de3057d3ecf16c33de6dab0d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Get-PSBreakpoint.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">afc221a317d62196845af05ad803bd8ee0698b97</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9b9668b54c16d29eccc9db8f416cf03dcb390ba4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-PSBreakpoint</source>
          <target state="translated">Get-PSBreakpoint</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-PSBreakpoint</source>
          <target state="translated">Get-PSBreakpoint</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the breakpoints that are set in the current session.</source>
          <target state="translated">获取在当前会话中设置的断点。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Script (Default)</source>
          <target state="translated">脚本 （默认值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">类型</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">命令</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">变量</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Id</source>
          <target state="translated">ID</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-PSBreakPoint<ept id="p1">**</ept> cmdlet gets the breakpoints that are set in the current session.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-psbreakpoint<ept id="p1">**</ept> cmdlet 将获取当前会话中设置的断点。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can use the cmdlet parameters to get particular breakpoints.</source>
          <target state="translated">可以使用该 cmdlet 参数获取特定断点。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A breakpoint is a point in a command or script where execution stops temporarily so that you can examine the instructions.</source>
          <target state="translated">断点是命令或脚本中的一个点，在该点处将暂时停止执行，以便你可以检查指令。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-PSBreakpoint<ept id="p1">**</ept> is one of several cmdlets designed for debugging Windows PowerShell scripts and commands.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-psbreakpoint<ept id="p1">**</ept> 是专门用于调试 Windows PowerShell 脚本和命令的多个 cmdlet 之一。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information about the Windows PowerShell debugger, see about_Debuggers.</source>
          <target state="translated">有关 Windows PowerShell 调试程序的详细信息，请参阅 about_Debuggers。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Example 1: Get all breakpoints for all scripts and functions</source>
          <target state="translated">示例 1︰ 获取所有脚本和函数的所有断点</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This command gets all breakpoints set on all scripts and functions in the current session.</source>
          <target state="translated">此命令获取在当前会话中所有脚本和函数上设置的所有断点。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Example 2: Get breakpoints by ID</source>
          <target state="translated">示例 2︰ 获取按 ID 的断点</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This command gets the breakpoint with breakpoint ID 2.</source>
          <target state="translated">此命令获取断点 ID 为 2 的断点。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Example 3: Pipe an ID to Get-PSBreakpoint</source>
          <target state="translated">示例 3︰ 通过管道传递给 Get-psbreakpoint ID</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>These commands show how to get a breakpoint by piping a breakpoint ID to <bpt id="p1">**</bpt>Get-PSBreakpoint<ept id="p1">**</ept>.</source>
          <target state="translated">这些命令演示如何通过管道将断点 ID 传递到获取断点 <bpt id="p1">**</bpt>Get-psbreakpoint<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The first command uses the Set-PSBreakpoint cmdlet to create a breakpoint on the Increment function in the Sample.ps1 script.</source>
          <target state="translated">第一个命令使用 Set-PSBreakpoint cmdlet 在 Sample.ps1 脚本中的 Increment 函数上创建断点。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It saves the breakpoint object in the $B variable.</source>
          <target state="translated">它将断点对象保存在 $B 变量。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The second command uses the dot operator (.) to get the Id property of the breakpoint object in the $B variable.</source>
          <target state="translated">第二个命令使用点运算符 （.） 获取 $B 变量中的断点对象的 Id 属性。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the ID to the <bpt id="p1">**</bpt>Get-PSBreakpoint<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">它使用管道运算符 (|) 将 ID 发送到 <bpt id="p1">**</bpt>Get-psbreakpoint<ept id="p1">**</ept> cmdlet。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>As a result, <bpt id="p1">**</bpt>Get-PSBreakpoint<ept id="p1">**</ept> gets the breakpoint with the specified ID.</source>
          <target state="translated">因此， <bpt id="p1">**</bpt>Get-psbreakpoint<ept id="p1">**</ept> 获取具有指定 ID 的断点</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Example 4: Get breakpoints in specified script files</source>
          <target state="translated">示例 4︰ 在指定的脚本文件中获取断点</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This command gets all of the breakpoints in the Sample.ps1 and SupportScript.ps1 files.</source>
          <target state="translated">此命令获取 Sample.ps1 和 SupportScript.ps1 文件中的所有断点。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This command does not get other breakpoints that might be set in other scripts or on functions in the session.</source>
          <target state="translated">此命令不会获取可能会在其他脚本或函数在会话中设置的其他断点。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Example 5: Get breakpoints in specified cmdlets</source>
          <target state="translated">示例 5︰ 在指定的 cmdlet 获取断点</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This command gets all Command breakpoints that are set on Read-Host or Write-Host commands in the Sample.ps1 file.</source>
          <target state="translated">此命令获取在 Sample.ps1 文件中的 Read-Host 或 Write-Host 命令上设置的所有 Command 断点。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Example 6: Get Command breakpoints in a specified file</source>
          <target state="translated">示例 6︰ 指定的文件中获取命令断点</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This command gets all Command breakpoints in the Sample.ps1 file.</source>
          <target state="translated">此命令获取 Sample.ps1 文件中的所有 Command 断点。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Example 7: Get breakpoints by variable</source>
          <target state="translated">示例 7︰ 按变量获取断点</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This command gets breakpoints that are set on the $Index and $Swap variables in the current session.</source>
          <target state="translated">此命令将获取当前会话中的 $Index 和 $Swap 变量设置的断点。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Example 8: Get all Line and Variable breakpoints in a file</source>
          <target state="translated">示例 8︰ 在文件中获取所有行断点和变量断点</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This command gets all line and variable breakpoints in the Sample.ps1 script.</source>
          <target state="translated">此命令获取 Sample.ps1 脚本中的所有行断点和变量断点。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-Command</source>
          <target state="translated">-Command</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Specifies an array of command breakpoints that are set on the specified command names.</source>
          <target state="translated">指定的命令在指定的命令名称设置的断点的数组。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Enter the command names, such as the name of a cmdlet or function.</source>
          <target state="translated">输入命令名称，例如 cmdlet 或函数的名称。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>-Id</source>
          <target state="translated">-Id</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Specifies the breakpoint IDs that this cmdlet gets.</source>
          <target state="translated">指定断点此 cmdlet 将获取的 Id。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Enter the IDs in a comma-separated list.</source>
          <target state="translated">将 ID 输入以逗号分隔的列表中。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You can also pipe breakpoint IDs to <bpt id="p1">**</bpt>Get-PSBreakpoint<ept id="p1">**</ept>.</source>
          <target state="translated">您还可以通过管道断点 Id 传递给 <bpt id="p1">**</bpt>Get-psbreakpoint<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-Script</source>
          <target state="translated">脚本</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Specifies an array of scripts that contain the breakpoints.</source>
          <target state="translated">指定脚本中包含断点的数组。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Enter the path and names of one or more script files.</source>
          <target state="translated">输入路径和一个或多个脚本文件的名称。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If you omit the path, the default location is the current directory.</source>
          <target state="translated">如果省略路径，则默认位置为当前目录。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-Type</source>
          <target state="translated">类型</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Specifies an array of breakpoint types that this cmdlet gets.</source>
          <target state="translated">指定此 cmdlet 将获取的断点类型的数组。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Enter one or more types.</source>
          <target state="translated">输入一个或多个类型。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">此参数的可接受的值是：</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Line</source>
          <target state="translated">行</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">命令</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">变量</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You can also pipe breakpoint types to <bpt id="p1">**</bpt>Get-PSBreakPoint<ept id="p1">**</ept>.</source>
          <target state="translated">您还可以通过管道断点类型传递给 <bpt id="p1">**</bpt>Get-psbreakpoint<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>-Variable</source>
          <target state="translated">单变量</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Specifies an array of variable breakpoints that are set on the specified variable names.</source>
          <target state="translated">指定的变量在指定的变量名称设置的断点的数组。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Enter the variable names without dollar signs.</source>
          <target state="translated">输入不带美元符号的变量名称。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>System.Int32, Microsoft.PowerShell.Commands.BreakpointType</source>
          <target state="translated">System.Int32 Microsoft.PowerShell.Commands.BreakpointType</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can pipe breakpoint IDs and breakpoint types to <bpt id="p1">**</bpt>Get-PSBreakPoint<ept id="p1">**</ept>.</source>
          <target state="translated">您可以通过管道将断点 Id 和断点类型传递给 <bpt id="p1">**</bpt>Get-psbreakpoint<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.Breakpoint</source>
          <target state="translated">System.Management.Automation.Breakpoint</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-PSBreakPoint<ept id="p1">**</ept> returns objects that represent the breakpoints in the session.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-psbreakpoint<ept id="p1">**</ept> 返回表示会话中的断点的对象。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can use Get-PSBreakpoint or its alias, "gbp".</source>
          <target state="translated">可以使用 Get-PSBreakpoint 或其别名“gbp”。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Disable-PSBreakpoint</source>
          <target state="translated">Disable-PSBreakpoint</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Enable-PSBreakpoint</source>
          <target state="translated">Enable-PSBreakpoint</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Get-PSCallStack</source>
          <target state="translated">Get-PSCallStack</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Remove-PSBreakpoint</source>
          <target state="translated">Remove-PSBreakpoint</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Set-PSBreakpoint</source>
          <target state="translated">Set-PSBreakpoint</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>about_Debuggers</source>
          <target state="translated">about_Debuggers</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>