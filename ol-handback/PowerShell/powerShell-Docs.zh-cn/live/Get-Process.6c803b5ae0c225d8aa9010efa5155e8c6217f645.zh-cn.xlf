<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">757a691c88b181d39313c140178c2f86ae4ab321</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Management\Get-Process.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">218ed0082ad00491b24b0c56716c2f75782fb947</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1ce43bc59277b98d2a56a03b76235cae5fc722e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-Process</source>
          <target state="translated">Get-Process</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-Process</source>
          <target state="translated">Get-Process</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the processes that are running on the local computer or a remote computer.</source>
          <target state="translated">获取在本地计算机或远程计算机上运行的进程。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name (Default)</source>
          <target state="translated">名称 （默认值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>NameWithUserName</source>
          <target state="translated">NameWithUserName</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>IdWithUserName</source>
          <target state="translated">IdWithUserName</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Id</source>
          <target state="translated">ID</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>InputObjectWithUserName</source>
          <target state="translated">InputObjectWithUserName</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>InputObject</source>
          <target state="translated">InputObject</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Process<ept id="p1">**</ept> cmdlet gets the processes on a local or remote computer.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-process<ept id="p1">**</ept> cmdlet 获取本地或远程计算机上的进程。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Without parameters, this cmdlet gets all of the processes on the local computer.</source>
          <target state="translated">不带参数，此 cmdlet 将本地计算机上获取的所有进程。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can also specify a particular process by process name or process ID (PID) or pass a process object through the pipeline to this cmdlet.</source>
          <target state="translated">您可以指定特定进程的进程名称或进程 ID (PID)，或将通过管道将进程对象传递给此 cmdlet。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>By default, this cmdlet returns a process object that has detailed information about the process and supports methods that let you start and stop the process.</source>
          <target state="translated">默认情况下，此 cmdlet 将返回一个进程对象，它提供了详细有关进程的信息，并支持允许你启动和停止进程的方法。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also use the parameters of the <bpt id="p1">**</bpt>Get-Process<ept id="p1">**</ept> cmdlet to get file version information for the program that runs in the process and to get the modules that the process loaded.</source>
          <target state="translated">您还可以使用的参数 <bpt id="p1">**</bpt>Get-process<ept id="p1">**</ept> cmdlet 来获取进程中运行的程序的文件版本信息，并将获取进程加载的模块。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example 1: Get a list of all active processes on the local computer</source>
          <target state="translated">示例 1︰ 获取本地计算机上的所有活动进程列表</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This command gets a list of all active processes running on the local computer.</source>
          <target state="translated">此命令获取本地计算机上运行的所有活动进程的列表。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For a definition of each column, see the "Additional Notes" section of the Help topic for Get-Help.</source>
          <target state="translated">有关每列的定义，请参阅 Get-Help 的帮助主题的“附加注释”一节。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Example 2: Get all available data about one or more processes</source>
          <target state="translated">示例 2︰ 获取有关一个或多个进程的所有可用数据</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This command gets all available data about the Winword and Explorer processes on the computer.</source>
          <target state="translated">此命令获取计算机上的有关 Winword 和 Explorer 进程的所有可用的数据。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>Name<ept id="p1">*</ept> parameter to specify the processes, but it omits the optional parameter name.</source>
          <target state="translated">它使用 <bpt id="p1">*</bpt>名称<ept id="p1">*</ept> 参数来指定进程，但它省略了可选的参数名。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The pipeline operator (|) passes the data to the Format-List cmdlet, which displays all available properties (*) of the Winword and Explorer process objects.</source>
          <target state="translated">管道运算符 (|) 将数据传递给 Format-List cmdlet，后者将显示 Winword 和 Explorer 进程对象的所有可用属性 (*)。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can also identify the processes by their process IDs.</source>
          <target state="translated">也可通过其进程 ID 来标识这些进程。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For instance, <ph id="ph1">`Get-Process -Id 664, 2060`</ph>.</source>
          <target state="translated">例如， <ph id="ph1">`Get-Process -Id 664, 2060`</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Example 3: Get all processes with a working set greater than a specified size</source>
          <target state="translated">示例 3︰ 获取所有进程能够正常工作的设置大于指定的大小</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This command gets all processes that have a working set greater than 20 MB.</source>
          <target state="translated">此命令获取所有工作集大于 20 MB 的进程。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>Get-Process<ept id="p1">**</ept>  cmdlet to get all running processes.</source>
          <target state="translated">它使用 <bpt id="p1">**</bpt>Get-process<ept id="p1">**</ept>  cmdlet 来获取所有正在运行的进程。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The pipeline operator (|) passes the process objects to the Where-Object cmdlet, which selects only the object with a value greater than 20,000,000 bytes for the <bpt id="p1">**</bpt>WorkingSet<ept id="p1">**</ept> property.</source>
          <target state="translated">管道运算符 (|) 将进程对象传递给 Where-object cmdlet，后者选择仅具有大于 20000000 字节的值的对象 <bpt id="p1">**</bpt>WorkingSet<ept id="p1">**</ept> 属性。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>WorkingSet<ept id="p1">**</ept> is one of many properties of process objects.</source>
          <target state="translated"><bpt id="p1">**</bpt>工作集<ept id="p1">**</ept> 是进程对象的多个属性之一。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To see all of the properties, type <ph id="ph1">`Get-Process | Get-Member`</ph>.</source>
          <target state="translated">若要查看所有属性，请键入 <ph id="ph1">`Get-Process | Get-Member`</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>By default, the values of all amount properties are in bytes, even though the default display lists them in kilobytes and megabytes.</source>
          <target state="translated">默认情况下，所有数量属性的值以字节为单位，尽管默认显示以千字节和兆字节为单位列出这些值。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Example 4: List processes on the computer in groups based on priority</source>
          <target state="translated">示例 4︰ 列出基于优先级的组中的计算机上的进程</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>These commands list the processes on the computer in groups based on their priority class.</source>
          <target state="translated">这些命令将列出基于其优先级类别组中的计算机上的进程。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The first command gets all the processes on the computer and then stores them in the $A variable.</source>
          <target state="translated">第一个命令获取计算机上的所有进程，并将它们存储在 $A 变量中。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to pass the process objects that are stored in the $A variable to the <bpt id="p2">**</bpt>Get-Process<ept id="p2">**</ept> cmdlet.</source>
          <target state="translated">第二个命令使用 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 参数将传递到 $A 变量中存储的进程对象 <bpt id="p2">**</bpt>Get-process<ept id="p2">**</ept> cmdlet。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The pipeline operator passes the objects to the <bpt id="p1">**</bpt>Format-Table<ept id="p1">**</ept> cmdlet, which formats the processes by using the Priority view.</source>
          <target state="translated">管道运算符将对象传递给 <bpt id="p1">**</bpt>Format-table<ept id="p1">**</ept> cmdlet，后者通过使用 Priority 视图设置进程。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The Priority view, and other views, are defined in the PS1XML format files in the Windows PowerShell home directory ($pshome).</source>
          <target state="translated">在 Windows PowerShell 主目录 ($pshome) 的 PS1XML 格式文件中定义 Priority 视图以及其他视图。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example 5: Add a property to the standard Get-Process output display</source>
          <target state="translated">示例 5︰ 将属性添加到标准 Get-process 输出显示</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This example provides a <bpt id="p1">**</bpt>Format-Table<ept id="p1">**</ept> (alias = ft) command that adds the <bpt id="p2">**</bpt>MachineName<ept id="p2">**</ept> property to the standard <bpt id="p3">**</bpt>Get-Process<ept id="p3">**</ept> output display.</source>
          <target state="translated">此示例提供了 <bpt id="p1">**</bpt>Format-table<ept id="p1">**</ept> （别名为 ft） 命令，将 <bpt id="p2">**</bpt>MachineName<ept id="p2">**</ept> 属性设置为标准 <bpt id="p3">**</bpt>Get-process<ept id="p3">**</ept> 输出显示。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Example 6: Get version information for a process</source>
          <target state="translated">示例 6︰ 获取进程的版本信息</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">*</bpt>FileVersionInfo<ept id="p1">*</ept> parameter to get the version information for the PowerShell.exe file that is the main module for the PowerShell process.</source>
          <target state="translated">此命令使用 <bpt id="p1">*</bpt>FileVersionInfo<ept id="p1">*</ept> 文件的 PowerShell 进程的主模块的参数，以获取 PowerShell.exe 的版本信息。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To run this command with processes that you do not own on Windows Vista and later versions of Windows, you must open Windows PowerShell with the Run as administrator option.</source>
          <target state="translated">若要在 Windows Vista 和更高版本的 Windows 与不属于您的进程运行此命令，您必须打开 Windows PowerShell 使用运行以管理员身份选项。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Example 7: Get modules loaded with the specified process</source>
          <target state="translated">示例 7︰ 获取与指定的进程加载的模块</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">*</bpt>Module<ept id="p1">*</ept> parameter to get the modules that have been loaded by the process.</source>
          <target state="translated">此命令使用 <bpt id="p1">*</bpt>模块<ept id="p1">*</ept> 参数，以获取已由进程加载的模块。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This command gets the modules for the processes that have names that begin with SQL.</source>
          <target state="translated">此命令将获取 SQL 开头的名称的进程的模块。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To run this command on Windows Vista and later versions of Windows with processes that you do not own, you must start Windows PowerShell with the Run as administrator option.</source>
          <target state="translated">若要在 Windows Vista 和更高版本的 Windows 与不属于您的进程中运行此命令，您必须作为管理员选项启动与运行 Windows PowerShell。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Example 8: Find the owner of a process</source>
          <target state="translated">示例 8︰ 查找进程的所有者</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This command shows how to find the owner of a process.</source>
          <target state="translated">此命令演示如何查找进程的所有者。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Because the <bpt id="p1">**</bpt>System.Diagnostics.Process<ept id="p1">**</ept> object that <bpt id="p2">**</bpt>Get-Process<ept id="p2">**</ept> returns does not have a property or method that returns the process owner, the command uses the Get-WmiObject cmdlet to get a Win32_Process object that represents the same process.</source>
          <target state="translated">因为 <bpt id="p1">**</bpt>System.Diagnostics.Process<ept id="p1">**</ept> 对象 <bpt id="p2">**</bpt>Get-process<ept id="p2">**</ept> 返回不具有属性或返回进程所有者的方法，该命令使用 Get-wmiobject cmdlet 来获取表示该进程的 Win32_Process 对象。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The first command uses <bpt id="p1">**</bpt>Get-WmiObject<ept id="p1">**</ept> to get the PowerShell process.</source>
          <target state="translated">第一个命令使用 <bpt id="p1">**</bpt>Get-wmiobject<ept id="p1">**</ept> 获取 PowerShell 进程。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>It saves it in the $P variable.</source>
          <target state="translated">它将它保存在 $P 变量中。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>GetOwner<ept id="p1">**</ept> method to get the owner of the process in $P.</source>
          <target state="translated">第二个命令使用 <bpt id="p1">**</bpt>GetOwner<ept id="p1">**</ept> 方法以获取 $P.过程的所有者</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The command reveals that the owner is Domain01\user01.</source>
          <target state="translated">此命令显示所有者为 Domain01\user01。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Example 9: Use an automatic variable to identify the process hosting the current session</source>
          <target state="translated">示例 9︰ 使用自动变量来标识承载当前会话的进程</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>These commands show how to use the $pid automatic variable to identify the process that is hosting the current Windows PowerShell session.</source>
          <target state="translated">这些命令演示如何使用 $pid 自动变量来标识承载当前 Windows PowerShell 会话的进程。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You can use this method to distinguish the host process from other Windows PowerShell processes that you might want to stop or close.</source>
          <target state="translated">可以使用此方法将主机进程与可能要停止或关闭的其他 Windows PowerShell 进程区分开来。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The first command gets all of the Windows PowerShell processes in the current session.</source>
          <target state="translated">第一个命令获取当前会话中的所有 Windows PowerShell 进程。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The second command gets the Windows PowerShell process that is hosting the current session.</source>
          <target state="translated">第二个命令获取可托管当前会话的 Windows PowerShell 进程。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Example 10: Get all processes that have a main window title and display them in a table</source>
          <target state="translated">示例 10︰ 获取具有主窗口标题并将其显示在表中的所有进程</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This command gets all the processes that have a main window title, and it displays them in a table with the process ID and the process name.</source>
          <target state="translated">此命令获取具有主窗口标题的所有进程，并在表中显示这些进程及其进程 ID 和进程名称。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>mainWindowTitle<ept id="p1">**</ept> property is just one of many useful properties of the <bpt id="p2">**</bpt>Process<ept id="p2">**</ept> object that <bpt id="p3">**</bpt>Get-Process<ept id="p3">**</ept> returns.</source>
          <target state="translated"> <bpt id="p1">**</bpt>MainWindowTitle<ept id="p1">**</ept> 属性是只是其中之一的很多有用属性 <bpt id="p2">**</bpt>过程<ept id="p2">**</ept> 对象 <bpt id="p3">**</bpt>Get-process<ept id="p3">**</ept> 返回。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>To view all of the properties, pipe the results of a <bpt id="p1">**</bpt>Get-Process<ept id="p1">**</ept> command to the Get-Member cmdlet (get-process | get-member).</source>
          <target state="translated">若要查看的所有属性的结果通过管道 <bpt id="p1">**</bpt>Get-process<ept id="p1">**</ept> 命令给 Get-member cmdlet (获取进程 | 的 get 成员)。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>-ComputerName</source>
          <target state="translated">-ComputerName</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Specifies the computers for which this cmdlet gets active processes.</source>
          <target state="translated">指定此 cmdlet 将为其获取活动进程的计算机。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The default is the local computer.</source>
          <target state="translated">默认值为本地计算机。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Type the NetBIOS name, an IP address, or a fully qualified domain name (FQDN) of one or more computers.</source>
          <target state="translated">键入 NetBIOS 名称、 IP 地址或一个或多个计算机完全限定的域名 (FQDN)。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To specify the local computer, type the computer name, a dot (.), or localhost.</source>
          <target state="translated">若要指定本地计算机，请键入计算机名称、 句点 （.） 或 localhost。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This parameter does not rely on Windows PowerShell remoting.</source>
          <target state="translated">此参数不依赖于 Windows PowerShell 远程处理。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">*</bpt>ComputerName<ept id="p1">*</ept> parameter of this cmdlet even if your computer is not configured to run remote commands.</source>
          <target state="translated">您可以使用 <bpt id="p1">*</bpt>ComputerName<ept id="p1">*</ept> 此 cmdlet，即使您的计算机未配置为运行远程命令的参数。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>-FileVersionInfo</source>
          <target state="translated">-FileVersionInfo</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet gets the file version information for the program that runs in the process.</source>
          <target state="translated">指示此 cmdlet 将获取在进程中运行的程序的文件版本信息。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>On Windows Vista and later versions of Windows, you must open Windows PowerShell with the Run as administrator option to use this parameter on processes that you do not own.</source>
          <target state="translated">在 Windows Vista 和更高版本的 Windows 上，必须使用运行打开 Windows PowerShell，作为管理员选项，你不具有所有权的进程中使用此参数。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You cannot use the <bpt id="p1">*</bpt>FileVersionInfo<ept id="p1">*</ept> and <bpt id="p2">*</bpt>ComputerName<ept id="p2">*</ept> parameters of the <bpt id="p3">**</bpt>Get-Process<ept id="p3">**</ept> cmdlet in the same command.</source>
          <target state="translated">不能使用 <bpt id="p1">*</bpt>FileVersionInfo<ept id="p1">*</ept> 和 <bpt id="p2">*</bpt>ComputerName<ept id="p2">*</ept> 参数 <bpt id="p3">**</bpt>Get-process<ept id="p3">**</ept> 同一命令中的 cmdlet。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To get file version information for a process on a remote computer, use the Invoke-Command cmdlet.</source>
          <target state="translated">若要获取远程计算机上进程的文件版本信息，请使用 Invoke-command cmdlet。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Using this parameter is equivalent to getting the <bpt id="p1">**</bpt>MainModule.FileVersionInfo<ept id="p1">**</ept> property of each process object.</source>
          <target state="translated">使用此参数等效于获取 <bpt id="p1">**</bpt>MainModule.FileVersionInfo<ept id="p1">**</ept> 每个进程对象的属性。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>When you use this parameter, <bpt id="p1">**</bpt>Get-Process<ept id="p1">**</ept> returns a <bpt id="p2">**</bpt>FileVersionInfo<ept id="p2">**</ept> object (System.Diagnostics.FileVersionInfo), not a process object.</source>
          <target state="translated">当您使用此参数， <bpt id="p1">**</bpt>Get-process<ept id="p1">**</ept> 返回 <bpt id="p2">**</bpt>FileVersionInfo<ept id="p2">**</ept> 对象 （system.diagnostics.fileversioninfo），而非进程对象。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>So, you cannot pipe the output of the command to a cmdlet that expects a process object, such as Stop-Process.</source>
          <target state="translated">因此，不能通过管道将命令输出传递到需要进程对象的 cmdlet（例如 Stop-Process）。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>-Id</source>
          <target state="translated">-Id</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Specifies one or more processes by process ID (PID).</source>
          <target state="translated">通过进程 ID (PID) 指定一个或多个进程。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>To specify multiple IDs, use commas to separate the IDs.</source>
          <target state="translated">若要指定多个 ID，请使用逗号分隔 ID。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To find the PID of a process, type <ph id="ph1">`Get-Process`</ph>.</source>
          <target state="translated">若要查找进程的 PID，请键入 <ph id="ph1">`Get-Process`</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-IncludeUserName</source>
          <target state="translated">-IncludeUserName</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Indicates that the UserName value of the <bpt id="p1">**</bpt>Process<ept id="p1">**</ept> object is returned with results of the command.</source>
          <target state="translated">指示的 UserName 值 <bpt id="p1">**</bpt>过程<ept id="p1">**</ept> 对象使用命令的结果返回。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Specifies one or more process objects.</source>
          <target state="translated">指定一个或多个进程对象。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">输入一个包含对象的变量，或键入可获取对象的命令或表达式。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>-Module</source>
          <target state="translated">模块</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet gets the modules that have been loaded by the processes.</source>
          <target state="translated">指示此 cmdlet 将获取已由进程加载的模块。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>On Windows Vista and later versions of Windows, you must open Windows PowerShell with the Run as administrator option to use this parameter on processes that you do not own.</source>
          <target state="translated">在 Windows Vista 和更高版本的 Windows 上，必须使用运行打开 Windows PowerShell，作为管理员选项，你不具有所有权的进程中使用此参数。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>You cannot use the <bpt id="p1">*</bpt>Module<ept id="p1">*</ept> and <bpt id="p2">*</bpt>ComputerName<ept id="p2">*</ept> parameters of the <bpt id="p3">**</bpt>Get-Process<ept id="p3">**</ept> cmdlet in the same command.</source>
          <target state="translated">不能使用 <bpt id="p1">*</bpt>模块<ept id="p1">*</ept> 和 <bpt id="p2">*</bpt>ComputerName<ept id="p2">*</ept> 参数 <bpt id="p3">**</bpt>Get-process<ept id="p3">**</ept> 同一命令中的 cmdlet。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To get the modules that have been loaded by a process on a remote computer, use the <bpt id="p1">**</bpt>Invoke-Command<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">若要获取已由远程计算机上的进程加载的模块，请使用 <bpt id="p1">**</bpt>Invoke-command<ept id="p1">**</ept> cmdlet。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This parameter is equivalent to getting the Modules property of each process object.</source>
          <target state="translated">此参数等效于获取每个进程对象的 Modules 属性。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>When you use this parameter, this cmdlet returns a <bpt id="p1">**</bpt>ProcessModule<ept id="p1">**</ept> object (System.Diagnostics.ProcessModule), not a process object.</source>
          <target state="translated">当您使用此参数时，此 cmdlet 将返回 <bpt id="p1">**</bpt>ProcessModule<ept id="p1">**</ept> 对象 (System.Diagnostics.ProcessModule)，非进程对象。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>So, you cannot pipe the output of the command to a cmdlet that expects a process object, such as Stop-Process.</source>
          <target state="translated">因此，不能通过管道将命令输出传递到需要进程对象的 cmdlet（例如 Stop-Process）。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When you use both the <bpt id="p1">*</bpt>Module<ept id="p1">*</ept> and <bpt id="p2">*</bpt>FileVersionInfo<ept id="p2">*</ept> parameters in the same command, this cmdlet returns a <bpt id="p3">**</bpt>FileVersionInfo<ept id="p3">**</ept> object with information about the file version of all modules.</source>
          <target state="translated">当您使用这两 <bpt id="p1">*</bpt>模块<ept id="p1">*</ept> 和 <bpt id="p2">*</bpt>FileVersionInfo<ept id="p2">*</ept> 在相同的命令的参数，此 cmdlet 将返回 <bpt id="p3">**</bpt>FileVersionInfo<ept id="p3">**</ept> 对象包含的所有模块的文件版本信息。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Specifies one or more processes by process name.</source>
          <target state="translated">通过进程名称指定一个或多个进程。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>You can type multiple process names (separated by commas) and use wildcard characters.</source>
          <target state="translated">可以键入多个进程名称（以逗号分隔），并可以使用通配符。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The parameter name ("Name") is optional.</source>
          <target state="translated">参数名（“Name”）为可选项。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>System.Diagnostics.Process</source>
          <target state="translated">System.Diagnostics.Process</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>You can pipe a process object to this cmdlet.</source>
          <target state="translated">您可以通过管道将进程对象传递给此 cmdlet。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>System.Diagnostics.Process, System.Diagnotics.FileVersionInfo, System.Diagnostics.ProcessModule</source>
          <target state="translated">System.Diagnostics.Process，System.Diagnotics.FileVersionInfo，System.Diagnostics.ProcessModule</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>By default, this cmdlet returns a <bpt id="p1">**</bpt>System.Diagnostics.Process<ept id="p1">**</ept> object.</source>
          <target state="translated">默认情况下，此 cmdlet 将返回 <bpt id="p1">**</bpt>System.Diagnostics.Process<ept id="p1">**</ept> 对象。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>FileVersionInfo<ept id="p1">*</ept> parameter, it returns a <bpt id="p2">**</bpt>System.Diagnotics.FileVersionInfo<ept id="p2">**</ept> object.</source>
          <target state="translated">如果您使用 <bpt id="p1">*</bpt>FileVersionInfo<ept id="p1">*</ept> 参数，它将返回 <bpt id="p2">**</bpt>System.Diagnotics.FileVersionInfo<ept id="p2">**</ept> 对象。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>Module<ept id="p1">*</ept> parameter, without the <bpt id="p2">*</bpt>FileVersionInfo<ept id="p2">*</ept> parameter, it returns a <bpt id="p3">**</bpt>System.Diagnostics.ProcessModule<ept id="p3">**</ept> object.</source>
          <target state="translated">如果您使用 <bpt id="p1">*</bpt>模块<ept id="p1">*</ept> 参数，而无需 <bpt id="p2">*</bpt>FileVersionInfo<ept id="p2">*</ept> 参数，它将返回 <bpt id="p3">**</bpt>System.Diagnostics.ProcessModule<ept id="p3">**</ept> 对象。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>You can also refer to this cmdlet by its built-in aliases, ps and gps.</source>
          <target state="translated">您还可以通过其内置别名、 ps 和 gps 引用此 cmdlet。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For more information, see about_Aliases.</source>
          <target state="translated">有关详细信息，请参阅 about_Aliases。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>On computers that are running a 64-bit version of Windows, the 64-bit version of Windows PowerShell gets only 64-bit process modules and the 32-bit version of Windows PowerShell gets only 32-bit process modules.</source>
          <target state="translated">在运行 64 位版本 Windows 的计算机上，64 位版本的 Windows PowerShell 仅获取 64 位进程模块，而 32 位版本的 Windows PowerShell 也仅获取 32 位进程模块。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>You can use the properties and methods of the Windows Management Instrumentation (WMI) Win32_Process object in Windows PowerShell.</source>
          <target state="translated">可以在 Windows PowerShell 中使用的属性和 Windows Management Instrumentation (WMI) Win32_Process 对象的方法。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>For information, see Get-WmiObject and the WMI SDK.</source>
          <target state="translated">有关信息，请参阅 Get-wmiobject 和 WMI SDK。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The default display of a process is a table that includes the following columns.</source>
          <target state="translated">进程的默认显示为包括以下列的表。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>For a description of all of the properties of process objects, see Process Propertieshttp://go.microsoft.com/fwlink/?LinkId=204482 at http://go.microsoft.com/fwlink/?LinkId=204482.</source>
          <target state="translated">有关的所有进程对象的属性的说明，请参阅网址 http://go.microsoft.com/fwlink/?LinkId=204482 的进程 Propertieshttp://go.microsoft.com/fwlink/?LinkId=204482。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Handles: The number of handles that the process has opened.</source>
          <target state="translated">句柄︰ 进程打开的句柄的数量。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>NPM(K): The amount of non-paged memory that the process is using, in kilobytes.</source>
          <target state="translated">Npm （k）︰ 的千字节为单位进程使用的非分页内存量。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>PM(K): The amount of pageable memory that the process is using, in kilobytes.</source>
          <target state="translated">Pm （k）︰ 进程正在使用，以千字节为单位的可分页内存量。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>WS(K): The size of the working set of the process, in kilobytes.</source>
          <target state="translated">Ws （k）︰ 中千字节为单位的进程的工作集大小。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The working set consists of the pages of memory that were recently referenced by the process.</source>
          <target state="translated">工作集包括进程最近引用的内存的页面。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>VM(M): The amount of virtual memory that the process is using, in megabytes.</source>
          <target state="translated">Vm （m）︰ 进程正在使用，用兆字节表示的虚拟内存量。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Virtual memory includes storage in the paging files on disk.</source>
          <target state="translated">虚拟内存包括磁盘上分页文件中的存储。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>CPU(s): The amount of processor time that the process has used on all processors, in seconds.</source>
          <target state="translated">CPU(s)︰ 进程已用于所有处理器，以秒为单位的处理器时间的量。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>ID: The process ID (PID) of the process.</source>
          <target state="translated">ID: 进程 ID (PID) 的过程。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>ProcessName: The name of the process.</source>
          <target state="translated">ProcessName: 进程的名称。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>For explanations of the concepts related to processes, see the Glossary in Help and Support Center and the Help for Task Manager.</source>
          <target state="translated">有关与进程相关的概念的解释，请参阅帮助和支持中心中的词汇表以及任务管理器帮助。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>You can also use the built-in alternate views of the processes available with Format-Table, such as StartTime and Priority, and you can design your own views.</source>
          <target state="translated">此外可以使用格式表，如开始时间和优先级，使用内置的备用可进程视图而您可以设计自己的视图。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Debug-Process</source>
          <target state="translated">Debug-Process</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Get-Process</source>
          <target state="translated">Get-Process</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Start-Process</source>
          <target state="translated">Start-Process</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Stop-Process</source>
          <target state="translated">停止进程</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Wait-Process</source>
          <target state="translated">Wait-Process</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>