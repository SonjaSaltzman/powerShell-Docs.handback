<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">564d9b840eb89fed736cc8461868d6d183c99f05</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\Get-TypeData.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb22de2307bd0e2751b0cf5dba16da93a73a479d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">025015b0fd63591b3fbbfb4582b4df3bde7e7ce1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-TypeData</source>
          <target state="translated">Get-TypeData</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-TypeData</source>
          <target state="translated">Get-TypeData</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the extended type data in the current session.</source>
          <target state="translated">获取当前会话中的扩展类型数据。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept> cmdlet gets the extended type data in the current session.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept> cmdlet 将获取当前会话中的扩展的类型数据。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This includes type data that was added to the session by Types.ps1xml file and dynamic type data that was added by using the parameter of the Update-TypeData cmdlet.</source>
          <target state="translated">这包括由 Types.ps1xml 文件中已添加到会话的类型数据以及使用 Update-typedata cmdlet 的参数添加的动态类型数据。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can use the extended type data that <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept> returns to examine the type data in the session and send it to the <bpt id="p2">**</bpt>Update-TypeData<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Remove-TypeData<ept id="p3">**</ept> cmdlets.</source>
          <target state="translated">您可以使用扩展的类型数据的 <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept> 返回以在会话中检查的类型数据，并将其发送到 <bpt id="p2">**</bpt>Update-typedata<ept id="p2">**</ept> 和 <bpt id="p3">**</bpt>Remove-typedata<ept id="p3">**</ept> cmdlet。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Extended type data adds properties and methods to objects in Windows PowerShell.</source>
          <target state="translated">扩展类型数据将属性和方法添加到 Windows PowerShell 中的对象。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can use the added properties and methods in the same ways that you would use the properties and methods that are defined in the object type.</source>
          <target state="translated">可采用与使用对象类型中所定义的属性和方法相同的方式来使用已添加的属性和方法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>However, when writing scripts, be aware that the added properties and methods might not be present in every Windows PowerShell session.</source>
          <target state="translated">但是，在编写脚本时，应注意添加的属性和方法可能不会出现在每个 Windows PowerShell 会话中。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information about Types.ps1xml files, see about_Types.ps1xml (http://go.microsoft.com/fwlink/?LinkID=113274).</source>
          <target state="translated">有关 Types.ps1xml 文件的详细信息，请参阅 about_Types.ps1xml (http://go.microsoft.com/fwlink/?LinkID=113274)。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information about dynamic type data that the <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> cmdlet adds, see Update-TypeData.</source>
          <target state="translated">有关动态类型数据的详细信息， <bpt id="p1">**</bpt>Update-typedata<ept id="p1">**</ept> cmdlet 将添加，请参阅 Update-typedata。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This cmdlet is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此 cmdlet 是在 Windows PowerShell 3.0 中引入的。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This command gets all extended type data in the current session.</source>
          <target state="translated">此命令将获取当前会话中的所有扩展类型数据。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This command gets all types in the current session that have names that contain "Eventing".</source>
          <target state="translated">此命令将获取当前会话中名称中包含“Eventing”的所有类型。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>1:</source>
          <target state="translated">1：</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This command gets the script block that creates the value of the <bpt id="p1">**</bpt>EventID<ept id="p1">**</ept> property of <bpt id="p2">**</bpt>EventLogEntry<ept id="p2">**</ept> objects.</source>
          <target state="translated">此命令将获取创建的值的脚本块 <bpt id="p1">**</bpt>EventID<ept id="p1">**</ept> 属性 <bpt id="p2">**</bpt>EventLogEntry<ept id="p2">**</ept> 对象。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example 3</source>
          <target state="translated">示例 3</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This command gets the script block that defines the <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> property of <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> objects in Windows PowerShell.</source>
          <target state="translated">此命令将获取定义的脚本块 <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> 属性 <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> Windows PowerShell 中的对象。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept> cmdlet to get the extended type data for the <bpt id="p2">**</bpt>System.DataTime<ept id="p2">**</ept> type.</source>
          <target state="translated">该命令使用 <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept> cmdlet 来获取扩展的类型数据 <bpt id="p2">**</bpt>System.DataTime<ept id="p2">**</ept> 类型。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The command gets the <bpt id="p1">**</bpt>Members<ept id="p1">**</ept> property of the <bpt id="p2">**</bpt>TypeData<ept id="p2">**</ept> object.</source>
          <target state="translated">该命令将获取 <bpt id="p1">**</bpt>成员<ept id="p1">**</ept> 属性 <bpt id="p2">**</bpt>TypeData<ept id="p2">**</ept> 对象。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Members<ept id="p1">**</ept> property contains  a hash table of properties and methods that are defined by extended type data.</source>
          <target state="translated"> <bpt id="p1">**</bpt>成员<ept id="p1">**</ept> 属性包含属性和方法定义的扩展的类型数据的哈希表。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Each key in the Members hash table is a property or method name and each value is the definition of the property or method value.</source>
          <target state="translated">Members 哈希表中的每个键均为某个属性或方法名称，每个值均为该属性或方法值的定义。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command gets the <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> key in Members and its <bpt id="p2">**</bpt>GetScriptBlock<ept id="p2">**</ept> property value.</source>
          <target state="translated">该命令将获取 <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> 中成员的键并将其 <bpt id="p2">**</bpt>GetScriptBlock<ept id="p2">**</ept> 属性值。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The output shows the script block that creates the value of the <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> property of every <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> object in Windows PowerShell.</source>
          <target state="translated">该输出显示创建的值的脚本块 <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> 属性的每个 <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> Windows PowerShell 中的对象。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Example 4</source>
          <target state="translated">示例 4</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This command finds the Types.ps1xml file that added extended type data for the <bpt id="p1">**</bpt>EventLogEntry<ept id="p1">**</ept> type to the session.</source>
          <target state="translated">此命令将查找添加扩展的类型数据的 Types.ps1xml 文件 <bpt id="p1">**</bpt>EventLogEntry<ept id="p1">**</ept> 类型设置为该会话。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> cmdlet (alias = "dir") to perform a recursive search for Types.ps1xml files in the Windows PowerShell installation directory ($pshome) and its subdirectories.</source>
          <target state="translated">此命令使用 <bpt id="p1">**</bpt>Get-childitem<ept id="p1">**</ept> cmdlet （别名为"dir"） 来执行 Windows PowerShell 安装目录 ($pshome) 及其子目录中递归搜索以查找 Types.ps1xml 文件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The command sends the Types.ps1xml files to the Select-String cmdlet, which does a full-text search for the "<bpt id="p1">**</bpt>EventLogEntry<ept id="p1">**</ept>" type name in the files and returns the matches.</source>
          <target state="translated">该命令将 Types.ps1xml 文件发送到 Select-string cmdlet，哪些作用全文索引中搜索"<bpt id="p1">**</bpt>EventLogEntry<ept id="p1">**</ept>"中的文件和返回匹配项的类型名。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-TypeName</source>
          <target state="translated">的类型名称</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets type data only for the types with the specified names.</source>
          <target state="translated">仅为具有指定名称的类型获取类型数据。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept> gets all types in the session.</source>
          <target state="translated">默认情况下， <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept> 获取会话中的所有类型。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Enter type names or a name patterns.</source>
          <target state="translated">输入类型名称或名称模式。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Full names (or name patterns with wildcard characters) are required, even for types in the System namespace.</source>
          <target state="translated">需要输入类型的完整名称（或带有通配符字符的名称模式），即便是 System 命名空间中的类型也是如此。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Wildcards are supported and the parameter name (-TypeName) is optional.</source>
          <target state="translated">支持使用通配符，参数名 (-TypeName) 是可选的。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can also pipe type names to <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept>.</source>
          <target state="translated">您还可以管道类型名称传递给 <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can pipe type names to <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept>.</source>
          <target state="translated">您可以通过管道传递类型名称传递给 <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.Runspaces.TypeData</source>
          <target state="translated">System.Management.Automation.Runspaces.TypeData</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept> gets only the extended type data in the current session.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept> 获取当前会话中的扩展的类型数据。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>It does not get extended type data that is on the computer, but has not been added to the current session, such as extended types that are defined in modules that have not been imported into the current session.</source>
          <target state="translated">它不获取位于计算机上但未添加到当前会话中的扩展类型数据，例如在模块中定义但未导入到当前会话中的扩展类型。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>about_Types.ps1xml</source>
          <target state="translated">about_Types.ps1xml</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Remove-TypeData</source>
          <target state="translated">Remove-TypeData</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Update-TypeData</source>
          <target state="translated">Update-TypeData</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>