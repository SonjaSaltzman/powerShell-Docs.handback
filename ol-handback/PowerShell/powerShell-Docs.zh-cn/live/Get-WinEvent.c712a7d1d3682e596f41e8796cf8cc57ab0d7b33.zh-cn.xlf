<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a942a737c281883dcab90321974a17cbeb693abe</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Diagnostics\Get-WinEvent.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d376752fe70db70f5ead47560993d421429726c7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e744e8d2348b728227134d96481100fcead6c638</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-WinEvent</source>
          <target state="translated">Get-WinEvent</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-WinEvent</source>
          <target state="translated">Get-WinEvent</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets events from event logs and event tracing log files on local and remote computers.</source>
          <target state="translated">获取本地和远程计算机上的事件日志和事件跟踪日志文件中的事件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>GetLogSet (Default)</source>
          <target state="translated">GetLogSet （默认值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ListLogSet</source>
          <target state="translated">ListLogSet</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>ListProviderSet</source>
          <target state="translated">ListProviderSet</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>GetProviderSet</source>
          <target state="translated">GetProviderSet</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>FileSet</source>
          <target state="translated">文件集</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>XmlQuerySet</source>
          <target state="translated">XmlQuerySet</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>HashQuerySet</source>
          <target state="translated">HashQuerySet</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> cmdlet gets events from event logs, including classic logs, such as the System and Application logs, and the event logs that are generated by the Windows Event Log technology introduced in Windows Vista.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> cmdlet 从事件日志，包括传统日志，如系统和应用程序日志和由 Windows Vista 中引入的 Windows 事件日志技术生成的事件日志获取事件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It also gets events in log files generated by Event Tracing for Windows (ETW).</source>
          <target state="translated">它还可以获取由 Windows 事件跟踪 (ETW) 生成的日志文件中的事件。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Without parameters, a <bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> command gets all the events from all the event logs on the computer.</source>
          <target state="translated">不带参数， <bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> 命令的计算机上的所有事件日志中获取所有事件。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To interrupt the command, press CTRL + C.</source>
          <target state="translated">若要中断该命令，请按 CTRL + C。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> also lists event logs and event log providers.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> 还列出了事件日志和事件日志提供程序。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can get events from selected logs or from logs generated by selected event providers.</source>
          <target state="translated">可以从所选的日志或从所选的事件提供程序生成的日志中获取事件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>And, you can combine events from multiple sources in a single command.</source>
          <target state="translated">还可以将来自多个源的事件组合到单个命令中。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This cmdlet allows you to filter events by using XPath queries, structured XML queries, and simplified hash-table queries.</source>
          <target state="translated">通过使用 XPath 查询、 结构化的 XML 查询和简化的哈希表查询中，此 cmdlet 允许您为其筛选事件。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example 1: Get all the logs from a local computer</source>
          <target state="translated">示例 1︰ 获取所有日志从本地计算机</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This command gets all the logs on the local computer.</source>
          <target state="translated">此命令将获取本地计算机上的所有日志。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Logs are listed in the order that <bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> gets them.</source>
          <target state="translated">按顺序列出的日志， <bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> 获取它们。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Classic logs are usually retrieved first, followed by the new Windows Eventing logs.</source>
          <target state="translated">通常先检索传统日志，然后再检索新的 Windows Eventing 日志。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Because there are typically more than a hundred event logs, this parameter requires a log name or name pattern.</source>
          <target state="translated">由于事件日志通常超过一百个，因此此参数需要日志名称或名称模式。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To get all the logs, use *.</source>
          <target state="translated">若要获取所有日志，请使用 *。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Example 2: Get the classic system log from a local computer</source>
          <target state="translated">示例 2︰ 获取传统系统日志从本地计算机</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This command gets an object that represents the classic System log on the local computer.</source>
          <target state="translated">此命令获取一个对象，表示本地计算机上的传统系统日志。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The object includes useful information about the log, including its size, event log provider, file path, and whether it is enabled.</source>
          <target state="translated">该对象包含有关日志的有用信息，其中包括日志大小、事件日志提供程序、文件路径以及是否已启用日志。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Example 3: Get event logs from a server</source>
          <target state="translated">示例 3︰ 从服务器获取事件日志</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This command gets only event logs on the Server01 computer that contain events.</source>
          <target state="translated">此命令仅获取 Server01 计算机上包含事件的事件日志。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Many logs might be empty.</source>
          <target state="translated">许多日志可能为空。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>RecordCount<ept id="p1">**</ept> property of the <bpt id="p2">**</bpt>EventLogConfiguration<ept id="p2">**</ept> object that <bpt id="p3">**</bpt>Get-WinEvent<ept id="p3">**</ept> returns when you use the <bpt id="p4">*</bpt>ListLog<ept id="p4">*</ept> parameter.</source>
          <target state="translated">该命令使用 <bpt id="p1">**</bpt>RecordCount<ept id="p1">**</ept> 属性 <bpt id="p2">**</bpt>EventLogConfiguration<ept id="p2">**</ept> 对象 <bpt id="p3">**</bpt>Get-winevent<ept id="p3">**</ept> 当您使用时，返回 <bpt id="p4">*</bpt>ListLog<ept id="p4">*</ept> 参数。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Example 4: Get event logs from multiple servers</source>
          <target state="translated">示例 4︰ 从多个服务器中获取事件日志</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This example gets objects that represent the Windows PowerShell event logs on the Server01, Server02, and Server03 computers.</source>
          <target state="translated">此示例将获取表示 Server01、 Server02 和 Server03 计算机上的 Windows PowerShell 事件日志的对象。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> keyword because the <bpt id="p2">*</bpt>ComputerName<ept id="p2">*</ept> parameter takes only one value.</source>
          <target state="translated">此命令使用 <bpt id="p1">**</bpt>Foreach-object<ept id="p1">**</ept> 关键字因为 <bpt id="p2">*</bpt>ComputerName<ept id="p2">*</ept> 参数采用只有一个值。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The first command saves the names of the computers in the $S variable.</source>
          <target state="translated">第一个命令将保存在 $S 变量中的计算机的名称。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The second command uses a <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> statement.</source>
          <target state="translated">第二个命令使用 <bpt id="p1">**</bpt>Foreach-object<ept id="p1">**</ept> 语句。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For each of the computers in the $S variable, it performs the command in the script block (within the braces).</source>
          <target state="translated">对于每个 $S 变量中的计算机，它 （在大括号中） 的脚本块中执行该命令。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>First, the command prints the name of the computer.</source>
          <target state="translated">首先，该命令将打印计算机的名称。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Then, it runs a <bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> command to get an object that represents the Windows PowerShell log.</source>
          <target state="translated">然后，运行 <bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> 命令以获取一个对象，表示 Windows PowerShell 日志。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Example 5: Get event log providers and logs from a local computer</source>
          <target state="translated">示例 5︰ 从本地计算机中获取事件日志提供程序和日志</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This command gets the event log providers on the local computer and the logs to which they write, if any.</source>
          <target state="translated">此命令将获取本地计算机上的事件日志提供程序及其写入数据的日志（如果有）。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Example 6: Get all event log providers that write to a specific log</source>
          <target state="translated">示例 6︰ 获取写入到特定日志中的所有事件日志提供程序</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This command gets all of the providers that write to the Application log on the local computer.</source>
          <target state="translated">此命令将获取向本地计算机上的应用程序日志写入数据的所有提供程序。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Example 7: Get event log providers that have a specific string in the name</source>
          <target state="translated">示例 7︰ 获取事件日志提供程序的名称中包含特定字符串</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This command gets the event log providers whose names include the word Policy.</source>
          <target state="translated">此命令获取其名称中包含的单词策略的事件日志提供程序。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Example 8: Get event IDs that the event provider generates</source>
          <target state="translated">示例 8︰ 获取事件的事件提供程序生成的 Id</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This command lists the event IDs that the Microsoft-Windows-GroupPolicy event provider generates along with the event description.</source>
          <target state="translated">此命令将列出 Microsoft-Windows-GroupPolicy 事件提供程序生成的事件 ID 以及事件说明。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>Events<ept id="p1">**</ept> property of the object that <bpt id="p2">**</bpt>Get-WinEvent<ept id="p2">**</ept> returns when you use the <bpt id="p3">*</bpt>ListProvider<ept id="p3">*</ept> parameter, and it uses the <bpt id="p4">**</bpt>ID<ept id="p4">**</ept> and <bpt id="p5">**</bpt>Description<ept id="p5">**</ept> properties of the object in the <bpt id="p6">**</bpt>Events<ept id="p6">**</ept> property.</source>
          <target state="translated">它使用 <bpt id="p1">**</bpt>事件<ept id="p1">**</ept> 对象的属性， <bpt id="p2">**</bpt>Get-winevent<ept id="p2">**</ept> 当您使用时，返回 <bpt id="p3">*</bpt>ListProvider<ept id="p3">*</ept> 参数，而且它使用 <bpt id="p4">**</bpt>ID<ept id="p4">**</ept> 和 <bpt id="p5">**</bpt>说明<ept id="p5">**</ept> 中对象的属性 <bpt id="p6">**</bpt>事件<ept id="p6">**</ept> 属性。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Example 9: Get properties of event objects</source>
          <target state="translated">示例 9︰ 获取事件对象的属性</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This example shows how to use the properties of the event objects that <bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> returns to learn about the events in an event log.</source>
          <target state="translated">此示例显示如何使用事件的属性对象的 <bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> 返回若要了解有关事件日志中的事件。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Example 10: Get error events that have a specified string in their name</source>
          <target state="translated">示例 10︰ 获取其名称中包含指定的字符串的错误事件</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This command gets the error events whose names include disk from all of the event logs on the computer and from the Microsoft-Windows-Kernel-WHEA event log.</source>
          <target state="translated">此命令获取其名称中包含从所有计算机上的事件日志和 Microsoft Windows 内核 WHEA 事件日志的磁盘的错误事件。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Example 11: Get events from a copy of the wps_2 event log file</source>
          <target state="translated">示例 11︰ 获取一份 wps_2 事件日志文件中的事件</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This command gets events from a copy of the Windows PowerShell event log file in a test directory.</source>
          <target state="translated">此命令将获取测试目录的 Windows PowerShell 事件日志文件的副本中的事件。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The path is enclosed in quotation marks because the log name includes a space.</source>
          <target state="translated">因为日志名称中包含空格，所以将路径用引号引起来。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Example 12: Get the first 100 events from an ETW event trace log</source>
          <target state="translated">示例 12: ETW 事件跟踪日志中获取的前 100 个事件</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>These commands get the first 100 events from an Event Tracing for Windows (ETW) event trace log file.</source>
          <target state="translated">这些命令将获取 Windows 事件跟踪 (ETW) 事件跟踪日志文件中的前 100 个事件。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Example 13: Get events from an event trace log</source>
          <target state="translated">示例 13︰ 获取事件日志中的跟踪事件</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This example shows how to get the events from an event trace log file (.etl) and from a copy of the Windows PowerShell log file (.evtx) that was saved to a test directory.</source>
          <target state="translated">此示例显示了如何获取事件跟踪日志文件 (.etl) 和已保存到测试目录的 Windows PowerShell 日志文件 (.evtx) 副本中的事件。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You can combine multiple file types in a single command.</source>
          <target state="translated">可以将多个文件类型组合到单个命令中。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Because the files contain the same type of .NET Framework object (an EventLogRecord object), you can use the same properties to filter them.</source>
          <target state="translated">因为这些文件中包含相同类型的 .NET Framework 对象（EventLogRecord 对象），所以可以使用相同的属性来筛选它们。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The command requires the <bpt id="p1">**</bpt>Oldest<ept id="p1">**</ept> parameter because it is reading from an .etl file, but the <bpt id="p2">**</bpt>Oldest<ept id="p2">**</ept> parameter applies to both of the files.</source>
          <target state="translated">该命令要求 <bpt id="p1">**</bpt>Oldest<ept id="p1">**</ept> 参数因为读取.etl 文件，但 <bpt id="p2">**</bpt>Oldest<ept id="p2">**</ept> 参数适用于这两个文件。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Example 14: Filter event log results</source>
          <target state="translated">示例 14︰ 筛选事件日志的结果</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This example shows different filtering methods for selecting events from an event log.</source>
          <target state="translated">此示例显示了用于选择事件日志中的事件的不同筛选方法。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>All of these commands get events that occurred in the last 24 hours from the Windows PowerShell event log.</source>
          <target state="translated">所有这些命令都可获取 Windows PowerShell 事件日志中最近 24 小时内发生的事件。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The filter methods are more efficient than using the Where-Object cmdlet because the filters are applied while the objects are being retrieved, rather than retrieving all the objects and then filtering them.</source>
          <target state="translated">因为在检索对象时将应用筛选器，而不是先检索所有对象然后再筛选它们，所以使用筛选器方法比使用 Where-Object cmdlet 更加有效。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Because dates are difficult to formulate in the XML and XPath formats, to create the XML content for the date, the Filter Current Log feature of Event Viewer is used.</source>
          <target state="translated">因为难以采用 XML 格式和 XPath 格式表示日期，所以若要为该日期创建 XML 内容，可使用事件查看器的“筛选当前日志”功能。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For more information about this feature, see Event Viewer Help.</source>
          <target state="translated">有关此功能的详细信息，请参阅“事件查看器帮助”。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Example 15: Use a filter hash table to get events from the performance log</source>
          <target state="translated">示例 15︰ 使用筛选器哈希表来获取性能日志中的事件</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This example uses a filter hash table to get events from the performance log.</source>
          <target state="translated">此示例使用筛选器哈希表来获取性能日志中的事件。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Date cmdlet and the <bpt id="p1">**</bpt>AddDays<ept id="p1">**</ept> method to get a date that is two days before the current date.</source>
          <target state="translated">第一个命令使用 Get-date cmdlet 和 <bpt id="p1">**</bpt>AddDays<ept id="p1">**</ept> 方法以获取当前日期的前两天的日期。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>It saves the date in the $date variable.</source>
          <target state="translated">它将该日期保存在 $date 变量中。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> cmdlet with the <bpt id="p2">**</bpt>FilterHashTable<ept id="p2">**</ept> parameter.</source>
          <target state="translated">第二个命令使用 <bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> cmdlet 与 <bpt id="p2">**</bpt>FilterHashTable<ept id="p2">**</ept> 参数。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The keys in the hash table define a filter that selects events from the performance log that occurred within the last two days and that have event ID 100.</source>
          <target state="translated">哈希表中的键定义用于选择性能日志中最近两天内发生且事件 ID 为 100 的事件的筛选器。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>LogName<ept id="p1">**</ept> key specifies the event log, the <bpt id="p2">**</bpt>StartTime<ept id="p2">**</ept> key specifies the date, and the ID key specifies the event ID.</source>
          <target state="translated"> <bpt id="p1">**</bpt>LogName<ept id="p1">**</ept> 键指定事件日志， <bpt id="p2">**</bpt>StartTime<ept id="p2">**</ept> 键指定的日期，和 ID 键指定事件 id。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Example 16: Use a filter hash table to get IE application errors</source>
          <target state="translated">示例 16︰ 使用筛选器哈希表以获取 IE 应用程序错误</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This example uses a filter hash table to find Internet Explorer application errors that occurred within the last week.</source>
          <target state="translated">此示例使用筛选器哈希表来查找上周内发生的 Internet Explorer 应用程序错误。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The first command gets the date that is seven days before the current date and stores it in the $StartTime variable.</source>
          <target state="translated">第一个命令将获取当前日期的七天前的日期，并将它存储在 $StartTime 变量中。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> cmdlet with the <bpt id="p2">**</bpt>FilterHashTable<ept id="p2">**</ept> parameter.</source>
          <target state="translated">第二个命令使用 <bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> cmdlet 与 <bpt id="p2">**</bpt>FilterHashTable<ept id="p2">**</ept> 参数。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The keys in the hash table define a filter that selects events from the Application log that were written by the Application Error provider and include the phrase "iexplore.exe".</source>
          <target state="translated">哈希表中的键定义用于选择应用程序日志中由应用程序错误提供程序编写且包含短语“iexplore.exe”的事件的筛选器。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>LogName<ept id="p1">**</ept> key specifies the event log.</source>
          <target state="translated"> <bpt id="p1">**</bpt>LogName<ept id="p1">**</ept> 键指定事件日志。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ProviderName<ept id="p1">**</ept> key specifies the event provider, the <bpt id="p2">**</bpt>StartTime<ept id="p2">**</ept> key specifies the starting date of the events, and the <bpt id="p3">**</bpt>Data<ept id="p3">**</ept> key specifies the text in the event message.</source>
          <target state="translated"> <bpt id="p1">**</bpt>ProviderName<ept id="p1">**</ept> 键指定事件提供程序， <bpt id="p2">**</bpt>StartTime<ept id="p2">**</ept> 键指定事件的开始日期和 <bpt id="p3">**</bpt>数据<ept id="p3">**</ept> 注册表项指定在事件消息文本。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-ComputerName</source>
          <target state="translated">-ComputerName</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Specifies the name of the computer that this cmdlet gets events from the event logs.</source>
          <target state="translated">指定此 cmdlet 从事件日志中获取事件的计算机的名称。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Type the NetBIOS name, an Internet Protocol (IP) address, or the fully qualified domain name of the computer.</source>
          <target state="translated">键入该计算机的 NetBIOS 名称、Internet 协议 (IP) 地址或完全限定的域名。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The default value is the local computer.</source>
          <target state="translated">默认值为本地计算机。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This parameter accepts only one computer name at a time.</source>
          <target state="translated">此参数一次只能接受一个计算机名称。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>To find event logs or events on multiple computers, use a ForEach-Object statement.</source>
          <target state="translated">若要在多台计算机上查找事件日志或事件，使用 Foreach 语句。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For more information about this parameter, see the examples.</source>
          <target state="translated">有关此参数的详细信息，请参阅示例。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To get events and event logs from remote computers, the firewall port for the event log service must be configured to allow remote access.</source>
          <target state="translated">若要从远程计算机获取事件和事件日志，则必须将事件日志服务的防火墙端口配置为允许远程访问。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This cmdlet does not rely on Windows PowerShell remoting.</source>
          <target state="translated">此 cmdlet 不依赖于 Windows PowerShell 远程处理。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">*</bpt>ComputerName<ept id="p1">*</ept> parameter even if your computer is not configured to run remote commands.</source>
          <target state="translated">您可以使用 <bpt id="p1">*</bpt>ComputerName<ept id="p1">*</ept> 即使您的计算机未配置为运行远程命令的参数。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>-Credential</source>
          <target state="translated">-Credential</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Specifies a user account that has permission to perform this action.</source>
          <target state="translated">指定有权执行此操作的用户帐户。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The default value is the current user.</source>
          <target state="translated">默认值为当前用户。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Type a user name, such as User01 or Domain01\User01.</source>
          <target state="translated">键入用户名，例如 User01 或 Domain01\User01。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Or, enter a <bpt id="p1">**</bpt>PSCredential<ept id="p1">**</ept> object, such as one generated by the Get-Credential cmdlet.</source>
          <target state="translated">或者，输入 <bpt id="p1">**</bpt>PSCredential<ept id="p1">**</ept> 对象，例如由 Get-credential cmdlet 生成。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If you type a user name, you will be prompted for a password.</source>
          <target state="translated">如果键入用户名，则将提示你输入密码。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>If you type only the parameter name, you will be prompted for both a user name and a password.</source>
          <target state="translated">如果仅键入参数名，则系统将提示你输入用户名和密码。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>-FilterHashtable</source>
          <target state="translated">-FilterHashtable</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Specifies a query in hash table format to select events from one or more event logs.</source>
          <target state="translated">哈希表格式来从一个或多个事件日志中选择事件中指定的查询。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The query contains a hash table with one or more key-value pairs.</source>
          <target state="translated">该查询包含具有一个或多个键-值对的哈希表。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Hash table queries have the following rules:</source>
          <target state="translated">哈希表查询具有以下规则：</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Keys and values are case-insensitive.</source>
          <target state="translated">键和值是不区分大小写。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Wildcard characters are valid only in the values associated with the LogName and ProviderName keys.</source>
          <target state="translated">通配符是仅在与 LogName 和 ProviderName 键关联的值中有效。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Each key can be listed only once in each hash-table.</source>
          <target state="translated">每个键可以一次只能列出每个哈希表中。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The Path value takes paths to .etl, .evt, and .evtx log files.</source>
          <target state="translated">Path 值采用.etl、.evt 和.evtx 日志文件到路径。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The LogName, Path, and ProviderName keys can be used in the same query.</source>
          <target state="translated">可以在同一查询中使用 LogName、 Path 和 ProviderName 键。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The UserID key can take a valid security identifier (SID) or a domain account name that can be used to construct a valid System.Security.Principal.NTAccount object.</source>
          <target state="translated">UserID 键可以采用有效的安全标识符 (SID) 或可用于构造有效的 System.Security.Principal.NTAccount 对象的域帐户名称。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The Data value takes event data in an unnamed field.</source>
          <target state="translated">Data 值采用未命名字段中的事件数据。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This is for events in classic event logs.</source>
          <target state="translated">这适用于传统事件日志中的事件。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The * key represents a named event data field.</source>
          <target state="translated">* 键表示命名的事件数据字段。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>When Get-WinEvent cannot interpret a key-value pair, it interprets the key as a case-sensitive name for the event data in the event.</source>
          <target state="translated">当 Get-WinEvent 无法解释键-值对时，它会将该键解释为事件中事件数据的区分大小写的名称。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The valid key-value pairs are as follows:</source>
          <target state="translated">有效的键-值对如下所示：</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>LogName=<ph id="ph1">\&lt;</ph>String</source>
          <target state="translated">LogName =<ph id="ph1">\&lt;</ph>字符串</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>ProviderName=<ph id="ph1">\&lt;</ph>String</source>
          <target state="translated">ProviderName =<ph id="ph1">\&lt;</ph>字符串</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Path=<ph id="ph1">\&lt;</ph>String</source>
          <target state="translated">路径 =<ph id="ph1">\&lt;</ph>字符串</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Keywords=<ph id="ph1">\&lt;</ph>Long</source>
          <target state="translated">关键字 =<ph id="ph1">\&lt;</ph>长</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>ID=<ph id="ph1">\&lt;</ph>Int32</source>
          <target state="translated">ID =<ph id="ph1">\&lt;</ph>Int32</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Level=<ph id="ph1">\&lt;</ph>Int32</source>
          <target state="translated">Level =<ph id="ph1">\&lt;</ph>Int32</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>StartTime=<ph id="ph1">\&lt;</ph>DateTime</source>
          <target state="translated">StartTime =<ph id="ph1">\&lt;</ph>日期时间</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>EndTime=<ph id="ph1">\&lt;</ph>DataTime</source>
          <target state="translated">EndTime =<ph id="ph1">\&lt;</ph>DataTime</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>UserID=<ph id="ph1">\&lt;</ph>SID</source>
          <target state="translated">UserID =<ph id="ph1">\&lt;</ph>SID</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Data=<ph id="ph1">\&lt;</ph>String</source>
          <target state="translated">数据 =<ph id="ph1">\&lt;</ph>字符串</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">字符串</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>-FilterXPath</source>
          <target state="translated">-FilterXPath</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Specifies an XPath query that this cmdlet select events from one or more logs.</source>
          <target state="translated">指定此 cmdlet 从一个或多个日志中选择事件的 XPath 查询。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>For more information about the XPath language, see "XPath Reference" in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=242509http://go.microsoft.com/fwlink/?LinkId=242509 and "Selection Filters" in "Event Selection" in the MSDN library.</source>
          <target state="translated">有关 XPath 语言的详细信息，请参阅 http://go.microsoft.com/fwlink/?LinkId=242509http://go.microsoft.com/fwlink/?LinkId=242509 的 MSDN library 中的"XPath 参考"和"所选内容筛选器"中的 MSDN library 中的"事件选择"。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>-FilterXml</source>
          <target state="translated">-FilterXml</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Specifies a structured XML query that this cmdlet selects events from one or more event logs.</source>
          <target state="translated">指定此 cmdlet 从一个或多个事件日志中选择事件的结构化的 XML 查询。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>To generate a valid XML query, use the <bpt id="p1">**</bpt>Create Custom View<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Filter Current Log<ept id="p2">**</ept> features in Event Viewer.</source>
          <target state="translated">若要生成有效的 XML 查询，请使用 <bpt id="p1">**</bpt>创建自定义视图<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>筛选当前日志<ept id="p2">**</ept> 在事件查看器的功能。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Use the items in the dialog box to create a query, and then click the XML tab to view the query in XML format.</source>
          <target state="translated">使用对话框中的项创建查询，然后单击 XML 选项卡以查看 XML 格式的查询。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>You can copy the XML from the XML tab into the value of the <bpt id="p1">*</bpt>FilterXml<ept id="p1">*</ept> parameter.</source>
          <target state="translated">您可以将 XML 从 XML 选项卡复制到的值 <bpt id="p1">*</bpt>FilterXml<ept id="p1">*</ept> 参数。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>For more information about the Event Viewer features, see Event Viewer Help.</source>
          <target state="translated">有关事件查看器功能的详细信息，请参阅“事件查看器帮助”。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Typically, you use an XML query to create a complex query that contains several XPath statements.</source>
          <target state="translated">通常，可以使用 XML 查询来创建包含多个 XPath 语句的复杂查询。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The XML format also allows you to use a "Suppress" XML element that excludes events from the query.</source>
          <target state="translated">XML 格式还允许使用可将事件从查询中排除的“Suppress”XML 元素。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>For more information about the XML schema for event log queries, see the following topics in the MSDN (Microsoft Developer Network) library.</source>
          <target state="translated">有关事件日志查询的 XML 架构的详细信息，请参阅 MSDN (Microsoft Developer Network) 库中的以下主题。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>"Query Schema": http://go.microsoft.com/fwlink/?LinkId=143685http://go.microsoft.com/fwlink/?LinkId=143685http://go.microsoft.com/fwlink/?LinkId=143685</source>
          <target state="translated">"查询架构": http://go.microsoft.com/fwlink/?LinkId=143685http://go.microsoft.com/fwlink/?LinkId=143685 http://go.microsoft.com/fwlink/?LinkId=143685</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>"XML Event Queries" in "Event Selection": http://go.microsoft.com/fwlink/?LinkID=143608http://go.microsoft.com/fwlink/?LinkID=143608http://go.microsoft.com/fwlink/?LinkID=143608</source>
          <target state="translated">"XML 事件查询"的"事件选择": http://go.microsoft.com/fwlink/?LinkID=143608http://go.microsoft.com/fwlink/?LinkID=143608 http://go.microsoft.com/fwlink/?LinkID=143608</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Gets debug and analytic logs, in addition to other event logs.</source>
          <target state="translated">获取调试和分析日志以及其他事件日志。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> parameter is required to get a debug or analytic log when the value of the name parameter includes wildcard characters.</source>
          <target state="translated"> <bpt id="p1">**</bpt>强制<ept id="p1">**</ept> 获取调试或分析日志名称参数的值包含通配符字符时所需的参数。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>By default, the <bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> cmdlet excludes these logs unless you specify the full name of a debug or analytic log.</source>
          <target state="translated">默认情况下， <bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> cmdlet 不包括这些日志，除非指定调试或分析日志的完整名称。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>-ListLog</source>
          <target state="translated">-ListLog</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Specifies the event logs.</source>
          <target state="translated">指定事件日志。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Enter the event log names in a comma-separated list.</source>
          <target state="translated">在以逗号分隔的列表中输入事件日志名称。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>To get all the logs, enter a value of *.</source>
          <target state="translated">若要获取所有日志，请输入值 *。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>-ListProvider</source>
          <target state="translated">-ListProvider</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Specifies the event log providers that this cmdlet gets.</source>
          <target state="translated">指定此 cmdlet 将获取事件日志提供程序。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>An event log provider is a program or service that writes events to the event log.</source>
          <target state="translated">事件日志提供程序是可将事件写入事件日志的一种程序或服务。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Enter the provider names in a comma-separated list.</source>
          <target state="translated">在以逗号分隔的列表中输入提供程序名称。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>To get the providers of all the event logs on the computer, enter a value of *.</source>
          <target state="translated">若要获取计算机上所有事件日志的提供程序，请输入值 *。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>-LogName</source>
          <target state="translated">-LogName</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Specifies the event logs that this cmdlet get events from.</source>
          <target state="translated">指定此 cmdlet 来获取事件从事件日志。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Enter the event log names in a comma-separated list.</source>
          <target state="translated">在以逗号分隔的列表中输入事件日志名称。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>You can also pipe log names to the <bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> cmdlet .</source>
          <target state="translated">您还可以管道日志名称传递给 <bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> cmdlet。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>-MaxEvents</source>
          <target state="translated">-MaxEvents</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Specifies the maximum number of events that this cmdlet gets.</source>
          <target state="translated">指定最大此 cmdlet 将获取的事件数。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Enter an integer.</source>
          <target state="translated">输入一个整数。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The default is to return all the events in the logs or files.</source>
          <target state="translated">默认设置为返回日志或文件中的所有事件。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>-Oldest</source>
          <target state="translated">的最早</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Indicate that this cmdlet gets the events in oldest-first order.</source>
          <target state="translated">指示此 cmdlet 获取中最旧优先顺序的事件。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>By default, events are returned in newest-first order.</source>
          <target state="translated">默认情况下，事件按从新到旧的顺序返回。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>This parameter is required to get events from .etl and .evt files and from debug and analytic logs.</source>
          <target state="translated">若要从 .etl 和 .evt 文件以及调试和分析日志中获取事件，此参数是必需的。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>In these files, events are recorded in oldest-first order, and the events can be returned only in oldest-first order.</source>
          <target state="translated">在这些文件中，事件按从旧到新的顺序记录，并且只能按从旧到新的顺序返回。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Specifies the path to the event log files that this cmdlet get events from.</source>
          <target state="translated">指定此 cmdlet 来获取从事件的事件日志文件的路径。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Enter the paths to the log files in a comma-separated list, or use wildcard characters to create file path patterns.</source>
          <target state="translated">在以逗号分隔的列表中输入日志文件的路径，或使用通配符来创建文件路径模式。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> supports files with the .evt, .evtx, and .etl file name extensions.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> 支持带有.evt、.evtx 和.etl 文件扩展名的文件。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>You can include events from different files and file types in the same command.</source>
          <target state="translated">可以在同一命令中包括来自不同文件和文件类型的事件。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>-ProviderName</source>
          <target state="translated">-提供程序名称</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Specifies, as a string array, the event log providers from which this cmdlet gets events.</source>
          <target state="translated">作为一个字符串数组，指定此 cmdlet 可从其获取事件的事件日志提供程序。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Enter the provider names in a comma-separated list, or use wildcard characters to create provider name patterns.</source>
          <target state="translated">在以逗号分隔的列表中输入提供程序名称，或使用通配符来创建提供程序名称模式。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>An event log provider is a program or service that writes events to the event log.</source>
          <target state="translated">事件日志提供程序是可将事件写入事件日志的一种程序或服务。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>It is not a Windows PowerShell provider.</source>
          <target state="translated">它不是 Windows PowerShell 提供程序。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>System.String, System.Xml.XmlDocument, System.Collections.Hashtable.</source>
          <target state="translated">System.String，System.Xml.XmlDocument，System.Collections.Hashtable。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>You can pipe a <bpt id="p1">*</bpt>LogName<ept id="p1">*</ept> (string), a <bpt id="p2">**</bpt>FilterXML<ept id="p2">**</ept> query, or a <bpt id="p3">**</bpt>FilterHashTable<ept id="p3">**</ept> query to <bpt id="p4">**</bpt>Get-WinEvent<ept id="p4">**</ept>.</source>
          <target state="translated">您可以通过管道传递 <bpt id="p1">*</bpt>LogName<ept id="p1">*</ept> （字符串）、 <bpt id="p2">**</bpt>FilterXML<ept id="p2">**</ept> 查询，或 <bpt id="p3">**</bpt>FilterHashTable<ept id="p3">**</ept> 查询 <bpt id="p4">**</bpt>Get-winevent<ept id="p4">**</ept>。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>System.Diagnostics.Eventing.Reader.EventLogConfiguration, System.Diagnostics.Eventing.Reader.EventLogRecord, System.Diagnostics.Eventing.Reader.ProviderMetadata</source>
          <target state="translated">System.Diagnostics.Eventing.Reader.EventLogConfiguration，System.Diagnostics.Eventing.Reader.EventLogRecord，System.Diagnostics.Eventing.Reader.ProviderMetadata</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>With the <bpt id="p1">*</bpt>ListLog<ept id="p1">*</ept> parameter, <bpt id="p2">**</bpt>Get-WinEvent<ept id="p2">**</ept> returns <bpt id="p3">**</bpt>System.Diagnostics.Eventing.Reader.EventLogConfiguration<ept id="p3">**</ept> objects.</source>
          <target state="translated">与 <bpt id="p1">*</bpt>ListLog<ept id="p1">*</ept> 参数， <bpt id="p2">**</bpt>Get-winevent<ept id="p2">**</ept> 返回 <bpt id="p3">**</bpt>System.Diagnostics.Eventing.Reader.EventLogConfiguration<ept id="p3">**</ept> 对象。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>With the <bpt id="p1">*</bpt>ListProvider<ept id="p1">*</ept> parameter, <bpt id="p2">**</bpt>Get-WinEvent<ept id="p2">**</ept> returns <bpt id="p3">**</bpt>System.Diagnostics.Eventing.Reader.ProviderMetadata<ept id="p3">**</ept> objects.</source>
          <target state="translated">与 <bpt id="p1">*</bpt>ListProvider<ept id="p1">*</ept> 参数， <bpt id="p2">**</bpt>Get-winevent<ept id="p2">**</ept> 返回 <bpt id="p3">**</bpt>System.Diagnostics.Eventing.Reader.ProviderMetadata<ept id="p3">**</ept> 对象。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>With all other parameters, <bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> returns <bpt id="p2">**</bpt>System.Diagnostics.Eventing.Reader.EventLogRecord<ept id="p2">**</ept> objects.</source>
          <target state="translated">与所有其他参数， <bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> 返回 <bpt id="p2">**</bpt>System.Diagnostics.Eventing.Reader.EventLogRecord<ept id="p2">**</ept> 对象。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> runs on Windows Vista, Windows Server 2008 R2, and later versions of Windows.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> 在 Windows Vista、 Windows Server 2008 R2 和更高版本的 Windows 上运行。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>This cmdlet is designed to replace the Get-EventLog cmdlet on computers running Windows Vista and later versions of Windows.</source>
          <target state="translated">此 cmdlet 旨在替换在运行 Windows Vista 和更高版本的 Windows 的计算机上的 Get-eventlog cmdlet。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-EventLog<ept id="p1">**</ept> gets events only in classic event logs.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-eventlog<ept id="p1">**</ept> 仅在传统事件日志中获取事件。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Get-EventLog is retained in Windows PowerShell for backward compatibility.</source>
          <target state="translated">Get-eventlog 保留在 Windows PowerShell，以便向后兼容性。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-WinEvent<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Get-EventLog<ept id="p2">**</ept> cmdlets are not supported in Windows Preinstallation Environment (Windows PE).</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-winevent<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>Get-eventlog<ept id="p2">**</ept> cmdlet 在 Windows 预安装环境 (Windows PE) 中不受支持。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Get-Counter</source>
          <target state="translated">获取计数器</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Get-EventLog</source>
          <target state="translated">Get-EventLog</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>about_Eventlogs</source>
          <target state="translated">about_Eventlogs</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>ForEach-Object</source>
          <target state="translated">ForEach-Object</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Get-Date</source>
          <target state="translated">获取日期</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Select-Object</source>
          <target state="translated">Select-Object</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Sort-Object</source>
          <target state="translated">Sort-Object</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Where-Object</source>
          <target state="translated">Where-Object</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>