<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ece0810cf303b8eb48bbc1b5ff47211bb787931a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\Import-PSSession.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">06cb8ab98f448613c92c923bd9c884abbbf13cb9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24c2c27dc79afba4adecf0a5a26fbeb8fbdbc7d2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Import-PSSession</source>
          <target state="translated">Import-PSSession</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Import-PSSession</source>
          <target state="translated">Import-PSSession</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Imports commands from another session into the current session.</source>
          <target state="translated">将另一个会话中的命令导入当前会话中。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> cmdlet imports commands (such as cmdlets, functions, and aliases) from a PSSession on a local or remote computer into the current session.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> cmdlet 从上到当前会话的本地或远程计算机的 PSSession 导入的命令 （例如 cmdlet、 函数和别名）。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can import any command that the Get-Command cmdlet can find in the PSSession.</source>
          <target state="translated">您可以导入 Get-command cmdlet 可以在 PSSession 中找到的任何命令。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Use an <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> command to import commands from a customized shell, such as a Microsoft Exchange Server shell, or from a session that includes Windows PowerShell modules and snap-ins or other elements that are not in the current session.</source>
          <target state="translated">使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 命令以导入的命令，从自定义外壳程序，如 Microsoft Exchange Server 的外壳程序或包括 Windows PowerShell 模块和管理单元或其他元素，不在当前会话的会话。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To import commands, first use the New-PSSession cmdlet to create a PSSession.</source>
          <target state="translated">若要导入命令，请首先使用 New-pssession cmdlet 创建 PSSession。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Then, use the <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> cmdlet to import the commands.</source>
          <target state="translated">然后，使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> cmdlet 来导入命令。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> imports all commands except for commands that have the same names as commands in the current session.</source>
          <target state="translated">默认情况下， <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 导入所有命令在当前会话中具有相同名称的命令除外。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To import all the commands, use the <bpt id="p1">**</bpt>AllowClobber<ept id="p1">**</ept> parameter.</source>
          <target state="translated">若要导入所有命令，请使用 <bpt id="p1">**</bpt>AllowClobber<ept id="p1">**</ept> 参数。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can use imported commands just as you would use any command in the session.</source>
          <target state="translated">你可以使用导入的命令，如同你在会话中使用的任何命令一样。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When you use an imported command, the imported part of the command runs implicitly in the session from which it was imported.</source>
          <target state="translated">当使用导入的命令时，命令的导入部分将在导出该命令的会话中隐式运行。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>However, the remote operations are handled entirely by Windows PowerShell.</source>
          <target state="translated">但是，远程操作完全由 Windows PowerShell 处理。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You need not even be aware of them, except that you must keep the connection to the other session (PSSession) open.</source>
          <target state="translated">你甚至不需要注意它们，只不过必须使与另一个会话 （PSSession) 的连接保持打开状态。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you close it, the imported commands are no longer available.</source>
          <target state="translated">如果关闭该链接，则导入的命令将不再可用。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Because imported commands might take longer to run than local commands, Import-PSSession adds an AsJob parameter to every imported command.</source>
          <target state="translated">由于导入的命令可能比本地命令需要更长的运行时间，因此 Import-PSSession 将 AsJob 参数添加到每个导入的命令中。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This parameter allows you to run the command as a Windows PowerShell background job.</source>
          <target state="translated">此参数使你可以将该命令作为 Windows PowerShell 后台作业运行。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information, see about_Jobs.</source>
          <target state="translated">有关详细信息，请参阅 about_Jobs。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When you use <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept>, Windows PowerShell adds the imported commands to a temporary module that exists only in your session and returns an object that represents the module.</source>
          <target state="translated">当您使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept>, ，Windows PowerShell 将导入的命令添加到一个仅在您的会话中存在并返回一个对象，表示该模块的临时模块。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To create a persistent module that you can use in future sessions, use the Export-PSSession cmdlet.</source>
          <target state="translated">若要创建持久模块，您可以使用在以后的会话，请使用 Export-pssession cmdlet。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> cmdlet uses the implicit remoting feature of Windows PowerShell.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> cmdlet 使用 Windows PowerShell 的隐式远程处理功能。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When you import commands into the current session, they run implicitly in the original session or in a  similar session on the originating computer.</source>
          <target state="translated">将命令导入当前会话后，它们将在原始会话或原始计算机上的类似会话中隐式运行。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can use the Import-Module cmdlet to import modules from a remote session into the current session.</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，您可以使用 Import-module cmdlet 从到当前会话的远程会话导入模块。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This feature uses implicit remoting.</source>
          <target state="translated">此功能使用隐式远程处理。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>It is equivalent to using <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> to import selected modules from a remote session into the current session.</source>
          <target state="translated">它相当于使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 从到当前会话的远程会话导入所选的模块。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 示例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This command imports all commands from a PSSession on the Server01 computer into the current session, except for commands that have the same names as commands in the current session.</source>
          <target state="translated">此命令将所有命令从 Server01 计算机上的 PSSession 导入到当前会话中，与当前会话中的命令具有相同名称的命令除外。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Because this command does not use the <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> parameter, it also imports all of the formatting data required for the imported commands.</source>
          <target state="translated">因为此命令不使用 <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> 参数，它还会导入所有导入的命令所需的格式设置数据。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>These commands import the commands with names that end in "-test" from a PSSession into the local session, and then they show how to use an imported cmdlet.</source>
          <target state="translated">这些命令会将 PSSession 中名称以“-test”结尾的命令导入本地会话，然后显示如何使用导入的 cmdlet。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The first command uses the New-PSSession cmdlet to create a PSSession.</source>
          <target state="translated">第一个命令使用 New-pssession cmdlet 创建 PSSession。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>It saves the PSSession in the $s variable.</source>
          <target state="translated">它将 PSSession 保存在 $s 变量中。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> cmdlet to import commands from the PSSession in $s into the current session.</source>
          <target state="translated">第二个命令使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> cmdlet 从 $s 到当前会话中的 PSSession 中导入的命令。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> parameter to specify commands with the Test noun and the <bpt id="p2">**</bpt>FormatTypeName<ept id="p2">**</ept> parameter to import the formatting data for the Test commands.</source>
          <target state="translated">它使用 <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> 参数来指定带有名词的命令和 <bpt id="p2">**</bpt>FormatTypeName<ept id="p2">**</ept> 参数来导入的测试命令的格式设置数据。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The third and fourth commands use the imported commands in the current session.</source>
          <target state="translated">第三个和第四个命令使用当前会话中导入的命令。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Because imported commands are actually added to the current session, you use the local syntax to run them.</source>
          <target state="translated">由于导入的命令实际添加到当前会话中，因此你将使用本地语法来运行它们。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You do not need to use the Invoke-Command cmdlet to run an imported command.</source>
          <target state="translated">不需要使用 Invoke-command cmdlet 来运行导入的命令。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This example shows that you can use imported cmdlets just as you would use local cmdlets.</source>
          <target state="translated">此示例演示可以像使用本地 cmdlet 一样使用导入的 cmdlet。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>These commands import the New-Test and Get-Test cmdlets from a PSSession on the Server01 computer and the Set-Test cmdlet from a PSSession on the Server02 computer.</source>
          <target state="translated">这些命令从 Server01 计算机上的 PSSession 中导入 New-Test 和 Get-Test cmdlet，从 Server02 计算机上的 PSSession 中导入 Set-Test cmdlet。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Even though the cmdlets were imported from different PSSessions, you can pipe an object from one cmdlet to another without error.</source>
          <target state="translated">尽管这些 cmdlet 从不同的 PSSession 中导入，但是可以通过管道将来自一个 cmdlet 的对象无误地传递到另一个 cmdlet。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This example shows how to run an imported command as a background job.</source>
          <target state="translated">此示例演示了如何将导入的命令作为后台作业运行。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Because imported commands might take longer to run than local commands, <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> adds an <bpt id="p2">**</bpt>AsJob<ept id="p2">**</ept> parameter to every imported command.</source>
          <target state="translated">因为导入的命令可能需要较长的时间比本地命令运行 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 添加 <bpt id="p2">**</bpt>AsJob<ept id="p2">**</ept> 到每个导入命令的参数。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>AsJob<ept id="p1">**</ept> parameter lets you run the command as a background job.</source>
          <target state="translated"> <bpt id="p1">**</bpt>AsJob<ept id="p1">**</ept> 参数，可以将命令作为后台作业运行。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The first command creates a PSSession on the Server01 computer and saves the PSSession object in the $s variable.</source>
          <target state="translated">第一个命令将在 Server01 计算机上创建 PSSession 并将 PSSession 对象保存在 $s 变量中。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The second command uses <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> to import the Test cmdlets from the PSSession in $s into the current session.</source>
          <target state="translated">第二个命令使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> $s 到当前会话中的 pssession 中导入测试 cmdlet。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>AsJob<ept id="p1">**</ept> parameter of the imported New-Test cmdlet to run a New-Test command as a background job.</source>
          <target state="translated">第三个命令使用 <bpt id="p1">**</bpt>AsJob<ept id="p1">**</ept> 导入的 New-test cmdlet，以 New-test 命令作为后台作业运行的参数。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The command saves the job object that New-Test returns in the $batch variable.</source>
          <target state="translated">该命令将 New-Test 返回的作业对象保存在 $batch 变量中。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The fourth command uses the Receive-Job cmdlet to get the results of the job in the $batch variable.</source>
          <target state="translated">第四个命令使用 Receive-job cmdlet 在 $batch 变量获取作业的结果。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This example shows how to import the cmdlets and functions from a Windows PowerShell module on a remote computer into the current session.</source>
          <target state="translated">此示例演示如何将远程计算机上的 Windows PowerShell 模块中的 cmdlet 和函数导入当前会话。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The first command creates a PSSession on the Server01 computer and saves it in the $s variable.</source>
          <target state="translated">第一个命令将在 Server01 计算机上创建 PSSession 并将其保存在 $s 变量中。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Invoke-Command<ept id="p1">**</ept> cmdlet to run an Import-Module command in the PSSession in $s.</source>
          <target state="translated">第二个命令使用 <bpt id="p1">**</bpt>Invoke-command<ept id="p1">**</ept> cmdlet 的 pssession 中 $s 运行 Import-module 命令。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Typically, the module would be added to all sessions by an <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> command in a Windows PowerShell profile, but profiles are not run in PSSessions.</source>
          <target state="translated">通常情况下，该模块将添加到所有会话 <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> 不在 Pssession 中运行 Windows PowerShell 配置文件，但配置文件中的命令。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>Module<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Import-PSSession<ept id="p2">**</ept> to import the cmdlets and functions in the module into the current session.</source>
          <target state="translated">第三个命令使用 <bpt id="p1">**</bpt>模块<ept id="p1">**</ept> 参数 <bpt id="p2">**</bpt>Import-pssession<ept id="p2">**</ept> 导入当前会话的 cmdlet 和模块中的函数。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This example shows that <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> creates a module in a temporary file on disk.</source>
          <target state="translated">此示例演示 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 磁盘上的临时文件中创建一个模块。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>It also shows that all commands are converted into functions before they are imported into the current session.</source>
          <target state="translated">它还显示所有命令在导入当前会话之前都已转换为函数。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> cmdlet to import a Get-Date cmdlet and a SearchHelp function into the current session.</source>
          <target state="translated">该命令使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> cmdlet 可将 Get-date cmdlet 和 SearchHelp 函数导入当前会话。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> cmdlet returns a <bpt id="p2">**</bpt>PSModuleInfo<ept id="p2">**</ept> object that represents the temporary module.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> cmdlet 将返回 <bpt id="p2">**</bpt>PSModuleInfo<ept id="p2">**</ept> 表示临时模块对象。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> property shows that <bpt id="p2">**</bpt>Import-PSSession<ept id="p2">**</ept> created a script module (.psm1) file in a temporary location.</source>
          <target state="translated">值 <bpt id="p1">**</bpt>路径<ept id="p1">**</ept> 属性显示 <bpt id="p2">**</bpt>Import-pssession<ept id="p2">**</ept> 在一个临时位置中创建的脚本模块 (.psm1) 文件。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ExportedFunctions<ept id="p1">**</ept> property shows that the <bpt id="p2">**</bpt>Get-Date<ept id="p2">**</ept> cmdlet and the SearchHelp function were both imported as functions.</source>
          <target state="translated"> <bpt id="p1">**</bpt>ExportedFunctions<ept id="p1">**</ept> 属性显示 <bpt id="p2">**</bpt>Get-date<ept id="p2">**</ept> cmdlet 和 SearchHelp 函数同时作为函数导入。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This example shows how to run a command that is hidden by an imported command.</source>
          <target state="translated">此示例演示如何运行导入的命令隐藏的命令。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The first command imports a Get-Date cmdlet from the PSSession in the $s variable.</source>
          <target state="translated">第一个命令从在 $s 变量的 PSSession 中导入 Get-date cmdlet。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Because the current session includes a <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> cmdlet, the <bpt id="p2">**</bpt>AllowClobber<ept id="p2">**</ept> parameter is required in the command.</source>
          <target state="translated">因为当前会话中包括 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> cmdlet， <bpt id="p2">**</bpt>AllowClobber<ept id="p2">**</ept> 命令中需要参数。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>All<ept id="p1">**</ept> parameter of the Get-Command cmdlet to get all <bpt id="p2">**</bpt>Get-Date<ept id="p2">**</ept> commands in the current session.</source>
          <target state="translated">第二个命令使用 <bpt id="p1">**</bpt>所有<ept id="p1">**</ept> Get-command cmdlet 来获取所有参数 <bpt id="p2">**</bpt>Get-date<ept id="p2">**</ept> 当前会话中的命令。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The output shows that the session includes the original <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> cmdlet and a <bpt id="p2">**</bpt>Get-Date<ept id="p2">**</ept> function.</source>
          <target state="translated">该输出显示会话包括原始 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> cmdlet 和一个 <bpt id="p2">**</bpt>Get-date<ept id="p2">**</ept> 函数。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> function runs the imported <bpt id="p2">**</bpt>Get-Date<ept id="p2">**</ept> cmdlet in the PSSession in $s.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 函数运行导入 <bpt id="p2">**</bpt>Get-date<ept id="p2">**</ept> $s 在 PSSession 中的 cmdlet。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The third command runs a <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> command.</source>
          <target state="translated">第三个命令将运行 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 命令。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Because functions take precedence over cmdlets, Windows PowerShell runs the imported <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> function, which returns a Julian date.</source>
          <target state="translated">由于函数优先于 cmdlet，Windows PowerShell 运行导入 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 函数，它返回一个儒略日期。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The fourth and fifth commands show how to use a qualified name to run a command that is hidden by an imported command.</source>
          <target state="translated">第四个和第五个命令显示如何使用限定的名称来运行由导入的命令隐藏的命令。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The fourth command gets the name of the Windows PowerShell snap-in that added the original <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> cmdlet to the current session.</source>
          <target state="translated">第四个命令获取 Windows PowerShell 管理单元在添加原始名称 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 到当前会话的 cmdlet。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The fifth command uses the snap-in-qualified name of the <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> cmdlet to run a <bpt id="p2">**</bpt>Get-Date<ept id="p2">**</ept> command.</source>
          <target state="translated">第五个命令使用的管理单元中限定名称 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> cmdlet 来运行 <bpt id="p2">**</bpt>Get-date<ept id="p2">**</ept> 命令。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For more information about command precedence and hidden commands, see about_Command_Precedence.</source>
          <target state="translated">有关命令优先级和隐藏的命令的详细信息，请参阅 about_Command_Precedence。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 8 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 8 --------------------------</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This command imports commands whose names include "Item" from the PSSession in $s.</source>
          <target state="translated">此命令导入其名称中包含"Item"从 PSSession 中 $s 的命令。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Because the command includes the <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> parameter but not the <bpt id="p2">**</bpt>FormatTypeData<ept id="p2">**</ept> parameter, only the command is imported.</source>
          <target state="translated">由于命令包含 <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> 参数而不是 <bpt id="p2">**</bpt>FormatTypeData<ept id="p2">**</ept> 参数是，它仅命令导入。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Use this command when you are using <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> to run a command on a remote computer and you already have the formatting data for the command in the current session.</source>
          <target state="translated">当您将使用此命令 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 运行的命令在远程计算机与您已经拥有该命令的格式设置数据当前会话中。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 9 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 9 --------------------------</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This command shows how to use the <bpt id="p1">**</bpt>Module<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Get-Command<ept id="p2">**</ept> to find out which commands were imported into the session by an <bpt id="p3">**</bpt>Import-PSSession<ept id="p3">**</ept> command.</source>
          <target state="translated">此命令演示如何使用 <bpt id="p1">**</bpt>模块<ept id="p1">**</ept> 参数 <bpt id="p2">**</bpt>Get-command<ept id="p2">**</ept> 以查明哪些命令已导入到会话 <bpt id="p3">**</bpt>Import-pssession<ept id="p3">**</ept> 命令。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> cmdlet to import commands whose names include "bits" from the PSSession in the $s variable.</source>
          <target state="translated">第一个命令使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> cmdlet 导入其名称在 $s 变量中包含"bits"从 PSSession 的命令。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> command returns a temporary module, and the command saves the module in the $m variable.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 命令将返回一个临时模块，该命令将模块保存在 $m 变量。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The second command uses the Get-Command cmdlet to get the commands that are exported by the module in the $m variable.</source>
          <target state="translated">第二个命令使用 Get-command cmdlet 来获取由 $m 变量中的模块导出的命令。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Module<ept id="p1">**</ept> parameter takes a string value, which is designed for the module name.</source>
          <target state="translated"> <bpt id="p1">**</bpt>模块<ept id="p1">**</ept> 参数采用字符串值，专为模块名称。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>However, when you submit a module object, Windows PowerShell uses the <bpt id="p1">**</bpt>ToString<ept id="p1">**</ept> method on the module object, which returns the module name.</source>
          <target state="translated">但是，当你提交模块对象时，Windows PowerShell 使用 <bpt id="p1">**</bpt>ToString<ept id="p1">**</ept> 对返回的模块名称的模块对象的方法。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> command is the equivalent of <ph id="ph1">`Get-Command $m.Name`</ph>".</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-command<ept id="p1">**</ept> 命令相当于 <ph id="ph1">`Get-Command $m.Name`</ph>"。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-AllowClobber</source>
          <target state="translated">-AllowClobber</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Imports the specified commands, even if they have the same names as commands in the current session.</source>
          <target state="translated">即使指定命令的名称与当前会话中的命令名称相同，也导入它们。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>If you import a command with the same name as a command in the current session, the imported command hides or replaces the original commands.</source>
          <target state="translated">如果导入与当前会话中的命令同名的命令，则导入的命令会隐藏或替换原始命令。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For more information, see about_Command_Precedence.</source>
          <target state="translated">有关详细信息，请参阅 about_Command_Precedence。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> does not import commands that have the same name as commands in the current session.</source>
          <target state="translated">默认情况下， <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 不导入当前会话中具有同名的命令的命令。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>-ArgumentList</source>
          <target state="translated">-ArgumentList</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Imports the variant of the command that results from using the specified arguments (parameter values).</source>
          <target state="translated">导入使用指定参数（参数值）生成的命令的变体。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For example, to import the variant of the Get-Item command in the certificate (Cert:) drive in the PSSession in $s, type "Import-PSSession -Session $s -command get-item -argumentlist cert:".</source>
          <target state="translated">例如，若要将证书 (Cert:) 驱动器中的 Get-Item 命令的变体导入 $s 的 PSSession 中，请键入“Import-PSSession -Session $s -command get-item -argumentlist cert:”。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>-CommandName</source>
          <target state="translated">-CommandName</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Imports only the commands with the specified names or name patterns.</source>
          <target state="translated">仅导入具有指定名称或名称模式的命令。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Use "CommandName" or its alias, "Name".</source>
          <target state="translated">使用“CommandName”或其别名“Name”。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> imports all commands from the session, except for commands that have the same names as commands in the current session.</source>
          <target state="translated">默认情况下， <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 从会话中，除当前会话中具有相同名称的命令的命令导入所有命令。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This prevents imported commands from hiding or replacing commands in the session.</source>
          <target state="translated">这样可以防止导入的命令隐藏或替换会话中的命令。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>To import all commands, even those that hide or replace other commands, use the <bpt id="p1">**</bpt>AllowClobber<ept id="p1">**</ept> parameter.</source>
          <target state="translated">若要导入所有命令，甚至那些隐藏或替换其他命令，使用 <bpt id="p1">**</bpt>AllowClobber<ept id="p1">**</ept> 参数。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> parameter, the formatting files for the commands are not imported unless you use the <bpt id="p2">**</bpt>FormatTypeName<ept id="p2">**</ept> parameter.</source>
          <target state="translated">如果您使用 <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> 参数，这些命令的格式设置文件不导入的除非您使用 <bpt id="p2">**</bpt>FormatTypeName<ept id="p2">**</ept> 参数。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Similarly, if you use the <bpt id="p1">**</bpt>FormatTypeName<ept id="p1">**</ept> parameter, no commands are imported unless you use the <bpt id="p2">**</bpt>CommandName<ept id="p2">**</ept> parameter.</source>
          <target state="translated">同样，如果您使用 <bpt id="p1">**</bpt>FormatTypeName<ept id="p1">**</ept> 参数，任何命令的导入除非您使用 <bpt id="p2">**</bpt>CommandName<ept id="p2">**</ept> 参数。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>-CommandType</source>
          <target state="translated">-CommandType</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Imports only the specified types of command objects.</source>
          <target state="translated">仅导入命令对象的指定类型。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The default value is Cmdlet.</source>
          <target state="translated">默认值为 Cmdlet。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Use "CommandType" or its alias, "Type".</source>
          <target state="translated">使用“CommandType”或其别名“Type”。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Valid values are:</source>
          <target state="translated">有效值包括：</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Alias: The Windows PowerShell aliases in the remote session.</source>
          <target state="translated">别名︰ 远程会话中的 Windows PowerShell 别名。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>All: The cmdlets and functions in the remote session.</source>
          <target state="translated">所有︰ 的 cmdlet 和远程会话中的函数。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Application: All the files other than Windows-PowerShell files in the paths that are listed in the Path environment variable ($env:path) in the remote session, including .txt, .exe, and .dll files.</source>
          <target state="translated">应用程序︰ 以外的所有文件的 Path 环境变量中列出的路径中的 Windows PowerShell 文件 ($env︰ 路径) 在远程会话中，包括.txt、.exe 和.dll 文件。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Cmdlet: The cmdlets in the remote session.</source>
          <target state="translated">Cmdlet︰ 远程会话中的 cmdlet。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>"Cmdlet" is the default.</source>
          <target state="translated">默认值为“Cmdlet”。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>ExternalScript: The .ps1 files in the paths listed in the Path environment variable ($env:path) in the remote session.</source>
          <target state="translated">ExternalScript: Path 环境变量中列出的路径中的.ps1 文件 ($env︰ 路径) 在远程会话中。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Filter and Function: The Windows PowerShell functions in the remote session.</source>
          <target state="translated">筛选器和函数︰ Windows PowerShell 远程会话中的函数。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Script: The script blocks in the remote session.</source>
          <target state="translated">  絏  远程会话中的脚本块。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>-DisableNameChecking</source>
          <target state="translated">-DisableNameChecking</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Suppresses the message that warns you when you import a cmdlet or function whose name includes an unapproved verb or a prohibited character.</source>
          <target state="translated">禁用在你导入的 cmdlet 或函数名称包括未经批准的动词或禁止的字符时出现的警告消息。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>By default,  when a module that you import exports cmdlets or functions that have unapproved verbs in their names, the Windows PowerShell displays the following warning message:</source>
          <target state="translated">默认情况下，当导入的模块导出名称中包含未经批准的动词的 cmdlet 或函数时，Windows PowerShell 将显示以下警告消息：</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>"WARNING: Some imported command names include unapproved verbs which might make them less discoverable.</source>
          <target state="translated">"警告︰ 某些导入的命令名称包含未经批准的谓词，这可能会使它们得难于发现。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Use the Verbose parameter for more detail or type Get-Verb to see the list of approved verbs."</source>
          <target state="translated">请使用 Verbose 参数获取详细信息或者键入 Get-Verb 以查看批准的动词列表。”</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>This message is only a warning.</source>
          <target state="translated">此消息只是一个警告。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The complete module is still imported, including the non-conforming commands.</source>
          <target state="translated">仍将导入完整的模块，其中包括非一致性的命令。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Although the message is displayed to module users, the naming problem should be fixed by the module author.</source>
          <target state="translated">尽管会向模块用户显示消息，但是模块作者应修复命名问题。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>-FormatTypeName</source>
          <target state="translated">-FormatTypeName</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Imports formatting instructions for the specified Microsoft .NET Framework types.</source>
          <target state="translated">导入对指定的 Microsoft .NET Framework 类型的格式设置的说明。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Enter the type names.</source>
          <target state="translated">输入类型名称。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The value of this parameter must be the name of a type that is returned by a Get-FormatData command in the session from which the commands are being imported.</source>
          <target state="translated">此参数的值必须是一个类型的名称，该类型由导出这些命令的会话中的 Get-FormatData 命令返回。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>To get all of the formatting data in the remote session, type *.</source>
          <target state="translated">若要获取远程会话中的所有格式数据，请键入 *。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>If the command does not include either the <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> or <bpt id="p2">**</bpt>FormatTypeName<ept id="p2">**</ept> parameters, <bpt id="p3">**</bpt>Import-PSSession<ept id="p3">**</ept>imports formatting instructions for all .NET Framework types returned by a Get-FormatData command in the remote session.</source>
          <target state="translated">如果该命令不包括 <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> 或 <bpt id="p2">**</bpt>FormatTypeName<ept id="p2">**</ept> 参数， <bpt id="p3">**</bpt>Import-pssession<ept id="p3">**</ept>格式为所有.NET Framework 类型的说明导入由 Get-formatdata 命令返回远程会话中。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">**</bpt>FormatTypeName<ept id="p1">**</ept> parameter, no commands are imported unless you use the <bpt id="p2">**</bpt>CommandName<ept id="p2">**</ept> parameter.</source>
          <target state="translated">如果您使用 <bpt id="p1">**</bpt>FormatTypeName<ept id="p1">**</ept> 参数，任何命令的导入除非您使用 <bpt id="p2">**</bpt>CommandName<ept id="p2">**</ept> 参数。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Similarly, if you use the <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> parameter, the formatting files for the commands are not imported unless you use the <bpt id="p2">**</bpt>FormatTypeName<ept id="p2">**</ept> parameter.</source>
          <target state="translated">同样，如果您使用 <bpt id="p1">**</bpt>CommandName<ept id="p1">**</ept> 参数，这些命令的格式设置文件不导入的除非您使用 <bpt id="p2">**</bpt>FormatTypeName<ept id="p2">**</ept> 参数。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>-Module</source>
          <target state="translated">模块</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Imports only the commands in the specified Windows PowerShell snap-ins and modules.</source>
          <target state="translated">仅导入指定的 Windows PowerShell 管理单元和模块中的命令。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Enter the snap-in and module names.</source>
          <target state="translated">输入管理单元和模块的名称。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Wildcards are not permitted.</source>
          <target state="translated">不允许使用通配符。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> cannot import providers from a snap-in.</source>
          <target state="translated"><bpt id="p1">**</bpt>导入 PSSession<ept id="p1">**</ept> 无法从管理单元导入提供程序。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>For more information, see about_PSSnapins and about_Modules.</source>
          <target state="translated">有关详细信息，请参阅 about_PSSnapins 和 about_Modules。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>-Prefix</source>
          <target state="translated">前缀</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Adds the specified prefix to the nouns in the names of imported commands.</source>
          <target state="translated">将指定的前缀添加到导入命令的名称中的名词中。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Use this parameter to avoid name conflicts that might occur when different commands in the session have the same name.</source>
          <target state="translated">使用此参数可避免会话中的不同命令具有相同名称时可能出现的名称冲突。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>For example, if you specify the prefix "Remote" and then import a Get-Date cmdlet, the cmdlet is known in the session as "Get-RemoteDate" and it is not confused with the original <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">例如，如果你指定前缀"Remote"，然后导入 Get-date cmdlet，该 cmdlet 称为"Get-remotedate"作为会话中，不要相混淆与原始 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> cmdlet。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>-Session</source>
          <target state="translated">会话</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Specifies the PSSession from which the cmdlets are imported.</source>
          <target state="translated">指定导出 cmdlet 的 PSSession。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains a session object or a command that gets a session object, such as a New-PSSession or Get-PSSession command.</source>
          <target state="translated">输入包含会话对象或可获取会话对象，例如 New-pssession 或 Get-pssession 命令的命令的变量。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>You can specify only one session.</source>
          <target state="translated">仅可以指定一个会话。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>This parameter is required.</source>
          <target state="translated">此参数是必需的。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>-Certificate</source>
          <target state="translated">证书</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Specifies the client certificate that is used to sign the format files (<bpt id="p1">*</bpt>.Format.ps1xml) or script module files (.psm1) in the temporary module that <ept id="p1">*</ept><bpt id="p2">*</bpt>Import-PSSession<ept id="p2">*</ept>* creates.</source>
          <target state="translated">指定用于签名格式化文件的客户端证书 (<bpt id="p1">*</bpt>。Format.ps1xml) 或脚本模块文件 (.psm1) 的临时模块中的 <ept id="p1">*</ept><bpt id="p2">*</bpt>Import-pssession<ept id="p2">*</ept>* 创建。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains a certificate or a command or expression that gets the certificate.</source>
          <target state="translated">输入一个包含证书的变量，或可获取该证书的命令或表达式。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>To find a certificate, use the Get-PfxCertificate cmdlet or use the Get-ChildItem cmdlet in the Certificate (Cert:) drive.</source>
          <target state="translated">若要查找证书，请使用 Get-pfxcertificate cmdlet 或使用证书中的 Get-childitem cmdlet (Cert:) 驱动器。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>If the certificate is not valid or does not have sufficient authority, the command fails.</source>
          <target state="translated">如果证书无效或不具有足够的权限，则该命令将失败。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">无</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>You cannot pipe objects to this cmdlet.</source>
          <target state="translated">不能通过管道将对象传递给此 cmdlet。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSModuleInfo</source>
          <target state="translated">System.Management.Automation.PSModuleInfo</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> returns the same module object that New-Module and Get-Module cmdlets return.</source>
          <target state="translated"><bpt id="p1">**</bpt>导入 PSSession<ept id="p1">**</ept> 返回相同的模块对象的新模块，Get-module cmdlet 返回。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>However, the imported module is temporary and exists only in the current session.</source>
          <target state="translated">但是，导入的模块是临时的并且仅在当前会话中存在。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>To create a permanent module on disk, use the Export-PSSession cmdlet.</source>
          <target state="translated">若要在磁盘上创建一个永久模块，使用 Export-pssession cmdlet。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> relies on the Windows PowerShell remoting infrastructure.</source>
          <target state="translated"><bpt id="p1">**</bpt>导入 PSSession<ept id="p1">**</ept> 依赖于 Windows PowerShell 远程处理基础结构。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>To use this cmdlet, the computer must be configured for WS-Management remoting.</source>
          <target state="translated">若要使用此 cmdlet，必须为 WS-Management 远程处理配置计算机。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>For more information, see about_Remote and about_Remote_Requirements.</source>
          <target state="translated">有关详细信息，请参阅 about_Remote 和 about_Remote_Requirements。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> does not import variables or Windows PowerShell providers.</source>
          <target state="translated"><bpt id="p1">**</bpt>导入 PSSession<ept id="p1">**</ept> 不导入变量或 Windows PowerShell 提供程序。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>When you import commands that have the same names as commands in the current session, the imported commands can hide aliases, functions, and cmdlets in the session and they can replace functions and variables in the session.</source>
          <target state="translated">当你导入与当前会话中的命令具有相同名称的命令时，导入的命令可以隐藏会话中的别名、函数和 cmdlet，并且可以替换会话中的函数和变量。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>To prevent name conflicts, use the <bpt id="p1">**</bpt>Prefix<ept id="p1">**</ept> parameter.</source>
          <target state="translated">若要防止名称冲突，请使用 <bpt id="p1">**</bpt>前缀<ept id="p1">**</ept> 参数。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>For more information, see about_Command_Precedence.</source>
          <target state="translated">有关详细信息，请参阅 about_Command_Precedence。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> converts all commands into functions before it imports them.</source>
          <target state="translated"><bpt id="p1">**</bpt>导入 PSSession<ept id="p1">**</ept> 之前导入这些为函数将所有命令。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>As a result, imported commands behave a bit differently than they would if they retained their original command type.</source>
          <target state="translated">这样，导入的命令的行为与保留其原始命令类型时的行为稍有不同。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>For example, if you import a cmdlet from a PSSession and then import a cmdlet with the same name from a module or snap-in, the cmdlet that is imported from the PSSession always runs by default because functions take precedence over cmdlets.</source>
          <target state="translated">例如，如果从 PSSession 中导入一个 cmdlet，然后从模块或管理单元中导入具有相同名称的 cmdlet，则从 PSSession 中导入的 cmdlet 默认始终运行，因为函数优先于 cmdlet。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Conversely, if you import an alias into a session that has an alias with the same name, the original alias is always used, because aliases take precedence over functions.</source>
          <target state="translated">相反，如果将别名导入到具有相同名称的别名的会话，则始终使用原来的别名，因为别名优先于函数。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>For more information, see about_Command_Precedence.</source>
          <target state="translated">有关详细信息，请参阅 about_Command_Precedence。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> uses the Write-Progress cmdlet to display the progress of the command.</source>
          <target state="translated"><bpt id="p1">**</bpt>导入 PSSession<ept id="p1">**</ept> 使用 Write-progress cmdlet 来显示该命令的进度。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>You might see the progress bar while the command is running.</source>
          <target state="translated">该命令正在运行时，你可能会看到进度条。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>To find the commands to import, <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> uses the Invoke-Command cmdlet to run a Get-Command command in the PSSession.</source>
          <target state="translated">若要查找命令要导入， <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 使用 Invoke-command cmdlet 在 PSSession 中运行 Get-command 命令。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>To get formatting data for the commands, it uses the Get-FormatData cmdlet.</source>
          <target state="translated">若要获取格式设置数据的命令，它使用 Get-formatdata cmdlet。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>You might see error messages from these cmdlets when you run an Import-PSSession command.</source>
          <target state="translated">当运行 Import-PSSession 命令时，你可能看到来自这些 cmdlet 的错误消息。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Also, <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> cannot import commands from a PSSession that does not include the Get-Command, Get-FormatData, Select-Object, and Get-Help cmdlets.</source>
          <target state="translated">此外， <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 不能导入的命令，从 PSSession 不包含 Get-command、 Get-formatdata、 Select-object 和 Get-help cmdlet。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Imported commands have the same limitations as other remote commands, including the inability to start a program with a user interface, such as Notepad.</source>
          <target state="translated">导入的命令与其他远程命令具有相同的限制，包括无法通过用户界面（如“记事本”）启动程序。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Because Windows PowerShell profiles are not run in PSSessions, the commands that a profile adds to a session are not available to <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept>.</source>
          <target state="translated">由于 Windows PowerShell 配置文件不在 Pssession 中运行，一个配置文件添加到会话的命令不可用到 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>To import commands from a profile, use an Invoke-Command command to run the profile in the PSSession manually before importing commands.</source>
          <target state="translated">若要从配置文件中导入命令，请使用 Invoke-Command 命令，以在导入命令之前，在 PSSession 中手动运行该配置文件。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The temporary module that <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> creates might include a formatting file, even if the command does not import formatting data.</source>
          <target state="translated">临时模块的 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 创建一个可能包含格式设置文件，即使该命令不导入格式设置数据。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>If the command does not import formatting data, any formatting files that are created will not contain formatting data.</source>
          <target state="translated">如果该命令不导入格式数据，则创建的任何格式设置文件都不包含格式数据。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>To use <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept>, the execution policy in the current session cannot be Restricted or AllSigned, because the temporary module that <bpt id="p2">**</bpt>Import-PSSession<ept id="p2">**</ept> creates contains unsigned script files that are prohibited by these policies.</source>
          <target state="translated">若要使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept>, ，当前会话中的执行策略不能为 Restricted 或 AllSigned，因为临时模块的 <bpt id="p2">**</bpt>Import-pssession<ept id="p2">**</ept> 创建包含这些策略禁止的未签名的脚本文件。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>To use <bpt id="p1">**</bpt>Import-PSSession<ept id="p1">**</ept> without changing the execution policy for the local computer, use the <bpt id="p2">**</bpt>Scope<ept id="p2">**</ept> parameter of Set-ExecutionPolicy to set a less restrictive execution policy for a single process.</source>
          <target state="translated">若要使用 <bpt id="p1">**</bpt>Import-pssession<ept id="p1">**</ept> 而无需更改本地计算机的执行策略，使用 <bpt id="p2">**</bpt>范围<ept id="p2">**</ept> Set-executionpolicy 限制性较弱的执行策略来为单个进程设置的参数。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 2.0, help topics for commands that are imported from another session do not include the prefix that you assign by using the <bpt id="p1">**</bpt>Prefix<ept id="p1">**</ept> parameter.</source>
          <target state="translated">在 Windows PowerShell 2.0 中，从另一个会话中导入的命令的帮助主题不包括通过使用分配的前缀 <bpt id="p1">**</bpt>前缀<ept id="p1">**</ept> 参数。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>To get help for an imported command in Windows PowerShell 2.0, use the original (non-prefixed) command name.</source>
          <target state="translated">若要获得 Windows PowerShell 2.0 中导入命令的帮助，请使用原始（无前缀）的命令名称。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Export-PSSession</source>
          <target state="translated">Export-PSSession</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>New-PSSession</source>
          <target state="translated">New-PSSession</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>about_Command_Precedence</source>
          <target state="translated">about_Command_Precedence</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>about_PSSessions</source>
          <target state="translated">about_PSSessions</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>about_Jobs</source>
          <target state="translated">about_Jobs</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>