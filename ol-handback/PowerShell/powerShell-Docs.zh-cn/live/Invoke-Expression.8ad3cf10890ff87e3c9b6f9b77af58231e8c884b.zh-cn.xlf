<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90d39be69cd03d30d27339c9f58407f39682bf14</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\Invoke-Expression.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">608be4ccd5e11958f991b2daf801db03a2e0448b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5669df1d4242564a798e28f9ec0d085e010618d5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Invoke-Expression</source>
          <target state="translated">调用表达式</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Invoke-Expression</source>
          <target state="translated">调用表达式</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Runs commands or expressions on the local computer.</source>
          <target state="translated">在本地计算机上运行命令或表达式。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Invoke-Expression cmdlet evaluates or runs a specified string as a command and returns the results of the expression or command.</source>
          <target state="translated">Invoke-Expression cmdlet 以命令形式计算或运行指定的字符串，并返回表达式或命令的结果。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Without Invoke-Expression, a string submitted at the command line would be returned (echoed) unchanged.</source>
          <target state="translated">如果没有 Invoke-Expression，则在命令行提交的字符串将原样返回（回显）。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 示例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This example demonstrates the use of Invoke-Expression to evaluate an expression.</source>
          <target state="translated">此示例演示了如何使用 Invoke-Expression 计算表达式。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Without Invoke-Expression, the expression is printed, but not evaluated.</source>
          <target state="translated">如果没有 Invoke-Expression，则将输出表达式，但不计算表达式。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The first command assigns a value of "Get-Process" (a string) to the $command variable.</source>
          <target state="translated">第一个命令将“Get-Process”的值（字符串）赋给 $command 变量。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The second command shows the effect of typing the variable name at the command line.</source>
          <target state="translated">第二个命令显示在命令行键入变量名称的效果。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Windows PowerShell echoes the string.</source>
          <target state="translated">Windows PowerShell 回显该字符串。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The third command uses Invoke-Expression to evaluate the string.</source>
          <target state="translated">第三个命令使用 Invoke-Expression 计算该字符串。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>These commands use Invoke-Expression to run a script, TestScript.ps1, on the local computer.</source>
          <target state="translated">这些命令使用 Invoke-Expression 在本地计算机上运行脚本 TestScript.ps1。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The two commands are equivalent.</source>
          <target state="translated">这两个命令是等效的。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The first uses the Command parameter to specify the command to run.</source>
          <target state="translated">第一个命令使用 Command 参数来指定要运行的命令。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The second uses a pipeline operator (|) to send the command string to Invoke-Expression.</source>
          <target state="translated">第二个命令使用管道运算符 (|) 将命令字符串发送到 Invoke-Expression。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This example runs a command string that is saved in the $Command variable.</source>
          <target state="translated">此示例将运行 $Command 变量中保存的一个命令字符串。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The command string is enclosed in single quotation marks because it includes a variable, $<bpt id="p1">_</bpt>, which represents the current object. If it were enclosed in double quotation marks, the $<ept id="p1">_</ept> variable would be replaced by its value before it was saved in the $Command variable.</source>
          <target state="translated">命令字符串括在单引号中，因为它包含变量 $<bpt id="p1">_</bpt>, ，它表示当前对象。如果它括在双引号引起来，$<ept id="p1">_</ept> $Command 变量中保存它之前，将通过相应的值替换变量。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This command retrieves and runs the first example in the Get-EventLog cmdlet help topic.</source>
          <target state="translated">此命令检索和运行 Get-EventLog cmdlet 帮助主题中的第一个示例。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To run an example of a different cmdlet, change the value of the $cmdlet_name variable to the name of the cmdlet.</source>
          <target state="translated">若要运行其他 cmdlet 的示例，请将 $cmdlet_name 变量的值更改为该 cmdlet 的名称。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>And, change the $example_number variable to the example number you want to run.</source>
          <target state="translated">另外，请将 $example_number 变量更改为要运行的示例编号。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command will fail if the example number is not valid.</source>
          <target state="translated">如果示例数字无效，则该命令将失败。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>-Command</source>
          <target state="translated">-Command</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Specifies the command or expression to run.</source>
          <target state="translated">指定要运行的命令或表达式。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Type the command or expression or enter a variable that contains the command or expression.</source>
          <target state="translated">键入该命令或表达式，或输入包含该命或表达式的变量。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The Command parameter is required.</source>
          <target state="translated">Command 参数是必需的。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>System.String or PSObject</source>
          <target state="translated">System.String 或 PSObject</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can pipe an object that represents the command to Invoke-Expression.</source>
          <target state="translated">可以通过管道将表示命令的对象传递给 Invoke-Expression。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Use the $input automatic variable to represent the input objects in the command.</source>
          <target state="translated">使用 $input 自动变量来表示命令中的输入对象。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>PSObject</source>
          <target state="translated">PSObject</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Returns the output that is generated by the invoked command (the value of the Command parameter).</source>
          <target state="translated">返回所调用的命令生成的输出（Command 参数的值）。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An expression is a statement that can be evaluated and produces a result, such as a Windows PowerShell command.</source>
          <target state="translated">表达式是可以计算并生成一个结果，如 Windows PowerShell 命令的语句。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Take reasonable precautions when using the Invoke-Expression cmdlet in scripts.</source>
          <target state="translated">在脚本中使用 Invoke-expression cmdlet 时，请采取合理的预防措施。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When using Invoke-Expression to run a command that the user enters, verify that the command is safe to run before running it.</source>
          <target state="translated">使用 Invoke-Expression 运行用户输入的命令时，在运行前需要验证该命令是安全的。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In general, it is best to design your script with predefined input options, rather than allowing freeform input.</source>
          <target state="translated">通常，最好将脚本设计为包含预定义的输入选项，而不允许随意输入。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Invoke-Command</source>
          <target state="translated">Invoke-Command</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>