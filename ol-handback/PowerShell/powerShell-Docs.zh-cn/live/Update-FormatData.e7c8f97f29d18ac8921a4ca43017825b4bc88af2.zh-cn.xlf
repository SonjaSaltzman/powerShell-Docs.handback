<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d03dd94fb69e69bd109a562a066510b50842d85</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\Update-FormatData.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">77427ed0a889706df1cf23c3ab18e637347290c0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">168eb7b4391b5a0678517084303550464521d34e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Update-FormatData</source>
          <target state="translated">Update-FormatData</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Update-FormatData</source>
          <target state="translated">Update-FormatData</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Updates the formatting data in the current session.</source>
          <target state="translated">更新当前会话中的格式设置数据。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Update-FormatData cmdlet reloads the formatting data from formatting files into the current session.</source>
          <target state="translated">Update-FormatData cmdlet 可将格式设置文件中的格式设置数据重新加载到当前会话中。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This cmdlet lets you update the formatting data without restarting Windows PowerShell.</source>
          <target state="translated">此 cmdlet 允许你更新格式设置数据而无需重新启动 Windows PowerShell。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Without parameters, Update-FormatData reloads the formatting files that it loaded previously.</source>
          <target state="translated">如果不使用参数，则 Update-FormatData 将重新加载它先前加载的格式设置文件。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can use the parameters of Update-FormatData to add new formatting files to the session.</source>
          <target state="translated">可以使用 Update-FormatData 的参数将新的格式设置文件添加到会话中。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Formatting files are text files in XML format with the format.ps1xml file name extension.</source>
          <target state="translated">格式设置文件是采用 XML 格式的文本文件，其文件扩展名为 format.ps1xml。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The formatting data in the files defines the display of Microsoft .NET Framework objects in the session.</source>
          <target state="translated">文件中的格式设置数据定义了会话中 Microsoft .NET Framework 对象的显示。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When Windows PowerShell starts, it loads the format data from the formatting files in the Windows PowerShell installation directory ($pshome) into the session.</source>
          <target state="translated">当 Windows PowerShell 启动时，它会将 Windows PowerShell 安装目录 ($pshome) 下的格式设置文件中的格式数据加载到会话中。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can use Update-FormatData to reload the formatting data into the current session without restarting Windows PowerShell.</source>
          <target state="translated">可以使用 Update-FormatData 将格式设置数据重新加载到当前会话而无需重新启动 Windows PowerShell。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This is useful when you have added or changed a formatting file, but do not want to interrupt the session.</source>
          <target state="translated">当你已添加或更改格式设置文件，但不希望中断会话时，这将非常有用。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information about formatting files in Windows PowerShell, see about_Format.ps1xml.</source>
          <target state="translated">有关 Windows PowerShell 中格式设置文件的详细信息，请参阅 about_Format.ps1xml。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 示例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This command reloads the formatting files that it loaded previously.</source>
          <target state="translated">此命令将重新加载它先前加载的格式设置文件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This command reloads the formatting files into the session, including two new files, Trace.format.ps1xml and Log.format.ps1xml.</source>
          <target state="translated">此命令将格式设置文件重新加载到会话中，包括两个新文件：Trace.format.ps1xml 和 Log.format.ps1xml。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Because the command uses the AppendPath parameter, the formatting data in the new files is loaded after the formatting data from the built-in files.</source>
          <target state="translated">由于该命令使用了 AppendPath 参数，因此新文件中的格式设置数据将在内置文件的格式设置数据之后加载。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The AppendPath parameter is used because the new files contain formatting data for objects that are not referenced in the built-in files.</source>
          <target state="translated">使用 AppendPath 参数是因为新文件中包含内置文件中未引用的用于对象的格式设置数据。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This example shows how to reload a formatting file after you have edited it.</source>
          <target state="translated">此示例演示如何在编辑格式设置文件之后重新加载该文件。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The first command adds the NewFiles.format.ps1xml file to the session.</source>
          <target state="translated">第一个命令将 NewFiles.format.ps1xml 文件添加到会话。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>It uses the PrependPath parameter because the file contains formatting data for objects that are referenced in the built-in files.</source>
          <target state="translated">因为该文件中包含内置文件中已引用的对象的格式设置数据，所以该命令使用 PrependPath 参数。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>After adding the NewFiles.format.ps1xml file and testing it in these session, the author edits the file.</source>
          <target state="translated">在添加 NewFiles.format.ps1xml 文件并在这些会话中对该文件进行测试之后，作者可编辑该文件。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The second command uses the Update-FormatData cmdlet to reload the formatting files.</source>
          <target state="translated">第二个命令使用 Update-FormatData cmdlet 来重新加载格式设置文件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Because the NewFiles.format.ps1xml file was previously loaded, Update-FormatData automatically reloads it without using parameters.</source>
          <target state="translated">因为以前加载过 NewFiles.format.ps1xml 文件，所以 Update-FormatData 将自动重新加载该文件而无需使用参数。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-AppendPath</source>
          <target state="translated">-AppendPath</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Adds the specified formatting files to the session.</source>
          <target state="translated">将指定的格式设置文件添加到会话中。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The files are loaded after Windows PowerShell loads the built-in formatting files.</source>
          <target state="translated">将在 Windows PowerShell 加载内置的格式设置文件后加载这些文件。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When formatting .NET objects, Windows PowerShell uses the first formatting definition that it finds for each .NET type.</source>
          <target state="translated">在对 .NET 对象进行格式设置时，Windows PowerShell 将为每个 .NET 类型使用它所找到的第一个格式化定义。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you use the AppendPath parameter, Windows PowerShell searches the data from the built-in files before it encounters the formatting data that you are adding.</source>
          <target state="translated">如果使用 AppendPath 参数，则 Windows PowerShell 将在遇到你要添加的格式设置数据之前，先从内置文件中搜索数据。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Use this parameter to add a file that formats a .NET object that is not referenced in the built-in formatting files.</source>
          <target state="translated">使用此参数可添加一个文件，该文件用于对内置格式设置文件中未引用的 .NET 对象进行格式设置。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-PrependPath</source>
          <target state="translated">-PrependPath</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Adds the specified formatting files to the session.</source>
          <target state="translated">将指定的格式设置文件添加到会话中。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The files are loaded before Windows PowerShell loads the built-in formatting files.</source>
          <target state="translated">将在 Windows PowerShell 加载内置的格式设置文件之前加载这些文件。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>When formatting .NET objects, Windows PowerShell uses the first formatting definition that it finds for each .NET type.</source>
          <target state="translated">在对 .NET 对象进行格式设置时，Windows PowerShell 将为每个 .NET 类型使用它所找到的第一个格式化定义。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you use the PrependPath parameter, Windows PowerShell searches the data from the files that you are adding before it encounters the formatting data from the built-in files.</source>
          <target state="translated">如果使用 PrependPath 参数，则 Windows PowerShell 将在遇到内置文件中的格式设置数据之前，先搜索你要添加的文件中的数据。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Use this parameter to add a file that formats a .NET object that is also referenced in the built-in formatting files.</source>
          <target state="translated">使用此参数可添加一个文件，该文件用于对也在内置格式设置文件中引用的 .NET 对象进行格式设置。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>-Confirm</source>
          <target state="translated">-Confirm</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</source>
          <target state="translated">将提示您在运行 cmdlet 前进行确认。将提示您在运行 cmdlet 前进行确认。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-WhatIf</source>
          <target state="translated">-WhatIf</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Shows what would happen if the cmdlet runs.</source>
          <target state="translated">显示如果运行 cmdlet 则会发生什么情况。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.Shows what would happen if the cmdlet runs.</source>
          <target state="translated">该 cmdlet 不会运行。显示在 cmdlet 运行时，会发生什么情况。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The cmdlet is not run.</source>
          <target state="translated">cmdlet 未运行。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You can pipe a string that contains the append path to Update-FormatData.</source>
          <target state="translated">可以通过管道将包含追加路径的字符串传递给 Update-FormatData。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">无</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The cmdlet does not return any output.</source>
          <target state="translated">该 cmdlet 不返回任何输出。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Update-FormatData also updates the formatting data for commands in the session that were imported from modules.</source>
          <target state="translated">Update-FormatData 还会更新会话中通过模块导入的命令的格式设置数据。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If the formatting file for a module changes, you can run an Update-FormatData command to update the formatting data for imported commands.</source>
          <target state="translated">如果模块的格式设置文件发生更改，则可以运行 Update-FormatData command 来更新导入命令的格式设置数据。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You do not need to import the module again.</source>
          <target state="translated">不需要再次导入该模块。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>