<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b2baaf943df14cc04974deda2c92a390884abf5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Management\Use-Transaction.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">561cb2ee711ee5748a914bee41120b7c3e0df20c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f70b8ff7c784066b31a10acfa152665a775dbd01</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Use-Transaction</source>
          <target state="translated">Use-Transaction</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Use-Transaction</source>
          <target state="translated">Use-Transaction</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Adds the script block to the active transaction.</source>
          <target state="translated">将脚本块添加到活动事务中。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Use-Transaction<ept id="p1">**</ept> cmdlet adds a script block to an active transaction.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Use-transaction<ept id="p1">**</ept> cmdlet 将脚本块添加到活动事务。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This enables you to do transacted scripting by using transaction-enabled Microsoft .NET Framework objects.</source>
          <target state="translated">这使您可以通过使用支持事务的 Microsoft.NET Framework 对象编写事务处理脚本。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The script block can contain only transaction-enabled .NET Framework objects, such as instances of the Microsoft.PowerShell.Commands.Management.TransactedString class.</source>
          <target state="translated">该脚本块只能包含支持事务的 .NET Framework 对象，如 Microsoft.PowerShell.Commands.Management.TransactedString 类的实例。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>UseTransaction<ept id="p1">*</ept> parameter, which is optional for most cmdlets, is required when you use this cmdlet.</source>
          <target state="translated"> <bpt id="p1">*</bpt>UseTransaction<ept id="p1">*</ept> 参数，即对于大多数 cmdlet 是可选的是必需的当您使用此 cmdlet。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Use-Transaction<ept id="p1">**</ept> is one of a set of cmdlets that support the transactions feature in Windows PowerShell.</source>
          <target state="translated"><bpt id="p1">**</bpt>使用事务<ept id="p1">**</ept> 是一组 Windows PowerShell 中支持事务功能的 cmdlet 之一。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information, see about_Transactions.</source>
          <target state="translated">有关详细信息，请参阅 about_Transactions。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Example 1: Script by using a transaction-enabled object</source>
          <target state="translated">示例 1︰ 通过使用支持事务的对象的脚本</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This example shows how to use <bpt id="p1">**</bpt>Use-Transaction<ept id="p1">**</ept> to script against a transaction-enabled .NET Framework object.</source>
          <target state="translated">此示例演示如何使用 <bpt id="p1">**</bpt>Use-transaction<ept id="p1">**</ept> 为支持事务的.NET Framework 对象撰写脚本。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In this case, the object is a <bpt id="p1">**</bpt>TransactedString<ept id="p1">**</ept> object.</source>
          <target state="translated">在这种情况下，该对象是 <bpt id="p1">**</bpt>TransactedString<ept id="p1">**</ept> 对象。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The first command uses the Start-Transaction cmdlet to start a transaction.</source>
          <target state="translated">第一条命令使用 Start-Transaction cmdlet 启动事务。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The second command uses the New-Object command to create a <bpt id="p1">**</bpt>TransactedString<ept id="p1">**</ept> object.</source>
          <target state="translated">第二个命令使用 New-object 命令创建 <bpt id="p1">**</bpt>TransactedString<ept id="p1">**</ept> 对象。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It stores the object in the $TransactedString variable.</source>
          <target state="translated">它将该对象存储在 $TransactedString 变量中。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The third and fourth commands both use the <bpt id="p1">**</bpt>Append<ept id="p1">**</ept> method of the <bpt id="p2">**</bpt>TransactedString<ept id="p2">**</ept> object to add text to the value of $TransactedString.</source>
          <target state="translated">第三个和第四个命令均使用 <bpt id="p1">**</bpt>追加<ept id="p1">**</ept> 方法 <bpt id="p2">**</bpt>TransactedString<ept id="p2">**</ept> 对象将文本添加到 $TransactedString 的值。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>One command is part of the transaction.</source>
          <target state="translated">一个命令为事务的一部分。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The other command is not.</source>
          <target state="translated">其他命令不是。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>Append<ept id="p1">**</ept> method of the transacted string to add Hello to the value of $TransactedString.</source>
          <target state="translated">第三个命令使用 <bpt id="p1">**</bpt>追加<ept id="p1">**</ept> 要将 Hello 添加到 $TransactedString 的值的事务处理字符串的方法。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Because the command is not part of the transaction, the change is applied immediately.</source>
          <target state="translated">由于该命令未包含在事务中，因此会立即应用所做更改。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The fourth command uses <bpt id="p1">**</bpt>Use-Transaction<ept id="p1">**</ept> to add text to the string in the transaction.</source>
          <target state="translated">第四个命令使用 <bpt id="p1">**</bpt>Use-transaction<ept id="p1">**</ept> 将文本添加到该事务中的字符串。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>Append<ept id="p1">**</ept> method to add ", World" to the value of $TransactedString.</source>
          <target state="translated">该命令使用 <bpt id="p1">**</bpt>追加<ept id="p1">**</ept> 方法将添加"，World"到 $TransactedString 的值。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The command is enclosed in braces ( {} ) to make it a script block.</source>
          <target state="translated">用大括号 ( {} ) 将命令括起来以形成脚本块。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>UseTransaction<ept id="p1">*</ept> parameter is required in this command.</source>
          <target state="translated"> <bpt id="p1">*</bpt>UseTransaction<ept id="p1">*</ept> 参数必需在此命令。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The fifth and sixth commands use the <bpt id="p1">**</bpt>ToString<ept id="p1">**</ept> method of the <bpt id="p2">**</bpt>TransactedString<ept id="p2">**</ept> object to display the value of the <bpt id="p3">**</bpt>TransactedString<ept id="p3">**</ept> as a string.</source>
          <target state="translated">第五个和第六个命令使用 <bpt id="p1">**</bpt>ToString<ept id="p1">**</ept> 方法 <bpt id="p2">**</bpt>TransactedString<ept id="p2">**</ept> 要显示的值对象 <bpt id="p3">**</bpt>TransactedString<ept id="p3">**</ept> 作为字符串。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Again, one command is part of the transaction.</source>
          <target state="translated">同样，一个命令为事务的一部分。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The other transaction is not.</source>
          <target state="translated">其他事务不是。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The fifth command uses the <bpt id="p1">**</bpt>ToString<ept id="p1">**</ept> method to display the current value of the $TransactedString variable.</source>
          <target state="translated">第五个命令使用 <bpt id="p1">**</bpt>ToString<ept id="p1">**</ept> 方法以显示 $TransactedString 变量的当前值。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Because it is not part of the transaction, it displays only the current state of the string.</source>
          <target state="translated">因为它未包含在事务中，所以它仅显示字符串的当前状态。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The sixth command uses <bpt id="p1">**</bpt>Use-Transaction<ept id="p1">**</ept> to run the same command in the transaction.</source>
          <target state="translated">第六个命令使用 <bpt id="p1">**</bpt>Use-transaction<ept id="p1">**</ept> 在事务中运行相同的命令。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Because the command is part of the transaction, it displays the current value of the string in the transaction, much like a preview of the transaction changes.</source>
          <target state="translated">由于该命令是事务的一部分，它会显示在事务中，与预览事务更改非常相似的字符串的当前值。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The seventh command uses the Complete-Transaction cmdlet to commit the transaction.</source>
          <target state="translated">第七条命令使用 Complete-Transaction cmdlet 提交事务。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The final command uses the <bpt id="p1">**</bpt>ToString<ept id="p1">**</ept> method to display the resulting value of the variable as a string.</source>
          <target state="translated">最后一个命令使用 <bpt id="p1">**</bpt>ToString<ept id="p1">**</ept> 方法以字符串形式显示该变量的结果值。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Example 2: Roll back a transaction</source>
          <target state="translated">示例 2︰ 回滚的事务</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This example shows the effect of rolling back a transaction that includes <bpt id="p1">**</bpt>Use-Transaction<ept id="p1">**</ept> commands.</source>
          <target state="translated">此示例演示回滚包含的事务的效果 <bpt id="p1">**</bpt>Use-transaction<ept id="p1">**</ept> 命令。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Like all commands in a transaction, when the transaction is rolled back, the transacted changes are discarded and the data is unchanged.</source>
          <target state="translated">与事务中的所有命令一样，当事务回滚后，事务型更改将被丢弃，而数据保持不变。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The first command uses <bpt id="p1">**</bpt>Start-Transaction<ept id="p1">**</ept> to start a transaction.</source>
          <target state="translated">第一个命令使用 <bpt id="p1">**</bpt>Start-transaction<ept id="p1">**</ept> 要启动一个事务。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The second command uses <bpt id="p1">**</bpt>New-Object<ept id="p1">**</ept> to create a <bpt id="p2">**</bpt>TransactedString<ept id="p2">**</ept> object.</source>
          <target state="translated">第二个命令使用 <bpt id="p1">**</bpt>New-object<ept id="p1">**</ept> 创建 <bpt id="p2">**</bpt>TransactedString<ept id="p2">**</ept> 对象。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>It stores the object in the $TransactedString variable.</source>
          <target state="translated">它将该对象存储在 $TransactedString 变量中。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The third command, which is not part of the transaction, uses the <bpt id="p1">**</bpt>Append<ept id="p1">**</ept> method to add "Hello" to the value of $TransactedString.</source>
          <target state="translated">不是事务的一部分，该第三个命令使用 <bpt id="p1">**</bpt>追加<ept id="p1">**</ept> 方法将"Hello"添加到 $TransactedString 的值。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The fourth command uses <bpt id="p1">**</bpt>Use-Transaction<ept id="p1">**</ept> to run another command that uses the <bpt id="p2">**</bpt>Append<ept id="p2">**</ept> method in the transaction.</source>
          <target state="translated">第四个命令使用 <bpt id="p1">**</bpt>Use-transaction<ept id="p1">**</ept> 运行另一个命令使用 <bpt id="p2">**</bpt>追加<ept id="p2">**</ept> 在事务中的方法。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>Append<ept id="p1">**</ept> method to add ", World" to the value of $TransactedString.</source>
          <target state="translated">该命令使用 <bpt id="p1">**</bpt>追加<ept id="p1">**</ept> 方法将添加"，World"到 $TransactedString 的值。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The fifth command uses the Undo-Transaction cmdlet to roll back the transaction.</source>
          <target state="translated">第五条命令使用 Undo-Transaction cmdlet 回滚事务。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>As a result, all commands performed in the transaction are reversed.</source>
          <target state="translated">因此，在事务中执行的所有命令进行了都互换。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The final command uses the <bpt id="p1">**</bpt>ToString<ept id="p1">**</ept> method to display the resulting value of $TransactedString as a string.</source>
          <target state="translated">最后一个命令使用 <bpt id="p1">**</bpt>ToString<ept id="p1">**</ept> 方法以字符串形式显示 $TransactedString 的结果值。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The results show that only the changes that were made outside the transaction were applied to the object.</source>
          <target state="translated">结果显示在事务外部所做的更改应用于对象。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-TransactedScript</source>
          <target state="translated">-TransactedScript</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Specifies the script block that is run in the transaction.</source>
          <target state="translated">指定在事务中运行的脚本块。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Enter any valid script block enclosed in braces ( { } ).</source>
          <target state="translated">可输入用大括号 ( { } ) 括起的任何有效脚本块。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This parameter is required.</source>
          <target state="translated">此参数是必需的。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>-UseTransaction</source>
          <target state="translated">-UseTransaction</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Includes the command in the active transaction.</source>
          <target state="translated">在活动事务中使用该命令。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when a transaction is in progress.</source>
          <target state="translated">仅当正在执行事务时，此参数才有效。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For more information, see Includes the command in the active transaction.</source>
          <target state="translated">有关详细信息，请参阅包括在活动事务中的命令。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when a transaction is in progress.</source>
          <target state="translated">仅当正在执行事务时，此参数才有效。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For more information, see</source>
          <target state="translated">有关详细信息，请参阅本主题后面的</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">无</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You cannot pipe input to this cmdlet.</source>
          <target state="translated">不能通过管道将输入传递给此 cmdlet。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>PSObject</source>
          <target state="translated">PSObject</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This cmdlet returns the result of the transaction.</source>
          <target state="translated">此 cmdlet 将返回事务的结果。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>UseTransaction<ept id="p1">*</ept> parameter includes the command in the active transaction.</source>
          <target state="translated"> <bpt id="p1">*</bpt>UseTransaction<ept id="p1">*</ept> 参数在活动事务中包括该命令。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Because the <bpt id="p1">**</bpt>Use-Transaction<ept id="p1">**</ept> cmdlet is always used in transactions, this parameter is required to make any <bpt id="p2">**</bpt>Use-Transaction<ept id="p2">**</ept> command effective.</source>
          <target state="translated">因为 <bpt id="p1">**</bpt>Use-transaction<ept id="p1">**</ept> 始终在事务中使用 cmdlet，此参数需要进行任何 <bpt id="p2">**</bpt>Use-transaction<ept id="p2">**</ept> 命令有效。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Complete-Transaction</source>
          <target state="translated">Complete-Transaction</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Get-Transaction</source>
          <target state="translated">Get-Transaction</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Start-Transaction</source>
          <target state="translated">Start-Transaction</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Undo-Transaction</source>
          <target state="translated">Undo-Transaction</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>