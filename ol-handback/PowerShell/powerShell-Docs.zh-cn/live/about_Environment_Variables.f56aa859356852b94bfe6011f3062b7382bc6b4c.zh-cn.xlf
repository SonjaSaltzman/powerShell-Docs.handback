<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0de76a71f2480fc8dc8a42a89f0793659bd1b32f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Environment_Variables.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9bcc1bb8e8837210d6a023dad34d490dbf406f7f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cd3261c98a26b5673f496a1fa3ec35c6c022a6a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Environment_Variables</source>
          <target state="translated">about_Environment_Variables</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Environment Variables</source>
          <target state="translated">有关环境变量</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Environment_Variables</source>
          <target state="translated">about_Environment_Variables</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Environment_Variables</source>
          <target state="translated">about_Environment_Variables</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">简短说明</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes how to access Windows environment variables in Windows PowerShell.</source>
          <target state="translated">描述如何在 Windows PowerShell 中的 Windows 环境变量的访问。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">详细说明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Environment variables store information about the operating system environment.</source>
          <target state="translated">环境变量将存储操作系统环境有关的信息。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This information includes details such as the operating system path, the number of processors used by the operating system, and the location of temporary folders.</source>
          <target state="translated">此信息包括详细信息，例如操作系统路径的操作系统和临时文件夹的位置使用的处理器数。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The environment variables store data that is used by the operating system and other programs.</source>
          <target state="translated">环境变量将存储操作系统和其他程序使用的数据。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, the WINDIR environment variable contains the location of the Windows installation directory.</source>
          <target state="translated">例如，WINDIR 环境变量包含 Windows 安装目录的位置。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Programs can query the value of this variable to determine where Windows operating system files are located.</source>
          <target state="translated">程序可以查询此变量，以确定 Windows 操作系统文件的位置的值。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Windows PowerShell lets you view and change Windows environment variables, including the variables set in the registry, and those set for a particular session.</source>
          <target state="translated">Windows PowerShell 允许您查看和更改 Windows 环境变量，其中包括的注册表中设置的变量以及那些为特定的会话设置。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell environment provider simplifies this process by making it easy to view and change the environment variables.</source>
          <target state="translated">Windows PowerShell environment 提供程序通过轻松地查看和更改环境变量简化了此过程。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Unlike other types of variables in Windows PowerShell, environment variables and their values are inherited by child sessions, such as local background jobs and the sessions in which module members run.</source>
          <target state="translated">与其他类型的 Windows PowerShell 中的变量，环境变量和它们的值继承子会话，例如本地后台作业和模块成员在其中运行的会话。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This makes environment variables well suited to storing values that are needed in both parent and child sessions.</source>
          <target state="translated">这样，适用于存储在父级和子级的会话中所需的值的环境变量。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Windows PowerShell Environment Provider The Windows PowerShell environment provider lets you access Windows environment variables in Windows PowerShell in a Windows PowerShell drive (the Env: drive).</source>
          <target state="translated">Windows PowerShell 环境提供程序的 Windows PowerShell environment 提供程序允许您在 Windows PowerShell 驱动器中的 Windows PowerShell 中的 Windows 环境变量的访问 (Env︰ 驱动器)。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This drive looks much like a file system drive.</source>
          <target state="translated">此驱动器非常类似于文件系统驱动器中。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To go to the Env: drive, type:</source>
          <target state="translated">若要转到 Env︰ 驱动器中，键入︰</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Set-Location Env:</source>
          <target state="translated">Set-location Env:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Then, to display the contents of the Env: drive, type:</source>
          <target state="translated">然后，若要显示的内容 Env︰ 驱动器中，键入︰</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Get-ChildItem</source>
          <target state="translated">Get-ChildItem</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can view the environment variables in the Env: drive from any other Windows PowerShell drive, and you can go into the Env: drive to view and change the environment variables.</source>
          <target state="translated">您可以查看环境变量在 Env︰ 驱动器从任何其他 Windows PowerShell 驱动器，并且您可以进入 Env︰ 驱动器，以查看和更改环境变量。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Environment Variable Objects In Windows PowerShell, each environment variable is represented by an object that is an instance of the System.Collections.DictionaryEntry class.</source>
          <target state="translated">由是 System.Collections.DictionaryEntry 类的实例的对象表示环境变量的对象在 Windows PowerShell 中，每个环境变量。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In each DictionaryEntry object, the name of the environment variable is the dictionary key.</source>
          <target state="translated">在每个 DictionaryEntry 对象，该环境变量的名称是字典的键。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The value of the variable is the dictionary value.</source>
          <target state="translated">该变量的值是字典的值。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To display an environment variable in Windows PowerShell, get an object that represents the variable, and then display the values of the object properties.</source>
          <target state="translated">若要在 Windows PowerShell 中显示环境变量，获取一个对象，表示该变量，，然后显示对象属性的值。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When you change an environment variable in Windows PowerShell, use the methods that are associated with the DictionaryEntry object.</source>
          <target state="translated">更改 Windows PowerShell 中的环境变量时，使用与 DictionaryEntry 对象相关联的方法。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To display the properties and methods of the object that represents an environment variable in Windows PowerShell, use the Get-Member cmdlet.</source>
          <target state="translated">若要显示的属性和方法的对象，表示 Windows PowerShell 中的环境变量，请使用 Get-member cmdlet。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, to display the methods and properties of all the objects in the Env: drive, type:</source>
          <target state="translated">例如，若要显示的方法和属性的所有对象在 Env︰ 驱动器中，键入︰</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Get-Item -Path Env:* | Get-Member</source>
          <target state="translated">Get-item-路径 Env: * |获取成员</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Displaying Environment Variables You can use the cmdlets that contain the Item noun (the Item cmdlets) to display and change the values of environment variables.</source>
          <target state="translated">显示环境变量您可以使用包含 Item 名词 (Item cmdlet) 的 cmdlet 可显示和更改环境变量的值。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Because environment variables do not have child items, the output of Get-Item and Get-ChildItem is the same.</source>
          <target state="translated">因为环境变量没有子项，Get-item 和 Get-childitem 的输出是相同的。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When you refer to an environment variable, type the Env: drive name followed by the name of the variable.</source>
          <target state="translated">当引用环境变量时，键入 Env︰ 驱动器名称后跟变量的名称。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, to display the value of the COMPUTERNAME environment variable, type:</source>
          <target state="translated">例如，若要显示的计算机名称环境变量的值，请键入︰</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Get-Childitem Env:Computername</source>
          <target state="translated">Get-childitem Env:Computername</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To display the values of all the environment variables, type:</source>
          <target state="translated">若要显示的所有环境变量值，请键入︰</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Get-ChildItem Env:</source>
          <target state="translated">Get-childitem Env:</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>By default, Windows PowerShell displays the environment variables in the order in which it retrieves them.</source>
          <target state="translated">默认情况下，Windows PowerShell 在其中检索它们的顺序显示环境变量。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To sort the list of environment variables by variable name, pipe the output of a Get-ChildItem command to the Sort-Object cmdlet.</source>
          <target state="translated">若要按变量名称的环境变量列表进行排序，通过管道传递给 Sort-object cmdlet 的 Get-childitem 命令的输出。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For example, from any Windows PowerShell drive, type:</source>
          <target state="translated">例如，从任何 Windows PowerShell 驱动器，请键入︰</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Get-ChildItem Env: | Sort Name</source>
          <target state="translated">Get-childitem Env: |名称排序</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You can also go into the Env: drive by using the Set-Location cmdlet:</source>
          <target state="translated">您也可以转到 Env︰ 驱动器，方法是使用 Set-location cmdlet:</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Set-Location Env:</source>
          <target state="translated">Set-location Env:</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When you are in the Env: drive, you can omit the Env: drive name from the path.</source>
          <target state="translated">如果要在 Env︰ 驱动器中，则可以省略 Env︰ 驱动器路径中的名称。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, to display all the environment variables, type:</source>
          <target state="translated">例如，若要显示所有环境变量，请键入︰</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Get-ChildItem</source>
          <target state="translated">Get-ChildItem</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To display the value of the COMPUTERNAME variable from within the Env: drive, type:</source>
          <target state="translated">显示的值中的 COMPUTERNAME 变量中 Env︰ 驱动器中，键入︰</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Get-ChildItem ComputerName</source>
          <target state="translated">Get-childitem 计算机名</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can also display and change the values of environment variables without using a cmdlet by using the expression parser in Windows PowerShell.</source>
          <target state="translated">您还可以显示和使用 Windows PowerShell 中的表达式分析器使用 cmdlet 的情况下更改环境变量的值。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To display the value of an environment variable, use the following syntax:</source>
          <target state="translated">若要显示环境变量的值，请使用以下语法︰</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>$Env:&lt;variable-name&gt;</source>
          <target state="translated">$Env: &lt; 变量名称 &gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For example, to display the value of the WINDIR environment variable, type the following command at the Windows PowerShell command prompt:</source>
          <target state="translated">例如，若要显示 WINDIR 环境变量的值，下面的命令提示符处键入 Windows PowerShell 命令︰</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>$Env:windir</source>
          <target state="translated">$Env: windir</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In this syntax, the dollar sign ($) indicates a variable, and the drive name indicates an environment variable.</source>
          <target state="translated">在此语法中，美元符号 （$） 指示变量，并由该驱动器的名称指示环境变量。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Changing Environment Variables To make a persistent change to an environment variable, use System in Control Panel (Advanced tab or the Advanced System Settings item) to store the change in the registry.</source>
          <target state="translated">不断变化的环境变量对环境变量进行永久性更改，请使用系统控制面板 （高级选项卡或高级系统设置） 将更改存储在注册表中。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When you change environment variables in Windows PowerShell, the change affects only the current session.</source>
          <target state="translated">更改 Windows PowerShell 中的环境变量时，此更改将影响只对当前会话。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This behavior resembles the behavior of the Set command in Windows-based environments and the Setenv command in UNIX-based environments.</source>
          <target state="translated">此行为类似于基于 Windows 的环境中的 Set 命令和基于 UNIX 的环境中的 Setenv 命令的行为。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You must also have permission to change the values of the variables.</source>
          <target state="translated">您必须有权更改变量的值。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If you try to change a value without sufficient permission, the command fails, and Windows PowerShell displays an error.</source>
          <target state="translated">如果您尝试更改没有足够的权限的值，该命令失败，并且 Windows PowerShell 会显示一个错误。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can change the values of variables without using a cmdlet by using the following syntax:</source>
          <target state="translated">使用以下语法使用 cmdlet 的情况下，可以更改变量的值︰</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>$Env:&lt;variable-name&gt; = "&lt;new-value&gt;"</source>
          <target state="translated">$Env: &lt; 变量名称 &gt; ="&lt; 新值 &gt;"</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For example, to append ";c:\temp" to the value of the Path environment variable, use the following syntax:</source>
          <target state="translated">例如，若要将追加"; c:\temp"为 Path 环境变量的值，请使用以下语法︰</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>$Env:path = $env:path + ";c:\temp"</source>
          <target state="translated">$Env︰ 路径 = $env︰ 路径 +"; c:\temp"</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You can also use the Item cmdlets, such as Set-Item, Remove-Item, and Copy-Item to change the values of environment variables.</source>
          <target state="translated">您还可以使用 Item cmdlet，如 Set-item，删除项和复制项来更改环境变量的值。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For example, to use the Set-Item cmdlet to append ";c:\temp" to the value of the Path environment variable, use the following syntax:</source>
          <target state="translated">例如，若要使用 Set-item cmdlet 追加"; c:\temp"为 Path 环境变量的值，请使用以下语法︰</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Set-Item -Path Env:Path -Value ($Env:Path + ";C:\Temp")</source>
          <target state="translated">Set-item-路径 Env:Path-值 ($Env︰ 路径 +";C:\Temp")</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>In this command, the value is enclosed in parentheses so that it is interpreted as a unit.</source>
          <target state="translated">在此命令中，则该值被括在括号中，以便它被解释为一个单元。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Saving Changes to Environment Variables To create or change the value of an environment variable in every Windows PowerShell session, add the change to your Windows PowerShell profile.</source>
          <target state="translated">保存到环境变量复制到的更改创建或更改环境变量的值在每个 Windows PowerShell 会话中，将更改添加到 Windows PowerShell 配置文件。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example, to add the C:\Temp directory to the Path environment variable in every Windows PowerShell session, add the following command to your Windows PowerShell profile.</source>
          <target state="translated">例如，若要将 C:\Temp 目录添加到 Path 环境变量中的每个 Windows PowerShell 会话，将以下命令添加到 Windows PowerShell 配置文件。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>$Env:Path = $Env:Path + ";C:\Temp"</source>
          <target state="translated">$Env︰ 路径 = $Env︰ 路径 +";C:\Temp"</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To add the command to an existing profile, such as the CurrentUser,AllHosts profile, type:</source>
          <target state="translated">若要将命令添加到现有配置文件，例如 CurrentUser AllHosts 配置文件中，键入︰</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Add-Content -Path $Profile.CurrentUserAllHosts -Value '$Env:Path = $Env:Path + ";C:\Temp"'</source>
          <target state="translated">添加内容的路径 $Profile.CurrentUserAllHosts-值 $Env︰ 路径 = $Env︰ 路径 +";C:\Temp"</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Environment Variables That Store Preferences Windows PowerShell features can use environment variables to store user preferences.</source>
          <target state="translated">环境变量，存储首选项 Windows PowerShell 功能可以使用环境变量来存储用户首选项。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>These variables work like preference variables, but they are inherited by child sessions of the sessions in which they are created.</source>
          <target state="translated">这些变量的工作方式类似首选项变量，但它们由创建它们的会话的子会话继承。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For more information about preference variables, see about_preference_variables.</source>
          <target state="translated">有关首选项变量的详细信息，请参阅 about_preference_variables。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The environment variables that store preferences include:</source>
          <target state="translated">存储首选项的环境变量包括︰</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>PSExecutionPolicyPreference Stores the execution policy set for the current session.</source>
          <target state="translated">PSExecutionPolicyPreference 存储执行策略设置为当前会话中。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This environment variable exists only when you set an execution policy for a single session.</source>
          <target state="translated">只有在单个会话设置执行策略时，此环境变量存在。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>You can do this in two different ways.</source>
          <target state="translated">可以通过两种方式来执行此操作。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>-- Use PowerShell.exe to start a session at the command line and use its ExecutionPolicy parameter to set the execution policy for the session.</source>
          <target state="translated">--使用 PowerShell.exe 来启动命令行中的会话并使用其 ExecutionPolicy 参数来为会话设置执行策略。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>-- Use the Set-ExecutionPolicy cmdlet.</source>
          <target state="translated">--使用 Set-executionpolicy cmdlet。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Use the Scope parameter with a value of "Process".</source>
          <target state="translated">使用作用域参数值为"进程"。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For more information, see about_Execution_Policies.</source>
          <target state="translated">有关详细信息，请参阅 about_Execution_Policies。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>PSModulePath Stores the paths to the default module directories.</source>
          <target state="translated">PSModulePath 存储到默认模块目录的路径。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Windows PowerShell looks for modules in the specified directories when you do not specify a full path to a module.</source>
          <target state="translated">Windows PowerShell 查找指定的目录中的模块时不指定模块的完整路径。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The default value of $Env:PSModulePath is:</source>
          <target state="translated">默认值为 $Env: PSModulePath 是︰</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>$home\Documents\WindowsPowerShell\Modules; $pshome\Modules</source>
          <target state="translated">$ home\Documents\WindowsPowerShell\Modules;$ pshome\Modules</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Windows PowerShell sets the value of "$pshome\Modules" in the registry.</source>
          <target state="translated">Windows PowerShell 在注册表中设置的"$pshome\Modules"的值。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>It sets the value of "$home\Documents\WindowsPowerShell\Modules" each time you start Windows PowerShell.</source>
          <target state="translated">它每次启动 Windows PowerShell 时设置的"$home\Documents\WindowsPowerShell\Modules"的值。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>In addition, setup programs that install modules in other directories, such as the Program Files directory, can append their locations to the value of PSModulePath.</source>
          <target state="translated">此外，在其他目录，如 Program Files 目录中安装模块的安装程序可以将它们的位置附加到 PSModulePath 的值。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To change the default module directories for the current session, use the following command format to change the value of the PSModulePath environment variable.</source>
          <target state="translated">若要更改当前会话的默认模块目录，请使用以下命令格式更改 PSModulePath 环境变量的值。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For example, to add the "C:\Program Files\Fabrikam\Modules" directory to the value of the PSModulePath environment variable, type:</source>
          <target state="translated">例如，若要添加到 PSModulePath 环境变量的值"C:\Program Files\Fabrikam\Modules"目录，键入︰</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>$Env:PSModulePath = $Env:PSModulePath + ";C:\Program Files\Fabrikam\Modules"</source>
          <target state="translated">$Env: PSModulePath = $Env: PSModulePath +";C:\Program Files\Fabrikam\Modules"</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The semi-colon (;) in the command separates the new path from the path that precedes it in the list.</source>
          <target state="translated">命令中的分号 (;) 用于分隔列表中的新路径和新路径之前的路径。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>To change the value of PSModulePath in every session, add the previous command to your Windows PowerShell profile or use the SetEnvironmentVariable method of the Environment class.</source>
          <target state="translated">若要在每个会话中更改 PSModulePath 的值，将前一个命令添加到 Windows PowerShell 配置文件，或使用环境类的 SetEnvironmentVariable 方法。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The following command uses the GetEnvironmentVariable method to get the machine setting of PSModulePath and the SetEnvironmentVariable method to add the C:\Program Files\Fabrikam\Modules path to the value.</source>
          <target state="translated">下面的命令使用 GetEnvironmentVariable 方法获取 PSModulePath 和 SetEnvironmentVariable 方法以将 C:\Program Files\Fabrikam\Modules 路径添加到的值的计算机设置。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>$path = [System.Environment]::GetEnvironmentVariable("PSModulePath", "Machine") [System.Environment]::SetEnvironmentVariable("PSModulePath", $path + ` ";C:\Program Files\Fabrikam\Modules", "Machine")</source>
          <target state="translated">$path = [System.Environment]::GetEnvironmentVariable ("PSModulePath"，"计算机") [System.Environment]::SetEnvironmentVariable ("PSModulePath"，$path +";C:\Program Files\Fabrikam\Modules"，"计算机")</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To add a path to the user setting, change the target value to User.</source>
          <target state="translated">将路径添加到用户设置，请将目标值更改为用户。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>$path = [System.Environment]::GetEnvironmentVariable("PSModulePath", "User") [System.Environment]::SetEnvironmentVariable("PSModulePath", $path + ` ";$home\Documents\Fabrikam\Modules", "User")</source>
          <target state="translated">$path = [System.Environment]::GetEnvironmentVariable （"PSModulePath"、"用户"） [System.Environment]::SetEnvironmentVariable ("PSModulePath"，$path +"; $home\Documents\Fabrikam\Modules"，"用户")</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For more information about the methods of the System.Environment class, see "Environment Methods" in MSDN at http://go.microsoft.com/fwlink/?LinkId=242783.</source>
          <target state="translated">System.Environment 类的方法的详细信息，请参阅在 http://go.microsoft.com/fwlink/?LinkId=242783 的 MSDN 中的"环境方法"。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>You can add also add a command that changes the value to your profile or use System in Control Panel to change the value of the PSModulePath environment variable in the registry.</source>
          <target state="translated">您可以添加还添加的值更改为您的配置文件的命令或使用控制面板中的系统若要更改注册表中的 PSModulePath 环境变量的值。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For more information, see about_Modules.</source>
          <target state="translated">有关详细信息，请参阅 about_Modules。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Environment (provider) about_Modules</source>
          <target state="translated">环境 （提供程序） about_Modules</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>