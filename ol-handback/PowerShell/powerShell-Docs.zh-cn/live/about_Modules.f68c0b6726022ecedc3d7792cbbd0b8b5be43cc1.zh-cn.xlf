<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6859da195a06a136a10703b5b1a81069cfbffe34</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Modules.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fc42907ddbacfe86005507d1034495ed40c5430d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9126be4df788fc8d45d6a96d585cd1094154506</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Modules</source>
          <target state="translated">有关模块</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">简短说明</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Explains how to install, import, and use Windows PowerShell modules.</source>
          <target state="translated">介绍如何安装、导入和使用 Windows PowerShell 模块。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">详细说明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A module is a package that contains Windows PowerShell commands, such as cmdlets, providers, functions, workflows, variables, and aliases.</source>
          <target state="translated">模块是包含 Windows PowerShell 命令（例如 cmdlet、提供程序、函数、工作流、变量和别名）的程序包。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>People who write commands can use modules to organize their commands and share them with others.</source>
          <target state="translated">编写命令的人可以使用模块来组织其命令并与他人共享。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>People who receive modules can add the commands in the modules to their Windows PowerShell sessions and use them just like the built-in commands.</source>
          <target state="translated">接收模块的人可以将模块中的命令添加到其 Windows PowerShell 会话，并像使用内置命令一样使用它们。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This topic explains how to use Windows PowerShell modules.</source>
          <target state="translated">本主题介绍了如何使用 Windows PowerShell 模块。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For information about how to write Windows PowerShell modules, see "Writing a Windows PowerShell Module" in the MSDN (Microsoft Developer Network) library at http://go.microsoft.com/fwlink/?LinkId=144916.</source>
          <target state="translated">有关如何编写 Windows PowerShell 模块的信息，请参阅 MSDN (Microsoft Developer Network) 库中的“编写 Windows PowerShell 模块”，网址为 http://go.microsoft.com/fwlink/?LinkId=144916。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>WHAT IS A MODULE?</source>
          <target state="translated">什么是模块？</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A module is a package of commands.</source>
          <target state="translated">模块是一个命令包。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>All cmdlets and providers in your session are added by a module or a snap-in.</source>
          <target state="translated">所有 cmdlet 和提供程序在您的会话都添加模块或管理单元。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>WHAT'S NEW IN MODULES: Module Auto-Loading Beginning in Windows PowerShell 3.0, Windows PowerShell imports modules automatically the first time that you run any command in an installed module.</source>
          <target state="translated">什么是新 IN 模块︰ 在 Windows PowerShell 3.0 中，Windows PowerShell 模块自动加载开始自动导入模块已安装模块中运行任何命令的第一个时间。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can now use the commands in a module without any set-up or profile configuration, so there's no need to manage modules after you install them on your computer.</source>
          <target state="translated">现在，你可以在没有任何设置或配置文件配置的情况下使用模块中的命令，因此在计算机上安装模块后，无需再对其进行管理。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The commands in a module are also easier to find.</source>
          <target state="translated">模块中的命令也更易于查找。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The Get-Command cmdlet now gets all commands in all installed modules, even if they are not yet in the session, so you can find a command and use it without importing.</source>
          <target state="translated">Get-Command cmdlet 现在获取所有已安装的模块中的所有命令，即使它们尚未存在于会话中也是如此，以便你可以找到某个命令并在不导入的情况下使用它。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Any of the following commands will import a module into your session.</source>
          <target state="translated">以下任何命令都会将模块导入到你的会话中。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Run the command</source>
          <target state="translated">运行命令</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Get-Mailbox –Identity Chris</source>
          <target state="translated">Get-Mailbox –Identity Chris</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Get the command</source>
          <target state="translated">Get 命令</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Get-Command Get-Mailbox</source>
          <target state="translated">Get-Command Get-Mailbox</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Get help for the command</source>
          <target state="translated">获取有关该命令的帮助</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Get-Help Get-Mailbox</source>
          <target state="translated">Get-Help Get-Mailbox</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Get-Command commands that include a wildcard character (*) are considered to be for discovery, not use, and do not import any modules.</source>
          <target state="translated">包含通配符 （*） 的 Get-command 命令视为可进行发现，未使用，并不导入任何模块。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Only modules that are stored in the location specified by the PSModulePath environment variable are automatically imported.</source>
          <target state="translated">存储在由 PSModulePath 环境变量指定的位置的唯一模块将自动导入。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Modules in other locations must be imported by running the Import-Module cmdlet.</source>
          <target state="translated">必须通过运行 Import-module cmdlet 导入到其他位置中的模块。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Also, commands that use Windows PowerShell providers do not automatically import a module.</source>
          <target state="translated">此外，使用 Windows PowerShell 提供程序的命令不会自动导入模块。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For example, if you use a command that requires the WSMan: drive, such as the Get-PSSessionConfiguration cmdlet, you might need to run the Import-Module cmdlet to import the Microsoft.WSMan.Management module that includes the WSMan: drive.</source>
          <target state="translated">例如，如果你使用命令需要 WSMan︰ 驱动器中，如 Get-pssessionconfiguration cmdlet，可能需要运行 Import-module cmdlet 导入 Microsoft.WSMan.Management 模块包含 WSMan︰ 驱动器。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can still run the Import-Module command to import a module and use the $PSModuleAutoloadingPreference variable to enable, disable and configure automatic importing of modules.</source>
          <target state="translated">您仍然可以运行 Import-module 命令导入模块，并使用 $PSModuleAutoloadingPreference 变量来启用、 禁用和配置模块的自动导入。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information, see about_Preference_Variables.</source>
          <target state="translated">有关详细信息，请参阅 about_Preference_Variables。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>HOW TO USE A MODULE</source>
          <target state="translated">如何使用模块</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To use a module, perform the following tasks:</source>
          <target state="translated">若要使用模块，请执行以下任务：</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Install the module.</source>
          <target state="translated">安装模块。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>(This is often done for you.)</source>
          <target state="translated">（通常已为你完成这一步。）</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Find the commands that the module added.</source>
          <target state="translated">找到模块所添加的命令。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Use the commands that the module added.</source>
          <target state="translated">使用模块所添加的命令。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This topic explains how to perform these tasks.</source>
          <target state="translated">本主题介绍了如何执行这些任务。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>It also includes other useful information about managing modules.</source>
          <target state="translated">它还包括有关管理模块的其他有用信息。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>HOW TO INSTALL A MODULE</source>
          <target state="translated">如何安装模块</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you receive a module as a folder with files in it, you need to install it on your computer before you can use it in Windows PowerShell.</source>
          <target state="translated">如果收到一个模块为文件夹中它的文件，需要在 Windows PowerShell 中使用它之前在计算机上安装。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Most modules are installed for you.</source>
          <target state="translated">已为你安装好大多数模块。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Windows PowerShell comes with several preinstalled modules, sometimes called the "core" modules.</source>
          <target state="translated">Windows PowerShell 附带几个预安装的模块，有时称为"核心"模块。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>On Windows-based computers, if features that are included with the operating system have cmdlets to manage them, those modules are preinstalled.</source>
          <target state="translated">基于 Windows 的计算机上，如果与操作系统中的功能有 cmdlet 进行管理，这些模块预先安装。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When you install a Windows feature, by using, for example, the Add Roles and Features Wizard in Server Manager, or the Turn Windows features on or off dialog box in Control Panel, any Windows PowerShell modules that are part of the feature are installed.</source>
          <target state="translated">当通过使用，例如，添加角色和功能向导在服务器管理器中或关闭 Windows 功能打开或关闭对话框中，在控制面板中安装 Windows 功能，请安装任何 Windows PowerShell 模块的功能的一部分。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Many other modules come in an installer or Setup program that installs the module.</source>
          <target state="translated">许多其他模块随附在用于安装模块的安装程序中。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To install a module folder:</source>
          <target state="translated">若要安装模块文件夹，请执行以下操作：</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Create a Modules directory for the current user if one does not exist.</source>
          <target state="translated">为当前用户创建 Modules 目录（如果不存在）。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To create a Modules directory, type:</source>
          <target state="translated">若要创建 Modules 目录，请键入：</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>New-Item -Type Directory -Path $home\Documents\WindowsPowerShell\Modules</source>
          <target state="translated">New-Item -Type Directory -Path $home\Documents\WindowsPowerShell\Modules</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Copy the entire module folder into the Modules directory.</source>
          <target state="translated">将整个模块文件夹复制到 Modules 目录中。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You can use any method to copy the folder, including Windows Explorer and Cmd.exe, as well as Windows PowerShell.</source>
          <target state="translated">可以使用任何方法复制文件夹，包括 Windows 资源管理器和 Cmd.exe，以及 Windows PowerShell。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell use the Copy-Item cmdlet.</source>
          <target state="translated">在 Windows PowerShell 中，使用 Copy-Item cmdlet。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example, to copy the MyModule folder from C:\ps-test\MyModule to the Modules directory, type:</source>
          <target state="translated">例如，若要将 MyModule 文件夹从 C:\ps-test\MyModule 复制到 Modules 目录中，请键入：</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Copy-Item -Path c:\ps-test\MyModule -Destination $home\Documents\WindowsPowerShell\Modules</source>
          <target state="translated">Copy-Item -Path c:\ps-test\MyModule -Destination $home\Documents\WindowsPowerShell\Modules</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You can install a module in any location, but installing your modules in a default module location makes them easier to manage.</source>
          <target state="translated">你可以在任何位置上安装模块，但在默认模块位置中安装模块可使其更易于管理。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For more information about the default module locations, see the "MODULE AND DSC RESOURCE LOCATIONS, AND PSMODULEPATH" section.</source>
          <target state="translated">有关默认模块位置的详细信息，请参阅"模块和 DSC 资源位置和 PSMODULEPATH"部分。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>HOW TO FIND INSTALLED MODULES</source>
          <target state="translated">如何查找已安装的模块</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To find modules that are installed in a default module location, but not yet imported into your session, type:</source>
          <target state="translated">若要查找已安装在默认模块位置中但尚未导入到会话中的模块，请键入：</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Get-Module -ListAvailable</source>
          <target state="translated">Get-Module -ListAvailable</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To find the modules that have already been imported into your session, at the Windows PowerShell prompt, type:</source>
          <target state="translated">若要查找已导入会话中的模块，请在 Windows PowerShell 提示符下键入：</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Get-Module</source>
          <target state="translated">Get-Module</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For more information about the Get-Module cmdlet, see Get-Module.</source>
          <target state="translated">有关 Get-Module cmdlet 的详细信息，请参阅 Get-Module。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>HOW TO FIND THE COMMANDS IN A MODULE</source>
          <target state="translated">如何查找模块中的命令</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Use the Get-Command cmdlet to find all available commands.</source>
          <target state="translated">使用 Get-Command cmdlet 查找所有可用的命令。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can use the parameters of the Get-Command cmdlet to filter commands such as by module, name, and noun.</source>
          <target state="translated">你可以使用 Get-Command cmdlet 的参数按模块、名称和名词等来筛选命令。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To find all commands in a module, type: Get-Command -Module &lt;module-name&gt;</source>
          <target state="translated">若要查找模块中的所有命令，请键入︰ Get-command-模块 &lt; 模块名称 &gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example, to find the commands in the BitsTransfer module, type: Get-Command -Module BitsTransfer</source>
          <target state="translated">例如，若要查找 BitsTransfer 模块中的命令，请键入︰ Get-command-模块 BitsTransfer</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For more information about the Get-Command cmdlet, see Get-Command.</source>
          <target state="translated">有关 Get-Command cmdlet 的详细信息，请参阅 Get-Command。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>HOW TO GET HELP FOR THE COMMANDS IN A MODULE</source>
          <target state="translated">如何获取有关模块中的命令的帮助</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If the module contains Help files for the commands that it exports, the Get-Help cmdlet will display the Help topics.</source>
          <target state="translated">如果模块包含它所导出的命令的帮助文件，则 Get-Help cmdlet 将显示帮助主题。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Use the same Get-Help command format that you would use to get help for any command in Windows PowerShell.</source>
          <target state="translated">使用与你在 Windows PowerShell 中用于获取任何命令的帮助的 Get-Help 命令格式相同的格式。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can download Help files for a module and download updates to the Help files so they are never obsolete.</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，你可以下载有关模块的帮助文件和这些帮助文件的更新，以便它们永不过时。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To get help for a commands in a module, type:</source>
          <target state="translated">若要获取有关模块中的命令的帮助，请键入：</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Get-Help &lt;command-name&gt;</source>
          <target state="translated">Get-help &lt; 命令名称 &gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To get help online for command in a module, type: Get-Help &lt;command-name&gt; -Online</source>
          <target state="translated">若要获得在模块中的命令的联机帮助，请键入︰ Get-help &lt; 命令-名称 &gt;-联机</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>To download and install the help files for the commands in a module, type: Update-Help –Module &lt;module-name&gt;</source>
          <target state="translated">若要下载并安装在模块中的命令的帮助文件，请键入︰ Update-help – 模块 &lt; 模块名称 &gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For more information, see Get-Help and Update-Help.</source>
          <target state="translated">有关详细信息，请参阅 Get-help 和 Update-help。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>HOW TO IMPORT A MODULE</source>
          <target state="translated">如何导入模块</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You might have to import a module or import a module file.</source>
          <target state="translated">你可能需要导入模块或导入模块文件。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Importing is required when a module is not installed in the locations specified by the PSModulePath environment variable ($env:PSModulePath), or the module consists of file, such as a .dll or .psm1 file, instead of typical module that is delivered as a folder.</source>
          <target state="translated">在以下情况下导入是必需的：模块未安装在由 PSModulePath 环境变量 ($env:PSModulePath) 指定的位置中，或该模块由文件（例如 .dll 或 .psm1 文件）而不是以文件夹形式传递的典型模块组成。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>You might also choose to import a module so that you can use the parameters of the Import-Module command, such as the Prefix parameter, which adds a distinctive prefix to the noun names of all imported commands, or the NoClobber parameter, which prevents the module from adding commands that would hide or replace existing commands in the session.</source>
          <target state="translated">你还可以选择导入模块，以便可以使用 Import-Module 命令的参数，例如 Prefix 参数（可向所有已导入命令的名词名称添加独特的前缀）或 NoClobber 参数（可防止模块添加会隐藏或替换会话中的现有命令的命令）。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To import modules, use the Import-Module cmdlet.</source>
          <target state="translated">若要导入模块，使用 Import-Module cmdlet。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>To import modules in a PSModulePath location into the current session, use the following command format.</source>
          <target state="translated">若要将 PSModulePath 位置中的模块导入到当前会话中，请使用以下命令格式。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Import-Module &lt;module-name&gt;</source>
          <target state="translated">导入模块 &lt; 模块名称 &gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For example, the following command imports the BitsTransfer module into the current session.</source>
          <target state="translated">例如，以下命令将 BitsTransfer 模块导入当前会话。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Import-Module BitsTransfer</source>
          <target state="translated">导入模块 BitsTransfer</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>To import a module that is not in a default module location, use the fully qualified path to the module folder in the command.</source>
          <target state="translated">若要导入不在默认模块位置中的模块，请使用指向命令中的模块文件夹的完全限定的路径。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For example, to add the TestCmdlets module in the C:\ps-test directory to your session, type:</source>
          <target state="translated">例如，若要将 C:\ps-test 目录中的 TestCmdlets 模块添加到你的会话中，请键入：</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Import-Module c:\ps-test\TestCmdlets</source>
          <target state="translated">Import-Module c:\ps-test\TestCmdlets</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>To import a module file that is not contained in a module folder, use the fully qualified path to the module file in the command.</source>
          <target state="translated">若要导入未包含在模块文件夹中的模块文件，请使用指向命令中的模块文件的完全限定的路径。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For example, to add the TestCmdlets.dll module in the C:\ps-test directory to your session, type:</source>
          <target state="translated">例如，若要将 C:\ps-test 目录中的 TestCmdlets.dll 模块添加到你的会话中，请键入：</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Import-Module c:\ps-test\TestCmdlets.dll</source>
          <target state="translated">Import-Module c:\ps-test\TestCmdlets.dll</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For more information about adding modules to your session, see Import-Module.</source>
          <target state="translated">有关向会话添加模块的详细信息，请参阅 Import-Module。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>HOW TO IMPORT A MODULE INTO EVERY SESSION</source>
          <target state="translated">如何将模块导入到每个会话中</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The Import-Module command imports modules into your current Windows PowerShell session.</source>
          <target state="translated">Import-Module 命令可将模块导入到当前的 Windows PowerShell 会话中。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This command affects only the current session.</source>
          <target state="translated">此命令仅影响当前会话。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>To import a module into every Windows PowerShell session that you start, add the Import-Module command to your Windows PowerShell profile.</source>
          <target state="translated">若要将模块导入到你所启动的每个 Windows PowerShell 会话中，请将 Import-Module 命令添加到你的 Windows PowerShell 配置文件。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For more information about profiles, see about_Profiles.</source>
          <target state="translated">有关配置文件的详细信息，请参阅 about_Profiles。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>HOW TO REMOVE A MODULE</source>
          <target state="translated">如何删除模块</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>When you remove a module, the commands that the module added are deleted from the session.</source>
          <target state="translated">当你删除模块时，该模块所添加的命令将从会话中删除。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>To remove a module from your session, use the following command format.</source>
          <target state="translated">若要从会话中删除一个模块，请使用以下命令格式。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>remove-module &lt;module-name&gt;</source>
          <target state="translated">删除模块 &lt; 模块名称 &gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For example, the following command removes the BitsTransfer module from the current session.</source>
          <target state="translated">例如，以下命令从当前会话中删除 BitsTransfer 模块。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>remove-module BitsTransfer</source>
          <target state="translated">删除模块 BitsTransfer</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Removing a module reverses the operation of importing a module.</source>
          <target state="translated">删除模块与导入模块的操作相反。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Removing a module does not uninstall the module.</source>
          <target state="translated">删除模块不会卸载该模块。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>For more information about the Remove-Module cmdlet, see Remove-Module.</source>
          <target state="translated">有关 Remove-Module cmdlet 的详细信息，请参阅 Remove-Module。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>MODULE AND DSC RESOURCE LOCATIONS, AND PSMODULEPATH</source>
          <target state="translated">模块和 DSC 资源位置和 PSMODULEPATH</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The following are default locations for Windows PowerShell modules.</source>
          <target state="translated">以下是为 Windows PowerShell 模块的默认位置。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 4.0, with the introduction of DSC, a new default module and DSC resource folder was introduced.</source>
          <target state="translated">引入了在 Windows PowerShell 4.0 中，从开始引入 DSC，新的默认模块和 DSC 资源文件夹。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For more information about DSC, see about_DesiredStateConfiguration.</source>
          <target state="translated">有关 DSC 的详细信息，请参阅 about_DesiredStateConfiguration。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>System:        $pshome\Modules (%windir%\System32\WindowsPowerShell\v1.0\Modules) System modules are those that ship with Windows and Windows PowerShell.</source>
          <target state="translated">System: $pshome\Modules (%windir%\system32\windowspowershell\v1.0\modules) 系统模块是指那些随 Windows 和 Windows PowerShell。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Starting in Windows Powershell 4.0, when Windows PowerShell Desired State Configuration (DSC) was introduced, DSC resources that are included with Windows PowerShell are also stored in $pshome\Modules, in the $pshome\Modules\PSDesiredStateConfiguration\DSCResources folder.</source>
          <target state="translated">在 Windows Powershell 4.0 中，从开始，引入 Windows PowerShell Desired State Configuration (DSC) 时，包含使用 Windows PowerShell 的 DSC 资源也存储在 $pshome\Modules，$pshome\Modules\PSDesiredStateConfiguration\DSCResources 文件夹中。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Current user:  $home\Documents\WindowsPowerShell\Modules (%UserProfile%\Documents\WindowsPowerShell\Modules)</source>
          <target state="translated">当前用户: $home\Documents\WindowsPowerShell\Modules （%userprofile%\documents\windowspowershell\modules)</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>or -</source>
          <target state="translated">或-</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>$home\My Documents\WindowsPowerShell\Modules (%UserProfile%\My Documents\WindowsPowerShell\Modules) This is the location for user-added modules prior to Windows PowerShell 4.0.</source>
          <target state="translated">$home\My Documents\WindowsPowerShell\Modules (%UserProfile%\My Documents\WindowsPowerShell\Modules) 这是将用户添加模块在 Windows PowerShell 4.0 之前的位置。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 4.0 and later releases of Windows PowerShell, user-added modules and DSC resources are stored in C:\Program Files\WindowsPowerShell\Modules.</source>
          <target state="translated">在 Windows PowerShell 4.0 和更高版本的 Windows PowerShell 中，将用户添加模块和 DSC 资源存储在 C:\Program Files\WindowsPowerShell\Modules。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Modules and DSC resources in this location are accessible by all users of the computer.</source>
          <target state="translated">模块和在此位置的 DSC 资源是可由计算机的所有用户访问。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This change was required because the DSC engine runs as local system, and could not access user-specific paths, such as $home\Documents\WindowsPowerShell\Modules.</source>
          <target state="translated">此更改是必需的因为 DSC 引擎作为本地系统运行，并且无法访问特定于用户的路径，例如 $home\Documents\WindowsPowerShell\Modules。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Starting in Windows PowerShell 5.0, with the addition of the PowerShellGet module, and the PowerShell Gallery of community- and Microsoft-created resources (https://www.powershellgallery.com), the Install-Module command installs modules and DSC resources to C:\Program Files\WindowsPowerShell\Modules by default.</source>
          <target state="translated">使用 PowerShellGet 模块中，添加和 PowerShell 库的社区和 Microsoft 创建的资源 (https://www.powershellgallery.com) 启动 Windows PowerShell 5.0 中的安装模块命令将安装模块和 DSC 资源到 C:\Program Files\WindowsPowerShell\Modules 默认情况下。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Note: To add or change files in the %Windir%\System32 directory, start Windows PowerShell with the "Run as administrator" option.</source>
          <target state="translated">注意︰ 若要添加或更改 %Windir%\System32 目录中的文件，使用"以管理员身份运行"选项启动 Windows PowerShell。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>You can change the default module locations on your system by changing the value of the PSModulePath environment variable ($Env:PSModulePath).</source>
          <target state="translated">你可以通过更改 PSModulePath 环境变量 ($Env:PSModulePath) 的值来更改你的系统上的默认模块位置。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The PSModulePath environment variable is modeled on the Path environment variable and has the same format.</source>
          <target state="translated">PSModulePath 环境变量在 Path 环境变量的基础上进行建模，并且具有相同的格式。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>To view the default module locations, type: $env:psmodulepath</source>
          <target state="translated">若要查看默认模块位置，请键入︰ $env: psmodulepath</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>To add a default module location, use the following command format.</source>
          <target state="translated">若要添加默认模块位置，请使用以下命令格式。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>$env:psmodulepath = $env:psmodulepath + ";<ph id="ph1">&lt;path&gt;</ph>"</source>
          <target state="translated">$env:psmodulepath = $env:psmodulepath + ";<ph id="ph1">&lt;path&gt;</ph>"</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The semi-colon (;) in the command separates the new path from the path that precedes it in the list.</source>
          <target state="translated">命令中的分号 (;) 用于分隔列表中的新路径和新路径之前的路径。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>For example, to add the "C:\ps-test\Modules" directory, type: $env:psmodulepath + ";c:\ps-test\Modules"</source>
          <target state="translated">例如，若要添加"C:\ps-test\Modules"目录，键入︰ $env: psmodulepath +"; c:\ps-test\Modules"</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>When you add a path to PSModulePath, Get-Module and Import-Module commands include modules in that path.</source>
          <target state="translated">当将路径添加到 PSModulePath 时，Get-Module 和 Import-Module 命令将包括该路径中的模块。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The value that you set affects only the current session.</source>
          <target state="translated">你所设置的值仅影响当前会话。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>To make the change persistent, add the command to your Windows PowerShell profile or use System in Control Panel to change the value of the PSModulePath environment variable in the registry.</source>
          <target state="translated">若要让更改保持不变，请将命令添加到你的 Windows PowerShell 配置文件中，或使用“控制面板”中的“系统”来更改注册表中的 PSModulePath 环境变量的值。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Also, to make the change persistent, you can also use the SetEnvironmentVariable method of the System.Environment class to add a Path to the PSModulePath environment variable.</source>
          <target state="translated">此外，若要让更改保持不变，还可以使用 System.Environment 类的 SetEnvironmentVariable 方法来将路径添加到 PSModulePath 环境变量。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>For more information about the PSModulePath variable, see about_Environment_Variables.</source>
          <target state="translated">有关 PSModulePath 变量的详细信息，请参阅 about_Environment_Variables。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>MODULES AND NAME CONFLICTS</source>
          <target state="translated">模块和名称冲突</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Name conflicts occur when more than one command in the session has the same name.</source>
          <target state="translated">当会话中的多个命令具有相同的名称时，会发生名称冲突。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Importing a module causes a name conflict when commands in the module have the same names as commands or items in the session.</source>
          <target state="translated">当模块中的命令与会话中的命令或项具有相同名称时，导入模块将引起名称冲突。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Name conflicts can result in commands being hidden or replaced.</source>
          <target state="translated">名称冲突可能会导致命令被隐藏或替换。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>-- Hidden.</source>
          <target state="translated">-- Hidden。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A command is hidden when it is not the command that runs when you type the command name, but you can run it by using another method, such as by qualifying the command name with the name of the module or snap-in in which it originated.</source>
          <target state="translated">当某个命令不是键入命令名称后所运行的命令时，该命令将隐藏，但你可以使用另一种方法来运行它，例如通过使用模块名称或创建它的管理单元的名称来限定命令名称。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>-- Replaced.</source>
          <target state="translated">-- Replaced。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A command is replaced when you cannot run it because it has been overwritten by a command with the same name.</source>
          <target state="translated">当由于具有相同名称的命令已覆盖某个命令而无法运行该命令时，该命令即被替换。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Even when you remove the module that caused the conflict, you cannot run a replaced command unless you restart the session.</source>
          <target state="translated">即使删除导致冲突的模块，也无法运行替换的命令，除非重新启动该会话。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Import-Module might add commands that hide and replace commands in the current session.</source>
          <target state="translated">Import-Module 可以添加用于隐藏和替换当前会话中的命令的命令。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Also, commands in your session can hide commands that the module added.</source>
          <target state="translated">此外，你的会话中的命令可以隐藏模块所添加的命令。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>To detect name conflicts, use the All parameter of the Get-Command cmdlet.</source>
          <target state="translated">若要检测名称冲突，请使用 Get-Command cmdlet 的 All 参数。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, Get-Command gets only that commands that run when you type the command name.</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，Get-Command 仅获取键入命令名称时运行的命令。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The All parameter gets all commands with the specific name in the session.</source>
          <target state="translated">All 参数获取会话中具有特定名称的所有命令。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>To prevent name conflicts, use the NoClobber or Prefix parameters of the Import-Module cmdlet.</source>
          <target state="translated">若要防止名称冲突，请使用 Import-Module cmdlet 的 NoClobber 或 Prefix 参数。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The Prefix parameter adds a prefix to the names of imported commands so that they are unique in the session.</source>
          <target state="translated">Prefix 参数将前缀添加到已导入命令的名称，以便它们在会话中是唯一的。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The NoClobber parameter does not import any commands that would hide or replace existing commands in the session.</source>
          <target state="translated">NoClobber 参数不导入会隐藏或替换会话中的现有命令的任何命令。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>You can also use the Alias, Cmdlet, Function, and Variable parameters of Import-Module to select only the commands that you want to import, and you can exclude commands that cause name conflicts in your session.</source>
          <target state="translated">你还可以使用 Import-Module 的 Alias、Cmdlet、Function 和 Variable 参数来仅选择要导入的命令，并且可以排除在会话中引起名称冲突的命令。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Module authors can prevent name conflicts by using the DefaultCommandPrefix property of the module manifest to add a default prefix to all command names.</source>
          <target state="translated">模块作者可以通过使用模块清单的 DefaultCommandPrefix 属性来将默认前缀添加到所有命令名称，从而避免名称冲突。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The value of the Prefix parameter takes precedence over the value of DefaultCommandPrefix.</source>
          <target state="translated">Prefix 参数的值优先于 DefaultCommandPrefix 的值。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Even if a command is hidden, you can run it by qualifying the command name with the name of the module or snap-in in which it originated.</source>
          <target state="translated">即使命令处于隐藏状态，你也可以通过使用模块名称或创建该模块的管理单元名称来限定命令名称，从而运行该命令。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell command precedence rules determine which command runs when the session includes commands with the same name.</source>
          <target state="translated">Windows PowerShell 命令优先规则确定当会话中包括同名命令时，运行哪个命令。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>For example, when a session includes a function and a cmdlet with the same name, Windows PowerShell runs the function by default.</source>
          <target state="translated">例如，当会话中包含具有相同名称的一个函数和一个 cmdlet 时，Windows PowerShell 在默认情况下会运行该函数。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>When the session includes commands of the same type with the same name, such as two cmdlets with the same name, by default, it runs the most recently added command.</source>
          <target state="translated">当会话中包含同一类型的同名命令时（例如具有相同名称的两个 cmdlet），它将在默认情况下运行最新添加的命令。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>For more information, including an explanation of the precedence rules and instructions for running hidden commands, see about_Command_Precedence.</source>
          <target state="translated">有关详细信息，包括优先规则的说明和运行隐藏命令的说明，请参阅 about_Command_Precedence。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>MODULES AND SNAP-INS</source>
          <target state="translated">模块和管理单元</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>You can add commands to your session from modules and snap-ins.</source>
          <target state="translated">你可以从模块和管理单元中将命令添加到你的会话。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Modules can add all types of commands, including cmdlets, providers, and functions, and items, such as variables, aliases, and Windows PowerShell drives.</source>
          <target state="translated">模块可以添加所有类型的命令，其中包括 cmdlet、提供程序、函数和项（例如变量、别名和 Windows PowerShell 驱动器）。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Snap-ins can add only cmdlets and providers.</source>
          <target state="translated">管理单元只可以添加 cmdlet 和提供程序。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Before removing a module or snap-in from your session, use the following commands to determine which commands will be removed.</source>
          <target state="translated">在从会话中删除模块或管理单元之前，请使用以下命令来确定将删除哪些命令。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>To find the source of a cmdlet in your session, use the following command format:</source>
          <target state="translated">若要在会话中查找某个 cmdlet 的源，请使用以下命令格式︰</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>get-command &lt;cmdlet-name&gt; | format-list -property verb, noun, pssnapin, module</source>
          <target state="translated">get 命令 &lt; t e &gt; |格式列表的属性动词、 名词、 pssnapin 和模块</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>For example, to find the source of the Get-Date cmdlet, type:</source>
          <target state="translated">例如，若要查找 Get-date cmdlet 的源，请键入︰</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>get-command get-date | format-list -property verb, noun, pssnapin, module</source>
          <target state="translated">get 命令的 get-date |格式列表的属性动词、 名词、 pssnapin 和模块</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>For more information about Windows PowerShell snap-ins, see about_PSSnapins.</source>
          <target state="translated">有关 Windows PowerShell 管理单元的详细信息，请参阅 about_PSSnapins。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>MODULE-RELATED WARNINGS AND ERRORS</source>
          <target state="translated">与模块相关的警告和错误</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The commands that a module exports should follow the Windows PowerShell command naming rules.</source>
          <target state="translated">模块可导出的命令应遵循的 Windows PowerShell 命令命名规则。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>If the module that you import exports cmdlets or functions that have unapproved verbs in their names, the Import-Module cmdlet displays the following warning message.</source>
          <target state="translated">如果导入的模块导出名称中包含未经批准的谓词的 cmdlet 或函数，Import-Module cmdlet 将显示以下警告消息。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>WARNING: Some imported command names include unapproved verbs which might make them less discoverable.</source>
          <target state="translated">警告︰ 某些导入命令名称包含未经批准的谓词，这可能会使它们得难于发现。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Use the Verbose parameter for more detail or type Get-Verb to see the list of approved verbs.</source>
          <target state="translated">请使用 Verbose 参数获取详细信息或者键入 Get-Verb 以查看批准的谓词列表。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>This message is only a warning.</source>
          <target state="translated">此消息只是一个警告。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The complete module is still imported, including the non-conforming commands.</source>
          <target state="translated">仍将导入完整的模块，其中包括非一致性的命令。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Although the message is displayed to module users, the naming problem should be fixed by the module author.</source>
          <target state="translated">尽管会向模块用户显示消息，但是模块作者应修复命名问题。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>To suppress the warning message, use the DisableNameChecking parameter of the Import-Module cmdlet.</source>
          <target state="translated">若要禁止显示警告消息，请使用 Import-Module cmdlet 的 DisableNameChecking 参数。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>BUILT-IN MODULES AND SNAP-INS</source>
          <target state="translated">内置模块和管理单元</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 2.0 and in older-style host programs in Windows PowerShell 3.0 and later, the core commands that are installed with Windows PowerShell are packaged in snap-ins that are added automatically to every Windows PowerShell session.</source>
          <target state="translated">在 Windows PowerShell 2.0 和 Windows PowerShell 3.0 及更高版本的旧式主机程序中，随 Windows PowerShell 一起安装的核心命令已打包到管理单元中，这些管理单元将自动添加到每个 Windows PowerShell 会话中。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, in newer-style host programs -- those that implement the InitialSessionState.CreateDefault2 initial session state API -- the core commands are packaged in modules.</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，在新式主机程序（即可实现 InitialSessionState.CreateDefault2 初始会话状态 API 的主机程序）中，核心命令已打包到模块中。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The default is Microsoft.PowerShell.Core, which is always a snap-in.</source>
          <target state="translated">默认值为 Microsoft.PowerShell.Core，即始终管理单元。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The Microsoft.PowerShell.Core snap-in is added to every session by default.</source>
          <target state="translated">Microsoft.PowerShell.Core 管理单元中添加到每个会话默认情况下。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Modules are loaded automatically on first-use.</source>
          <target state="translated">首次使用时，模块会自动加载。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>NOTE: Remote sessions, including sessions that are started by using the New-PSSession cmdlet, are older-style sessions in which the built-in commands are packaged in snap-ins.</source>
          <target state="translated">注意︰ 远程会话，包括使用 New-pssession cmdlet 启动的会话是在其中的内置命令已打包到管理单元中的较旧样式会话。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The following modules (or snap-ins) are installed with Windows PowerShell.</source>
          <target state="translated">以下模块（或管理单元）已随 Windows PowerShell 一起安装。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Microsoft.PowerShell.Archive Microsoft.PowerShell.Core Microsoft.PowerShell.Diagnostics Microsoft.PowerShell.Host Microsoft.PowerShell.Management Microsoft.PowerShell.ODataUtils Microsoft.PowerShell.Security Microsoft.PowerShell.Utility Microsoft.WSMan.Management OneGet PowerShellGet PSDesiredStateConfiguration PSScheduledJob PSWorkflow PSWorkflowUtility</source>
          <target state="translated">Microsoft.PowerShell.Archive Microsoft.PowerShell.Core Microsoft.PowerShell.Diagnostics Microsoft.PowerShell.Host Microsoft.PowerShell.Management Microsoft.PowerShell.ODataUtils Microsoft.PowerShell.Security Microsoft.PowerShell.Utility Microsoft.WSMan.Management OneGet PowerShellGet PSDesiredStateConfiguration PSScheduledJob PSWorkflow PSWorkflowUtility</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>ISE</source>
          <target state="translated">ISE</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>LOGGING MODULE EVENTS</source>
          <target state="translated">日志记录模块事件</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can record execution events for the cmdlets and functions in Windows PowerShell modules and snap-ins by setting the LogPipelineExecutionDetails property of modules and snap-ins to $True.</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，你可以记录在 Windows PowerShell 模块和管理单元中的 cmdlet 和函数的执行事件，方法是将模块和管理单元的 LogPipelineExecutionDetails 属性设置为 $True。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>You can also use a Group Policy setting, Turn on Module Logging, to enable module logging in all Windows PowerShell sessions.</source>
          <target state="translated">你还可以使用组策略设置（打开模块日志记录）以启用所有 Windows PowerShell 会话中的模块日志记录。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>For more information, see about_EventLogs (http://go.microsoft.com/fwlink/?LinkID=113224) and about_Group_Policy_Settings (http://go.microsoft.com/fwlink/?LinkID=251696).</source>
          <target state="translated">有关详细信息，请参阅 about_EventLogs (http://go.microsoft.com/fwlink/?LinkID=113224) 和 about_Group_Policy_Settings (http://go.microsoft.com/fwlink/?LinkID=251696)。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>about_Command_Precedence about_DesiredStateConfiguration about_EventLogs about_Group_Policy_Settings about_PSSnapins Get-Command Get-Help Get-Module Import-Module Remove-Module</source>
          <target state="translated">about_Command_Precedence about_DesiredStateConfiguration about_EventLogs about_Group_Policy_Settings about_PSSnapins Get-command 获取帮助 Get 模块导入模块删除模块</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>