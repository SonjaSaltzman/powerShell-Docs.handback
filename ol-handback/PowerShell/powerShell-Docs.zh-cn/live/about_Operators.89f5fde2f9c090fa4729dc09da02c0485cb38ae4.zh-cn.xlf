<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c69074cedea45ee0adabaf4191800545dd97d56</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Operators.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">95d183fd094dfd11f3640bcadce882a14565d350</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">942fa66d552b36a6ea96231e745486e46d3c7789</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Operators</source>
          <target state="translated">about_Operators</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Operators</source>
          <target state="translated">关于运算符</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Operators</source>
          <target state="translated">about_Operators</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Operators</source>
          <target state="translated">about_Operators</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">简短说明</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes the operators that are supported by  Windows PowerShell�.</source>
          <target state="translated">描述由 Windows PowerShell 支持的运算符。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">详细说明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An operator is a language element that you can use in a command or expression.</source>
          <target state="translated">运算符是可以在命令或表达式中使用的语言元素。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports several types of operators to help you manipulate values.</source>
          <target state="translated">Windows PowerShell 支持几种类型的运算符，以帮助您操作的值。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Arithmetic Operators</source>
          <target state="translated">算术运算符</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Use arithmetic operators (<ph id="ph1">\+</ph>, -, <ph id="ph2">\*</ph>, <ph id="ph3">\/</ph>, %) to calculate values in a command or expression.</source>
          <target state="translated">使用算术运算符 (<ph id="ph1">\+</ph>, 、-， <ph id="ph2">\*</ph>, ，<ph id="ph3">\/</ph>, ，%) 来计算中的命令或表达式值。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>With these operators, you can add, subtract, multiply, or divide values, and calculate the remainder (modulus) of a division operation.</source>
          <target state="translated">具有这些运算符，可以添加、 减、 乘或除值，和计算除法运算的余数 （取模）。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also use arithmetic operators with strings, arrays, and hash tables.</source>
          <target state="translated">您可以使用字符串、 数组和哈希表算术运算符。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The addition operator concatenates elements.</source>
          <target state="translated">加法运算符将元素连接在一起。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The multiplication operator returns the specified number of copies of each element.</source>
          <target state="translated">乘法运算符返回指定的数目的每个元素的副本。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information, see about_Arithmetic_Operators.</source>
          <target state="translated">有关详细信息，请参阅 about_Arithmetic_Operators。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Assignment Operators</source>
          <target state="translated">赋值运算符</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Use assignment operators (<ph id="ph1">\=</ph>, <ph id="ph2">\+\=</ph>, -<ph id="ph3">\=</ph>, <ph id="ph4">\*\=</ph>, <ph id="ph5">\/\=</ph>, %<ph id="ph6">\=</ph>) to assign one or more values to variables, to change the values in a variable, and to append values to variables.</source>
          <target state="translated">使用赋值运算符 (<ph id="ph1">\=</ph>, ，<ph id="ph2">\+\=</ph>, 、-<ph id="ph3">\=</ph>, ，<ph id="ph4">\*\=</ph>, ，<ph id="ph5">\/\=</ph>, ，%<ph id="ph6">\=</ph>) 若要将一个或多个值分配给变量，来更改变量中的值并将值追加到变量。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can also cast the variable as any Microsoft .NET Framework data type, such as string or DateTime, or Process variable.</source>
          <target state="translated">您可以强制转换为任何 Microsoft.NET Framework 数据类型，如字符串或日期时间、 变量或流程变量。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see about_Assignment_Operators.</source>
          <target state="translated">有关详细信息，请参阅 about_Assignment_Operators。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Comparison Operators</source>
          <target state="translated">比较运算符</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Use comparison operators (-eq, -ne, -gt, -lt, -le, -ge) to compare values and test conditions.</source>
          <target state="translated">使用比较运算符 (-eq、-ne、-gt、-lt、-le、-ge) 进行比较，并测试条件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example, you can compare two string values to determine whether they are equal.</source>
          <target state="translated">例如，您可以比较两个字符串值，以确定它们是否相等。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The comparison operators include the match operators (-match, -notmatch), which find patterns by using regular expressions; the replace operator (-replace), which uses regular expressions to change input values; the like operators (-like, -notlike), which find patterns using wildcard characters (<ph id="ph1">\*</ph>); and the containment operators (-in, -notin, -contains, -notcontains), which determine whether a test value appears in a reference set.</source>
          <target state="translated">比较运算符包括匹配运算符 (-匹配，-notmatch 将)，它通过使用正则表达式; 发现的模式替换运算符 (-替换)，它使用正则表达式来更改输入的值;like 运算符 （-如，-notlike），它发现的模式使用通配符 (<ph id="ph1">\*</ph>); 和包容运算符 (-中-不足，-包含-notcontains)，由此来确定测试值是否出现在引用组。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>They also include the bitwise operators (-bAND, -bOR, -bXOR, -bNOT) to manipulate the bit patterns in values.</source>
          <target state="translated">它们还包括按位运算符 (-带-bOR，-bXOR，bNOT) 来操作值中的位模式。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information, see about_Comparison_Operators</source>
          <target state="translated">有关详细信息，请参阅 about_Comparison_Operators</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Logical Operators</source>
          <target state="translated">逻辑运算符</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Use logical operators (-and, -or, -xor, -not, <ph id="ph1">\!</ph>) to connect conditional statements into a single complex conditional.</source>
          <target state="translated">使用逻辑运算符 (-和-or、-xor、-not、 <ph id="ph1">\!</ph>) 连接到单个的复杂条件的条件语句。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For example, you can use a logical -and operator to create an object filter with two different conditions.</source>
          <target state="translated">例如，您可以使用逻辑-和运算符来创建具有两个不同条件的对象筛选器。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information, see about_Logical_Operators.</source>
          <target state="translated">有关详细信息，请参阅 about_Logical_Operators。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Redirection Operators</source>
          <target state="translated">重定向运算符</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Use redirection operators (&gt;, &gt;&gt;, 2&gt;, 2&gt;, and 2&gt;&amp;1) to send the output of a command or expression to a text file.</source>
          <target state="translated">使用重定向运算符 (&gt;，&gt;&gt;，2 &gt;，2 &gt;，和 2 &gt; &amp; 1) 将命令或表达式的输出发送到一个文本文件。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The redirection operators work like the Out-File cmdlet (without parameters) but they also let you redirect error output to specified files.</source>
          <target state="translated">像用于重定向运算符 Out-file cmdlet （不带参数），但它们还允许您将错误输出重定向到指定的文件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can also use the Tee-Object cmdlet to redirect output.</source>
          <target state="translated">您还可以使用 Tee-object cmdlet 将输出重定向。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For more information, see about_Redirection</source>
          <target state="translated">有关详细信息，请参阅 about_Redirection</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Split and Join Operators</source>
          <target state="translated">拆分和联接运算符</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The -split and -join operators divide and combine substrings.</source>
          <target state="translated">-拆分和联接运算符拆分和组合子字符串。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The -split operator splits a string into substrings.</source>
          <target state="translated">-拆分运算符划分为多个子字符串的字符串。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The -join operator concatenates multiple strings into a single string.</source>
          <target state="translated">-联接运算符将多个字符串串联成单个字符串。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For more information, see about_Split and about_Join.</source>
          <target state="translated">有关详细信息，请参阅 about_Split 和 about_Join。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Type Operators</source>
          <target state="translated">类型运算符</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Use the type operators (-is, -isnot, -as) to find or change the .NET Framework type of an object.</source>
          <target state="translated">使用类型运算符 （-是-isnot、-作为） 来查找或更改对象的.NET Framework 类型。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For more information, see about_Type_Operators.</source>
          <target state="translated">有关详细信息，请参阅 about_Type_Operators。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Unary Operators</source>
          <target state="translated">一元运算符</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Use unary operators to increment or decrement variables or object properties and to set integers to positive or negative numbers.</source>
          <target state="translated">使用一元运算符的递增或递减的变量或对象属性并将整数设置为正数或负数。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, to increment the variable $a from 9 to 10, you type $a<ph id="ph1">\+\+</ph>.</source>
          <target state="translated">例如，若要增量变量 $ 为 10 的 9，键入 $<ph id="ph1">\+\+</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Special Operators</source>
          <target state="translated">特殊运算符</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Use special operators to perform tasks that cannot be performed by the other types of operators.</source>
          <target state="translated">使用特殊运算符执行的其他类型的运算符不能执行的任务。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For example, special operators allow you to perform operations such as running commands and changing a value's data type.</source>
          <target state="translated">例如，通过特殊运算符可以执行操作，如运行命令并更改某个值的数据类型。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>@( ) Array subexpression operator</source>
          <target state="translated">@ （） 数组的子表达式运算符</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Returns the result of one or more statements as an array.</source>
          <target state="translated">数组形式返回一个或多个语句的结果。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If there is only one item, the array has only one member.</source>
          <target state="translated">如果只有一个项目，则数组将包含只有一个成员。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>&amp; Call operator</source>
          <target state="translated">（&amp; a) 调用运算符</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Runs a command, script, or script block.</source>
          <target state="translated">运行命令、 脚本或脚本块。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The call operator, also known as the "invocation operator," lets you run commands that are stored in variables and represented by strings.</source>
          <target state="translated">调用运算符，也称为"调用运算符，"允许您运行命令，存储在变量中并由字符串表示。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Because the call operator does not parse the command, it cannot interpret command parameters.</source>
          <target state="translated">调用运算符不分析该命令，因为它不能解释命令参数。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>[ ] Cast operator</source>
          <target state="translated">[] 强制转换运算符</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Converts or limits objects to the specified type.</source>
          <target state="translated">将转换或限制为指定类型的对象。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If the objects cannot be converted,  Windows PowerShell generates an error.</source>
          <target state="translated">如果对象不能转换，Windows PowerShell 将生成一个错误。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>, Comma operator</source>
          <target state="translated">逗号运算符</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>As a binary operator, the comma creates an array.</source>
          <target state="translated">作为二元运算符，逗号创建数组。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>As a unary operator, the comma creates an array with one member.</source>
          <target state="translated">作为一元运算符，逗号与一个成员创建一个数组。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Place the comma before the member.</source>
          <target state="translated">将放置在该成员之前的逗号。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Dot sourcing operator</source>
          <target state="translated">点采购运算符</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Runs a script in the current scope so that any functions, aliases, and variables that the script creates are added to the current scope.</source>
          <target state="translated">在当前作用域中运行一个脚本，以便任何函数、 别名和该脚本创建的变量添加到当前作用域。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">注意：</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The dot sourcing operator is followed by a space.</source>
          <target state="translated">圆点来源运算符后跟一个空格。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Use the space to distinguish the dot from the dot (.) symbol that represents the current directory.</source>
          <target state="translated">使用的空间来区分点表示当前目录的句点 （.） 符号。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>In the following example, the Sample.ps1 script in the current directory is run in the current scope.</source>
          <target state="translated">在下面的示例中，在当前范围内运行 Sample.ps1 脚本当前目录中。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-f Format operator</source>
          <target state="translated">-f 格式运算符</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Formats strings by using the format method of string objects.</source>
          <target state="translated">使用 format 方法的字符串对象设置格式的字符串。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Enter the format string on the left side of the operator and the objects to be formatted on the right side of the operator.</source>
          <target state="translated">在左侧的运算符和运算符右侧格式化的对象输入格式字符串。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For more information, see the String.Format method (http:<ph id="ph1">\/\/</ph>go.microsoft.com<ph id="ph2">\/</ph>fwlink<ph id="ph3">\/</ph>?LinkID<ph id="ph4">\=</ph>166450) and Composite Formatting (http:<ph id="ph5">\/\/</ph>go.microsoft.com<ph id="ph6">\/</ph>fwlink<ph id="ph7">\/</ph>?LinkID<ph id="ph8">\=</ph>166451).</source>
          <target state="translated">有关详细信息，请参阅 String.Format 方法 (http:<ph id="ph1">\/\/</ph>go.microsoft.com<ph id="ph2">\/</ph>fwlink<ph id="ph3">\/</ph>？LinkID<ph id="ph4">\=</ph>166450) 以及复合格式设置 (http:<ph id="ph5">\/\/</ph>go.microsoft.com<ph id="ph6">\/</ph>fwlink<ph id="ph7">\/</ph>？LinkID<ph id="ph8">\=</ph>166451)。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>[ ] Index operator</source>
          <target state="translated">索引 [] 运算符</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Selects objects from indexed collections, such as arrays and hash tables.</source>
          <target state="translated">从带有索引的集合，如数组和哈希表中选择对象。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Array indexes are zero-based, so the first object is indexed as [0].</source>
          <target state="translated">数组索引是从零开始，，因此作为 [0] 索引的第一个对象。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For arrays (only), you can also use negative indexes to get the last values.</source>
          <target state="translated">对于数组 （仅限），您可以使用负索引来获取最后一个值。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Hash tables are indexed by key value.</source>
          <target state="translated">按密钥值来编制索引的哈希表。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>&amp;#124; Pipeline operator</source>
          <target state="translated">&amp;#124;管道运算符</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Sends ("pipes") the output of the command that precedes it to the command that follows it.</source>
          <target state="translated">（"管道"） 将输出发送之前对它后面的命令的命令。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When the output includes more than one object (a "collection"), the pipeline operator sends the objects one at a time.</source>
          <target state="translated">当输出包含多个对象 （"集合"） 时，管道运算符将对象一个发送一次。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Property dereference operator</source>
          <target state="translated">属性取消引用运算符</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Accesses the properties and methods of an object.</source>
          <target state="translated">可访问的属性和对象的方法。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>..</source>
          <target state="translated">..</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Range operator</source>
          <target state="translated">Range 运算符</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Represents the sequential integers in an integer array, given an upper and lower boundary.</source>
          <target state="translated">表示顺序的整数，在整数数组，给定的上限和下限的边界。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>:: Static member operator</source>
          <target state="translated">:: 静态成员运算符</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Calls the static properties operator and methods of a .NET Framework class.</source>
          <target state="translated">调用静态属性运算符和.NET Framework 类的方法。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>To find the static properties and methods of an object, use the Static parameter of the Get-Member cmdlet.</source>
          <target state="translated">若要查找的静态属性和对象的方法，请使用 Get-member cmdlet 的静态参数。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>$( ) Subexpression operator</source>
          <target state="translated">$ （） 的子表达式运算符</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Returns the result of one or more statements.</source>
          <target state="translated">返回一个或多个语句的结果。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For a single result, returns a scalar.</source>
          <target state="translated">对于单个结果，将返回标量。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For multiple results, returns an array.</source>
          <target state="translated">为多个结果，返回一个数组。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>about_Arithmetic_Operators</source>
          <target state="translated">about_Arithmetic_Operators</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>about_Assignment_Operators</source>
          <target state="translated">about_Assignment_Operators</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>about_Comparison_Operators</source>
          <target state="translated">about_Comparison_Operators</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>about_Logical_Operators</source>
          <target state="translated">about_Logical_Operators</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>about_Type_Operators</source>
          <target state="translated">about_Type_Operators</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>about_Split</source>
          <target state="translated">about_Split</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>about_Join</source>
          <target state="translated">about_Join</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>about_Redirection</source>
          <target state="translated">about_Redirection</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>