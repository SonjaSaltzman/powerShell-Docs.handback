<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">76550b8c1203be05089e77674f2aa66b56fc8527</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Prompts.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">31025ec40332670e9176a96a7df5b011520e4959</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">274a8c66b2801bc0536b6ae166d4bc680a79492a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Prompts</source>
          <target state="translated">about_Prompts</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Prompts</source>
          <target state="translated">关于提示</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Prompts</source>
          <target state="translated">about_Prompts</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Prompts</source>
          <target state="translated">about_Prompts</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">简短说明</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes the Prompt function and demonstrates how to create a custom Prompt function.</source>
          <target state="translated">描述 Prompt 函数，并演示如何创建自定义的 Prompt 函数。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">详细说明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The  Windows PowerShell� command prompt indicates that  Windows PowerShell is ready to run a command:</source>
          <target state="translated">Windows PowerShell 命令提示符指示 Windows PowerShell 已准备好运行命令︰</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The  Windows PowerShell prompt is determined by the built-in Prompt function.</source>
          <target state="translated">Windows PowerShell 提示符下由内置的 Prompt 函数。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can customize the prompt by creating your own Prompt function and saving it in your  Windows PowerShell profile.</source>
          <target state="translated">您可以通过创建您自己的 Prompt 函数，并将其保存在 Windows PowerShell 配置文件中自定义提示。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>ABOUT THE PROMPT FUNCTION</source>
          <target state="translated">有关 PROMPT 函数</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The Prompt function determines the appearance of the  Windows PowerShell prompt.</source>
          <target state="translated">Prompt 函数确定 Windows PowerShell 提示符下的外观。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Windows PowerShell comes with a built-in Prompt function, but you can override it by defining your own Prompt function.</source>
          <target state="translated">Windows PowerShell 附带了内置的 Prompt 函数，但您可以通过定义您自己的 Prompt 函数重写它。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The Prompt function has the following syntax:</source>
          <target state="translated">Prompt 函数具有以下语法︰</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Prompt function must return an object.</source>
          <target state="translated">Prompt 函数必须返回一个对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>As a best practice, return a string or an object that is formatted as a string.</source>
          <target state="translated">作为最佳做法是，返回一个字符串或格式化为字符串的对象。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The maximum recommended length is 80 characters.</source>
          <target state="translated">建议的最大长度为 80 个字符。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, the following prompt function returns a "Hello, World" string followed by a caret (&gt;).</source>
          <target state="translated">例如，以下提示函数返回插入符号 (&gt;) 后跟一个"Hello，World"字符串。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>GETTING THE PROMPT FUNCTION</source>
          <target state="translated">获取 PROMPT 函数</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To get the Prompt function, use the Get-Command cmdlet or use the Get-Item cmdlet in the Function drive.</source>
          <target state="translated">若要获取 Prompt 函数，请使用 Get-command cmdlet 或函数驱动器中使用 Get-item cmdlet。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Functions are commands.</source>
          <target state="translated">函数是命令。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>So, you can use the Get-Command cmdlet to get functions, including the Prompt function.</source>
          <target state="translated">因此，可以使用 Get-command cmdlet 来获取函数，其中包括 Prompt 函数。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To get the script that sets the value of the prompt, use the dot method to get the ScriptBlock property of the Prompt function.</source>
          <target state="translated">若要获取设置的提示值的脚本，使用点法获取 Prompt 函数的 ScriptBlock 属性。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Like all functions, the Prompt function is stored in the Function: drive.</source>
          <target state="translated">与所有函数一样 Prompt 函数存储在函数中︰ 驱动器。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To display the script that creates the current Prompt function, type:</source>
          <target state="translated">若要显示当前的 Prompt 函数创建的脚本，请键入︰</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>THE DEFAULT PROMPT</source>
          <target state="translated">默认的提示</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The default prompt appears only when the Prompt function generates an error or does not return an object.</source>
          <target state="translated">Prompt 函数将生成错误或不返回对象，才会显示默认的提示。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The default  Windows PowerShell prompt is:</source>
          <target state="translated">默认值的 Windows PowerShell 提示符下为︰</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For example, the following command sets the Prompt function to $null, which is invalid.</source>
          <target state="translated">例如，以下命令将设置为 $null，这是无效的 Prompt 函数。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>As a result, the default prompt appears.</source>
          <target state="translated">结果是，将显示默认的提示。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Because  Windows PowerShell comes with a built-in prompt, you usually do not see the default prompt.</source>
          <target state="translated">因为 Windows PowerShell 附带了内置的提示符下，您通常看不见默认的提示。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>BUILT-IN PROMPT</source>
          <target state="translated">内置的提示</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Windows PowerShell includes a built-in prompt function.</source>
          <target state="translated">Windows PowerShell 包括内置的 prompt 函数。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In  Windows PowerShell 3.0, the built-in prompt function is:</source>
          <target state="translated">在 Windows PowerShell 3.0 中，内置的 prompt 函数是︰</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This simplified prompt starts with "PS" followed by the current location, and one "&gt;" for each nested prompt level.</source>
          <target state="translated">此简化的提示开头"PS"后跟当前的位置和一个"&gt;"为每个嵌套提示级别。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In  Windows PowerShell 2.0, the built-in prompt function is:</source>
          <target state="translated">在 Windows PowerShell 2.0 中，内置的 prompt 函数是︰</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The function uses the Test-Path cmdlet to determine whether the $PSDebugContext automatic variable is populated.</source>
          <target state="translated">该函数使用 Test-path cmdlet 来确定是否填充 $PSDebugContext 自动变量。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If $PSDebugContext is populated, you are in debugging mode, and "[DBG]" is added to the prompt, as follows:</source>
          <target state="translated">如果填充了 $PSDebugContext，则是否处于调试模式，并且"[DBG]"添加到出现提示时，，如下所示︰</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If $PSDebugContext is not populated, the function adds "PS" to the prompt.</source>
          <target state="translated">如果未填充 $PSDebugContext，该函数会将"PS"添加到提示。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>And, the function uses the Get-Location cmdlet to get the current file system directory location.</source>
          <target state="translated">并且，该函数使用 Get-location cmdlet 来获取当前文件系统目录位置。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Then, it adds a right angle bracket (&gt;).</source>
          <target state="translated">然后，它将添加右尖括号 (&gt;)。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If you are in a nested prompt, the function adds two angle brackets (&gt;&gt;) to the prompt.</source>
          <target state="translated">如果要在嵌套的提示符下，该函数将添加两个尖括号 (&gt;&gt;) 到提示符。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>(You are in a nested prompt if the value of the $NestedPromptLevel automatic variable is greater than 1.)</source>
          <target state="translated">（您拥有嵌套提示 $NestedPromptLevel 自动变量的值是否大于 1。）</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, when you are debugging in a nested prompt, the prompt resembles the following prompt:</source>
          <target state="translated">例如，在嵌套提示中调试时，提示类似于以下提示︰</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>CHANGES TO THE PROMPT</source>
          <target state="translated">在提示符下的更改</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The Enter-PSSession cmdlet prepends the name of the remote computer to the current Prompt function.</source>
          <target state="translated">Enter-pssession cmdlet 将追加到当前的 Prompt 函数的远程计算机的名称。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>When you use the Enter-PSSession cmdlet to start a session with a remote computer, the command prompt changes to include the name of the remote computer.</source>
          <target state="translated">当你使用 Enter-pssession cmdlet 来启动与远程计算机的会话时，命令提示符将更改为包含远程计算机的名称。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Other  Windows PowerShell host applications and alternate shells might have their own custom command prompts.</source>
          <target state="translated">其他 Windows PowerShell 主机应用程序和备用外壳可能具有其自己自定义的命令提示符窗口。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For more information about the $PSDebugContext and $NestedPromptLevel automatic variables, see about_Automatic_Variables.</source>
          <target state="translated">有关 $PSDebugContext 和 $NestedPromptLevel 自动变量的详细信息，请参阅 about_Automatic_Variables。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>HOW TO CUSTOMIZE THE PROMPT</source>
          <target state="translated">如何自定义提示</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To customize the prompt, write a new Prompt function.</source>
          <target state="translated">若要自定义在提示符下，编写新的 Prompt 函数。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The function is not protected, so you can overwrite it.</source>
          <target state="translated">该函数不受保护，因此您可以覆盖它。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>To write a prompt function, type the following:</source>
          <target state="translated">若要编写 prompt 函数，键入以下命令︰</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Then, between the braces, enter the commands or the string that creates your prompt.</source>
          <target state="translated">然后，大括号中，输入命令或创建提示的字符串。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, the following prompt includes your computer name:</source>
          <target state="translated">例如，下面的提示包括您的计算机名称︰</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>On the Server01 computer, the prompt resembles the following prompt:</source>
          <target state="translated">在 Server01 计算机上，在提示符下类似于以下提示︰</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The following prompt function includes the current date and time:</source>
          <target state="translated">下面的 prompt 函数包括当前日期和时间︰</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The prompt resembles the following prompt:</source>
          <target state="translated">在提示符下类似于以下提示︰</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You can also change the default Prompt function:</source>
          <target state="translated">此外可以更改默认提示函数︰</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For example, the following modified Prompt function adds "[ADMIN]:" to the built-in  Windows PowerShell prompt when  Windows PowerShell is opened by using the "Run as administrator" option:</source>
          <target state="translated">例如，以下修改的提示符函数会将"[管理员]:"到内置的 Windows PowerShell 提示符如果通过使用"以管理员身份运行"选项打开 Windows PowerShell:</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>When you start  Windows PowerShell by using the "Run as administrator" option, a prompt that resembles the following prompt appears:</source>
          <target state="translated">通过使用"以管理员身份运行"选项启动 Windows PowerShell 时，将显示类似于下面的提示的提示︰</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The following Prompt function displays the history ID of the next command.</source>
          <target state="translated">下面的 Prompt 函数显示下一个命令的历史记录 ID。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To view the command history, use the Get-History cmdlet.</source>
          <target state="translated">若要查看命令历史记录，请使用 Get-history cmdlet。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The following prompt uses the Write-Host and Get-Random cmdlets to create a prompt that changes color randomly.</source>
          <target state="translated">以下提示使用了 Write-host 和 Get-random cmdlet 来创建随机更改图片中颜色的提示。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Because Write-Host writes to the current host application but does not return an object, this function includes a Return statement.</source>
          <target state="translated">Write-host 将写入当前主机应用程序，但不会返回对象，因为此函数包含 Return 语句。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Without it,  Windows PowerShell uses the default prompt, "PS&gt;".</source>
          <target state="translated">如果没有它，Windows PowerShell 将使用默认的提示，"PS &gt;"。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>SAVING THE PROMPT FUNCTION</source>
          <target state="translated">保存 PROMPT 函数</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Like any function, the Prompt function exists only in the current session.</source>
          <target state="translated">与任何函数一样 Prompt 函数仅在当前会话中存在。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To save the Prompt function for future sessions, add it to your  Windows PowerShell profiles.</source>
          <target state="translated">若要为将来会话保存 Prompt 函数，请将其添加到 Windows PowerShell 配置文件中。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For more information about profiles, see about_Profiles.</source>
          <target state="translated">有关配置文件的详细信息，请参阅 about_Profiles。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Get-Location</source>
          <target state="translated">获得位置</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Enter-PSSession</source>
          <target state="translated">Enter-PSSession</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Get-History</source>
          <target state="translated">Get-History</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Get-Random</source>
          <target state="translated">Get-Random</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Write-Host</source>
          <target state="translated">Write-Host</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>about_Profiles</source>
          <target state="translated">about_Profiles</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>about_Functions</source>
          <target state="translated">about_Functions</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>about_Scopes</source>
          <target state="translated">about_Scopes</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>about_Debuggers</source>
          <target state="translated">about_Debuggers</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables</source>
          <target state="translated">about_Automatic_Variables</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>