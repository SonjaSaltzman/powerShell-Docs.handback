<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c44720ed42006eae0ae573c94a0ddef6fef6f34c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Remote.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d303a58d0b38fc76cc12ba9e313545dcc83f1bf4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">20c3932b94ef0a7e076fc49348f5abb516bfdad1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Remote</source>
          <target state="translated">about_Remote</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Remote</source>
          <target state="translated">关于远程</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Remote</source>
          <target state="translated">about_Remote</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">TOPIC</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Remote</source>
          <target state="translated">about_Remote</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">简短说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Describes how to run remote commands in Windows PowerShell.</source>
          <target state="translated">描述如何在 Windows PowerShell 中运行远程命令。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">详细说明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can run remote commands on a single computer or on multiple computers by using a temporary or persistent connection.</source>
          <target state="translated">使用临时或持久性连接，可以在一台或多台计算机上运行远程命令。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can also start an interactive session with a single remote computer.</source>
          <target state="translated">此外可以与一台远程计算机的交互式会话。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This topic provides a series of examples to show you how to run different types of remote command.</source>
          <target state="translated">本主题提供一的系列示例，说明如何运行不同类型的远程命令。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>After you try these basic commands, read the Help topics that describe each cmdlet that is used in these commands.</source>
          <target state="translated">请尝试以下基本命令后，阅读介绍这些命令中使用的每个 cmdlet 的帮助主题。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The topics provide the details and explain how you can modify the commands to meet your needs.</source>
          <target state="translated">主题提供的详细信息，并介绍如何修改以满足您需求的命令。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Note: To use Windows PowerShell remoting, the local and remote computers must be configured for remoting.</source>
          <target state="translated">注意︰ 若要使用 Windows PowerShell 远程处理，在本地和远程计算机必须为配置为进行远程处理。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information, see about_Remote_Requirements.</source>
          <target state="translated">有关详细信息，请参阅 about_Remote_Requirements。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>HOW TO START AN INTERACTIVE SESSION (ENTER-PSSESSION)</source>
          <target state="translated">如何启动交互式会话 (输入 PSSESSION)</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The easiest way to run remote commands is to start an interactive session with a remote computer.</source>
          <target state="translated">运行远程命令的最简单方法是启动与远程计算机的交互式会话。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When the session starts, the commands that you type run on the remote computer, just as though you typed them directly on the remote computer.</source>
          <target state="translated">会话启动时，您键入的命令远程计算机上运行，就像键入直接在远程计算机上。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can connect to only one computer in each interactive session.</source>
          <target state="translated">您可以在每个交互式会话连接到只有一台计算机。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To start an interactive session, use the Enter-PSSession cmdlet.</source>
          <target state="translated">若要启动交互式会话，请使用 Enter-pssession cmdlet。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following command starts an interactive session with the Server01 computer:</source>
          <target state="translated">以下命令启动与 Server01 计算机的交互式会话︰</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Enter-PSSession Server01</source>
          <target state="translated">输入 PSSession Server01</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The command prompt changes to indicate that you are connected to the Server01 computer.</source>
          <target state="translated">命令提示符将更改以指示您已连接到 Server01 计算机。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Server01\PS&gt;</source>
          <target state="translated">Server01\PS &gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Now, you can type commands on the Server01 computer.</source>
          <target state="translated">现在，您可以键入命令在 Server01 计算机上。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To end the interactive session, type:</source>
          <target state="translated">若要结束交互会话，请键入：</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Exit-PSSession</source>
          <target state="translated">Exit-PSSession</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information, see Enter-PSSession.</source>
          <target state="translated">有关详细信息，请参阅 Enter-pssession。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>HOW TO USE CMDLETS THAT HAVE A COMPUTERNAME PARAMETER TO GET REMOTE DATA</source>
          <target state="translated">如何使用 CMDLET 具有 COMPUTERNAME 参数获取远程数据</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Several cmdlets have a ComputerName parameter that lets you get objects from remote computers.</source>
          <target state="translated">多个 cmdlet 具有 ComputerName 参数，您可以从远程计算机获取对象。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Because these cmdlets do not use WS-Management-based Windows PowerShell remoting, you can use the ComputerName parameter of these cmdlets on any computer that is running Windows PowerShell.</source>
          <target state="translated">由于这些 cmdlet 需要使用 WS 管理基于 Windows PowerShell 远程处理，可以在任何正在运行 Windows PowerShell 的计算机上使用这些 cmdlet 的 ComputerName 参数。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The computers do not have to be configured for Windows PowerShell remoting, and the computers do not have to meet the system requirements for remoting.</source>
          <target state="translated">计算机并不一定要为 Windows PowerShell 远程处理配置计算机无需满足的系统要求的远程处理。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following cmdlets have a ComputerName parameter:</source>
          <target state="translated">下面的 cmdlet 具有 ComputerName 参数︰</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Clear-EventLog    Limit-EventLog Get-Counter       New-EventLog Get-EventLog      Remove-EventLog Get-HotFix        Restart-Computer Get-Process       Show-EventLog Get-Service       Stop-Computer Get-WinEvent      Test-Connection Get-WmiObject     Write-EventLog</source>
          <target state="translated">清除事件日志限制-事件日志的 Get-counter 新事件日志获取-EventLog Remove-eventlog Get-修补程序重新启动计算机获取进程 Show-eventlog Get-服务停止计算机 Get-winevent 测试-连接 Get-wmiobject 写入的事件日志</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the services on the Server01 remote computer:</source>
          <target state="translated">例如，以下命令获取 Server01 远程计算机上的服务︰</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Get-Service -ComputerName Server01</source>
          <target state="translated">获取服务-ComputerName Server01</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Typically, cmdlets that support remoting without special configuration have a ComputerName parameter and do not have a Session parameter.</source>
          <target state="translated">通常情况下，支持无需特殊配置即可进行远程处理的 cmdlet 具有 ComputerName 参数，但不具有 Session 参数。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To find these cmdlets in your session, type:</source>
          <target state="translated">若要在会话中查找这些 cmdlet，请键入：</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Get-Command | where { $.Parameters.Keys -contains "ComputerName" -and $.Parameters.Keys -NotContains "Session"}</source>
          <target state="translated">Get 命令 |其中 {$。Parameters.Keys-包含"ComputerName"-和 $。Parameters.Keys NotContains"会话"}</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>HOW TO RUN A REMOTE COMMAND</source>
          <target state="translated">如何运行远程命令</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To run other commands on remote computers, use the Invoke-Command cmdlet.</source>
          <target state="translated">若要在远程计算机上运行其他命令，请使用 Invoke-command cmdlet。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To run a single command or a few unrelated commands, use the ComputerName parameter of Invoke-Command to specify the remote computers.</source>
          <target state="translated">若要运行单个命令或几个不相关的命令，请使用 Invoke-command 的 ComputerName 参数来指定远程计算机。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Use the ScriptBlock parameter to specify the command.</source>
          <target state="translated">使用 ScriptBlock 参数来指定的命令。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For example, the following command runs a Get-Culture command on the Server01 computer.</source>
          <target state="translated">例如，以下命令在 Server01 计算机上运行 Get-culture 命令。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Invoke-Command -ComputerName Server01 -ScriptBlock {Get-Culture}</source>
          <target state="translated">Invoke-command-ComputerName Server01-ScriptBlock {Get-culture}</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The ComputerName parameter is designed for situation in which you run a single command or several unrelated commands on one or many computers.</source>
          <target state="translated">ComputerName 参数专为在其中的单个命令或多个不相关的命令运行一个或多台计算机的情况。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To establish a persistent connection to a remote computer, use the Session parameter.</source>
          <target state="translated">若要建立与远程计算机建立持久连接，请使用 Session 参数。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>HOW TO CREATE A PERSISTENT CONNECTION (PSSESSION)</source>
          <target state="translated">如何创建持续性连接 (PSSESSION)</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>When you use the ComputerName parameter of the Invoke-Command cmdlet, Windows PowerShell establishes a connection just for the command.</source>
          <target state="translated">当使用 Invoke-command cmdlet 的 ComputerName 参数时，Windows PowerShell 将建立只为该命令的连接。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Then, it closes the connection when the command is complete.</source>
          <target state="translated">然后，在命令完成后，它将关闭该连接。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Any variables or functions that are defined in the command are lost.</source>
          <target state="translated">任何变量或命令中定义的函数都将丢失。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To create a persistent connection to a remote computer, use the New-PSSession cmdlet.</source>
          <target state="translated">若要创建与远程计算机建立持久连接，请使用 New-pssession cmdlet。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For example, the following command creates PSSessions on the Server01 and Server02 computers and then saves the PSSessions in the $s variable.</source>
          <target state="translated">例如，以下命令在 Server01 和 Server02 计算机上创建 Pssession，然后将 Pssession 保存在 $s 变量。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>$s = New-PSSession -ComputerName Server01, Server02</source>
          <target state="translated">$s = New-pssession-ComputerName Server01、 Server02</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>HOW TO RUN COMMANDS IN A PSSESSION</source>
          <target state="translated">如何在 PSSESSION 中运行命令</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>With a PSSession, you can run a series of remote commands that share data, like functions, aliases, and the values of variables.</source>
          <target state="translated">使用 PSSession，可以运行一系列共享数据，如函数、 别名和变量的值的远程命令。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To run commands in a PSSession, use the Session parameter of the Invoke-Command cmdlet.</source>
          <target state="translated">若要在 PSSession 中运行命令，请使用 Invoke-command cmdlet 的会话参数。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, the following command uses the Invoke-Command cmdlet to run a Get-Process command in the PSSessions on the Server01 and Server02 computers.</source>
          <target state="translated">例如，下面的命令使用 Invoke-command cmdlet 在 Server01 和 Server02 计算机上在 Pssession 中运行 Get-process 命令。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The command saves the processes in a $p variable in each PSSession.</source>
          <target state="translated">该命令将保存在 $p 变量中每个 PSSession 中的进程。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Invoke-Command -Session $s -ScriptBlock {$p = Get-Process}</source>
          <target state="translated">调用命令的会话 $s ScriptBlock {$p = Get-process}</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Because the PSSession uses a persistent connection, you can run another command in the same PSSession that uses the $p variable.</source>
          <target state="translated">由于 PSSession 使用持续性连接，可以在同一个使用 $p 变量的 PSSession 中运行另一个命令。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The following command counts the number of processes saved in $p.</source>
          <target state="translated">下面的命令对保存在 $p 的进程数进行计数。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Invoke-Command -Session $s -ScriptBlock {$p.count}</source>
          <target state="translated">调用命令的会话 $s-ScriptBlock {$p.count}</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>HOW TO RUN A REMOTE COMMAND ON MULTIPLE COMPUTERS</source>
          <target state="translated">如何在多台计算机上运行远程命令</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>To run a remote command on multiple computers, type all of the computer names in the value of the ComputerName parameter of Invoke-Command.</source>
          <target state="translated">若要在多台计算机上运行远程命令，键入 Invoke-command 的 ComputerName 参数的值中的所有计算机名称。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Separate the names with commas.</source>
          <target state="translated">用逗号分隔这些名称。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For example, the following command runs a Get-Culture command on three computers:</source>
          <target state="translated">例如，以下命令在三台计算机上运行 Get-culture 命令︰</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Invoke-Command -ComputerName S1, S2, S3 -ScriptBlock {Get-Culture}</source>
          <target state="translated">Invoke-command-ComputerName S1、 S2、 S3-ScriptBlock {Get-culture}</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You can also run a command in multiple PSSessions.</source>
          <target state="translated">您还可以在多个 Pssession 中运行命令。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The following commands create PSSessions on the Server01, Server02, and Server03 computers and then run a Get-Culture command in each of the PSSessions.</source>
          <target state="translated">以下命令在 Server01、 Server02 和 Server03 计算机上创建 Pssession，然后运行在每个 Pssession 中的 Get-culture 命令。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>$s = New-PSSession -ComputerName S1, S2, S3 Invoke-Command -Session $s -ScriptBlock {Get-Culture}</source>
          <target state="translated">$s = New-pssession-ComputerName S1、 S2、 S3 调用命令的会话 $s-ScriptBlock {Get-culture}</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To include the local computer list of computers, type the name of the local computer, type a dot (.), or type  "localhost".</source>
          <target state="translated">若要包括的计算机的本地计算机列表，键入本地计算机的名称，键入一个点 （.），或键入"localhost"。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Invoke-Command -ComputerName S1, S2, S3, localhost -ScriptBlock {Get-Culture}</source>
          <target state="translated">Invoke-command-ComputerName S1、 S2、 S3，localhost-ScriptBlock {Get-culture}</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>HOW TO RUN A SCRIPT ON REMOTE COMPUTERS</source>
          <target state="translated">如何在远程计算机上运行脚本</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>To run a local script on remote computers, use the FilePath parameter of Invoke-Command.</source>
          <target state="translated">若要在远程计算机上运行本地脚本，请使用 Invoke-command 的 FilePath 参数。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For example, the following command runs the Sample.ps1 script on the S1 and S2 computers:</source>
          <target state="translated">例如，以下命令在 S1 和 S2 计算机上运行 Sample.ps1 脚本︰</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Invoke-Command -ComputerName S1, S2 -FilePath C:\Test\Sample.ps1</source>
          <target state="translated">Invoke-command-ComputerName S1，S2-FilePath C:\Test\Sample.ps1</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The results of the script are returned to the local computer.</source>
          <target state="translated">该脚本的结果返回到本地计算机。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>You do not need to copy any files.</source>
          <target state="translated">不需要的所有文件都复制。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>HOW TO STOP A REMOTE COMMAND</source>
          <target state="translated">如何停止远程命令</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To interrupt a command, press CTRL+C.</source>
          <target state="translated">若要中断命令，按 CTRL + C。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The interrupt request is passed to the remote computer where it terminates the remote command.</source>
          <target state="translated">中断请求传递到远程计算机，它将终止远程命令。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>FOR MORE INFORMATION</source>
          <target state="translated">详细信息</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>-- For information about the system requirements for remoting, see about_Remote_Requirements.</source>
          <target state="translated">--用于远程处理的系统要求的信息，请参阅 about_Remote_Requirements。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-- For help in formatting remote output, see about_Remote_Output.</source>
          <target state="translated">--用于设置远程输出的格式的帮助，请参阅 about_Remote_Output。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-- For information about how remoting works, how to manage remote data, special configurations, security issues, and other frequently asked questions, see about_Remote_FAQ.</source>
          <target state="translated">--用于远程处理的工作原理，如何管理远程数据、 特殊的配置、 安全问题和其他常见的问题有关的信息，请参阅 about_Remote_FAQ。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>-- For help in resolving remoting errors, see about_Remote_Troubleshooting.</source>
          <target state="translated">--对于解决远程处理错误的帮助，请参阅 about_Remote_Troubleshooting。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-- For information about PSSessions and persistent connections, see about_PSSessions.</source>
          <target state="translated">--对于 Pssession 和永久连接有关的信息，请参阅 about_PSSessions。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>-- For information about Windows PowerShell background jobs, see about_Jobs.</source>
          <target state="translated">--对于 Windows PowerShell 后台作业的信息，请参阅 about_Jobs。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>KEYWORDS</source>
          <target state="translated">关键字</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>about_Remoting</source>
          <target state="translated">about_Remoting</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>about_PSSessions about_Remote_Disconnected_Sessions about_Remote_Requirements about_Remote_FAQ about_Remote_TroubleShooting about_Remote_Variables Enter-PSSession Invoke-Command New-PSSession</source>
          <target state="translated">about_PSSessions about_Remote_Disconnected_Sessions about_Remote_Requirements about_Remote_FAQ about_Remote_TroubleShooting about_Remote_Variables Enter-pssession Invoke-command New-pssession</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>