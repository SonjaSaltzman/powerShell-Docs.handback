<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ffdfac8e4bd1113b033b98a37c71d5ee07a26bc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\PSScheduledJob\About\about_Scheduled_Jobs_Troubleshooting.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f649ffd412ce7653746ad3b713f115cca15be2e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">17dcbb7fd096fcb76047e8bdc8ee1c9e3153a13a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Scheduled_Jobs_Troubleshooting</source>
          <target state="translated">about_Scheduled_Jobs_Troubleshooting</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Scheduled Jobs Troubleshooting</source>
          <target state="translated">有关故障排除的计划作业</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Scheduled_Jobs_Troubleshooting</source>
          <target state="translated">about_Scheduled_Jobs_Troubleshooting</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Scheduled_Jobs_Troubleshooting</source>
          <target state="translated">about_Scheduled_Jobs_Troubleshooting</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">简短说明</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Explains how to resolve problems with scheduled jobs</source>
          <target state="translated">说明了如何解决问题的计划作业</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">详细说明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This section describes some of the problems that you might encounter when using the scheduled job features of Windows PowerShell and it suggests solutions to these problems.</source>
          <target state="translated">本部分介绍一些使用 Windows PowerShell 的计划的作业功能时可能遇到的问题并建议这些问题的解决方案。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Before using Windows PowerShell scheduled jobs, see about_Scheduled_Jobs and the related scheduled jobs about topics.</source>
          <target state="translated">使用 Windows PowerShell 计划作业之前，请参阅 about_Scheduled_Jobs 以及有关主题相关的计划的作业。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This topic contains the following sections: --  CANNOT FIND JOB RESULTS --  SCHEDULED JOB DOES NOT RUN --  CANNOT GET SCHEDULED JOB : SCHEDULED JOB IS CORRUPTED --  JOB CMDLETS CANNOT CONSISTENTLY FIND SCHEDULED JOBS</source>
          <target state="translated">本主题包含以下各节:-找不到作业结果-安排作业不运行 — 不能获取计划作业︰ 计划的作业已损坏-作业 CMDLET 不能一致地找到计划的作业</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>CANNOT FIND JOB RESULTS</source>
          <target state="translated">找不到作业结果</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>-- Basic method for getting job results in Windows PowerShell</source>
          <target state="translated">-有关 Windows PowerShell 中获取作业结果基本方法</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When a scheduled job runs, it creates an "instance" of the scheduled job.</source>
          <target state="translated">计划的作业运行时，它创建计划作业的"实例"。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To view, manage, and  get the results of scheduled job instances, use the Job cmdlets.</source>
          <target state="translated">若要查看、 管理和获取计划的作业实例结果，请使用 Job cmdlet。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>NOTE: To use the Job cmdlets on instances of scheduled jobs, the PSScheduledJob module must be imported into the session.</source>
          <target state="translated">注意︰ 若要在计划作业的实例上使用 Job cmdlet，PSScheduledJob 模块必须导入到会话。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To import the PSScheduledJob module, type "Import-Module PSScheduledJob" (without quotation marks) or use any Scheduled Job cmdlet, such as Get-ScheduledJob.</source>
          <target state="translated">若要导入 PSScheduledJob 模块，请键入"Import-module PSScheduledJob"（不带引号），或使用任何 Scheduled Job cmdlet，如 Get-scheduledjob。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To get a list of all instances of a scheduled job, use the Get-Job cmdlet.</source>
          <target state="translated">若要获取计划作业的所有实例的列表，请使用 Get-job cmdlet。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Import-Module PSScheduledJob PS C:&gt; Get-Job ProcessJob</source>
          <target state="translated">PS c: &gt; 导入模块 PSScheduledJob PS c: &gt; Get-job ProcessJob</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Id     Name         PSJobTypeName   State         HasMoreData     Location</source>
          <target state="translated">Id 名称 PSJobTypeName 状态 HasMoreData 位置</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>43     ProcessJob   PSScheduledJob  Completed     False           localhost 44     ProcessJob   PSScheduledJob  Completed     False           localhost 45     ProcessJob   PSScheduledJob  Completed     False           localhost 46     ProcessJob   PSScheduledJob  Completed     False           localhost 47     ProcessJob   PSScheduledJob  Completed     False           localhost 48     ProcessJob   PSScheduledJob  Completed     False           localhost 49     ProcessJob   PSScheduledJob  Completed     False           localhost 50     ProcessJob   PSScheduledJob  Completed     False           localhost</source>
          <target state="translated">43 ProcessJob PSScheduledJob 完成 False localhost 44 ProcessJob PSScheduledJob 完成 False localhost 45 ProcessJob PSScheduledJob 完成 False localhost 46 ProcessJob PSScheduledJob 完成 False localhost 47 ProcessJob PSScheduledJob 完成 False localhost 48 ProcessJob PSScheduledJob 完成 False localhost 49 ProcessJob PSScheduledJob 完成 False localhost 50 ProcessJob PSScheduledJob 完成 False localhost</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following command uses the Format-Table cmdlet to display the Name, ID, and PSBeginTime properties of a scheduled job instance in a table.</source>
          <target state="translated">下面的命令使用 Format-table cmdlet 的计划的作业实例的名称、 ID 和 PSBeginTime 属性显示在一个表。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-Job ProcessJob | Format-Table -Property Name, ID, PSBeginTime -Auto</source>
          <target state="translated">PS c: &gt; Get-job ProcessJob |表格格式的属性名称、 ID、 PSBeginTime-自动</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Name       Id PSBeginTime</source>
          <target state="translated">名称 Id PSBeginTime</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>ProcessJob 43 11/2/2011 3:00:02 AM ProcessJob 44 11/3/2011 3:00:02 AM ProcessJob 45 11/4/2011 3:00:02 AM ProcessJob 46 11/5/2011 3:00:02 AM ProcessJob 47 11/6/2011 3:00:02 AM ProcessJob 48 11/7/2011 12:00:01 AM ProcessJob 49 11/7/2011 3:00:02 AM ProcessJob 50 11/8/2011 3:00:02 AM</source>
          <target state="translated">ProcessJob 43 11/2/2011年上午 3:00:02 ProcessJob 44 11/3/2011年上午 3:00:02 ProcessJob 45 11/4/2011年上午 3:00:02 ProcessJob 46 11/5/2011年上午 3:00:02 ProcessJob 47 11/6/2011年上午 3:00:02 ProcessJob 48 11/7/2011年 12:00:01 AM ProcessJob 49 11/7/2011年上午 3:00:02 ProcessJob 50 11/8/2011年上午 3:00:02</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To get the results of an instance of a scheduled job, use the Receive-Job cmdlet.</source>
          <target state="translated">若要获取的计划作业实例结果，请使用 Receive-job cmdlet。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following command gets the results of the newest instance of the ProcessJob (ID = 50).</source>
          <target state="translated">以下命令将获取 ProcessJob 的新实例的结果 (ID = 50)。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Receive-Job -ID 50</source>
          <target state="translated">PS c: &gt; 接收作业 ID 50</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>--  Basic method for finding job results on disk</source>
          <target state="translated">-基本方法用于在磁盘上查找作业结果</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To manage scheduled jobs, use the Job cmdlets, such as Get-Job and Receive-Job.</source>
          <target state="translated">若要管理的计划的作业，请使用 Job cmdlet，如 Get-job 和 Receive-job。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If Get-Job does not get the job instance or Receive-Job does not get the job results, you can search the execution history files for the job on disk.</source>
          <target state="translated">如果 Get 作业不会获取作业实例或接收作业不会获取作业结果，您可以搜索磁盘上的作业的执行历史记录文件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The execution history contains a record of all triggered job instances.</source>
          <target state="translated">执行历史记录中包含的所有触发的作业实例的记录。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Verify that there is a timestamp-named directory in the directory for a scheduled job in the following path:</source>
          <target state="translated">验证以下路径中的计划作业的目录中有时间戳命名目录︰</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>$home\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJob <ph id="ph1">&lt;ScheduledJobName&gt;</ph>\Output</source>
          <target state="translated">$home\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJob <ph id="ph1">&lt;ScheduledJobName&gt;</ph>\Output</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Typically: C:\Users<ph id="ph1">&lt;UserName&gt;</ph>\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJob <ph id="ph2">&lt;ScheduledJobName&gt;</ph>\Output</source>
          <target state="translated">通常︰ C:\Users<ph id="ph1">&lt;UserName&gt;</ph>\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJob <ph id="ph2">&lt;ScheduledJobName&gt;</ph>\Output</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the on-disk execution history of the ProcessJob scheduled job.</source>
          <target state="translated">例如，以下命令将获取 ProcessJob 计划作业的磁盘上执行历史记录。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>PS C:&gt; dir $home\AppData\Local\Microsoft\Windows\PowerShell \ScheduledJobs\ProcessJob\Output</source>
          <target state="translated">PS c: &gt; dir $home\AppData\Local\Microsoft\Windows\PowerShell \ScheduledJobs\ProcessJob\Output</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Directory: C:\Users\User01\AppData\Local\Microsoft\Windows\PowerShell \ScheduledJobs\ProcessJob\Output</source>
          <target state="translated">目录︰ C:\Users\User01\AppData\Local\Microsoft\Windows\PowerShell \ScheduledJobs\ProcessJob\Output</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Mode                LastWriteTime     Length Name</source>
          <target state="translated">模式                上次写入时间     长度名称</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>d----         11/2/2011   3:00 AM            20111102-030002-260 d----         11/3/2011   3:00 AM            20111103-030002-277 d----         11/4/2011   3:00 AM            20111104-030002-209 d----         11/5/2011   3:00 AM            20111105-030002-251 d----         11/6/2011   3:00 AM            20111106-030002-174 d----         11/7/2011  12:00 AM            20111107-000001-914 d----         11/7/2011   3:00 AM            20111107-030002-376</source>
          <target state="translated">d 11---/ 2/2011年 3:00 AM 20111102 030002 260 d---2011 年 11 月 3 日上午 3:00 20111103 030002 277 d---2011 年 11 月 4 日上午 3:00 20111104 030002 209 d---2011 年 11 月 5 日上午 3:00 20111105 030002 251 d---2011 年 11 月 6 日上午 3:00 20111106 030002 174 d---2011 年 11 月 7 日上午 12:00 20111107 000001 914 d---2011 年 11 月 7 日 3:00 AM 20111107 030002 376</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Each timestamp-named directory represents a job instance.</source>
          <target state="translated">每个时间戳命名目录表示作业实例。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The results of each job instance are saved in a Results.xml file in the timestamp-named directory.</source>
          <target state="translated">每个作业实例结果保存在名为时间戳的目录中的 Results.xml 文件。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the Results.xml files for every saved instance of the ProcessJob scheduled job.</source>
          <target state="translated">例如，以下命令将获取 ProcessJob 计划作业的每个已保存实例的 Results.xml 文件。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>PS C:&gt; dir $home\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJobs \ProcessJob\Output<ph id="ph1">\*</ph>\Results.xml</source>
          <target state="translated">PS c: &gt; dir $home\AppData\Local\Microsoft\Windows\PowerShell\ScheduledJobs \ProcessJob\Output<ph id="ph1">\*</ph>\Results.xml</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Directory: C:\Users\User01\Appdata\Local\Microsoft\Windows\PowerShell \ScheduledJobs\ProcessJob\Output</source>
          <target state="translated">目录︰ C:\Users\User01\Appdata\Local\Microsoft\Windows\PowerShell \ScheduledJobs\ProcessJob\Output</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If the Results.xml file is missing, Windows PowerShell cannot return or display the job results.</source>
          <target state="translated">如果缺少 Results.xml 文件，则 Windows PowerShell 不能返回或显示作业结果。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-- The Job cmdlet might not be able to get scheduled job instances or their results because the PSScheduledJob module is not imported into the session.</source>
          <target state="translated">--作业 cmdlet 可能不能获取计划的作业实例或它们的结果，因为 PSScheduledJob 模块未导入会话。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>NOTE:   Before using a Job cmdlet on scheduled job instances, verify that the PSScheduledJob module is included in the session.</source>
          <target state="translated">注意︰ 在计划的作业实例上使用 Job cmdlet 之前, 验证 PSScheduledJob 模块包括在会话中。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Without the module, the Job cmdlets cannot get scheduled job instances or their results.</source>
          <target state="translated">如果没有模块，Job cmdlet 无法获取计划的作业实例或它们的结果。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To import the PSScheduledJob module, type:</source>
          <target state="translated">若要导入 PSScheduledJob 模块，请键入︰</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Import-Module PSScheduledJob</source>
          <target state="translated">导入模块 PSScheduledJob</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-- The Receive-Job cmdlet might already have returned the results in the current session.</source>
          <target state="translated">--Receive-job cmdlet 可能已经返回结果与当前会话中。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If Receive-Job does not return job instance results, it might be because a Receive-Job command has been run for that job instance in the current session without the Keep parameter.</source>
          <target state="translated">如果接收作业不返回作业实例结果，则可能是因为 Receive-job 命令已为运行该作业实例而无需使用 Keep 参数与当前会话中。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When you use Receive-Job without the Keep parameter, Receive-Job returns the job results and sets the HasMoreData property of the job instance to False to indicate that it returned all of the results for the job instance and has no more results to return.</source>
          <target state="translated">当您使用 Receive-job 不使用 Keep 参数的情况下时，接收作业返回作业结果，并将作业实例的 HasMoreData 属性设置为 False 以指示它返回的所有作业实例结果，并具有返回没有更多结果。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This setting is appropriate for standard background jobs, but not for instances of scheduled jobs, which are saved to disk.</source>
          <target state="translated">此设置是适用于标准后台作业，但不是能为实例的计划作业，将保存到磁盘。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To get the job instance results again, start a new Windows PowerShell session (type "PowerShell" without quotation marks), import the PSScheduledJob module, and try the Receive-Job command again.</source>
          <target state="translated">若要获取作业实例结果同样，启动新的 Windows PowerShell 会话 （类型为"PowerShell"不带引号），导入 PSScheduledJob 模块中，并重试 Receive-job 命令。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Receive-Job -ID 50 PS C:&gt;                     #No results PS C:&gt; PowerShell</source>
          <target state="translated">PS c: &gt; 接收作业的 ID 50 PS c: &gt; #No 结果 PS c: &gt; PowerShell</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Windows PowerShell Copyright (C) 2012 Microsoft Corporation.</source>
          <target state="translated">Windows PowerShell 版权所有 （C) 2012 Microsoft Corporation。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>All rights reserved.</source>
          <target state="translated">保留所有权利。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Import-Module PSScheduledJob PS C:&gt; Receive-Job -ID 50</source>
          <target state="translated">PS c: &gt; 导入模块 PSScheduledJob PS c: &gt; 接收作业 ID 50</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName</source>
          <target state="translated">处理 npm （k) pm （k) ws （k) vm （m) CPU(s) Id ProcessName</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>1213      33    12348      21676    88    25.71   1608 CcmExec 29       4     1168       2920    43     0.02    748 conhost 46       6     2208       4612    45     0.03   1640 conhost</source>
          <target state="translated">1213 33 12348 21676 88 25.71 1608 CcmExec 29 4 1168年 2920年 43 0.02 748 conhost 46 6 2208年 4612 45 0.03 1640 conhost</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To get the result of a job instance more than one time in a session, use the Keep parameter of the Receive-Job cmdlet.</source>
          <target state="translated">若要获取的作业实例结果在会话中的多个时间，请使用 Receive-job cmdlet 的保留参数。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Import-Module PSScheduledJob PS C:&gt; Receive-Job -ID 50 -Keep</source>
          <target state="translated">PS c: &gt; 导入模块 PSScheduledJob PS c: &gt; 接收作业的 ID 50 的保留</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName</source>
          <target state="translated">处理 npm （k) pm （k) ws （k) vm （m) CPU(s) Id ProcessName</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>1213      33    12348      21676    88    25.71   1608 CcmExec 29       4     1168       2920    43     0.02    748 conhost 46       6     2208       4612    45     0.03   1640 conhost</source>
          <target state="translated">1213 33 12348 21676 88 25.71 1608 CcmExec 29 4 1168年 2920年 43 0.02 748 conhost 46 6 2208年 4612 45 0.03 1640 conhost</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Receive-Job -ID 50 -Keep</source>
          <target state="translated">PS c: &gt; 接收作业的 ID 50 的保留</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName</source>
          <target state="translated">处理 npm （k) pm （k) ws （k) vm （m) CPU(s) Id ProcessName</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>1213      33    12348      21676    88    25.71   1608 CcmExec 29       4     1168       2920    43     0.02    748 conhost 46       6     2208       4612    45     0.03   1640 conhost</source>
          <target state="translated">1213 33 12348 21676 88 25.71 1608 CcmExec 29 4 1168年 2920年 43 0.02 748 conhost 46 6 2208年 4612 45 0.03 1640 conhost</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>-- The scheduled job might be corrupted.</source>
          <target state="translated">--计划的作业可能已损坏。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If a scheduled job becomes corrupted, Windows PowerShell deletes the corrupted scheduled job and its results.</source>
          <target state="translated">如果损坏的计划的作业，Windows PowerShell 删除损坏的计划的作业和其结果。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You cannot recover the results of a corrupted scheduled job.</source>
          <target state="translated">不能恢复已损坏的计划作业的结果。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To determine if a scheduled job still exists, use the Get-ScheduledJob cmdlet.</source>
          <target state="translated">若要确定的计划的作业是否仍然存在，请使用 Get-scheduledjob cmdlet。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-ScheduledJob</source>
          <target state="translated">PS c: &gt; Get-scheduledjob</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-- The number of results might have exceeded the ExecutionHistoryLength of the scheduled job.</source>
          <target state="translated">-可能计划作业的 ExecutionHistoryLength 超出的结果数。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The ExecutionHistoryLength property of a scheduled job determines how many job instances, and their results, are saved to disk.</source>
          <target state="translated">在计划作业的 ExecutionHistoryLength 属性确定多少个作业实例，以及它们的结果、 将保存到磁盘。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The default value is 32.</source>
          <target state="translated">默认值为 32。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>When the number of instances of a scheduled job exceeds this value, Windows PowerShell deletes the oldest job instance to make room for each new job instance.</source>
          <target state="translated">当计划作业的实例数超过此值时，Windows PowerShell 将删除最早的作业实例，以便腾出空间供每个新的作业实例。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>To get the value of the ExecutionHistoryLength property of a scheduled job, use the following command format:</source>
          <target state="translated">若要获取计划作业的 ExecutionHistoryLength 属性值，请使用以下命令格式︰</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>(Get-ScheduledJob <ph id="ph1">&lt;JobName&gt;</ph>).ExecutionHistoryLength</source>
          <target state="translated">(Get-scheduledjob <ph id="ph1">&lt;JobName&gt;</ph>)。ExecutionHistoryLength</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For example, the following command gets the value of the ExecutionHistoryLength property of the ProcessJob scheduled job.</source>
          <target state="translated">例如，以下命令获取 ProcessJob 计划作业的 ExecutionHistoryLength 属性的值。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>PS C:&gt; (Get-ScheduledJob ProcessJob).ExecutionHistoryLength</source>
          <target state="translated">PS c: &gt; (Get-scheduledjob ProcessJob)。ExecutionHistoryLength</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>To set or change the value of the ExecutionHistoryLength property, use the MaxResultCount parameter of the Register-ScheduledJob and Set-ScheduledJob cmdlets.</source>
          <target state="translated">若要设置或更改 ExecutionHistoryLength 属性的值，使用了 Register-scheduledjob 和 Set-scheduledjob cmdlet 的 MaxResultCount 参数。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The following command increases the value of the ExecutionHistoryLength property to 50.</source>
          <target state="translated">以下命令将增加到 50 ExecutionHistoryLength 属性的值。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-ScheduledJob ProcessJob | Set-ScheduledJob -MaxResultCount 50</source>
          <target state="translated">PS c: &gt; Get-scheduledjob ProcessJob |Set-scheduledjob MaxResultCount 50</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-- The job instance results might have been deleted</source>
          <target state="translated">--作业实例结果可能已被删除</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The ClearExecutionHistory parameter of the Set-ScheduledJob cmdlet deletes the execution history of a job.</source>
          <target state="translated">Set-scheduledjob cmdlet 的 ClearExecutionHistory 参数删除作业的执行历史记录。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>You can use this feature to free up disk space or delete results that are not needed, or already used, analyzed or saved in a different location.</source>
          <target state="translated">此功能可用于释放磁盘空间或删除不需要或已使用、 分析或保存在不同位置的结果。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>To delete the execution history of a scheduled job, use the ClearExecutionHistory parameter of the scheduled job.</source>
          <target state="translated">若要删除计划作业的执行历史记录，请使用计划的作业的 ClearExecutionHistory 参数。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The following command deletes the execution history of the ProcessJob scheduled job.</source>
          <target state="translated">以下命令将删除 ProcessJob 计划作业的执行历史记录。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-ScheduledJob ProcessJob | Set-ScheduledJob -ClearExecutionHistory</source>
          <target state="translated">PS c: &gt; Get-scheduledjob ProcessJob |Set-scheduledjob ClearExecutionHistory</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Also, the Remove-Job cmdlet deletes job results.</source>
          <target state="translated">此外，Remove-job cmdlet 删除作业结果。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When you use Remove-Job to delete a scheduled job, it deletes all instances of the job on disk, including the execution history and all job results.</source>
          <target state="translated">当您使用删除作业删除计划的作业时，它将删除上磁盘空间，包括执行历史记录和所有作业结果的作业的所有实例。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-- Jobs started by using the Start-Job cmdlet are not saved to disk.</source>
          <target state="translated">-通过使用 Start-job cmdlet 启动的作业不会保存到磁盘。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>When you use Start-Job to start a scheduled job, instead of using a job trigger, Start-Job starts a standard background job.</source>
          <target state="translated">当您使用 Start-job 启动计划的作业，而不是使用作业触发器，启动作业启动标准后台作业。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The background job and its results are not stored in the execution history of the job on disk.</source>
          <target state="translated">后台作业，而其结果不存储在磁盘上的作业的执行历史记录中。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>You can use the Get-Job cmdlet to get the job and the Receive-Job cmdlet to get the job results, but the results are available only until you receive them, unless you use the Keep parameter of the Receive-Job cmdlet.</source>
          <target state="translated">您可以使用 Get-job cmdlet 获取作业和 Receive-job cmdlet 来获取作业结果，但结果之前，将仅接收消息，除非您使用 Receive-job cmdlet 的保留参数。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Also, background jobs and their results are session-specific; they exist only in the session in which they are created.</source>
          <target state="translated">此外，后台作业和它们的结果是特定于会话的;它们仅在创建它们的会话中存在。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If you delete the job (Remove-Job), close the session or close Windows PowerShell, the job instance and its results are deleted.</source>
          <target state="translated">如果您删除作业 (Job)，关闭会话或关闭 Windows PowerShell、 作业实例和其结果会被删除。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>SCHEDULED JOB DOES NOT RUN</source>
          <target state="translated">计划的作业不会运行</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>-- Scheduled jobs do not run automatically if the job triggers or the scheduled job are disabled.</source>
          <target state="translated">-如果禁用了作业触发器或计划的作业计划的作业不会自动运行。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Use the Get-ScheduledJob cmdlet to get the scheduled job.</source>
          <target state="translated">使用 Get-scheduledjob cmdlet 来获取计划的作业。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Verify that the value of the Enabled property of the scheduled job is True ($true).</source>
          <target state="translated">验证计划的作业的 Enabled 属性的值为 True ($true)。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-ScheduledJob ProcessJob</source>
          <target state="translated">PS c: &gt; Get-scheduledjob ProcessJob</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Id         Name            Triggers        Command         Enabled</source>
          <target state="translated">Id 名称触发器命令启用</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>4          ProcessJob      {1, 2}          Get-Process     True</source>
          <target state="translated">4 ProcessJob {1，2} Get-process True</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>PS C:&gt; (Get-ScheduledJob ProcessJob).Enabled True</source>
          <target state="translated">PS c: &gt; (Get-scheduledjob ProcessJob)。启用 True</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Use the Get-JobTrigger cmdlet to get the job triggers of the scheduled job.</source>
          <target state="translated">使用 Get-jobtrigger cmdlet 来获取计划作业的作业触发器。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Verify that the value of the Enabled property of the job trigger is True ($true)</source>
          <target state="translated">验证作业触发器的 Enabled 属性的值为 True ($true)</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-ScheduledJob ProcessJob | Get-JobTrigger</source>
          <target state="translated">PS c: &gt; Get-scheduledjob ProcessJob |Get-jobtrigger</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Id         Frequency       Time                   DaysOfWeek              Enabled</source>
          <target state="translated">Id 频率时间 DaysOfWeek 启用</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>1          Weekly          11/7/2011 5:00:00 AM   {Monday, Thursday}      True 2          Daily           11/7/2011 3:00:00 PM                           True</source>
          <target state="translated">1 每周 11/7/2011年 5:00:00 AM {星期一、 星期四} True 2 每日 11/7/2011年下午 3:00:00 True</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-ScheduledJob ProcessJob | Get-JobTrigger | Format-Table ID, Enabled -Auto</source>
          <target state="translated">PS c: &gt; Get-scheduledjob ProcessJob |Get-jobtrigger |格式表 ID，已启用-自动</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Id Enabled</source>
          <target state="translated">启用的 id</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>1    True 2    True</source>
          <target state="translated">1 true 2 True</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>-- Scheduled jobs do not run automatically if the job triggers are invalid.</source>
          <target state="translated">-无效的作业触发器，则计划的作业不会自动运行。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For example, a job trigger might specify a date in the past or a date that does not occur, such as the 5th Monday of the month.</source>
          <target state="translated">例如，在过去的日期或没有出现，如每月的第五个星期一的日期，可以指定作业触发器。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>-- Scheduled jobs do not run automatically if the conditions of the job trigger or the job options are not satisfied.</source>
          <target state="translated">-如果未满足条件的作业触发器或作业选项，则计划的作业不会自动运行。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>For example, a scheduled job that runs only when a particular user logs on to the computer will not run if that user does not log on or only connects remotely.</source>
          <target state="translated">例如，如果该用户未登录或者仅远程连接将不会运行特定用户登录到计算机时才运行计划的作业。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Examine the options of the scheduled job and make sure that they are satisfied.</source>
          <target state="translated">检查计划的作业的选项，并确保他们感到满意。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>For example, a scheduled job that requires that the computer be idle or requires a network connection, or has a long IdleDuration or a brief IdleTimeout might never run.</source>
          <target state="translated">例如，需要对计算机进行的计划的作业空闲或需要网络连接，或具有长 IdleDuration 或简要 IdleTimeout 可能永远不会运行。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Use the Get-ScheduledJobOption cmdlet to examine the job options and their values.</source>
          <target state="translated">使用 Get-scheduledjoboption cmdlet 来检查作业选项和它们的值。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-ScheduledJob -Name ProcessJob</source>
          <target state="translated">PS c: &gt; Get-scheduledjob-命名 ProcessJob</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>StartIfOnBatteries     : False StopIfGoingOnBatteries : True WakeToRun              : True StartIfNotIdle         : True StopIfGoingOffIdle     : False RestartOnIdleResume    : False IdleDuration           : 00:10:00 IdleTimeout            : 01:00:00 ShowInTaskScheduler    : True RunElevated            : False RunWithoutNetwork      : True DoNotAllowDemandStart  : False MultipleInstancePolicy : IgnoreNew JobDefinition          : Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</source>
          <target state="translated">StartIfOnBatteries: False StopIfGoingOnBatteries: True WakeToRun: True StartIfNotIdle: True StopIfGoingOffIdle: False RestartOnIdleResume: False IdleDuration: 00:10:00 IdleTimeout: 01:00:00 ShowInTaskScheduler: True RunElevated: False RunWithoutNetwork: True DoNotAllowDemandStart: False MultipleInstancePolicy: IgnoreNew JobDefinition: Microsoft.PowerShell.ScheduledJob.ScheduledJobDefinition</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>For descriptions of the scheduled job options, see the help topic for the New-ScheduledJobOption cmdlet (http://go.microsoft.com/fwlink/?LinkID=223919).</source>
          <target state="translated">计划的作业选项的说明，请参阅 New-scheduledjoboption cmdlet (http://go.microsoft.com/fwlink/?LinkID=223919) 的帮助主题。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>-- The scheduled job instance might have failed.</source>
          <target state="translated">--计划的作业实例可能已失败。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If a scheduled job command fails, Windows PowerShell reports it immediately by generating an error message.</source>
          <target state="translated">如果计划的作业命令失败，Windows PowerShell 将报告它立即通过生成一条错误消息。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>However, if the job fails when Task Scheduler tries to run it, the error is not available to Windows PowerShell.</source>
          <target state="translated">但是，如果作业在任务计划程序尝试运行它时失败，则 Windows PowerShell 将不返回此错误。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Use the following methods to detect and correct job failures.</source>
          <target state="translated">使用以下方法来检测和更正作业失败。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>-- Check the Task Scheduler event log for errors.</source>
          <target state="translated">--检查任务计划程序事件日志中有错误。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>To check the log, use Event Viewer or a Windows PowerShell command such as the following:</source>
          <target state="translated">若要检查日志，请使用事件查看器或 Windows PowerShell 命令，如下所示︰</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Get-WinEvent -LogName Microsoft-Windows-TaskScheduler/Operational | Where {$_.Message -like "fail"}</source>
          <target state="translated">Get-winevent-LogName Microsoft Windows 的 TaskScheduler/操作 |其中 {$_。如"失败"消息}</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>-- Check the job record in Task Scheduler.</source>
          <target state="translated">--检查任务计划程序中的作业记录。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Windows PowerShell scheduled jobs are stored in the following Task Scheduled folder:</source>
          <target state="translated">Windows PowerShell 计划作业存储在以下计划任务文件夹中︰</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Task Scheduler Library\Microsoft\Windows\PowerShell\ScheduledJobs</source>
          <target state="translated">Task Scheduler Library\Microsoft\Windows\PowerShell\ScheduledJobs</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>-- The scheduled job might not run because of insuffienct permission.</source>
          <target state="translated">--计划的作业可能无法运行由于 insuffienct 权限。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Scheduled jobs run with the permissions of the user who created the job or the permissions of the user who is specified by the Credential parameter in the Register-ScheduledJob or Set-ScheduledJob command.</source>
          <target state="translated">使用创建该作业的用户的权限或 Register-scheduledjob 或 Set-scheduledjob 命令中为 Credential 参数指定的用户权限运行计划的作业。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>If that user does not have permission to run the commands or scripts, the job fails.</source>
          <target state="translated">如果该用户没有权限来运行命令或脚本，则作业将失败。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>CANNOT GET SCHEDULED JOB : SCHEDULED JOB IS CORRUPTED</source>
          <target state="translated">无法获取计划作业︰ 计划的作业已损坏</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>On rare occasions, scheduled jobs can become corrupted or contain internal contradictions that cannot be resolved.</source>
          <target state="translated">在极少数情况下，计划的作业可能会损坏或包含无法解析的内部矛盾。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Typically, this happens when the XML files for the scheduled job are manually edited, resulting in invalid XML.</source>
          <target state="translated">通常情况下，这发生在手动编辑计划的作业的 XML 文件，从而导致无效的 XML。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>When a scheduled job is corrupted, Windows PowerShell attempts to delete the scheduled job, its execution history, and its results from disk.</source>
          <target state="translated">当计划的作业已损坏时，Windows PowerShell 将尝试从磁盘中删除计划的作业，其执行历史记录，其结果。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>If it cannot remove the scheduled job, you will get a corrupted job error message each time you run the Get-ScheduledJob cmdlet.</source>
          <target state="translated">如果它不能删除计划的作业，每次运行 Get-scheduledjob cmdlet 将获取已损坏的作业错误消息。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>To remove a corrupted scheduled job, use either one of the following methods.</source>
          <target state="translated">若要删除损坏的计划的作业，请使用以下方法之一。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>-- Delete the <ph id="ph1">&lt;ScheduledJobName&gt;</ph> directory for the scheduled job.</source>
          <target state="translated">--删除 <ph id="ph1">&lt;ScheduledJobName&gt;</ph> 目录中为计划的作业。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Do not delete the ScheduledJob directory.</source>
          <target state="translated">不要删除 ScheduledJob 目录。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The directory is located at $env:UserProfile\AppData\Local\Microsoft\Windows\PowerShell \ScheduledJobs</source>
          <target state="translated">该目录位于 $env: UserProfile\AppData\Local\Microsoft\Windows\PowerShell \ScheduledJobs</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Typically: C:\Users<ph id="ph1">&lt;UserName&gt;</ph>\AppData\Local\Microsoft\Windows\PowerShell \ScheduledJobs<ph id="ph2">&lt;ScheduledJobName&gt;</ph>.</source>
          <target state="translated">通常︰ C:\Users<ph id="ph1">&lt;UserName&gt;</ph>\AppData\Local\Microsoft\Windows\PowerShell \ScheduledJobs<ph id="ph2">&lt;ScheduledJobName&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>-- Use Task Scheduler to delete the scheduled job.</source>
          <target state="translated">--使用任务计划程序以删除计划的作业。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Windows PowerShell scheduled tasks appear in the following Task Scheduler path:</source>
          <target state="translated">Windows PowerShell 计划任务会出现在下面的任务计划程序路径中︰</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Task Scheduler Library\Microsoft\Windows\PowerShell\ScheduledJobs</source>
          <target state="translated">Task Scheduler Library\Microsoft\Windows\PowerShell\ScheduledJobs</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>-- JOB CMDLETS CANNOT CONSISTENTLY FIND SCHEDULED JOBS</source>
          <target state="translated">-JOB CMDLET 一致地找不到计划的作业</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>When the PSScheduledJob module is not in the current session, the Job cmdlets cannot get scheduled jobs, start them, or get their results.</source>
          <target state="translated">当 PSScheduledJob 模块不在当前会话中，作业 cmdlet 不能获取计划的作业、 启动它们，或获取其结果。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>To import the PSScheduledJob module, type "Import-Module PSScheduledJob" or run or get any cmdlet in the module, such as the Get-ScheduledJob cmdlet.</source>
          <target state="translated">若要导入 PSScheduledJob 模块，请键入"Import-module PSScheduledJob"或运行或在模块中，如 Get-scheduledjob cmdlet 获取任何 cmdlet。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, modules are imported automatically when you get or use any cmdlet in the module.</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，模块会自动导入在获取或使用模块中的任何 cmdlet。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>When the PSScheduledJob cmdlet is not in the current session, the following command sequence is possible.</source>
          <target state="translated">当 PSScheduledJob cmdlet 不在当前会话中时，将下面的命令序列。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-Job ProcessJob</source>
          <target state="translated">PS c: &gt; Get-job ProcessJob</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Get-Job : The command cannot find the job because the job name ProcessJob was not found.</source>
          <target state="translated">Get-job︰ 因为未找到作业名称 ProcessJob，该命令找不到该作业。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Verify the value of the Name parameter, and then try the command again.</source>
          <target state="translated">验证名称参数的值，然后再重试该命令。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>CategoryInfo          : ObjectNotFound: (ProcessJob:String) [Get-Job], PSArgumentException</source>
          <target state="translated">CategoryInfo: ObjectNotFound: (ProcessJob:String) [Get-job] PSArgumentException</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>FullyQualifiedErrorId : JobWithSpecifiedNameNotFound,Microsoft.PowerShell.</source>
          <target state="translated">FullyQualifiedErrorId: JobWithSpecifiedNameNotFound,Microsoft.PowerShell。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Commands.GetJobCommand</source>
          <target state="translated">Commands.GetJobCommand</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-Job PS C:&gt; Get-ScheduledJob ProcessJob</source>
          <target state="translated">PS c: &gt; Get-job PS c: &gt; Get-scheduledjob ProcessJob</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Id         Name            Triggers        Command      Enabled</source>
          <target state="translated">Id 名称触发器命令启用</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>4          ProcessJob      {1}             Get-Process  True</source>
          <target state="translated">4 ProcessJob {1 \} 获取进程 True</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>PS C:&gt; Get-Job ProcessJob</source>
          <target state="translated">PS c: &gt; Get-job ProcessJob</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Id     Name         PSJobTypeName   State       HasMoreData     Location</source>
          <target state="translated">Id 名称 PSJobTypeName 状态 HasMoreData 位置</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>43     ProcessJob   PSScheduledJob  Completed   True            localhost 44     ProcessJob   PSScheduledJob  Completed   True            localhost 45     ProcessJob   PSScheduledJob  Completed   True            localhost 46     ProcessJob   PSScheduledJob  Completed   True            localhost 47     ProcessJob   PSScheduledJob  Completed   True            localhost 48     ProcessJob   PSScheduledJob  Completed   True            localhost 49     ProcessJob   PSScheduledJob  Completed   True            localhost 50     ProcessJob   PSScheduledJob  Completed   True            localhost</source>
          <target state="translated">43 ProcessJob PSScheduledJob 完成，则返回 True localhost 44 ProcessJob PSScheduledJob 完成，则返回 True localhost 45 ProcessJob PSScheduledJob 完成，则返回 True localhost 46 ProcessJob PSScheduledJob 完成，则返回 True localhost 47 ProcessJob PSScheduledJob 完成，则返回 True localhost 48 ProcessJob PSScheduledJob 完成，则返回 True localhost 49 ProcessJob PSScheduledJob 完成，则返回 True localhost 50 ProcessJob PSScheduledJob 完成，则返回 True localhost</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>This behavior occurs because the Get-ScheduledJob command automatically imports the PSScheduledJob module, and then runs the command.</source>
          <target state="translated">出现此行为是因为 Get-scheduledjob 命令会自动导入 PSScheduledJob 模块，然后运行该命令。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>about_Scheduled_Jobs about_Scheduled_Jobs_Basics about_Scheduled_Jobs_Advanced</source>
          <target state="translated">about_Scheduled_Jobs about_Scheduled_Jobs_Basics about_Scheduled_Jobs_Advanced</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>