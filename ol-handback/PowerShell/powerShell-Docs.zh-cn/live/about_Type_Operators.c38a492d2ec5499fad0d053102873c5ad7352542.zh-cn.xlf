<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f4d6c6e698f636aead229ad01535100b7796fc6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Type_Operators.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ff4e40984083d62c3f648d9f19fe32be23c3be5e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">410c464fc9702383f4f9a560e9f362d0b9c6d5f9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Type_Operators</source>
          <target state="translated">about_Type_Operators</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Type Operators</source>
          <target state="translated">有关类型运算符</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Type_Operators</source>
          <target state="translated">about_Type_Operators</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Type_Operators</source>
          <target state="translated">about_Type_Operators</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">简短说明</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes the operators that work with Microsoft .NET Framework types.</source>
          <target state="translated">介绍使用 Microsoft.NET Framework 类型的运算符。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">详细说明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Boolean type operators (-is and -isNot) tell whether an object is an instance of a specified .NET Framework type.</source>
          <target state="translated">布尔类型运算符 (-是和-isNot) 指示对象是否是指定的.NET Framework 类型的实例。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The -is operator returns a value of TRUE if the type matches and a value of FALSE otherwise.</source>
          <target state="translated">-为运算符将返回值为 TRUE，如果类型匹配和的值为 FALSE 否则。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The -isNot operator returns a value of FALSE if the type matches and a value of TRUE otherwise.</source>
          <target state="translated">-IsNot 运算符否则，返回的值为 FALSE，如果类型匹配，值为 TRUE。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The -as operator tries to convert the input object to the specified .NET Framework type.</source>
          <target state="translated">-如运算符尝试将输入的对象转换为指定的.NET Framework 类型。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If it succeeds, it returns the converted object.</source>
          <target state="translated">如果成功，它将返回转换后的对象。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It if fails, it returns nothing.</source>
          <target state="translated">它如果失败，它将返回执行任何操作。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It does not return an error.</source>
          <target state="translated">它不返回错误。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following table lists the type operators in  Windows PowerShell�.</source>
          <target state="translated">下表列出了 Windows PowerShell 中的类型运算符。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The syntax of the type operators is as follows:</source>
          <target state="translated">类型运算符的语法如下所示︰</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also use the following syntax:</source>
          <target state="translated">此外可以使用以下语法︰</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To specify the .NET Framework type, enclose the type name in brackets ([ ]), or enter the type as a string, such as [DateTime] or "DateTime" for System.DateTime.</source>
          <target state="translated">若要指定.NET Framework 类型时，将类型名称括在方括号 ([])，或输入的类型为字符串，如 [DateTime] 或"DateTime"System.DateTime。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the type is not at the root of the system namespace, specify the full name of the object type.</source>
          <target state="translated">如果类型不是根目录下的 system 命名空间中，指定的对象类型的完整名称。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can omit "System.".</source>
          <target state="translated">可以省略"系统。"。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, to specify System.Diagnostics.Process, enter [System.Diagnostics.Process], [Diagnostics.Process], or "diagnostics.process".</source>
          <target state="translated">例如，若要指定 System.Diagnostics.Process，输入 [System.Diagnostics.Process] [Diagnostics.Process] 或"diagnostics.process"。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The type operators always return a Boolean value, even if the input is a collection of objects.</source>
          <target state="translated">类型运算符始终返回一个布尔值，即使输入是对象的集合。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>However, when the input is a collection, the type operators match the .NET Framework type of the collection.</source>
          <target state="translated">但是，在输入集合时，类型运算符匹配的.NET Framework 类型的集合。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>They do not match the type of each object, even when all of the objects are of the same type.</source>
          <target state="translated">甚至当的所有对象均为相同的类型时，它们不会匹配的每个对象的类型。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To find the .NET Framework type of an object, use the Get-Member cmdlet.</source>
          <target state="translated">若要查找的对象的.NET Framework 类型，请使用 Get-member cmdlet。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Or, use the GetType method of all the objects together with the FullName property of this method.</source>
          <target state="translated">或者，我们使用 GetType 方法以及此方法的 FullName 属性的所有对象。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example, the following statement gets the type of the return value of a Get-Culture command:</source>
          <target state="translated">例如，下面的语句将获取 Get-culture 命令的返回值的类型︰</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following examples show some uses of the Type operators:</source>
          <target state="translated">下面的示例演示一些类型运算符的用法︰</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following example shows that when the input is a collection of objects, the matching type is the .NET Framework type of the collection, not the type of the individual objects in the collection.</source>
          <target state="translated">下面的示例演示当输入是对象的集合，匹配的类型的集合，不在集合中的各个对象的类型的.NET Framework 类型。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In this example, although both the Get-Culture and Get-UICulture cmdlets return System.Globalization.CultureInfo objects, a collection of these objects is a System.Object array.</source>
          <target state="translated">在此示例中，尽管 Get-culture 和 Get-uiculture cmdlet 返回 System.Globalization.CultureInfo 对象，这些对象的集合是 System.Object 数组。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following examples show how to use the -as operator.</source>
          <target state="translated">下面的示例演示如何使用的运算符。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following example shows that when the -as operator cannot convert the input object to the .NET Framework type, it returns nothing.</source>
          <target state="translated">下面的示例演示当-当运算符不能将输入的对象转换为.NET Framework 类型，它会返回任何内容。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>about_Operators</source>
          <target state="translated">about_Operators</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>