<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb4646b9638bf6bf76f890277e936628567b8447</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\ConvertFrom-Csv.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">56bfa926f6ada4d6125d4817e8bbe26325ba8330</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">43160b76d1cb03d66bf5f89172c2e1b6aa571c0c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell-Cmdlets</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ConvertFrom-Csv</source>
          <target state="translated">ConvertFrom-Csv</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ConvertFrom-Csv</source>
          <target state="translated">ConvertFrom-Csv</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">ZUSAMMENFASSUNG</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Converts object properties in comma-separated value (CSV) format into CSV versions of the original objects.</source>
          <target state="translated">Konvertiert Objekteigenschaften im durch Trennzeichen getrennten (CSV-)Format in CSV-Versionen der ursprünglichen Objekte.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SYNTAX</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Delimiter (Default)</source>
          <target state="translated">Trennzeichen (Standard)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>UseCulture</source>
          <target state="translated">UseCulture</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">BESCHREIBUNG</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertFrom-Csv<ept id="p1">**</ept> cmdlet creates objects from CSV variable-length strings that are generated by the ConvertTo-Csv cmdlet.</source>
          <target state="translated">Die <bpt id="p1">**</bpt>ConvertFrom-Csv<ept id="p1">**</ept> Cmdlet erstellt Objekte aus CSV-Zeichenfolgen variabler Länge, die vom ConvertTo-Csv-Cmdlet generiert werden.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can use the parameters of this cmdlet to specify the column header row, which determines the property names of the resulting objects, to specify the item delimiter, or to direct this cmdlet to use the list separator for the current culture as the delimiter.</source>
          <target state="translated">Sie können die Parameter dieses Cmdlet verwenden, angeben die Spaltenkopfzeile die Eigenschaftsnamen der resultierenden Objekte bestimmt, das Elementtrennzeichen angeben oder leiten das Cmdlet, um das Listentrennzeichen für die aktuelle Kultur als Trennzeichen verwendet.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The objects that <bpt id="p1">**</bpt>ConvertFrom-CSV<ept id="p1">**</ept> creates are CSV versions of the original objects.</source>
          <target state="translated">Die Objekte, die <bpt id="p1">**</bpt>ConvertFrom-CSV<ept id="p1">**</ept> erstellt sind CSV-Versionen der ursprünglichen Objekte.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The property values of the CSV objects are string versions of the property values of the original objects.</source>
          <target state="translated">Die Eigenschaftswerte der CSV-Objekte sind Zeichenfolgenversionen der Eigenschaftswerte der ursprünglichen Objekte.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The CSV versions of the objects do not have any methods.</source>
          <target state="translated">Die CSV-Versionen der Objekte haben keine Methoden.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can also use the Export-Csv and Import-Csv cmdlets to convert objects to CSV strings in a file (and back).</source>
          <target state="translated">Die Export-Csv und Import-Csv-Cmdlets können zum Konvertieren von Objekten in CSV-Zeichenfolgen (und zurück).</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>These cmdlets are the same as the <bpt id="p1">**</bpt>ConvertTo-CSV<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ConvertFrom-CSV<ept id="p2">**</ept> cmdlets, except that they save the CSV strings in a file.</source>
          <target state="translated">Diese Cmdlets sind identisch mit der <bpt id="p1">**</bpt>ConvertTo-CSV<ept id="p1">**</ept> und <bpt id="p2">**</bpt>ConvertFrom-CSV<ept id="p2">**</ept> -Cmdlets, mit der Ausnahme, dass sie die CSV-Zeichenfolgen in einer Datei speichern.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">BEISPIELE</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example 1: Convert processes on the local computer to CSV format</source>
          <target state="translated">Beispiel 1: Konvertieren Sie Prozesse auf dem lokalen Computer in CSV-Format.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>These commands convert the processes on the local computer into CSV format and then restore them to object form.</source>
          <target state="translated">Diese Befehle konvertieren die Prozesse auf dem lokalen Computer in das CSV-Format und stellen sie dann im Objektformat wieder her.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Get-Process<ept id="p1">**</ept> cmdlet to get the processes on the local computer.</source>
          <target state="translated">Der erste Befehl verwendet die <bpt id="p1">**</bpt>Get-Process<ept id="p1">**</ept> -Cmdlet zum Abrufen der Prozesse auf dem lokalen Computer.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A pipeline operator (|) sends them to the <bpt id="p1">**</bpt>ConvertTo-CSV<ept id="p1">**</ept> cmdlet, which converts the process object to CSV format.</source>
          <target state="translated">Ein Pipelineoperator (|) sendet diese an die <bpt id="p1">**</bpt>ConvertTo-CSV-<ept id="p1">**</ept> -Cmdlet, das das Prozessobjekt in das CSV-Format konvertiert.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The CSV strings are saved in the $p variable.</source>
          <target state="translated">Die CSV-Zeichenfolgen werden in der $p-Variablen gespeichert.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The second command uses a pipeline operator to send the CSV strings in the $p variable to the <bpt id="p1">**</bpt>ConvertFrom-CSV<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">Der zweite Befehl verwendet einen Pipelineoperator, senden die CSV-Zeichenfolgen in der $p-Variablen in der <bpt id="p1">**</bpt>ConvertFrom-CSV<ept id="p1">**</ept> Cmdlet.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The cmdlet converts the CSV strings into CSV versions of the original process objects.</source>
          <target state="translated">Das Cmdlet konvertiert die CSV-Zeichenfolgen in CSV-Versionen der ursprünglichen Prozessobjekte.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Example 2: Convert a data object to CSV format and then to CSV object format</source>
          <target state="translated">Beispiel 2: Konvertieren eines Datenobjekts, CSV-Format und dann als CSV-Objekt</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>These commands convert a data object to CSV format and then to CSV object format.</source>
          <target state="translated">Diese Befehle konvertieren ein Datenobjekt in das CSV-Format und dann in das CSV-Objektformat.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Date cmdlet to get the current date and time.</source>
          <target state="translated">Der erste Befehl ruft mit dem Get-Date-Cmdlet das aktuelle Datum und die aktuelle Uhrzeit ab.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A pipeline object (|) sends the date to the ConvertTo-CSV cmdlets, which converts the date object to a series of CSV strings.</source>
          <target state="translated">Ein Pipelineoperator (|) sendet das Datum an das ConvertTo-CSV-Cmdlet, das das Datumsobjekt in eine Reihe von CSV-Zeichenfolgen konvertiert.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The command uses the Delimiter parameter to specify a semicolon delimiter.</source>
          <target state="translated">Der Befehl gibt mithilfe des Delimiter-Parameters ein Semikolon als Trennzeichen an.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The strings are saved in the $date variable.</source>
          <target state="translated">Die Zeichenfolgen werden in der $date-Variablen gespeichert.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The second command uses the ConvertFrom-CSV cmdlet to convert the CSV strings in the $date variable back to object format.</source>
          <target state="translated">Der zweite Befehl konvertiert die CSV-Zeichenfolgen in der $date-Variablen mithilfe des ConvertFrom-CSV-Cmdlets zurück in das Objektformat.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The command uses the InputObject parameter to specify the CSV strings and the Delimiter parameter to specify the semicolon delimiter.</source>
          <target state="translated">Der Befehl verwendet den InputObject-Parameter zur Angabe der CSV-Zeichenfolgen und den Delimiter-Parameter zur Angabe des Semikolons als Trennzeichen.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Example 3: Use the header parameter to change the names of properties</source>
          <target state="translated">Beispiel 3: Verwenden Sie den Header-Parameter die Namen der Eigenschaften ändern</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This example shows how to use the Header parameter of <bpt id="p1">**</bpt>ConvertFrom-Csv<ept id="p1">**</ept> to change the names of properties in the resulting imported object.</source>
          <target state="translated">Dieses Beispiel zeigt, wie Sie die Header-Parameter von <bpt id="p1">**</bpt>ConvertFrom-Csv<ept id="p1">**</ept> die Namen der Eigenschaften im resultierenden importierten Objekt zu ändern.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Start-Job<ept id="p1">**</ept> cmdlet to start a background job that runs a <bpt id="p2">**</bpt>Get-Process<ept id="p2">**</ept> command on the local computer.</source>
          <target state="translated">Der erste Befehl verwendet die <bpt id="p1">**</bpt>Start-Job<ept id="p1">**</ept> -Cmdlet zum Starten eines Hintergrundauftrags, der ausgeführt wird ein <bpt id="p2">**</bpt>Get-Process<ept id="p2">**</ept> Befehl auf dem lokalen Computer.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A pipeline operator (|) sends the resulting job object to the <bpt id="p1">**</bpt>ConvertTo-CSV<ept id="p1">**</ept> cmdlet, which converts the job object to CSV format.</source>
          <target state="translated">Ein Pipelineoperator (|) sendet das resultierende Auftragsobjekt an den <bpt id="p1">**</bpt>ConvertTo-CSV-<ept id="p1">**</ept> -Cmdlet, das das Auftragsobjekt in das CSV-Format konvertiert.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An assignment operator (=) saves the resulting CSV in the $J variable.</source>
          <target state="translated">Ein Zuweisungsoperator (=) speichert das CSV-Ergebnis in der Variablen $J.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The second command saves a header in the $Header variable.</source>
          <target state="translated">Der zweite Befehl speichert einen Header in der Variablen $Header.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Unlike the default header, this header uses MoreData instead of HasMoreData and State instead of JobStateInfo.</source>
          <target state="translated">Im Gegensatz zum Standardkopf verwendet dieser Header MoreData anstelle von HasMoreData und JobStateInfo Zustand.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The third command deletes the original header (the second line) from the CSV strings and returns it to the $J variable.</source>
          <target state="translated">Mit dem dritte Befehl löscht den ursprünglichen Kopf (die zweite Zeile) aus der CSV-Zeichenfolgen und an die Variable $J zurück.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The fourth command uses the <bpt id="p1">**</bpt>ConvertFrom-CSV<ept id="p1">**</ept> cmdlet to convert the CSV strings to a CSV version of the job object.</source>
          <target state="translated">Der vierte Befehl verwendet die <bpt id="p1">**</bpt>ConvertFrom-CSV-<ept id="p1">**</ept> -Cmdlet zum Konvertieren der CSV-DATEI in eine CSV-Version des Auftragsobjekts Zeichenfolgen.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator to send the content in $J to <bpt id="p1">**</bpt>ConvertFrom-CSV<ept id="p1">**</ept>.</source>
          <target state="translated">Der Befehl verwendet einen Pipelineoperator, um den Inhalt in $J an zu senden <bpt id="p1">**</bpt>ConvertFrom-CSV<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The resulting object has MoreData and State properties, as specified by the header.</source>
          <target state="translated">Das resultierende Objekt enthält Eigenschaften von MoreData und Status, gemäß den Header.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Example 4: Convert CSV strings of service objects</source>
          <target state="translated">Beispiel 4: Konvertieren von CSV-Zeichenfolgen von Dienstobjekten</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>ConvertFrom-CSV<ept id="p1">**</ept> cmdlet to convert CSV strings of service objects that had been converted by the <bpt id="p2">**</bpt>ConvertTo-CSV<ept id="p2">**</ept> cmdlet.</source>
          <target state="translated">Der Befehl verwendet den <bpt id="p1">**</bpt>ConvertFrom-CSV<ept id="p1">**</ept> Cmdlet zum Konvertieren von CSV-Zeichenfolgen von Dienstobjekten, die Waren von den <bpt id="p2">**</bpt>ConvertTo-CSV<ept id="p2">**</ept> Cmdlet.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>UseCulture<ept id="p1">*</ept> parameter to direct <bpt id="p2">**</bpt>ConvertFrom-CSV<ept id="p2">**</ept> to use the delimiter (list separator) of the current culture.</source>
          <target state="translated">Der Befehl verwendet den <bpt id="p1">*</bpt>UseCulture<ept id="p1">*</ept> Parameter, um <bpt id="p2">**</bpt>ConvertFrom-CSV<ept id="p2">**</ept> Trennzeichen (Listentrennzeichen) für die aktuelle Kultur verwendet.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When using the <bpt id="p1">*</bpt>UseCulture<ept id="p1">*</ept> parameter, be sure that the list separator of the current culture matches the delimiter used in the CSV strings.</source>
          <target state="translated">Bei Verwendung der <bpt id="p1">*</bpt>UseCulture<ept id="p1">*</ept> -Parameter verwenden, stellen Sie sicher, dass das Listentrennzeichen der aktuellen Kultur, das in der CSV-Zeichenfolgen verwendete Trennzeichen entspricht.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Otherwise, <bpt id="p1">**</bpt>ConvertFrom-CSV<ept id="p1">**</ept> cannot generate objects from the CSV strings.</source>
          <target state="translated">Andernfalls <bpt id="p1">**</bpt>ConvertFrom-CSV<ept id="p1">**</ept> generieren Objekte aus den CSV-Zeichenfolgen.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In this example, a Get-Culture command was used to verify the list separator, before the ConvertFrom-CSV command was used.</source>
          <target state="translated">In diesem Beispiel wurde das Listentrennzeichen mit einem Get-Culture-Befehl überprüft, bevor der ConvertFrom-CSV-Befehl verwendet wurde.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARAMETER</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>-Delimiter</source>
          <target state="translated">-Trennzeichen</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Specifies the delimiter that separates the property values in the CSV strings.</source>
          <target state="translated">Gibt das Trennzeichen an, das die Eigenschaftswerte in den CSV-Zeichenfolgen trennt.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The default is a comma (,).</source>
          <target state="translated">Der Standardwert ist ein Komma (,).</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Enter a character, such as a colon (:).</source>
          <target state="translated">Geben Sie ein Zeichen ein, z. B. einen Doppelpunkt (:).</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To specify a semicolon (;), enclose it in quotation marks.</source>
          <target state="translated">Wenn Sie ein Semikolon (;) angeben, müssen Sie es in Anführungszeichen einschließen.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If you specify a character other than the delimiter used in the CSV strings, <bpt id="p1">**</bpt>ConvertFrom-CSV<ept id="p1">**</ept> cannot create objects from the CSV strings.</source>
          <target state="translated">Wenn Sie ein anderes Zeichen als das in der CSV-Zeichenfolgen verwendete Trennzeichen angeben <bpt id="p1">**</bpt>ConvertFrom-CSV<ept id="p1">**</ept> können keine Objekte aus den CSV-Zeichenfolgen erstellen.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Instead, it returns the strings.</source>
          <target state="translated">Stattdessen werden die Zeichenfolgen zurückgegeben.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-Header</source>
          <target state="translated">-Header</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Specifies an alternate column header row for the imported string.</source>
          <target state="translated">Gibt eine alternative Spaltenkopfzeile für die importierte Zeichenfolge an.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The column header determines the names of the properties of the object that <bpt id="p1">**</bpt>ConvertFrom-CSV<ept id="p1">**</ept> creates.</source>
          <target state="translated">Der Spaltenkopf bestimmt die Namen der Eigenschaften des Objekts, <bpt id="p1">**</bpt>ConvertFrom-CSV<ept id="p1">**</ept> erstellt.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Enter a comma-separated list of the column headers.</source>
          <target state="translated">Geben Sie eine durch Trennzeichen getrennte Liste der Spaltenköpfe ein.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Enclose each item in quotation marks (single or double).</source>
          <target state="translated">Schließen Sie jedes Element in (einfache oder doppelte) Anführungszeichen ein.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Do not enclose the header string in quotation marks.</source>
          <target state="translated">Die Kopfzeichenfolge darf nicht in Anführungszeichen eingeschlossen werden.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If you enter fewer column headers than there are columns, the remaining columns will have no headers.</source>
          <target state="translated">Wenn Sie weniger Spaltenköpfe eingeben, als Spalten vorhanden sind, haben die verbleibenden Spalten keinen Kopf.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If you enter more headers than there are columns, the extra headers are ignored.</source>
          <target state="translated">Wenn Sie mehr Spaltenköpfe eingeben, als Spalten vorhanden sind, werden die zusätzlichen Köpfe ignoriert.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When using the Header parameter, omit the column header string from the CSV strings.</source>
          <target state="translated">Lassen Sie bei Verwendung des Header-Parameters die Spaltenkopf-Zeichenfolge in den CSV-Zeichenfolgen aus.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Otherwise, this cmdlet creates an extra object from the items in the header row.</source>
          <target state="translated">Andernfalls erstellt das Cmdlet ein zusätzliches Objekt aus den Elementen in der Kopfzeile.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Specifies the CSV strings to be converted to objects.</source>
          <target state="translated">Gibt die CSV-Zeichenfolgen an, die in Objekte konvertiert werden sollen.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the CSV strings or type a command or expression that gets the CSV strings.</source>
          <target state="translated">Geben Sie eine Variable ein, die die CSV-Zeichenfolgen enthält, oder geben Sie einen Befehl oder einen Ausdruck ein, mit dem die CSV-Zeichenfolgen abgerufen werden.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>You can also pipe the CSV strings to <bpt id="p1">**</bpt>ConvertFrom-CSV<ept id="p1">**</ept>.</source>
          <target state="translated">Sie können auch die CSV-Zeichenfolgen an <bpt id="p1">**</bpt>ConvertFrom-CSV<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-UseCulture</source>
          <target state="translated">UseCulture-</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet uses the list separator for the current culture as the string delimiter.</source>
          <target state="translated">Gibt an, dass das Cmdlet das Listentrennzeichen für die aktuelle Kultur als Zeichenfolgen-Trennzeichen verwendet.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The default is a comma (,).</source>
          <target state="translated">Der Standardwert ist ein Komma (,).</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>To find the list separator for a culture, use the following command: <ph id="ph1">`Get-Culture.TextInfo.ListSeparator`</ph>.</source>
          <target state="translated">Um das Listentrennzeichen für eine Kultur zu ermitteln, verwenden Sie den folgenden Befehl: <ph id="ph1">`Get-Culture.TextInfo.ListSeparator`</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If you specify a character other than the delimiter used in the CSV strings, <bpt id="p1">**</bpt>ConvertFrom-CSV<ept id="p1">**</ept> cannot create objects from the CSV strings.</source>
          <target state="translated">Wenn Sie ein anderes Zeichen als das in der CSV-Zeichenfolgen verwendete Trennzeichen angeben <bpt id="p1">**</bpt>ConvertFrom-CSV<ept id="p1">**</ept> können keine Objekte aus den CSV-Zeichenfolgen erstellen.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Instead, it returns the strings.</source>
          <target state="translated">Stattdessen werden die Zeichenfolgen zurückgegeben.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Dieses Cmdlet unterstützt die allgemeinen Parameter:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, -InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction und -WarningVariable.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Weitere Informationen finden Sie unter "about_commonparameters" (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">EINGABEN</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You can pipe CSV strings to this cmdlet.</source>
          <target state="translated">Sie können CSV-Zeichenfolgen an dieses Cmdlet übergeben.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">AUSGABEN</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This cmdlet returns the objects described by the properties in the CSV strings.</source>
          <target state="translated">Dieses Cmdlet gibt die durch die Eigenschaften in der CSV-Zeichenfolgen beschriebenen Objekte zurück.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTIZEN</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Because the imported objects are CSV versions of the object type, they are not recognized and formatted by the Windows PowerShell type formatting entries that format the non-CSV versions of the object type.</source>
          <target state="translated">Da die importierten Objekte CSV-Versionen des Objekttyps sind, werden sie von Formatierungseinträgen im Windows PowerShell-Typ, die die Nicht-CSV-Versionen des Objekttyps formatieren, nicht erkannt und formatiert.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>In CSV format, each object is represented by a comma-separated list of the property values of the object.</source>
          <target state="translated">Im CSV-Format wird jedes Objekt durch eine durch Trennzeichen getrennte Liste der Eigenschaftswerte des Objekts dargestellt.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The property values are converted to strings (by using the ToString() method of the object), so they are generally represented by the name of the property value.</source>
          <target state="translated">Die Eigenschaftswerte werden (mithilfe der ToString()-Methode des Objekts) in Zeichenfolgen konvertiert, damit sie in der Regel durch den Namen des Eigenschaftswerts dargestellt werden.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This cmdlet does not export the methods of the object.</source>
          <target state="translated">Mit diesem Cmdlet werden die Methoden des Objekts nicht exportiert.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">VERWANDTE LINKS</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>ConvertTo-Csv</source>
          <target state="translated">ConvertTo-Csv</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Export-Csv</source>
          <target state="translated">Export-Csv</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Import-Csv</source>
          <target state="translated">Import-Csv</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>