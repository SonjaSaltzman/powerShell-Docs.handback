<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b887b04a42e3ed4a34c3149eb926434b2812073</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\ConvertFrom-String.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc139ae602e803d12e36303954502ffa7ba98dd3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12eb81c1f67bac207762a69fe821c7b8403f44b5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell-Cmdlets</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ConvertFrom-String</source>
          <target state="translated">ConvertFrom-Zeichenfolge</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ConvertFrom-String</source>
          <target state="translated">ConvertFrom-Zeichenfolge</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">ZUSAMMENFASSUNG</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Extracts and parses structured objects from string content.</source>
          <target state="translated">Extrahiert und strukturierter Objekte aus dem Zeichenfolgeninhalt analysiert.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SYNTAX</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ByDelimiter (Default)</source>
          <target state="translated">ByDelimiter (Standard)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>TemplateParsing</source>
          <target state="translated">TemplateParsing</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">BESCHREIBUNG</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConvertFrom-String<ept id="p1">**</ept> cmdlet extracts and parses structured objects from string content.</source>
          <target state="translated">Die <bpt id="p1">**</bpt>ConvertFrom-String<ept id="p1">**</ept> Cmdlet extrahiert und strukturierter Objekte aus dem Zeichenfolgeninhalt analysiert.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This cmdlet generates an object by parsing text from a traditional text stream.</source>
          <target state="translated">Dieses Cmdlet generiert ein Objekt durch Analysieren Text aus einer herkömmlichen Textstream.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For each string in the pipeline, the cmdlet splits the input by either a delimiter or a parse expression, and then assigns property names to each of the resulting split elements.</source>
          <target state="translated">Für jede Zeichenfolge in der Pipeline vom Cmdlet teilt die Eingabe durch ein Trennzeichen oder einen Ausdruck für die Analyse und weist dann auf die einzelnen resultierenden geteilten Elemente Eigenschaftsnamen.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can provide these property names; if you do not, they are automatically generated for you.</source>
          <target state="translated">Sie können diese Namen angeben. Wenn Sie dies nicht tun, werden sie automatisch für Sie generiert.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The cmdlet's default parameter set, <bpt id="p1">*</bpt>ByDelimiter<ept id="p1">*</ept>, splits exactly on the regular expression delimiter.</source>
          <target state="translated">Standard-Parameter des Cmdlets festgelegt, <bpt id="p1">*</bpt>ByDelimiter<ept id="p1">*</ept>, genau auf die reguläre Trennzeichen aufteilt.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It does not perform quote matching or delimiter escaping as the Import-Csv cmdlet does.</source>
          <target state="translated">Übereinstimmende Anführungszeichen oder Trennzeichen Escapezeichen, wie das Import-Csv-Cmdlet wird nicht ausgeführt.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The cmdlet's alternate parameter set, <bpt id="p1">*</bpt>TemplateParsing<ept id="p1">*</ept>, generates elements from the groups that are captured by a regular expression.</source>
          <target state="translated">Alternative Parameter des Cmdlets festgelegt, <bpt id="p1">*</bpt>TemplateParsing<ept id="p1">*</ept>, generiert Sie Elemente aus den Gruppen, die von einem regulären Ausdruck erfasst werden.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This cmdlet supports two modes: basic delimited parsing, and automatically-generated, example-driven parsing.</source>
          <target state="translated">Dieses Cmdlet unterstützt zwei Modi: Basic getrennt analysieren und automatisch generierte, Beispiel-gesteuerte analysieren.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Delimited parsing, by default, splits the input at white space, and assigns property names to the resulting groups.</source>
          <target state="translated">Bei der getrennten Analyse wird die Eingabe standardmäßig bei Leerzeichen getrennt, wobei den resultierenden Gruppen Eigenschaftsnamen zugewiesen werden.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can customize the delimiter by piping the <bpt id="p1">**</bpt>ConvertFrom-String<ept id="p1">**</ept> results into one of the Format-<bpt id="p2">*</bpt> cmdlets, or you can use the <ept id="p2">*</ept>Delimiter* parameter.</source>
          <target state="translated">Können Sie das Trennzeichen Piping Anpassen der <bpt id="p1">**</bpt>ConvertFrom-Zeichenfolge<ept id="p1">**</ept> Ergebnisse in einem Format-<bpt id="p2">*</bpt> -Cmdlets, oder Sie können die <ept id="p2">*</ept>Trennzeichen *-Parameter.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The cmdlet also supports automatically-generated, example-driven parsing based on the <bpt id="p1">**</bpt>FlashExtract<ept id="p1">**</ept> research work by Microsoft Researchhttp://research.microsoft.com/.</source>
          <target state="translated">Das Cmdlet unterstützt auch die automatisch generierte, Beispiel-gesteuerte Analyse auf der Grundlage der <bpt id="p1">**</bpt>FlashExtract<ept id="p1">**</ept> arbeiten, die Microsoft-Researchhttp://research.microsoft.com/ untersuchen.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">BEISPIELE</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example 1: Generate an object with default property names</source>
          <target state="translated">Beispiel 1: Generieren Sie ein Objekt mit dem Standardnamen-Eigenschaft</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This command generates an object with default property names, P1 and P2.</source>
          <target state="translated">Dieser Befehl generiert ein Objekt mit Standard-Eigenschaftennamen, P1 und P2.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The results are P1=Hello and P2=World.</source>
          <target state="translated">Die Ergebnisse sind P1 = Hello und P2 = Welt.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Example 2: Generate an object with default property names using a delimiter</source>
          <target state="translated">Beispiel 2: Erstellen eines Objekts mit Standard-Eigenschaftennamen, die mithilfe eines Trennzeichens</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This command generates an object with P1=He and P2=o World, by specifying the ll in Hello  as the delimiter.</source>
          <target state="translated">Dieser Befehl generiert ein Objekt mit P1 = er und P2 = o Welt, indem Sie das alles in Hello als Trennzeichen angeben.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Example 3: Use an expression as the value of the TemplateContent parameter</source>
          <target state="translated">Beispiel 3: Verwenden Sie einen Ausdruck als Wert des Parameters TemplateContent</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This command uses an expression as the value of the <bpt id="p1">*</bpt>TemplateContent<ept id="p1">*</ept> parameter to instruct Windows PowerShell that the string that is used on the pipeline to <bpt id="p2">**</bpt>ConvertFrom-String<ept id="p2">**</ept> has a property of <bpt id="p3">**</bpt>Name<ept id="p3">**</ept>.</source>
          <target state="translated">Dieser Befehl verwendet einen Ausdruck als Wert für die <bpt id="p1">*</bpt>TemplateContent<ept id="p1">*</ept> Parameter, um Windows PowerShell anweisen, die die Zeichenfolge, die in der Pipeline verwendet wird <bpt id="p2">**</bpt>ConvertFrom-Zeichenfolge<ept id="p2">**</ept> verfügt über eine Eigenschaft des <bpt id="p3">**</bpt>Namen<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can also save the expression in a variable, then use the variable as the value of the <bpt id="p1">*</bpt>TemplateContent<ept id="p1">*</ept> parameter, as shown here.</source>
          <target state="translated">Sie können auch den Ausdruck in einer Variablen speichern und verwenden Sie die Variable als Wert für die <bpt id="p1">*</bpt>TemplateContent<ept id="p1">*</ept> Parameter an, wie hier gezeigt.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Example 4: Generate an object that contains two properties</source>
          <target state="translated">Beispiel 4: Generiert ein Objekt, das zwei Eigenschaften enthält.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This command generates an object that contains two properties, FirstWord and SecondWord.</source>
          <target state="translated">Dieser Befehl generiert ein Objekt, das die beiden Eigenschaften FirstWord und SecondWord enthält.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The results are FirstWord=Hello and SecondWord=World.</source>
          <target state="translated">Die Ergebnisse sind FirstWord = Hello und SecondWord = Welt.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Example 5: Generate two objects of different object types</source>
          <target state="translated">Beispiel 5: Generieren Sie zwei Objekte mit verschiedenen Objekttypen</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This command generates an object with default property names P1 and P2, but property types String and Integer are identified.</source>
          <target state="translated">Dieser Befehl generiert ein Objekt mit dem Standardnamen Eigenschaft P1 und P2, aber Eigenschaftentypen String und Integer identifiziert.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The results are P1=123 and P2=456.</source>
          <target state="translated">Die Ergebnisse sind P1 = "123" und P2 = 456.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The second property is an integer, not a string.</source>
          <target state="translated">Die zweite Eigenschaft ist eine ganze Zahl, keine Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARAMETER</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>-Delimiter</source>
          <target state="translated">-Trennzeichen</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Specifies a regular expression that identifies the boundary between elements.</source>
          <target state="translated">Gibt einen regulären Ausdruck, der die Grenze zwischen Elementen identifiziert.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Elements that are created by the split become properties in the resulting object.</source>
          <target state="translated">Elemente, die durch die Teilung erstellt werden, werden Eigenschaften in das resultierende Objekt.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The delimiter is ultimately used in a call to <bpt id="p1">**</bpt>System.Text.RegularExpressions.RegularExpression.Split()<ept id="p1">**</ept>.</source>
          <target state="translated">Das Trennzeichen wird in einem Aufruf letzten Endes verwendet <bpt id="p1">**</bpt>System.Text.RegularExpressions.RegularExpression.Split()<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-IncludeExtent</source>
          <target state="translated">-IncludeExtent</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet includes an extent text property that is removed by default.</source>
          <target state="translated">Gibt an, dass dieses Cmdlet eine Block Text-Eigenschaft enthält, die in der Standardeinstellung entfernt wird.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Specifies strings received from the pipeline, or a variable that contains a string object.</source>
          <target state="translated">Gibt Zeichenfolgen, die von der Pipeline oder eine Variable mit einem String-Objekt empfangen.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-PropertyNames</source>
          <target state="translated">PropertyNames-</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Specifies and array of property names to which to assign split values in the resulting object.</source>
          <target state="translated">Gibt an, und das Array von Eigenschaftsnamen, der Split-Werte in das resultierende Objekt zugewiesen.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Every line of text that you split or parse generates elements that represent property values.</source>
          <target state="translated">Jede Textzeile, die Sie aufteilen oder analysieren generiert, die Werte darstellen.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If the element is the result of a capture group, and that capture group is named (for example, (?<ph id="ph1">\&lt;</ph>name<ph id="ph2">\&gt;</ph>) or (?'name') ), then the name of that capture group is assigned to the property.</source>
          <target state="translated">Wenn das Element das Ergebnis einer Erfassungsgruppe ist und dieser Erfassungsgruppe ist mit dem Namen (z. B. (?<ph id="ph1">\&lt;</ph>Namen<ph id="ph2">\&gt;</ph>) oder (? " Name')), und klicken Sie dann die Eigenschaft der Name dieser Erfassungsgruppe zugewiesen wird.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If you provide any elements in the <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> array, those names are assigned to properties that have not yet been named.</source>
          <target state="translated">Wenn Sie angeben, dass alle Elemente in der <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> Array, diesen Namen zugewiesen werden Eigenschaften, die noch nicht benannt wurde.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If you provide more property names than there are fields, Windows PowerShell ignores the extra property names.</source>
          <target state="translated">Wenn Sie weitere Eigenschaftennamen bereitstellen als Felder vorhanden sind, ignoriert Windows PowerShell die zusätzlichen Eigenschaftsnamen.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If you do not specify enough property names to name all fields, Windows PowerShellautomatically assigns numerical property names to any properties that are not named: P1, P2, etc.</source>
          <target state="translated">Wenn Sie nicht genügend Eigenschaftennamen, benennen Sie alle Felder angeben, weist Windows PowerShellautomatically numerische Eigenschaftennamen alle Eigenschaften, die nicht benannt werden: P1, P2, usw..</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-TemplateContent</source>
          <target state="translated">TemplateContent-</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Specifies an expression, or an expression saved as a variable, that describes the properties to which this cmdlet assigns strings.</source>
          <target state="translated">Gibt einen Ausdruck oder einen Ausdruck als eine Variable, die die Eigenschaften beschreiben, die mit diesem Cmdlet Zeichenfolgen zuweist.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The syntax of a template field specification is the following: {<ph id="ph1">\[</ph>optional-typecast<ph id="ph2">\]</ph>name(sequence-spec, for example <bpt id="p1">*</bpt>):example-value}. An example is {PersonInfo<ept id="p1">*</ept>:{Name:Patti Fuller}.</source>
          <target state="translated">Die Syntax einer Vorlage Feld Spezifikation ist Folgendes: {<ph id="ph1">\[</ph>optional Typumwandlung<ph id="ph2">\]</ph>Name(sequence-spec, for example <bpt id="p1">*</bpt>):example-Wert}. Ein Beispiel ist {PersonInfo<ept id="p1">*</ept>: "{Name: Patti Fuller"}.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-TemplateFile</source>
          <target state="translated">TemplateFile-</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Specifies a file, as an array, that contains a template for the desired parsing of the string.</source>
          <target state="translated">Gibt eine Datei als ein Array, das Vorlage für die gewünschte Analyse der Zeichenfolge enthält.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In the template file, properties and their values are enclosed in brackets, as shown in the following example.</source>
          <target state="translated">In der Vorlagendatei werden Eigenschaften und ihre Werte in Klammern eingeschlossen wie im folgenden Beispiel gezeigt.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If a property, such as the Name property and its associated other properties, appears multiple times, you can add an asterisk (*) to indicate that this results in multiple records.</source>
          <target state="translated">Wenn eine Eigenschaft, z. B. die Name-Eigenschaft und die zugehörigen andere Eigenschaften mehrmals, können Sie ein Sternchen (*), um anzugeben, dass dadurch in mehrere Datensätze hinzufügen.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This avoids extracting multiple properties into a single record.</source>
          <target state="translated">Dadurch wird vermieden, extrahieren mehrere Eigenschaften in einem einzigen Datensatz.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>{Name*:David Chew}</source>
          <target state="translated">{Name*:David Chew}</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>{City:Redmond}, {State:WA}</source>
          <target state="translated">{City: Redmond} {Status: WA}</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>{Name*:Evan Narvaez}</source>
          <target state="translated">{Name*:Evan Narvaez}</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>{City:Issaquah}, {State:WA}</source>
          <target state="translated">{City: Issaquah} {Status: WA}</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>-UpdateTemplate</source>
          <target state="translated">-UpdateTemplate</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet saves the results of a learning algorithm into a comment in the template file.</source>
          <target state="translated">Gibt an, dass dieses Cmdlet die Ergebnisse eines Algorithmus in einen Kommentar in der Vorlagendatei gespeichert.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This makes the algorithm learning process faster.</source>
          <target state="translated">Dadurch wird den Algorithmus Lernprozess schneller.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To use this parameter, you must also specify a template file with the <bpt id="p1">*</bpt>TemplateFile<ept id="p1">*</ept> parameter.</source>
          <target state="translated">Wenn Sie diesen Parameter verwenden, müssen Sie auch eine Vorlagendatei mit angeben der <bpt id="p1">*</bpt>TemplateFile<ept id="p1">*</ept> Parameter.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Dieses Cmdlet unterstützt die allgemeinen Parameter:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, -InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction und -WarningVariable.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Weitere Informationen finden Sie unter "about_commonparameters" (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">EINGABEN</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">AUSGABEN</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTIZEN</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">VERWANDTE LINKS</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>ConvertFrom-String: Example-based text parsing</source>
          <target state="translated">ConvertFrom-Zeichenfolge: Beispiel basierenden Textanalyse</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData</source>
          <target state="translated">ConvertFrom-StringData</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>ConvertFrom-Csv</source>
          <target state="translated">ConvertFrom-Csv</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>ConvertTo-Xml</source>
          <target state="translated">ConvertTo-Xml</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>