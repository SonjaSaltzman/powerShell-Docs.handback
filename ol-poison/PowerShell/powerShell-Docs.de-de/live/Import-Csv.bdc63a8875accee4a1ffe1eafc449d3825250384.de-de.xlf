<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">548dca15dd70dfebe9727df1c119ab7ffc2adea6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Import-Csv.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5f932097c81d7ca9e3483f238217e799f1e4d12</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ce7ab7313c2149b119b9e73db55cd3e63dc250a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell-Cmdlets</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Import-Csv</source>
          <target state="translated">Import-Csv</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Import-Csv</source>
          <target state="translated">Import-Csv</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">ZUSAMMENFASSUNG</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Creates table-like custom objects from the items in a CSV file.</source>
          <target state="translated">Erstellt tabellenähnliche benutzerdefinierte Objekte aus den Elementen in einer CSV-Datei.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SYNTAX</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Delimiter (Default)</source>
          <target state="translated">Trennzeichen (Standard)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>UseCulture</source>
          <target state="translated">UseCulture</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">BESCHREIBUNG</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet creates table-like custom objects from the items in CSV files.</source>
          <target state="translated">Die <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> Cmdlet erstellt tabellenähnliche benutzerdefinierte Objekte aus den Elementen in CSV-Dateien.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Each column in the CSV file becomes a property of the custom object and the items in rows become the property values.</source>
          <target state="translated">Jede Spalte in der CSV-Datei wird zu einer Eigenschaft des benutzerdefinierten Objekts und die Artikel in den Zeilen sind die Eigenschaftswerte.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> works on any CSV file, including files that are generated by the Export-Csv cmdlet.</source>
          <target state="translated"><bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> kann für jede CSV-Datei, einschließlich der Dateien, die vom Export-Csv-Cmdlet generiert werden.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can use the parameters of the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet to specify the column header row and the item delimiter, or direct <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> to use the list separator for the current culture as the item delimiter.</source>
          <target state="translated">Können Sie die Parameter der <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> Cmdlet die Spaltenkopfzeile und das Elementtrennzeichen angeben oder eine direkte <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> an das Listentrennzeichen für die aktuelle Kultur als Elementtrennzeichen zu verwenden.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also use the ConvertTo-Csv and ConvertFrom-Csv cmdlets to convert objects to CSV strings (and back).</source>
          <target state="translated">Sie können auch die ConvertTo-Csv "und" ConvertFrom-Csv-Cmdlets verwenden, konvertieren Sie Objekte in CSV-Zeichenfolgen (und zurück).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>These cmdlets are the same as the <bpt id="p1">**</bpt>Export-CSV<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> cmdlets, except that they do not deal with files.</source>
          <target state="translated">Diese Cmdlets sind identisch mit der <bpt id="p1">**</bpt>Export-CSV<ept id="p1">**</ept> und <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> -Cmdlets, mit dem Unterschied, dass sie keine Dateien verwenden.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, if a header row entry in a CSV file contains an empty or null value, Windows PowerShell inserts a default header row name and displays a warning message.</source>
          <target state="translated">Ab Windows PowerShell 3.0 fügt Windows PowerShell einen Standard-Kopfzeilennamen ein und zeigt eine Warnmeldung an, wenn ein Kopfzeileneintrag in einer CSV-Datei einen leeren oder NULL-Wert enthält.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In previous versions of Windows PowerShell, if a header row entry in a CSV file contains an empty or null value, the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> command fails.</source>
          <target state="translated">In früheren Versionen von Windows PowerShell, wenn ein Kopfzeileneintrag in einer CSV-Datei einen leeren oder null-Wert, enthält die <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> Befehl schlägt fehl.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">BEISPIELE</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Example 1: Import process objects</source>
          <target state="translated">Beispiel 1: Prozess Importobjekte</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This example shows how to export and then import a CSV file of process objects.</source>
          <target state="translated">In diesem Beispiel wird veranschaulicht, wie zum Exportieren und importieren Sie eine CSV-Datei von Prozessobjekten.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Process cmdlet to get the processes on the local computer.</source>
          <target state="translated">Im ersten Befehl werden mit dem Get-Process-Cmdlet die Prozesse auf dem lokalen Computer abgerufen.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the process objects to the Export-Csv cmdlet, which exports the process objects to the Processes.csv file in the current directory.</source>
          <target state="translated">Er verwendet einen Pipelineoperator (|), um die Prozessobjekte an das Export-Csv-Cmdlet zu senden, das Prozessobjekte in der Datei "Processes.csv" im aktuellen Verzeichnis exportiert.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet to import the processes in the <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> file.</source>
          <target state="translated">Der zweite Befehl verwendet die <bpt id="p1">**</bpt>Import-Csv-<ept id="p1">**</ept> -Cmdlet zum Importieren der Prozesse in der <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> Datei.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Then it saves the resulting process objects in the $P variable.</source>
          <target state="translated">Anschließend wird die resultierenden Prozessobjekte in der $P-Variablen gespeichert.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The third command uses a pipeline operator to pipe the imported objects to the Get-Member cmdlet.</source>
          <target state="translated">Der dritte Befehl verwendet einen Pipelineoperator, um die importierten Objekte dem Cmdlet "Get-Member" übergeben.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The result shows that they are <bpt id="p1">**</bpt>CSV:System.Diagnostic.Process<ept id="p1">**</ept> objects, not the <bpt id="p2">**</bpt>System.Diagnostic.Process<ept id="p2">**</ept> objects that <bpt id="p3">**</bpt>Get-Process<ept id="p3">**</ept> returns.</source>
          <target state="translated">Das Ergebnis zeigt an, dass sie <bpt id="p1">**</bpt>: System.Diagnostic.Process<ept id="p1">**</ept> Objekte, aber keine der <bpt id="p2">**</bpt>System.Diagnostic.Process<ept id="p2">**</ept> Objekte, <bpt id="p3">**</bpt>Get-Process<ept id="p3">**</ept> zurückgibt.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Also, because there is no entry type in the formatting files for the CSV version of the process objects, these objects are not formatted in the same way that standard process objects are formatted.</source>
          <target state="translated">Da die Formatierungsdateien keinen Eintragstyp für die CSV-Version der Prozessobjekte enthalten, werden diese Objekte außerdem nicht auf die gleiche Weise wie Standardprozessobjekte formatiert.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To display the objects, use the formatting cmdlets, such as Format-Table and Format-List, or pipe the objects to Out-GridView.</source>
          <target state="translated">Verwenden Sie zum Anzeigen der Objekte die Formatierungs-Cmdlets wie z. B. Format-Table und Format-List, oder reichen Sie die Objekte an Out-GridView weiter.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Example 2: Specify the delimiter</source>
          <target state="translated">Beispiel 2: Geben Sie das Trennzeichen</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">*</bpt>Delimiter<ept id="p1">*</ept> parameter of the <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> cmdlet.</source>
          <target state="translated">Dieses Beispiel zeigt, wie Sie die <bpt id="p1">*</bpt>Trennzeichen<ept id="p1">*</ept> Parameter von der <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> Cmdlet.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In this example, the processes are exported to a file that uses a colon (:) as a delimiter.</source>
          <target state="translated">In diesem Beispiel werden die Prozesse in eine Datei exportiert, die einen Doppelpunkt (:) als Trennzeichen verwendet.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When importing, the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> file uses the <bpt id="p2">*</bpt>Delimiter<ept id="p2">*</ept> parameter to indicate the delimiter that is used in the file.</source>
          <target state="translated">Beim Importieren der <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> Datei verwendet die <bpt id="p2">*</bpt>Trennzeichen<ept id="p2">*</ept> Parameter, um das Trennzeichen anzugeben, die in der Datei verwendet wird.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Example 3: Specify the current culture for the delimiter</source>
          <target state="translated">Beispiel 3: Geben Sie die aktuelle Kultur für das Trennzeichen</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">*</bpt>UseCulture<ept id="p1">*</ept> parameter of the <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> cmdlet.</source>
          <target state="translated">Dieses Beispiel zeigt, wie Sie die <bpt id="p1">*</bpt>UseCulture<ept id="p1">*</ept> Parameter von der <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> Cmdlet.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The first command imports the objects in the Processes.csv file into the $P variable.</source>
          <target state="translated">Der erste Befehl importiert die Objekte in der Datei "Processes.csv" in der $P-Variablen.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>UseCulture<ept id="p1">*</ept> parameter to direct <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> to use the list separator defined for the current culture.</source>
          <target state="translated">Er verwendet die <bpt id="p1">*</bpt>UseCulture<ept id="p1">*</ept> Parameter, um <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> verwendet das Listentrennzeichen für die aktuelle Kultur definiert.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The second command displays the list separator for the current culture.</source>
          <target state="translated">Der zweite Befehl zeigt das Listentrennzeichen für die aktuelle Kultur an.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It uses the Get-Culture cmdlet to get the current culture.</source>
          <target state="translated">Er verwendet das Cmdlet "Get-Culture", um die aktuelle Kultur abzurufen.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>It uses the dot (.) method to get the TextInfo property of the current culture and the ListSeparator property of the object in TextInfo.</source>
          <target state="translated">Es verwendet die Punktmethode (.) zum Abrufen der TextInfo-Eigenschaft der aktuellen Kultur und der ListSeparator-Eigenschaft des Objekts in TextInfo.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In this example, the command returns a comma.</source>
          <target state="translated">In diesem Beispiel gibt der Befehl ein Komma zurück.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Example 4: Change property names in an imported object</source>
          <target state="translated">Beispiel 4: Ändern des Eigenschaftsnamen in einem importierten Objekt</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">*</bpt>Header<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> to change the names of properties in the resulting imported object.</source>
          <target state="translated">Dieses Beispiel zeigt, wie Sie die <bpt id="p1">*</bpt>Header<ept id="p1">*</ept> Parameter <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> die Namen der Eigenschaften im resultierenden importierten Objekt zu ändern.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The first command uses the Start-Job cmdlet to start a background job that runs a Get-Process command on the local computer.</source>
          <target state="translated">Der erste Befehl startet mithilfe des Start-Job-Cmdlets einen Hintergrundauftrag, der einen Get-Process-Befehl auf dem lokalen Computer ausführt.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A pipeline operator (|) sends the resulting job object to the Export-Csv cmdlet, which converts the job object to CSV format.</source>
          <target state="translated">Ein Pipelineoperator (|) sendet das resultierende Auftragsobjekt an das Export-Csv-Cmdlet, das das Auftragsobjekt in das CSV-Format konvertiert.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The second command saves a header in the $Header variable.</source>
          <target state="translated">Der zweite Befehl speichert einen Header in der Variablen $Header.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Unlike the default header, this header uses MoreData instead of HasMoreData and State instead of JobStateInfo.</source>
          <target state="translated">Im Gegensatz zum Standardkopf verwendet dieser Header MoreData anstelle von HasMoreData und JobStateInfo Zustand.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The next three commands delete the original header (the second line) from the Jobs.csv file.</source>
          <target state="translated">Die folgenden drei Befehle löschen den ursprünglichen Kopf (die zweite Zeile) aus der Datei „Jobs.csv“.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The sixth command uses the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet to import the Jobs.csv file and convert the CSV strings into a CSV version of the job object.</source>
          <target state="translated">Der sechste Befehl verwendet die <bpt id="p1">**</bpt>Import-Csv-<ept id="p1">**</ept> -Cmdlet zum Importieren der Datei "Jobs.csv" und der CSV-DATEI Konvertieren von Zeichenfolgen in eine CSV-Version des Auftragsobjekts.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>Header<ept id="p1">*</ept> parameter to submit the alternate header.</source>
          <target state="translated">Der Befehl verwendet den <bpt id="p1">*</bpt>Header<ept id="p1">*</ept> Parameter des alternativen Kopfs.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The results are stored in the $J variable.</source>
          <target state="translated">Die Ergebnisse werden in der $J-Variablen gespeichert.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The seventh command displays the object in the $J variable.</source>
          <target state="translated">Der siebte Befehl zeigt das Objekt in der Variablen $J.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The resulting object has MoreData and State properties, as shown in the command output.</source>
          <target state="translated">Das resultierende Objekt enthält Eigenschaften MoreData und Status, wie in der Befehlsausgabe dargestellt.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Example 5: Create a custom object using a CSV file</source>
          <target state="translated">Beispiel 5: Erstellen eines benutzerdefinierten Objekts, das mithilfe einer CSV-Datei</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This example shows how to create a custom object in Windows PowerShell by using a CSV file.</source>
          <target state="translated">Dieses Beispiel veranschaulicht, wie Sie mithilfe einer CSV-Datei ein benutzerdefiniertes Objekt in Windows PowerShell erstellen.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Content cmdlet to get the Links.csv file.</source>
          <target state="translated">Der erste Befehl ruft mit dem Get-Content-Cmdlet die Datei „Links.csv“ ab.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet to import the Links.csv file.</source>
          <target state="translated">Der zweite Befehl verwendet die <bpt id="p1">**</bpt>Import-Csv-<ept id="p1">**</ept> -Cmdlet zum Importieren der Datei "Links.csv".</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>Header<ept id="p1">*</ept> parameter to specify LinkId and TopicTitle as property names for the new custom objects.</source>
          <target state="translated">Der Befehl verwendet den <bpt id="p1">*</bpt>Header<ept id="p1">*</ept> Parameter LinkId und TopicTitle als Eigenschaftsnamen für die neuen benutzerdefinierten Objekte angeben.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The command saves the imported objects in the $A variable.</source>
          <target state="translated">Der Befehl speichert die importierten Objekte in der Variable $A an.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The third command uses the Get-Member cmdlet to get the type and members of the custom objects in the $A variable.</source>
          <target state="translated">Der dritte Befehl verwendet das Get-Member-Cmdlet zum Abrufen von Typen und Membern der benutzerdefinierten Objekte in der Variable $A an.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The output shows that <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> returns a collection of custom objects (<bpt id="p2">**</bpt>PSCustomObject<ept id="p2">**</ept>).</source>
          <target state="translated">Die Ausgabe zeigt, dass <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> Gibt eine Auflistung von benutzerdefinierten Objekten (<bpt id="p2">**</bpt>PSCustomObject<ept id="p2">**</ept>).</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In addition to some default properties, the custom objects have LinkID and TopicTitle note properties.</source>
          <target state="translated">Zusätzlich zu einigen Standardeigenschaften haben die benutzerdefinierten Objekte LinkID und TopicTitle Hinweis-Eigenschaften.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This command shows that you can use the custom object like you would any object in Windows PowerShell.</source>
          <target state="translated">Dieser Befehl zeigt, das Sie das benutzerdefinierte Objekt wie jedes andere Objekt in Windows PowerShell verwenden können.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The command pipes the custom objects in the $A variable to the <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> cmdlet, which gets only objects with a <bpt id="p2">**</bpt>TopicTitle<ept id="p2">**</ept> property that includes alias.</source>
          <target state="translated">Der Befehl reicht die benutzerdefinierten Objekte in der Variablen "$A" in der <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> -Cmdlet, das nur Objekte mit Ruft eine <bpt id="p2">**</bpt>TopicTitle<ept id="p2">**</ept> -Eigenschaft, Alias enthält.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The Where-Object command uses the new simplified command format that does not require symbols, script blocks, or curly braces.</source>
          <target state="translated">Die Where-Object-Befehl verwendet die neue vereinfachte Befehlsformat, das keine Symbole, Skriptblöcke oder geschweiften Klammern erforderlich ist.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Example 6: Import a CSV that is missing a value</source>
          <target state="translated">Beispiel 6: Importieren Sie eine CSV-DATEI, die ein Wert fehlt</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This example shows how the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet in Windows PowerShell 3.0 responds when the header row in a CSV file includes a null or empty value.</source>
          <target state="translated">Dieses Beispiel zeigt, wie die <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> Cmdlet in Windows PowerShell 3.0 reagiert, wenn die Kopfzeile einer CSV-Datei einen null oder einen leeren Wert enthält.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> substitutes a default name for the header row.</source>
          <target state="translated"><bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> einen Standardnamen für die Kopfzeile ersetzt.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The default name becomes the name of the property of the object that <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> returns.</source>
          <target state="translated">Der Standardname wird der Name der Eigenschaft des Objekts, <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> zurückgibt.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Content cmdlet to get the Projects.csv file on the Server02 remote computer.</source>
          <target state="translated">Der erste Befehl verwendet das Get-Content-Cmdlet zum Abrufen der Datei "Projects.csv" auf dem Remotecomputer "server02".</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The output shows that the header row of the file is missing a value between ProjectName and Completed.</source>
          <target state="translated">Die Ausgabe zeigt, dass die Kopfzeile der Datei einen Wert zwischen Projektname und abgeschlossen fehlt.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet to import the Projects.csv file.</source>
          <target state="translated">Der zweite Befehl verwendet die <bpt id="p1">**</bpt>Import-Csv-<ept id="p1">**</ept> -Cmdlet zum Importieren der Datei "Projects.csv".</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The output shows that <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> generates a warning and substitutes a default name, H1, for the missing header row value.</source>
          <target state="translated">Die Ausgabe zeigt, dass <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> eine Warnung generiert und Standardnamen H1, für den fehlenden Header-Zeile-Wert ersetzt.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>H1 is also used for the name of the object property.</source>
          <target state="translated">H1 wird auch als Name der Objekteigenschaft verwendet.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The third command uses the dot method to get the value of the H1 property of the object that <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> creates.</source>
          <target state="translated">Der dritte Befehl verwendet die punktmethode, um dem Wert der H1-Eigenschaft des Objekts abzurufen, <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> erstellt.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARAMETER</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-Delimiter</source>
          <target state="translated">-Trennzeichen</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Specifies the delimiter that separates the property values in the CSV file.</source>
          <target state="translated">Gibt das Trennzeichen für die Eigenschaftswerte in der CSV-Datei an.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The default is a comma (,).</source>
          <target state="translated">Der Standardwert ist ein Komma (,).</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Enter a character, such as a colon (:).</source>
          <target state="translated">Geben Sie ein Zeichen ein, z. B. einen Doppelpunkt (:).</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>To specify a semicolon (;), enclose it in quotation marks.</source>
          <target state="translated">Wenn Sie ein Semikolon (;) angeben, müssen Sie es in Anführungszeichen einschließen.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If you specify a character other than the actual string delimiter in the file, <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cannot create objects from the CSV strings.</source>
          <target state="translated">Wenn Sie ein anderes Zeichen als das tatsächliche Zeichenfolgen-Trennzeichen in der Datei angeben <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> können keine Objekte aus den CSV-Zeichenfolgen erstellen.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Instead, it returns the strings.</source>
          <target state="translated">Stattdessen werden die Zeichenfolgen zurückgegeben.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>-Encoding</source>
          <target state="translated">-Codierung</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Specifies the type of character encoding that was used in the CSV file.</source>
          <target state="translated">Gibt den in der CSV-Datei verwendeten Zeichencodierungstyp an.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">Die folgenden Werte für diesen Parameter sind zulässig:</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Unicode</source>
          <target state="translated">Unicode</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>UTF7</source>
          <target state="translated">UTF7</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>UTF8</source>
          <target state="translated">UTF8</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>ASCII</source>
          <target state="translated">ASCII</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>UTF32</source>
          <target state="translated">UTF32</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>BigEndianUnicode</source>
          <target state="translated">BigEndianUnicode</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Standardwert</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>OEM</source>
          <target state="translated">OEM</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The default is ASCII.</source>
          <target state="translated">Der Standardwert ist ASCII.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Dieser Parameter wurde in Windows PowerShell 3.0 eingeführt.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>-Header</source>
          <target state="translated">-Header</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Specifies an alternate column header row for the imported file.</source>
          <target state="translated">Gibt eine alternative Spaltenkopfzeile für die importierte Datei an.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The column header determines the names of the properties of the object that <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> creates.</source>
          <target state="translated">Der Spaltenkopf bestimmt die Namen der Eigenschaften des Objekts, <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> erstellt.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Enter a comma-separated list of the column headers.</source>
          <target state="translated">Geben Sie eine durch Trennzeichen getrennte Liste der Spaltenköpfe ein.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Enclose each item in quotation marks (single or double).</source>
          <target state="translated">Schließen Sie jedes Element in (einfache oder doppelte) Anführungszeichen ein.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Do not enclose the header string in quotation marks.</source>
          <target state="translated">Die Kopfzeichenfolge darf nicht in Anführungszeichen eingeschlossen werden.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>If you enter fewer column headers than there are columns, the remaining columns will have no header.</source>
          <target state="translated">Wenn Sie weniger Spaltenköpfe eingeben, als Spalten vorhanden sind, haben die verbleibenden Spalten keinen Kopf.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>If you enter more headers than there are columns, the extra headers are ignored.</source>
          <target state="translated">Wenn Sie mehr Spaltenköpfe eingeben, als Spalten vorhanden sind, werden die zusätzlichen Köpfe ignoriert.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>When using the <bpt id="p1">*</bpt>Header<ept id="p1">*</ept> parameter, delete the original header row from the CSV file.</source>
          <target state="translated">Bei Verwendung der <bpt id="p1">*</bpt>Header<ept id="p1">*</ept> Parameter, löschen Sie die ursprüngliche Kopfzeile aus der CSV-Datei.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Otherwise, <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> creates an extra object from the items in the header row.</source>
          <target state="translated">Andernfalls <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> erstellt ein zusätzliches Objekt aus den Elementen in der Kopfzeile.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Specifies the path to the CSV file to import.</source>
          <target state="translated">Gibt den Pfad zu der zu importierenden CSV-Datei an.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">*</bpt>Path<ept id="p1">*</ept>, the value of the <bpt id="p2">*</bpt>LiteralPath<ept id="p2">*</ept> parameter is used exactly as it is typed.</source>
          <target state="translated">Im Gegensatz zu <bpt id="p1">*</bpt>Pfad<ept id="p1">*</ept>, den Wert der <bpt id="p2">*</bpt>LiteralPath<ept id="p2">*</ept> Parameter wird verwendet, genau, wie er eingegeben wurde.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">Es werden keine Zeichen als Platzhalter interpretiert.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">Wenn der Pfad Escapezeichen enthält, müssen Sie ihn in einfache Anführungszeichen einschließen.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">Einfache Anführungszeichen veranlassen Windows PowerShell, Zeichen nicht als Escapesequenzen zu interpretieren.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Specifies the path to the CSV file to import.</source>
          <target state="translated">Gibt den Pfad zu der zu importierenden CSV-Datei an.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>You can also pipe a path to <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept>.</source>
          <target state="translated">Sie können auch einen Pfad zu <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>-UseCulture</source>
          <target state="translated">UseCulture-</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet uses the list separator for the current culture as the item delimiter.</source>
          <target state="translated">Gibt an, dass dieses Cmdlet als Elementtrennzeichen das Listentrennzeichen für die aktuelle Kultur verwendet.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The default is a comma (,).</source>
          <target state="translated">Der Standardwert ist ein Komma (,).</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>To find the list separator for a culture, use the following command: <ph id="ph1">`(Get-Culture).TextInfo.ListSeparator`</ph>.</source>
          <target state="translated">Um das Listentrennzeichen für eine Kultur zu ermitteln, verwenden Sie den folgenden Befehl: <ph id="ph1">`(Get-Culture).TextInfo.ListSeparator`</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>If you specify a character other than the delimiter used in the CSV strings, ConvertFrom-Csv cannot create objects from the CSV strings.</source>
          <target state="translated">Wenn Sie ein anderes Zeichen als das in der CSV-Zeichenfolgen verwendete Trennzeichen angeben, kann keine ConvertFrom-Csv-Objekte aus der CSV-Zeichenfolgen erstellen.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Instead, it returns the strings.</source>
          <target state="translated">Stattdessen werden die Zeichenfolgen zurückgegeben.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Dieses Cmdlet unterstützt die allgemeinen Parameter:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, -InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction und -WarningVariable.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Weitere Informationen finden Sie unter "about_commonparameters" (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">EINGABEN</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>You can pipe a string that contains a path to <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept>.</source>
          <target state="translated">Sie können eine Zeichenfolge, die einen Pfad zu enthält <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">AUSGABEN</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Objekt</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>This cmdlet returns the objects described by the content in the CSV file.</source>
          <target state="translated">Dieses Cmdlet gibt die durch den Inhalt der CSV-Datei beschriebenen Objekte zurück.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTIZEN</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Because the imported objects are CSV versions of the object type, they are not recognized and formatted by the Windows PowerShell type formatting entries that format the non-CSV versions of the object type.</source>
          <target state="translated">Da die importierten Objekte CSV-Versionen des Objekttyps sind, werden sie von Formatierungseinträgen im Windows PowerShell-Typ, die die Nicht-CSV-Versionen des Objekttyps formatieren, nicht erkannt und formatiert.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The result of an <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> command is a collection of strings that form a table-like custom object.</source>
          <target state="translated">Das Ergebnis einer <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> Befehl ist eine Auflistung von Zeichenfolgen, die ein tabellenähnliche benutzerdefiniertes Objekt bilden.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Each row is a separate string, so you can use the <bpt id="p1">**</bpt>Count<ept id="p1">**</ept> property of the object to count the table rows.</source>
          <target state="translated">Jede Zeile ist eine separate Zeichenfolge, daher können Sie verwenden die <bpt id="p1">**</bpt>Anzahl<ept id="p1">**</ept> -Eigenschaft des Objekts zum zählen der Zeilen der Tabelle.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The columns are the properties of the object and items in the rows are the property values.</source>
          <target state="translated">Die Spalten sind die Eigenschaften des Objekts, und die Elemente in den Zeilen sind die Eigenschaftswerte.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The column header row determines the number of columns and the column names.</source>
          <target state="translated">Die Spaltenkopfzeile bestimmt die Anzahl der Spalten und die Spaltennamen.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The column names are also the names of the properties of the objects.</source>
          <target state="translated">Die Spaltennamen dienen auch als Namen der Objekteigenschaften .</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The first row is interpreted to be the column headers, unless you use the <bpt id="p1">*</bpt>Header<ept id="p1">*</ept> parameter to specify column headers.</source>
          <target state="translated">Die erste Zeile wird um die Spaltenüberschriften werden interpretiert, es sei denn, Sie verwenden die <bpt id="p1">*</bpt>Header<ept id="p1">*</ept> Parameter, um Spaltenköpfe anzugeben.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>If any row has more values than the header row, the additional values are ignored.</source>
          <target state="translated">Weist eine beliebige Zeile mehr Werte als die Kopfzeile auf, werden die zusätzlichen Werte ignoriert.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>If the column header row is missing a value or contains a null or empty value, <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> uses H followed by a number for the missing column header and property name.</source>
          <target state="translated">Wenn die Spaltenkopfzeile ein Wert fehlt oder enthält den Wert null oder leeren, <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> H, gefolgt von einer Nummer für den fehlenden Spalte-Header und -Eigenschaft verwendet.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>In the CSV file, each object is represented by a comma-separated list of the property values of the object.</source>
          <target state="translated">In der CSV-Datei wird jedes Objekt durch eine durch Trennzeichen getrennte Liste der Eigenschaftswerte des Objekts dargestellt.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The property values are converted to strings (by using the ToString() method of the object), so they are generally represented by the name of the property value.</source>
          <target state="translated">Die Eigenschaftswerte werden (mithilfe der ToString()-Methode des Objekts) in Zeichenfolgen konvertiert, damit sie in der Regel durch den Namen des Eigenschaftswerts dargestellt werden.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Export-Csv does not export the methods of the object.</source>
          <target state="translated">Die Methoden des Objekts werden von Export-Csv nicht exportiert.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">VERWANDTE LINKS</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>ConvertFrom-Csv</source>
          <target state="translated">ConvertFrom-Csv</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>ConvertTo-Csv</source>
          <target state="translated">ConvertTo-Csv</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Export-Csv</source>
          <target state="translated">Export-Csv</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>