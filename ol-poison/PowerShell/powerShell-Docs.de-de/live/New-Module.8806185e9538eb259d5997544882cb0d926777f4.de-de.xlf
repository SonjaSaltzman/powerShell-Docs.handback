<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a05e4c942ee70d02675c5dcffc9acfdb9e898df9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\New-Module.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de57bdcd7976db6d1375067ed2ea0bdee1c8431b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">857478771e86fbb3f381f716b6d53d57e2f2bd5f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell-Cmdlets</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>New-Module</source>
          <target state="translated">New-Module</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>New-Module</source>
          <target state="translated">New-Module</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">ZUSAMMENFASSUNG</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Creates a new dynamic module that exists only in memory.</source>
          <target state="translated">Erstellt ein neues dynamisches Modul, das nur im Arbeitsspeicher vorhanden ist.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SYNTAX</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ScriptBlock (Default)</source>
          <target state="translated">Skriptblock (Standard)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">BESCHREIBUNG</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> cmdlet creates a dynamic module from a script block.</source>
          <target state="translated">Die <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> -Cmdlet erstellt ein dynamisches Modul aus einen Skriptblock.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The members of the dynamic module, such as functions and variables, are immediately available in the session and remain available until you close the session.</source>
          <target state="translated">Die Elemente des dynamischen Moduls, wie z. B. Funktionen und Variablen, sind in der Sitzung sofort verfügbar und bleiben verfügbar, bis Sie die Sitzung schließen.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Like static modules, by default, the cmdlets and functions in a dynamic module are exported and the variables and aliases are not.</source>
          <target state="translated">Wie bei statischen Modulen werden in einem dynamischen Modul die Cmdlets und Funktionen standardmäßig exportiert, die Variablen und Aliase jedoch nicht.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>However, you can use the Export-ModuleMember cmdlet and the parameters of <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> to override the defaults.</source>
          <target state="translated">Sie können jedoch das Export-ModuleMember-Cmdlet und die Parameter des <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> die Standardeinstellungen überschreiben.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> to return the dynamic module as a custom object.</source>
          <target state="translated">Können Sie auch die <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> Parameter <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> um das dynamische Modul als benutzerdefiniertes Objekt zurückzugeben.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The members of the modules, such as functions, are implemented as script methods of the custom object instead of being imported into the session.</source>
          <target state="translated">Die Elemente der Module, wie z. B. Funktionen, werden als Skriptmethoden des benutzerdefinierten Objekts implementiert, statt in die Sitzung importiert zu werden.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Dynamic modules exist only in memory, not on disk.</source>
          <target state="translated">Dynamische Module sind nur im Arbeitsspeicher, nicht auf dem Datenträger vorhanden.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Like all modules, the members of dynamic modules run in a private module scope that is a child of the global scope.</source>
          <target state="translated">Wie bei allen Modulen werden die Elemente von dynamischen Modulen in einem privaten Modulbereich ausgeführt, der ein untergeordnetes Element des globalen Bereichs ist.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Get-Module cannot get a dynamic module, but Get-Command can get the exported members.</source>
          <target state="translated">Get-Module kann kein dynamisches Modul abrufen; Get-Command kann jedoch die exportierten Elemente abrufen.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To make a dynamic module available to <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept>, pipe a <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> command to Import-Module, or pipe the module object that <bpt id="p3">**</bpt>New-Module<ept id="p3">**</ept> returns to <bpt id="p4">**</bpt>Import-Module<ept id="p4">**</ept>.</source>
          <target state="translated">Ein dynamisches Modul zur Verfügung zu stellen <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept>, Pipe ein <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> Befehl aus, um den Import-Module oder Pipes Moduls Objekt, <bpt id="p3">**</bpt>New-Module<ept id="p3">**</ept> gibt, <bpt id="p4">**</bpt>Import-Module<ept id="p4">**</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This action adds the dynamic module to the <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> list, but it does not save the module to disk or make it persistent.</source>
          <target state="translated">Dieser Vorgang fügt das dynamische Modul an den <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> Liste, aber es speichert das Modul Datenträger oder persistent gemacht.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">BEISPIELE</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example 1: Create a dynamic module</source>
          <target state="translated">Beispiel 1: Erstellen eines dynamischen Moduls</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This command creates a new dynamic module with a function called Hello.</source>
          <target state="translated">Dieser Befehl erstellt ein neues dynamisches Modul mit einer Funktion namens Hello.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The command returns a module object that represents the new dynamic module.</source>
          <target state="translated">Der Befehl gibt ein Modulobjekt zurück, das das neue dynamische Modul darstellt.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Example 2: Working with dynamic modules and Get-Module and Get-Command</source>
          <target state="translated">Beispiel 2: Arbeiten mit dynamischen Modulen "und" Get-Module "und" Get-Command</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This example demonstrates that dynamic modules are not returned by the <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">Dieses Beispiel zeigt, dass dynamische Module nicht, durch zurückgegeben werden die <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> Cmdlet.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The members that they export are returned by the <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">Die Elemente, die sie exportieren werden zurückgegeben, indem die <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> Cmdlet.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Example 3: Export a variable into the current session</source>
          <target state="translated">Beispiel 3: Exportieren einer Variablen in der aktuellen Sitzung</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> cmdlet to export a variable into the current session.</source>
          <target state="translated">Dieser Befehl verwendet den <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> -Cmdlet zum Exportieren einer Variablen in der aktuellen Sitzung.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Without the <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> command, only the function is exported.</source>
          <target state="translated">Ohne die <bpt id="p1">**</bpt>Export-ModuleMember<ept id="p1">**</ept> Befehl nur die Funktion exportiert wird.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The output shows that both the variable and the function were exported into the session.</source>
          <target state="translated">Die Ausgabe zeigt, dass die Variable und die Funktion in die Sitzung exportiert wurden.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Example 4: Make a dynamic module available to Get-Module</source>
          <target state="translated">Beispiel 4: Verfügbarmachen eines dynamischen Moduls für die Get-Module</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This command demonstrates that you can make a dynamic module available to <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> by piping the dynamic module to <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept>.</source>
          <target state="translated">Dieser Befehl zeigt, dass Sie ein dynamisches Modul zur Verfügung stellen <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> durch das dynamische Modul weiterleiten <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The first command uses a pipeline operator (|) to send the module object that <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> generates to the <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> cmdlet.</source>
          <target state="translated">Der erste Befehl verwendet eine Pipeline Objekt-Operator (|), um das Modul zu senden, die <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> generiert die <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> Cmdlet.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>Name<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> to assign a friendly name to the module.</source>
          <target state="translated">Der Befehl verwendet den <bpt id="p1">*</bpt>Namen<ept id="p1">*</ept> Parameter <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> das Modul einen Anzeigenamen zuweisen.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Because <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> does not return any objects by default, there is no output from this command.</source>
          <target state="translated">Da <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> gibt keine Objekte in der Standardeinstellung erfolgt keine Ausgabe dieses Befehls zurück.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The second command uses <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> to get the modules in the session.</source>
          <target state="translated">Der zweite Befehl verwendet <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> um die Module in der Sitzung abzurufen.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The result shows that <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> can get the new dynamic module.</source>
          <target state="translated">Das Ergebnis zeigt, dass <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> können das neue dynamische Modul abrufen.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> cmdlet to get the Hello function that the dynamic module exports.</source>
          <target state="translated">Der dritte Befehl verwendet die <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> -Cmdlet zum Abrufen von Hello-Funktion, die das dynamische Modul exportiert.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Example 5: Generate a custom object that has exported functions</source>
          <target state="translated">Beispiel 5: Erstellen eines benutzerdefinierten Objekts, das die Funktionen exportiert wurde</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> to generate a custom object that has script methods that represent the exported functions.</source>
          <target state="translated">Dieses Beispiel zeigt, wie Sie die <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> Parameter <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> ein benutzerdefiniertes Objekt zu generieren, Skriptmethoden verfügt, die die exportierten Funktionen darstellen.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> cmdlet to generate a dynamic module with two functions, Hello and Goodbye.</source>
          <target state="translated">Der erste Befehl verwendet die <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> -Cmdlet zum Generieren eines dynamischen Moduls mit zwei Funktionen: Hello und entspricht.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parameter to generate a custom object instead of the PSModuleInfo object that <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> generates by default.</source>
          <target state="translated">Der Befehl verwendet den <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> Objekt-Parameter, um ein benutzerdefiniertes Objekt anstelle der PSModuleInfo zu generieren, die <bpt id="p2">**</bpt>New-Module<ept id="p2">**</ept> Standardmäßig generiert.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The command saves the custom object in the $m variable.</source>
          <target state="translated">Der Befehl speichert das benutzerdefinierte Objekt in der $m-Variablen.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The second command attempts to display the value of the $m variable.</source>
          <target state="translated">Der zweite Befehl versucht, den Wert der $m-Variablen anzuzeigen.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>No content appears.</source>
          <target state="translated">Es wird kein Inhalt angezeigt.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The third command uses a pipeline operator to send the custom object to the <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> cmdlet, which displays the properties and methods of the custom object.</source>
          <target state="translated">Der dritte Befehl verwendet einen Pipelineoperator das benutzerdefinierte Objekt zum Senden der <bpt id="p1">**</bpt>Get-Member<ept id="p1">**</ept> Cmdlet, das die Eigenschaften und Methoden des benutzerdefinierten Objekts anzeigt.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The output shows that the object has script methods that represent the Hello and Goodbye functions.</source>
          <target state="translated">Die Ausgabe zeigt, dass das Objekt über Skriptmethoden verfügt, die die Funktionen „Hello“ und „Goodbye“ darstellen.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The fourth and fifth commands use the script method format to call the Hello and Goodbye functions.</source>
          <target state="translated">Der vierte und fünfte Befehl verwenden das Skriptmethodenformat, um die Funktionen „Hello“ und „Goodbye“ aufzurufen.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Example 6: Get the results of the script block</source>
          <target state="translated">Beispiel 6: Abrufen der Ergebnisse des Skriptblocks</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">*</bpt>ReturnResult<ept id="p1">*</ept> parameter to request the results of running the script block instead of requesting a module object.</source>
          <target state="translated">Dieser Befehl verwendet den <bpt id="p1">*</bpt>ReturnResult<ept id="p1">*</ept> Parameter, um die Ergebnisse der Ausführung des Skriptblocks statt eines Modulobjekts anzufordern.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The script block in the new module defines the SayHello function and then calls the function.</source>
          <target state="translated">Der Skriptblock in dem neuen Modul definiert die Funktion „SayHello“ und ruft dann die Funktion auf.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARAMETER</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-ArgumentList</source>
          <target state="translated">-ArgumentList</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Specifies an array of arguments which are parameter values that are passed to the script block.</source>
          <target state="translated">Gibt ein Array von Argumenten, die Parameterwerte sind, die um den Skriptblock übergeben werden.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-AsCustomObject</source>
          <target state="translated">-AsCustomObject</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet returns a custom object that represents the dynamic module.</source>
          <target state="translated">Gibt an, dass dieses Cmdlet gibt ein benutzerdefiniertes Objekt zurück, das das dynamische Modul darstellt.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The module members are implemented as script methods of the custom object, but they are not imported into the session.</source>
          <target state="translated">Die Modulelemente werden als Skriptmethoden des benutzerdefinierten Objekts implementiert, aber sie werden nicht in die Sitzung importiert.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You can save the custom object in a variable and use dot notation to invoke the members.</source>
          <target state="translated">Sie können das benutzerdefinierte Objekt in einer Variablen speichern und die punktierte Schreibweise verwenden, um die Elemente aufzurufen.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If the module has multiple members with the same name, such as a function and a variable that are both named A, only one member with each name can be accessed from the custom object.</source>
          <target state="translated">Wenn das Modul mehrere Elemente mit dem gleichen Namen hat, z. B. eine Funktion und eine Variable kann beides benannt A, nur ein Element pro Name aus dem benutzerdefinierten Objekt zugegriffen werden.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>-Cmdlet</source>
          <target state="translated">-Cmdlet</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Specifies an array of cmdlets that this cmdlet exports from the module into the current session.</source>
          <target state="translated">Gibt ein Array von Cmdlets, die dieses Cmdlet aus dem Modul in der aktuellen Sitzung exportiert.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Enter a comma-separated list of cmdlets.</source>
          <target state="translated">Geben Sie eine kommagetrennte Liste von Cmdlets ein.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">Platzhalterzeichen sind zulässig.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>By default, all cmdlets in the module are exported.</source>
          <target state="translated">Standardmäßig werden alle Cmdlets im Modul exportiert.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You cannot define cmdlets in a script block, but a dynamic module can include cmdlets if it imports the cmdlets from a binary module.</source>
          <target state="translated">Sie können keine Cmdlets in einem Skriptblock definieren, aber ein dynamisches Modul kann Cmdlets enthalten, wenn es die Cmdlets aus einem binären Modul importiert.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>-Function</source>
          <target state="translated">-Funktion</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Specifies an array of functions that this cmdlet exports from the module into the current session.</source>
          <target state="translated">Gibt ein Array von Funktionen, die dieses Cmdlet aus dem Modul in der aktuellen Sitzung exportiert.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Enter a comma-separated list of functions.</source>
          <target state="translated">Geben Sie eine kommagetrennte Liste von Funktionen ein.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">Platzhalterzeichen sind zulässig.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>By default, all functions defined in a module are exported.</source>
          <target state="translated">Standardmäßig werden alle in einem Modul definierten Funktionen exportiert.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Specifies a name for the new module.</source>
          <target state="translated">Gibt einen Namen für das neue Modul an.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can also pipe a module name to New-Module.</source>
          <target state="translated">Sie können auch einen Modulnamen an New-Module übergeben.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The default value is an autogenerated name that starts with <ph id="ph1">`__DynamicModule_`</ph> and is followed by a GUID that specifies the path of the dynamic module.</source>
          <target state="translated">Der Standardwert ist ein automatisch generierter Name, der mit beginnt <ph id="ph1">`__DynamicModule_`</ph> gefolgt von einer GUID, die den Pfad des dynamischen Moduls angibt.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-ReturnResult</source>
          <target state="translated">-ReturnResult</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet runs the script block and returns the script block results instead of returning a module object.</source>
          <target state="translated">Gibt an, dass dieses Cmdlet den Skriptblock führt und gibt die skriptblockergebnisse anstatt eines Modulobjekts zurück.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>-ScriptBlock</source>
          <target state="translated">-Skriptblock</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Specifies the contents of the dynamic module.</source>
          <target state="translated">Gibt den Inhalt des dynamischen Moduls an.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Enclose the contents in braces ( { } ) to create a script block.</source>
          <target state="translated">Schließen Sie den Inhalt in geschweifte Klammern ({}) ein, um einen Skriptblock zu erstellen.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This parameter is required.</source>
          <target state="translated">Dieser Parameter ist erforderlich.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Dieses Cmdlet unterstützt die allgemeinen Parameter:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, -InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction und -WarningVariable.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Weitere Informationen finden Sie unter "about_commonparameters" (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">EINGABEN</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You can pipe a module name to this cmdlet.</source>
          <target state="translated">Sie können einen Modulnamen an dieses Cmdlet übergeben.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">AUSGABEN</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSModuleInfo, System.Management.Automation.PSCustomObject, or None</source>
          <target state="translated">System.Management.Automation.PSModuleInfo, System.Management.Automation.PSCustomObject oder None</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This cmdlet generates a <bpt id="p1">**</bpt>PSModuleInfo<ept id="p1">**</ept> object, by default.</source>
          <target state="translated">Dieses Cmdlet generiert ein <bpt id="p1">**</bpt>PSModuleInfo<ept id="p1">**</ept> -Objekt, in der Standardeinstellung.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> parameter, it generates a <bpt id="p2">**</bpt>PSCustomObject<ept id="p2">**</ept> object.</source>
          <target state="translated">Bei Verwendung der <bpt id="p1">*</bpt>AsCustomObject<ept id="p1">*</ept> Parameter, es wird ein <bpt id="p2">**</bpt>PSCustomObject<ept id="p2">**</ept> Objekt.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>ReturnResult<ept id="p1">*</ept> parameter, it returns the result of evaluating the script block in the dynamic module.</source>
          <target state="translated">Bei Verwendung der <bpt id="p1">*</bpt>ReturnResult<ept id="p1">*</ept> -Parameter gibt das Ergebnis der Auswertung des Skriptblock im dynamischen Modul zurück.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTIZEN</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>You can also refer to <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> by its alias, <bpt id="p2">**</bpt>nmo<ept id="p2">**</ept>.</source>
          <target state="translated">Sie erhalten auch <bpt id="p1">**</bpt>New-Module<ept id="p1">**</ept> über den Alias <bpt id="p2">**</bpt>Nmo<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For more information, see about_Aliases.</source>
          <target state="translated">Weitere Informationen finden Sie unter %%amp;quot;about_Aliases%%amp;quot;.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">VERWANDTE LINKS</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Export-ModuleMember</source>
          <target state="translated">Export-ModuleMember</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Get-Module</source>
          <target state="translated">Get-Module</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Import-Module</source>
          <target state="translated">Import-Module</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Remove-Module</source>
          <target state="translated">Remove-Module</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>