<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e620fef5b62433070bfd04bc495056e564de41e9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Command_Syntax.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb14a85e5d6bab6ede692b8def05bad9317ec96c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c96b9be7b0637652b65b752c362b6c889bd55ba</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Command_Syntax</source>
          <target state="translated">about_Command_Syntax</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell-Cmdlets</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Command Syntax</source>
          <target state="translated">Über die Befehlssyntax</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Command_Syntax</source>
          <target state="translated">about_Command_Syntax</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Command_Syntax</source>
          <target state="translated">about_Command_Syntax</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">KURZE BESCHREIBUNG</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes the syntax diagrams that are used in Windows PowerShell.</source>
          <target state="translated">Beschreibt die Syntaxdiagramme, die in Windows PowerShell verwendet werden.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">LANGE BESCHREIBUNG</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Get-Help and Get-Command cmdlets display syntax diagrams to help you construct commands correctly.</source>
          <target state="translated">Die Cmdlets Get-Help "und" Get-Command anzeigen Syntaxdiagramme, damit Sie die Befehle korrekt erstellen können.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This topic explains how to interpret the syntax diagrams.</source>
          <target state="translated">In diesem Thema wird erläutert, wie die Syntaxdiagrammen interpretiert wird.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Syntax Diagrams Each paragraph in a command syntax diagram represents a valid form of the command.</source>
          <target state="translated">Syntax jedes einzelnen Absatzes Diagramme in einer Befehlssyntax Diagramm eine gültige Form des Befehls darstellt.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To construct a command, follow the syntax diagram from left to right.</source>
          <target state="translated">Um einen Befehl zu erstellen, führen Sie das Syntaxdiagramm von links nach rechts.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Select from among the optional parameters and provide values for the placeholders.</source>
          <target state="translated">Wählen Sie weitere optionale Parameter, und geben Sie Werte für die Platzhalter.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Windows PowerShell uses the following notation for syntax diagrams.</source>
          <target state="translated">Windows PowerShell verwendet die folgende Notation Syntax Diagramme.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>&lt;command-name&gt; -<ph id="ph1">&lt;Required Parameter Name&gt;</ph> <ph id="ph2">&lt;Required Parameter Value&gt;</ph> [-<ph id="ph3">&lt;Optional Parameter Name&gt;</ph> <ph id="ph4">&lt;Optional Parameter Value&gt;</ph>] [-<ph id="ph5">&lt;Optional Switch Parameters&gt;</ph>] [-<ph id="ph6">&lt;Optional Parameter Name&gt;</ph>]</source>
          <target state="translated">&lt; Befehlsname &gt; -<ph id="ph1">&lt;Required Parameter Name&gt;</ph> <ph id="ph2">&lt;Required Parameter Value&gt;</ph> [-<ph id="ph3">&lt;Optional Parameter Name&gt;</ph> <ph id="ph4">&lt;Optional Parameter Value&gt;</ph>] [-<ph id="ph5">&lt;Optional Switch Parameters&gt;</ph>] [-<ph id="ph6">&lt;Optional Parameter Name&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following is the syntax for the New-Alias cmdlet.</source>
          <target state="translated">Im folgenden ist die Syntax für das Cmdlet "New-Alias".</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>New-Alias [-Name] <ph id="ph1">&lt;string&gt;</ph> [-Value] <ph id="ph2">&lt;string&gt;</ph> [-Description <ph id="ph3">&lt;string&gt;</ph>] [-Force] [-Option {None | ReadOnly | Constant | Private | AllScope}] [-PassThru] [-Scope <ph id="ph4">&lt;string&gt;</ph>] [-Confirm] [-WhatIf] [<ph id="ph5">&lt;CommonParameters&gt;</ph>]</source>
          <target state="translated">Neuer Alias [-Name] <ph id="ph1">&lt;string&gt;</ph> [-Wert] <ph id="ph2">&lt;string&gt;</ph> [-Beschreibung <ph id="ph3">&lt;string&gt;</ph>] [-Force] [-Option {None | ReadOnly | Konstante | Private | AllScope}] [-PassThru] [-Bereich <ph id="ph4">&lt;string&gt;</ph>] [-bestätigen] [-WhatIf] [<ph id="ph5">&lt;CommonParameters&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The syntax is capitalized for readability, but Windows PowerShell is case-insensitive.</source>
          <target state="translated">Die Syntax zur besseren Lesbarkeit großgeschrieben ist, aber Windows PowerShell wird Groß-und Kleinschreibung.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The syntax diagram has the following elements.</source>
          <target state="translated">Das Syntaxdiagramm verfügt über die folgenden Elemente.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Command name</source>
          <target state="translated">Name des Befehls</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Commands always begin with a command name, such as New-Alias.</source>
          <target state="translated">Befehle beginnen immer mit einem Befehlsnamen, z. B. New-Alias.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Type the command name or its alias, such a "gcm" for Get-Command.</source>
          <target state="translated">Geben Sie den Namen des Befehls oder dessen Aliasname solche eine "Gcm" für Get-Command.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameter</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The parameters of a command are options that determine what the command does.</source>
          <target state="translated">Die Parameter für einen Befehl sind Optionen, die mit dem Befehl durchführt.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Some parameters take a "value," which is user input to the command.</source>
          <target state="translated">Einige Parameter übernehmen Sie einen "Wert" die Eingabe des Benutzers auf den Befehl ist.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, the Get-Help command has a Name parameter that lets you specify the name of the topic for which help is displayed.</source>
          <target state="translated">Der Get-Help Get-Befehl hat z. B. einen Namensparameter, mit dem Sie den Namen des Themas angeben, für die Hilfe angezeigt wird.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The topic name is the value of the Name parameter.</source>
          <target state="translated">Den Namen des Themas ist der Wert des Name-Parameters.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In a Windows PowerShell command, parameter names always begin with a hyphen.</source>
          <target state="translated">In einem Windows PowerShell-Befehl beginnen Parameternamen immer mit einem Bindestrich.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The hyphen tells Windows PowerShell that the item in the command is a parameter name.</source>
          <target state="translated">Der Bindestrich weist Windows PowerShell, dass das Element im Befehl einen Parameternamen an.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For example, to use the Name parameter of New-Alias, you type the following:</source>
          <target state="translated">Um die Name-Parameter von New-Alias zu verwenden, geben Sie z. B. Folgendes:</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Parameters can be mandatory or optional.</source>
          <target state="translated">Parameter können obligatorisch oder optional sein.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In a syntax diagram, optional items are enclosed in brackets ([ ]).</source>
          <target state="translated">In einem Syntaxdiagramm werden optionale Elemente in Klammern ([]) eingeschlossen.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information about parameters, see about_Parameters.</source>
          <target state="translated">Weitere Informationen zu Parametern finden Sie unter About_Parameters.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Parameter Values</source>
          <target state="translated">Parameterwerte</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A parameter value is the input that the parameter takes.</source>
          <target state="translated">Ein Parameterwert ist die Eingabe, die den Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Because Windows PowerShell is based on the Microsoft .NET Framework, parameter values are represented in the syntax diagram by their .NET type.</source>
          <target state="translated">Da Windows PowerShell auf Microsoft .NET Framework basiert, werden die Parameterwerte in das Syntaxdiagramm anhand ihres Typs .NET dargestellt.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, the Name parameter of Get-Help takes a String value, which is a text string, such as a single word or multiple words enclosed in quotation marks.</source>
          <target state="translated">Beispielsweise akzeptiert die Name-Parameter von Get-Help einen String-Wert, eine Textzeichenfolge, z. B. ein einzelnes Wort oder mehrere Wörter in Anführungszeichen eingeschlossen ist.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>[-Name]</source>
          <target state="translated">[-Name]</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The .NET type of a parameter value is enclosed in angle brackets (&lt; &gt;) to indicate that it is placeholder for a value and not a literal that you type in a command.</source>
          <target state="translated">Welche .NET einen Parameterwert ist in spitze Klammern (&lt;&gt;), um anzugeben, dass es steht für den Wert und kein Literal, das Sie in einem Befehl geben Sie eingeschlossen.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To use the parameter, replace the .NET type placeholder with an object that has the specified .NET type.</source>
          <target state="translated">Um den Parameter zu verwenden, ersetzen Sie die Typplatzhalter .NET durch ein Objekt mit dem angegebenen Typ von .NET.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For example, to use the Name parameter, type "-Name" followed by a string, such as the following:</source>
          <target state="translated">Um den Name-Parameter verwenden, geben Sie z. B. "-Name" gefolgt von einer Zeichenfolge, z. B. die folgenden:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-Name MyAlias</source>
          <target state="translated">-MyAlias name</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Parameters with no values</source>
          <target state="translated">Parameter ohne Werte</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Some parameters do not accept input, so they do not have a parameter value.</source>
          <target state="translated">Einige Parameter akzeptieren keine Eingabe, sodass sie keinen Parameterwert.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Parameters without values are called "switch parameters" because they work like on/off switches.</source>
          <target state="translated">Parameter ohne Werte sind "switch-Parameter" bezeichnet, da es sich bei funktionieren wie/aus-Schalter.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You include them (on) or you omit them (off) from a command.</source>
          <target state="translated">Einbinden (on), oder Sie sie (deaktiviert) aus einem Befehl auslassen.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To use a switch parameter, just type the parameter name, preceded by a hyphen.</source>
          <target state="translated">Um einen Switch-Parameter verwenden, geben Sie einfach den Parameternamen, ein Bindestrich vorangestellt.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For example, to use the WhatIf parameter of the New-Alias cmdlet, type the following:</source>
          <target state="translated">Um den WhatIf-Parameter des Cmdlets New-Alias zu verwenden, geben Sie z. B. Folgendes ein:</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>-WhatIf</source>
          <target state="translated">-WhatIf</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Parameter Sets</source>
          <target state="translated">Parametersätze</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The parameters of a command are listed in parameter sets.</source>
          <target state="translated">Die Parameter eines Befehls sind in Parametersätze aufgeführt.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Parameter sets look like the paragraphs of a syntax diagram.</source>
          <target state="translated">Parameter legt die anscheinend Syntaxdiagramm Absätze.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The New-Alias cmdlet has one parameter set, but many cmdlets have multiple parameter sets.</source>
          <target state="translated">Das Cmdlet "New-Alias" hat einen Parameter festlegen, aber viele Cmdlets verfügen über mehrere Parametersätze.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Some of the cmdlet parameters are unique to a parameter set, and others appear in multiple parameter sets.</source>
          <target state="translated">Einige der Cmdlet-Parameter sind nur für einen Parameter festgelegt und andere in mehrere Parametersätze angezeigt.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Each parameter set represents the format of a valid command.</source>
          <target state="translated">Jeder Parametersatz stellt das Format für einen gültigen Befehl.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A parameter set includes only parameters that can be used together in a command.</source>
          <target state="translated">Ein Parametersatz enthält nur die Parameter, die verwendet werden können zusammen in einem Befehl.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If parameters cannot be used in the same command, they appear in separate parameter sets.</source>
          <target state="translated">Wenn der Parameter nicht im selben Befehl verwendet werden können, werden sie in separate Parametersätze angezeigt.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, the Get-Random cmdlet has the following parameter sets:</source>
          <target state="translated">Das Get-Random-Cmdlet hat beispielsweise die folgenden Parameter wird:</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Get-Random [[-Maximum] <ph id="ph1">&lt;Object&gt;</ph>] [-Minimum <ph id="ph2">&lt;Object&gt;</ph>] [-SetSeed <ph id="ph3">&lt;int&gt;</ph>] [<ph id="ph4">&lt;CommonParameters&gt;</ph>]</source>
          <target state="translated">Get-Random [[-maximale] <ph id="ph1">&lt;Object&gt;</ph>] [-Minimum <ph id="ph2">&lt;Object&gt;</ph>] [-SetSeed <ph id="ph3">&lt;int&gt;</ph>] [<ph id="ph4">&lt;CommonParameters&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Get-Random [-InputObject] &lt;Object[]&gt; [-Count <ph id="ph1">&lt;int&gt;</ph>] [-SetSeed <ph id="ph2">&lt;int&gt;</ph>] [<ph id="ph3">&lt;CommonParameters&gt;</ph>]</source>
          <target state="translated">Get-Random [-Eingabeobjekt] &lt; Objekt [] &gt; [-Anzahl <ph id="ph1">&lt;int&gt;</ph>] [-SetSeed <ph id="ph2">&lt;int&gt;</ph>] [<ph id="ph3">&lt;CommonParameters&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The first parameter set, which returns a random number, has the Minimum and Maximum parameters.</source>
          <target state="translated">Der erste Parametersatz, der eine zufällige Zahl zurückgegeben werden, hat das Minimum und Maximum-Parameter.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The second parameter set, which returns a randomly selected object from a set of objects, includes the InputObject and Count parameters.</source>
          <target state="translated">Der zweite Parameter nicht festgelegt, die zufällig ausgewählten Objekts aus einem Satz von Objekten zurückgibt, enthält die Eingabeobjekt und Count-Parameter.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Both parameter sets have the Set-Seed parameter and the common parameters.</source>
          <target state="translated">Beide Parameter enthalten den Satz Ausgangswert und die allgemeinen Parameter.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>These parameter sets indicate that you can use the InputObject and Count parameters in the same command, but you cannot use the Maximum and Count parameters in the same command.</source>
          <target state="translated">Dieser Parameter wird angegeben, dass Sie im selben Befehl Eingabeobjekt und Count-Parameter können, aber Sie nicht die maximale und Count-Parameter, im selben Befehl verwenden.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You indicate which parameter set you want to use by using the parameters in that parameter set.</source>
          <target state="translated">Sie angeben, welcher Parametersatz, der mit den Parametern, Parameter festgelegt werden soll.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>However, every cmdlet also has a default parameter set.</source>
          <target state="translated">Jedes Cmdlet hat jedoch auch einen Standardparameter festgelegt.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The default parameter set is used when you do not specify parameters that are unique to a parameter set.</source>
          <target state="translated">Der Standardsatz der Parameter wird verwendet, wenn Sie keine Parameter angeben, die nur für einen Parameter festgelegt werden.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For example, if you use Get-Random without parameters, Windows PowerShell assumes that you are using the Number parameter set and it returns a random number.</source>
          <target state="translated">Z. B. Wenn Sie Get-Random ohne Parameter verwenden, Windows PowerShell nimmt die Verwendung des Number-Parameters festlegen, und es gibt eine Zufallszahl zurück.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>In each parameter set, the parameters appear in position order.</source>
          <target state="translated">In jedem Parametersatz entsprechen die Parametern Position Reihenfolge.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The order of parameters in a command matters only when you omit the optional parameter names.</source>
          <target state="translated">Die Reihenfolge der Parameter in einem Befehl spielt eine Rolle nur, wenn Sie die optionalen Parameternamen auslassen.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>When parameter names are omitted, Windows PowerShell assigns values to parameters by position and type.</source>
          <target state="translated">Wenn die Parameternamen ausgelassen werden, mit Windows PowerShell Parameter nach Position, und geben Werte zugewiesen.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For more information about parameter position, see about_Parameters.</source>
          <target state="translated">Weitere Informationen zur Parameterposition finden Sie unter About_Parameters.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Symbols in Syntax Diagrams The syntax diagram lists the command name, the command parameters, and the parameter values.</source>
          <target state="translated">Symbole in der Syntax Diagramme Syntax Diagramm Listen, den Namen des Befehls, die Parameter des Befehls und die Parameterwerte.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>It also uses symbols to show how to construct a valid command.</source>
          <target state="translated">Er verwendet auch Symbole, wie Sie einen gültigen Befehl zu erstellen.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The syntax diagrams use the following symbols:</source>
          <target state="translated">Die Syntaxdiagramme verwenden die folgenden Symbole:</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>-- A hyphen (-) indicates a parameter name.</source>
          <target state="translated">– Ein Bindestrich (-) gibt einen Parameternamen an.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In a command, type the hyphen immediately before the parameter name with no intervening spaces, as shown in the syntax diagram.</source>
          <target state="translated">Geben Sie in einem Befehl unmittelbar vor dem Parameternamen keine Leerzeichen, Bindestriche, wie das Syntaxdiagramm veranschaulicht.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For example, to use the Name parameter of New-Alias, type:</source>
          <target state="translated">Geben Sie z. B. um die Name-Parameter von New-Alias zu verwenden:</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-- Angle brackets (&lt;&gt;) indicate placeholder text.</source>
          <target state="translated">--Spitzen Klammern (&lt;&gt;) Geben Sie Platzhaltertext an.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You do not type the angle brackets or the placeholder text in a command.</source>
          <target state="translated">Sie nicht die spitzen Klammern oder den Platzhaltertext in einem Befehl eingeben.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Instead, you replace it with the item that it describes.</source>
          <target state="translated">Stattdessen ersetzen Sie es durch das Element, das es beschreibt.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Angle brackets are used to identify the .NET type of the value that a parameter takes.</source>
          <target state="translated">Spitze Klammern werden verwendet, um den .NET-Typ des Werts zu identifizieren, die einen Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For example, to use the Name parameter of the New-Alias cmdlet, you replace the <ph id="ph1">&lt;string&gt;</ph> with a string, which is a single word or a group of words that are enclosed in quotation marks.</source>
          <target state="translated">Um den Name-Parameter des Cmdlets New-Alias zu verwenden, ersetzen Sie z. B. die <ph id="ph1">&lt;string&gt;</ph> mit einer Zeichenfolge wird also ein einzelnes Wort oder eine Gruppe von Wörtern, die in Anführungszeichen eingeschlossen sind.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-- Brackets ([ ]) indicate optional items.</source>
          <target state="translated">--Klammern ([]) zeigen optionale Elemente an.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A parameter and its value can be optional, or the name of a required parameter can be optional.</source>
          <target state="translated">Optional kann ein Parameter und dessen Wert oder der Name des ein erforderlicher Parameter kann optional sein.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For example, the Description parameter of New-Alias and its value are enclosed in brackets because they are both optional.</source>
          <target state="translated">Z. B. der Description-Parameter des New-Alias und dessen Wert werden eingeschlossen in Klammern, da sie beide optional sind.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>[-Description <ph id="ph1">&lt;string&gt;</ph>]</source>
          <target state="translated">[-Beschreibung <ph id="ph1">&lt;string&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The brackets also indicate that the Name parameter value (<ph id="ph1">&lt;string&gt;</ph>) is required, but the parameter name, "Name," is optional.</source>
          <target state="translated">Die Klammern geben auch an, die Wert des Name-Parameters (<ph id="ph1">&lt;string&gt;</ph>) ist erforderlich, aber der Name des Parameters "Name" ist optional.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>[-Name]</source>
          <target state="translated">[-Name]</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>-- A right and left bracket ([]) appended to a .NET type indicates that the parameter can accept one or multiple values of that type.</source>
          <target state="translated">– Eine öffnende und schließende Klammer ([]) an einen angefügt gibt an, dass der Parameter einen oder mehrere Werte dieses Typs annehmen kann.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Enter the values in a comma-separated list.</source>
          <target state="translated">Geben Sie die Werte in eine durch Kommas getrennte Liste ein.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For example, the Name parameter of the New-Alias cmdlet takes only one string, but the Name parameter of Get-Process can take one or many strings.</source>
          <target state="translated">Z. B. kann der Name-Parameter des Cmdlets New-Alias nimmt nur eine Zeichenfolge, die Name-Parameter von Get-Process jedoch eine oder mehrere Zeichenfolgen.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>New-Alias [-Name]</source>
          <target state="translated">Neuer Alias [-Name]</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>New-Alias -Name MyAlias</source>
          <target state="translated">Neuen Alias - Name MyAlias</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Get-Process [-Name] &lt;string[]&gt;</source>
          <target state="translated">Get-Process [-Name] &lt; Zeichenfolge [] &gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Get-Process -Name Explorer, Winlogon, Services</source>
          <target state="translated">Get-Process Explorer Winlogon, Dienste zu nennen</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>-- Braces ({}) indicate an "enumeration," which is a set of valid values for a parameter.</source>
          <target state="translated">--Geschweifte Klammern ({}) Geben Sie eine "Enumeration" wird eine Reihe gültiger Werte für einen Parameter an.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The values in the braces are separated by vertical bars ( | ).</source>
          <target state="translated">Die Werte in Klammern werden durch senkrechte Striche (|) getrennt.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>These bars indicate an "exclusive or" choice, meaning that you can choose only one value from the set of values that are listed inside the braces.</source>
          <target state="translated">Diese Striche zeigen an eine "exklusive oder" Wahl, was bedeutet, dass Sie nur einen Wert aus dem Satz von Werten auswählen können, die innerhalb der geschweiften Klammern aufgeführt sind.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For example, the syntax for the New-Alias cmdlet includes the following value enumeration for the Option parameter:</source>
          <target state="translated">Die Syntax für das Cmdlet "New-Alias" enthält z. B. die folgende Enumeration der Wert für die Option-Parameter:</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>-Option {None | ReadOnly | Constant | Private | AllScope}</source>
          <target state="translated">-Option {None | ReadOnly | Konstante | Private | AllScope}</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The braces and vertical bars indicate that you can choose any one of the listed values for the Option parameter, such as ReadOnly or AllScope.</source>
          <target state="translated">Die geschweiften Klammern und senkrechte Striche anzugeben, dass Sie eine der aufgelisteten Werte für die Option-Parameter, z. B. "ReadOnly" oder AllScope auswählen können.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>-Option ReadOnly</source>
          <target state="translated">-ReadOnly option</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Optional Items Brackets ([]) surround optional items.</source>
          <target state="translated">Optionale Elemente Klammern ([]) umgeben optionale Elemente.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For example, in the New-Alias cmdlet syntax description, the Scope parameter is optional.</source>
          <target state="translated">Beispielsweise ist in der Beschreibung der New-Alias-Cmdlet-Syntax, die Scope-Parameter optional.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This is indicated in the syntax by the brackets around the parameter name and type:</source>
          <target state="translated">Dies wird durch die Klammern um den Parameternamen und den Typ in der Syntax angegeben:</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>[-Scope <ph id="ph1">&lt;string&gt;</ph>]</source>
          <target state="translated">[-Bereich <ph id="ph1">&lt;string&gt;</ph>]</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Both the following examples are correct uses of the New-Alias cmdlet:</source>
          <target state="translated">Sowohl in den folgenden Beispielen werden richtige verwendet das Cmdlet "New-Alias":</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>New-Alias -Name utd -Value Update-TypeData New-Alias -Name utd -Value Update-TypeData -Scope global</source>
          <target state="translated">New-Alias - Name Dateness-Wert Update-TypeData New-Alias-Name Dateness-Wert Update-TypeData-globalen Gültigkeitsbereich</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A parameter name can be optional even if the value for that parameter is required.</source>
          <target state="translated">Ein Parametername kann optional sein, selbst wenn der Wert für diesen Parameter erforderlich ist.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This is indicated in the syntax by the brackets around the parameter name but not the parameter type, as in this example from the New-Alias cmdlet:</source>
          <target state="translated">Dies wird durch die Klammern um den Namen des Parameters, aber nicht den Parametertyp, wie im folgenden Beispiel aus dem Cmdlet New-Alias in der Syntax angegeben:</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>[-Name] <ph id="ph1">&lt;string&gt;</ph> [-Value]</source>
          <target state="translated">[-Name] <ph id="ph1">&lt;string&gt;</ph> [-Wert]</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The following  commands correctly use the New-Alias cmdlet.</source>
          <target state="translated">Die folgenden Befehle verwenden Sie das Cmdlet "New-Alias" ordnungsgemäß.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The commands produce the same result.</source>
          <target state="translated">Die Befehle erzeugen dasselbe Ergebnis.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>New-Alias -Name utd -Value Update-TypeData New-Alias -Name utd Update-TypeData New-Alias utd -Value Update-TypeData New-Alias utd Update-TypeData</source>
          <target state="translated">New-Alias - Name Dateness-Wert Update-TypeData New-Alias-Name Dateness-Update-TypeData New-Alias-Dateness-Wert Update-TypeData New-Alias Dateness Update-TypeData</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>If the parameter name is not included in the statement as typed, Windows PowerShell tries to use the position of the arguments to assign the values to parameters.</source>
          <target state="translated">Wenn der Name des Parameters in der Anweisung Administratordomäne nicht enthalten ist, versucht Windows PowerShell, die Position der Argumente auf Parameter die Werte zugewiesen.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The following example is not complete:</source>
          <target state="translated">Im folgende Beispiel ist nicht abgeschlossen werden:</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>New-Alias utd</source>
          <target state="translated">Neuer Alias Dateness</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This cmdlet requires values for both the Name and Value parameters.</source>
          <target state="translated">Dieses Cmdlet erfordert Werte für Name und Wert-Parameter.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>In syntax examples, brackets are also used in naming and casting to .NET Framework types.</source>
          <target state="translated">In Syntaxbeispielen sind Klammern auch in der Benennung und Umwandeln in .NET Framework-Typen verwendet.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>In this context, brackets do not indicate an element is optional.</source>
          <target state="translated">In diesem Zusammenhang Klammern nicht an ein Element ist optional.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>KEYWORDS</source>
          <target state="translated">SCHLÜSSELWÖRTER</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>about_Symbols about_Punctuation about_Help_Syntax</source>
          <target state="translated">About_Symbols About_Punctuation about_Help_Syntax</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">SIEHE AUCH</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>about_Parameters Get-Command Get-Help</source>
          <target state="translated">About_Parameters Get-Command Get-Help</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>