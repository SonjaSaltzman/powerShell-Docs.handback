<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">42542eb3d4982d6d7cfa811958e9a43e68e9b81b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Comparison_Operators.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8816eb8f3a874a7bf1b2d259fad4e7fd7679782f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1245e24d5c3b795f59724009c5fbd71bcda2dec</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Comparison_Operators</source>
          <target state="translated">about_Comparison_Operators</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">PowerShell-Cmdlets</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Comparison Operators</source>
          <target state="translated">Informationen über Vergleichsoperatoren</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Comparison_Operators</source>
          <target state="translated">about_Comparison_Operators</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Comparison_Operators</source>
          <target state="translated">about_Comparison_Operators</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">KURZE BESCHREIBUNG</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes the operators that compare values in Windows PowerShell.</source>
          <target state="translated">Beschreibt die Operatoren zum Vergleichen von Werten in Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">LANGE BESCHREIBUNG</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Comparison operators let you specify conditions for comparing values and finding values that match specified patterns.</source>
          <target state="translated">Vergleichsoperatoren können Sie die Optionen zum Vergleichen von Werten und Suchen nach Werten, die angegebenen Muster entsprechen angeben.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To use a comparison operator, specify the values that you want to compare together with an operator that separates these values.</source>
          <target state="translated">Um einen Vergleichsoperator verwenden zu können, geben Sie die Werte, die zusammen mit einem Operator zu vergleichen, die diese Werte getrennt werden soll.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Windows PowerShell includes the following comparison operators:</source>
          <target state="translated">Windows PowerShell umfasst die folgenden Vergleichsoperatoren:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>-eq -ne -gt -ge -lt -le -Like -NotLike -Match -NotMatch -Contains -NotContains -In -NotIn -Replace</source>
          <target state="translated">-Eq - Ne - Gt -ge - Lt-le-wie - NotLike - entsprechen - NotMatch-enthält - NotContains-In - NotIn-ersetzen</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>By default, all comparison operators are case-insensitive.</source>
          <target state="translated">Standardmäßig sind alle Vergleichsoperatoren Groß-und Kleinschreibung.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To make a comparison operator case-sensitive, precede the operator name with a "c".</source>
          <target state="translated">Um einen Vergleichsoperator Groß-/Kleinschreibung, stellen Sie den Namen des Operators ein "c" voran.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, the case-sensitive version of "-eq" is "-ceq".</source>
          <target state="translated">Zum Beispiel die Groß-/Kleinschreibung Version von "-Eq" ist "-Ceq".</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To make the case-insensitivity explicit, precede the operator with an "i".</source>
          <target state="translated">Um die Kleinschreibung explizit zu machen, den Operator mit einem "i" vorangestellt werden.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, the explicitly case-insensitive version of "-eq" is "-ieq".</source>
          <target state="translated">Angenommen, die explizit Groß-und Kleinschreibung Version von "-Eq" ist "-Ieq".</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When the input to an operator is a scalar value, comparison operators return a Boolean value.</source>
          <target state="translated">Wenn die Eingabe an einen Operator einen skalaren Wert ist, wird von Vergleichsoperatoren einen booleschen Wert zurückgeben.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When the input is a collection of values, the comparison operators return any matching values.</source>
          <target state="translated">Wenn die Eingabe eine Auflistung von Werten, zurück die Vergleichsoperatoren übereinstimmenden Werte.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If there are no matches in a collection, comparison operators do not return anything.</source>
          <target state="translated">Wenn keine Übereinstimmungen in einer Auflistung vorhanden sind, führen Sie Vergleichsoperatoren nichts zurück.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The exceptions are the containment operators (-Contains, -NotContains), the In operators (-In, -NotIn), and the type operators (-Is, -IsNot), which always return a Boolean value.</source>
          <target state="translated">Ausnahmen sind die Containment-Operatoren (-enthält, - NotContains), die Operatoren In (-In - NotIn), und die Typoperatoren (-ist, IsNot-), die immer einen booleschen Wert zurückgeben.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports the following comparison operators.</source>
          <target state="translated">Windows PowerShell unterstützt die folgenden Vergleichsoperatoren.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-eq Description: Equal to.</source>
          <target state="translated">Beschreibung des – Eq: gleich.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Includes an identical value.</source>
          <target state="translated">Enthält einen identischen Wert.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Beispiel:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc" -eq "abc" True</source>
          <target state="translated">PS C: &gt; "Abc" - Eq "Abc" "true"</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc" -eq "abc", "def" False</source>
          <target state="translated">PS C: &gt; "Abc" - Eq "Abc", "Def", "false"</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc", "def" -eq "abc" abc</source>
          <target state="translated">PS C: &gt; "Abc", "Def" - Eq "Abc" Abc</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>-ne Description: Not equal to.</source>
          <target state="translated">-Ne Beschreibung: nicht gleich.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Includes a different value.</source>
          <target state="translated">Enthält einen anderen Wert an.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Beispiel:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc" -ne "def" True</source>
          <target state="translated">PS C: &gt; "Def" True "Abc" - Ne</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc" -ne "abc" False</source>
          <target state="translated">PS C: &gt; "Abc" - Ne "Abc" False</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc" -ne "abc", "def" True</source>
          <target state="translated">PS C: &gt; "Abc", "Def" True "Abc" - Ne</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc", "def" -ne "abc" def</source>
          <target state="translated">PS C: &gt; "Abc", "Def" - Ne "Abc" Def</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>-gt Description: Greater-than.</source>
          <target state="translated">-Gt Beschreibung: größer-als.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Beispiel:</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 8 -gt 6 True</source>
          <target state="translated">PS C: &gt; 8 - Gt 6 True</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 7, 8, 9 -gt 8</source>
          <target state="translated">PS C: &gt; 7, 8, 9 - Gt 8</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>9</source>
          <target state="translated">9</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>-ge Description: Greater-than or equal to.</source>
          <target state="translated">-ge Beschreibung: größer-als oder gleich.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Beispiel:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 8 -ge 8 True</source>
          <target state="translated">PS C: &gt; 8 -ge 8 True</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 7, 8, 9 -ge 8</source>
          <target state="translated">PS C: &gt; 7, 8, 9 -ge 8</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>9</source>
          <target state="translated">9</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-lt Description: Less-than.</source>
          <target state="translated">Lt - Beschreibung: kleiner-als.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Beispiel:</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 8 -lt 6 False</source>
          <target state="translated">PS C: &gt; 8 - Lt 6 False</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 7, 8, 9 -lt 8</source>
          <target state="translated">PS C: &gt; 7, 8, 9 - Lt 8</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>7</source>
          <target state="translated">7</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-le Description: Less-than or equal to.</source>
          <target state="translated">-Beschreibung le: kleiner-als oder gleich.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Beispiel:</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 6 -le 8 True</source>
          <target state="translated">PS C: &gt; 6 - le 8 True</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 7, 8, 9 -le 8</source>
          <target state="translated">PS C: &gt; 7, 8, 9 - le 8</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>7</source>
          <target state="translated">7</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-Like Description: Match using the wildcard character (*).</source>
          <target state="translated">-Like Beschreibung: Entsprechen Sie, verwenden das Platzhalterzeichen (*).</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Beispiel:</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Windows PowerShell" -like "*shell" True</source>
          <target state="translated">PS C: &gt; "Windows PowerShell"-wie "* Shell" True</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Windows PowerShell", "Server" -like "*shell" Windows PowerShell</source>
          <target state="translated">PS C: &gt; "Windows PowerShell", "Server"-wie "* Shell" Windows PowerShell</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-NotLike Description: Does not match using the wildcard character (*).</source>
          <target state="translated">-NotLike Beschreibung: Stimmt nicht überein, mit dem Platzhalterzeichen (*).</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Beispiel:</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Windows PowerShell" -NotLike "*shell" False</source>
          <target state="translated">PS C: &gt; "Windows PowerShell"-NotLike "* Shell" False</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Windows PowerShell", "Server" -NotLike "*shell" Server</source>
          <target state="translated">PS C: &gt; "Windows PowerShell", "Server"-NotLike "* Shell" Server</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-Match Description: Matches a string using regular expressions.</source>
          <target state="translated">-Match-Beschreibung: Mit einer Zeichenfolge, die mithilfe von regulären Ausdrücken übereinstimmt.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When the input is scalar, it populates the $Matches automatic variable.</source>
          <target state="translated">Wenn die Eingabe Skalar ist, wird die automatische $Matches-Variable aufgefüllt.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Beispiel:</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Sunday" -Match "sun" True</source>
          <target state="translated">PS C: &gt; "Sunday"-"sun" "true" übereinstimmen</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $matches Name Value</source>
          <target state="translated">PS C: &gt; $matches Name-Wert</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>0    Sun</source>
          <target state="translated">0 Sun</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Sunday", "Monday" -Match "sun" Sunday</source>
          <target state="translated">PS C: &gt; "Sunday", "Monday"-"Sun" Sonntag übereinstimmen</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-NotMatch Description: Does not match a string.</source>
          <target state="translated">-NotMatch Beschreibung: eine Zeichenfolge stimmt nicht überein.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Uses regular expressions.</source>
          <target state="translated">Verwendet reguläre Ausdrücke.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>When the input is scalar, it populates the $Matches automatic variable.</source>
          <target state="translated">Wenn die Eingabe Skalar ist, wird die automatische $Matches-Variable aufgefüllt.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Beispiel:</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Sunday" -NotMatch "sun" False</source>
          <target state="translated">PS C: &gt; "sun" False "Sunday" - NotMatch</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $matches Name Value</source>
          <target state="translated">PS C: &gt; $matches Name-Wert</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>0    sun</source>
          <target state="translated">0 sun</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Sunday", "Monday" -NotMatch "sun" Monday</source>
          <target state="translated">PS C: &gt; "Sunday", "Monday" - NotMatch "sun" Montag</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-Contains Description: Containment operator.</source>
          <target state="translated">-Beschreibung enthält: Containment-Operator.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Tells whether a collection of reference values includes a single test value.</source>
          <target state="translated">Erfahren Sie, ob eine Auflistung von Verweisen auf Werte einen einzelnen Test-Wert enthält.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Always returns a Boolean value.</source>
          <target state="translated">Gibt immer einen booleschen Wert zurück.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Returns TRUE only when the test value exactly matches at least one of the reference values.</source>
          <target state="translated">Gibt TRUE zurück, nur, wenn der Testwert muss mindestens die Referenzwerte genau übereinstimmt.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>When the test value is a collection, the Contains operator uses reference equality.</source>
          <target state="translated">Wenn der Testwert eine Auflistung ist, verwendet der Contains-Operator auf Verweisgleichheit.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>It returns TRUE only when one of the reference values is the same instance of the test value object.</source>
          <target state="translated">Es gibt TRUE zurück, nur, wenn der Verweis-Werte derselben Instanz von Test-Wert-Objekt ist.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Syntax: &lt;Reference-values&gt; -Contains &lt;Test-value&gt;</source>
          <target state="translated">Syntax: &lt; Referenzwerte &gt;-&lt; Test-Wert &gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Beispiele:</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc", "def" -Contains "def" True</source>
          <target state="translated">PS C: &gt; "Abc", "Def"-"Def" "true" enthält</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Windows", "PowerShell" -Contains "Shell" False  #Not an exact match</source>
          <target state="translated">PS C: &gt; "Windows", "PowerShell"-"Shell" False #Not eine genaue Übereinstimmung enthält</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Does the list of computers in $domainServers include $thisComputer?</source>
          <target state="translated">Ist die Liste der Computer in $domainServers $thisComputer enthalten?</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $domainServers -Contains $thisComputer True</source>
          <target state="translated">PS C: &gt; $domainServers-$thisComputer "true" enthält</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc", "def", "ghi" -Contains "abc", "def" False</source>
          <target state="translated">PS C: &gt; "Abc", "Def", "Ghi"-"Abc", "Def", "false" enthält</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $a = "abc", "def" PS C:&gt; "abc", "def", "ghi" -Contains $a False PS C:&gt; $a, "ghi" -Contains $a True</source>
          <target state="translated">PS C: &gt; $a = "Abc", "Def" PS C: &gt; "Abc", "Def", "Ghi"-enthält $a False PS C: &gt; $a "Ghi-" $a "true" enthält</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-NotContains Description: Containment operator.</source>
          <target state="translated">-NotContains Beschreibung: Containment-Operator.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Tells whether a collection of reference values includes a single test value.</source>
          <target state="translated">Erfahren Sie, ob eine Auflistung von Verweisen auf Werte einen einzelnen Test-Wert enthält.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Always returns a Boolean value.</source>
          <target state="translated">Gibt immer einen booleschen Wert zurück.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Returns TRUE when the test value is not an exact matches for at least one of the reference values.</source>
          <target state="translated">Gibt TRUE zurück, wenn der Testwert keine genaue Übereinstimmungen für mindestens eine der Referenzwerte ist.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When the test value is a collection, the NotContains operator uses reference equality.</source>
          <target state="translated">Wenn der Testwert eine Auflistung ist, verwendet der NotContains-Operator auf Verweisgleichheit.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Syntax: &lt;Reference-values&gt; -NotContains &lt;Test-value&gt;</source>
          <target state="translated">Syntax: &lt; Referenzwerte &gt; - NotContains &lt; Test-Wert &gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Beispiele:</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Windows", "PowerShell" -NotContains "Shell" True  #Not an exact match</source>
          <target state="translated">PS C: &gt; "Windows", "PowerShell" - NotContains "Shell" True #Not eine genaue Übereinstimmung</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Get cmdlet parameters, but exclude common parameters function get-parms ($cmdlet) { $Common = "Verbose", "Debug", "WarningAction", "WarningVariable", ` "ErrorAction", "ErrorVariable", "OutVariable", "OutBuffer"</source>
          <target state="translated">Cmdlet-Parameter, aber auch ausschließen allgemeine Parameter Funktion Get-Parms ($cmdlet) {$Common = "Verbose", "Debug", "WarningAction", "WarningVariable", ""ErrorAction","-ErrorVariable","OutVariable","OutBuffer"</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>$allparms = (Get-Command $Cmdlet).parametersets | foreach {$<bpt id="p1">_</bpt>.Parameters} | ` foreach {$<ept id="p1">_</ept>.Name} | Sort-Object | Get-Unique</source>
          <target state="translated">$allparms = (Get-Command $Cmdlet) .parametersets | Foreach {$<bpt id="p1">_</bpt>. Parameter} | "Foreach {$<ept id="p1">_</ept>. Name} | Sort-Object | Get-Unique</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>$allparms | where {$Common -NotContains $_ } }</source>
          <target state="translated">$allparms | wobei {$Common - NotContains $_}}</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Find unapproved verbs in the functions in my module</source>
          <target state="translated">Suchen Sie in den Funktionen im Modul nicht genehmigte Verben</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $ApprovedVerbs = Get-Verb | foreach {$<bpt id="p1">_</bpt>.verb} PS C:&gt; $myVerbs = Get-Command -Module MyModule | foreach {$<ept id="p1">_</ept>.verb}</source>
          <target state="translated">PS C: &gt; $ApprovedVerbs = Get-Verb | Foreach {$<bpt id="p1">_</bpt>.verb} PS C: &gt; $myVerbs = Get-Command-Modul MyModule | Foreach {$<ept id="p1">_</ept>.verb}</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $myVerbs | where {$ApprovedVerbs -NotContains $_} ForEach Sort Tee Where</source>
          <target state="translated">PS C: &gt; $myVerbs | {$ApprovedVerbs - NotContains $_} ForEach sortieren zeigen, wo</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>-In Description: In operator.</source>
          <target state="translated">-In-Beschreibung: In-Operator.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Tells whether a test value appears in a collection of reference values.</source>
          <target state="translated">Erfahren Sie, ob ein Testwert in einer Auflistung von Verweisen auf Werte angezeigt wird.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Always return as Boolean value.</source>
          <target state="translated">Immer als booleschen Wert zurück.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Returns TRUE only when the test value exactly matches at least one of the reference values.</source>
          <target state="translated">Gibt TRUE zurück, nur, wenn der Testwert muss mindestens die Referenzwerte genau übereinstimmt.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>When the test value is a collection, the In operator uses reference equality.</source>
          <target state="translated">Wenn der Testwert eine Auflistung ist, wird der In-Operator Verweisgleichheit verwendet.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>It returns TRUE only when one of the reference values is the same instance of the test value object.</source>
          <target state="translated">Es gibt TRUE zurück, nur, wenn der Verweis-Werte derselben Instanz von Test-Wert-Objekt ist.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The In operator was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Der In-Operator wurde in Windows PowerShell 3.0 eingeführt.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Syntax: &lt;Test-value&gt; -in &lt;Reference-values&gt;</source>
          <target state="translated">Syntax: &lt; Test-Wert &gt;-&lt; Reference-Werte &gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Beispiele:</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "def" -in "abc", "def" True</source>
          <target state="translated">PS C: &gt; "Def"-in "Abc", "Def" "true"</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Shell" -in "Windows", "PowerShell" False  #Not an exact match</source>
          <target state="translated">PS C: &gt; "Shell" - in "Windows", "PowerShell", "false" #Not eine genaue Übereinstimmung</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Windows" -in "Windows", "PowerShell" True  #An exact match</source>
          <target state="translated">PS C: &gt; "Windows"-in "Windows", "true"PowerShell"" #An genaue Übereinstimmung</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Windows", "PowerShell" -in "Windows", "PowerShell", "ServerManager" False  #Using reference equality</source>
          <target state="translated">PS C: &gt; "Windows", "PowerShell"-in "Windows", "PowerShell", "ServerManager" False #Using Verweisgleichheit</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $a = "Windows", "PowerShell" PS C:&gt; $a -in $a, "ServerManager" True  #Using reference equality</source>
          <target state="translated">PS C: &gt; $a = "Windows", "PowerShell" PS C: &gt; $a - in $a, "ServerManager" True #Using Verweisgleichheit</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Does the list of computers in $domainServers include $thisComputer?</source>
          <target state="translated">Ist die Liste der Computer in $domainServers $thisComputer enthalten?</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $thisComputer -in  $domainServers True</source>
          <target state="translated">PS C: &gt; $thisComputer-in $domainServers True</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>-NotIn Description: NotIn operator.</source>
          <target state="translated">-NotIn Beschreibung: NotIn-Operator.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Tells whether a test value appears in a collection of reference values.</source>
          <target state="translated">Erfahren Sie, ob ein Testwert in einer Auflistung von Verweisen auf Werte angezeigt wird.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Always returns a Boolean value.</source>
          <target state="translated">Gibt immer einen booleschen Wert zurück.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Returns TRUE when the test value is not an exact match for at least one of the reference values.</source>
          <target state="translated">Gibt TRUE zurück, wenn der Testwert nicht exakt für mindestens eine der Referenzwerte ist.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>When the test value is a collection, the In operator uses reference equality.</source>
          <target state="translated">Wenn der Testwert eine Auflistung ist, wird der In-Operator Verweisgleichheit verwendet.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>It returns TRUE only when one of the reference values is the same instance of the test value object.</source>
          <target state="translated">Es gibt TRUE zurück, nur, wenn der Verweis-Werte derselben Instanz von Test-Wert-Objekt ist.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The NotIn operator was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Der NotIn-Operator wurde in Windows PowerShell 3.0 eingeführt.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Syntax: &lt;Test-value&gt; -NotIn &lt;Reference-values&gt;</source>
          <target state="translated">Syntax: &lt; Test-Wert &gt; - NotIn &lt; Referenzwerte &gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Beispiele:</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "def" -NotIn "abc", "def" False</source>
          <target state="translated">PS C: &gt; "Def" - NotIn "Abc", "Def", "false"</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "ghi" -NotIn "abc", "def" True</source>
          <target state="translated">PS C: &gt; "Ghi" - NotIn "Abc", "Def" "true"</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Shell" -NotIn "Windows", "PowerShell" True  #Not an exact match</source>
          <target state="translated">PS C: &gt; "Shell" - NotIn "Windows", "PowerShell" True #Not eine genaue Übereinstimmung</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Windows" -NotIn "Windows", "PowerShell" False  #An exact match</source>
          <target state="translated">PS C: &gt; "Windows" - NotIn "Windows", "false"PowerShell"" #An genaue Übereinstimmung</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Find unapproved verbs in the functions in my module</source>
          <target state="translated">Suchen Sie in den Funktionen im Modul nicht genehmigte Verben</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $ApprovedVerbs = Get-Verb | foreach {$<bpt id="p1">_</bpt>.verb} PS C:&gt; $myVerbs = Get-Command -Module MyModule | foreach {$<ept id="p1">_</ept>.verb}</source>
          <target state="translated">PS C: &gt; $ApprovedVerbs = Get-Verb | Foreach {$<bpt id="p1">_</bpt>.verb} PS C: &gt; $myVerbs = Get-Command-Modul MyModule | Foreach {$<ept id="p1">_</ept>.verb}</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $myVerbs | where {$_ -NotIn $ApprovedVerbs} ForEach Sort Tee Where</source>
          <target state="translated">PS C: &gt; $myVerbs | {$_ - NotIn $ApprovedVerbs} ForEach sortieren zeigen, wo</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>-Replace Description: Replace operator.</source>
          <target state="translated">-Ersetzen-Beschreibung: Replace-Operator.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Changes the specified elements of a value.</source>
          <target state="translated">Ändert die angegebenen Elemente eines Werts.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Beispiel:</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Get-Process" -Replace "Get", "Stop" Stop-Process</source>
          <target state="translated">PS C: &gt; "Get-Process" – Ersetzen Sie "Get", "Stop" Stop-Process</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Change all .GIF file name extension to .JPG PS C:&gt; dir *.gif | foreach {$_ -Replace ".gif", ".jpg"}</source>
          <target state="translated">Ändern Sie alle. GIF-Erweiterung an. JPG PS C: &gt; Dir *.gif | Foreach {$_-ersetzen ".gif", ".jpg"}</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Equality Operators The equality operators (-eq, -ne) return a value of TRUE or the matches when one or more of the input values is identical to the specified pattern.</source>
          <target state="translated">Gleichheitsoperatoren die Gleichheitsoperatoren (-Eq, Ne-) Wert "Wahr" oder den Ergebnissen zurückgeben, wenn mindestens eine der Eingabewerte identisch mit dem angegebenen Muster ist.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The entire pattern must match an entire value.</source>
          <target state="translated">Das gesamte Muster muss einen ganzen Wert übereinstimmen.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>C:PS&gt; 2 -eq 2 True</source>
          <target state="translated">C:PS &gt; 2 - Eq 2 True</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>C:PS&gt; 2 -eq 3 False</source>
          <target state="translated">C:PS &gt; 2 - Eq 3 False</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>C:PS&gt; 1,2,3 -eq 2</source>
          <target state="translated">C:PS &gt; 1,2,3 - Eq 2</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>C:PS&gt; "PowerShell" -eq "Shell" False</source>
          <target state="translated">C:PS &gt; "PowerShell" - Eq "Shell" "false"</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>C:PS&gt; "Windows", "PowerShell" -eq "Shell"</source>
          <target state="translated">C:PS &gt; "Windows", "PowerShell" - Eq "Shell"</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>C:PS&gt;</source>
          <target state="translated">C:PS &gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc", "def", "123" -eq "def" def</source>
          <target state="translated">PS C: &gt; "Abc", "Def", "123" - Eq "Def" Def</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc", "def", "123" -ne "def" abc</source>
          <target state="translated">PS C: &gt; "Abc", "Def", "123" - Ne "Def" Abc</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>123</source>
          <target state="translated">123</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Containment Operators The containment operators (-Contains and -NotContains) are similar to the equality operators.</source>
          <target state="translated">Kapselung Operatoren die Containment-Operatoren (-enthält und - NotContains) ähneln den Gleichheitsoperatoren.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>However, the containment operators always return a Boolean value, even when the input is a collection.</source>
          <target state="translated">Allerdings die Containment-Operatoren immer einen booleschen Wert zurückgeben, auch wenn die Eingabe eine Auflistung ist.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Also, unlike the equality operators, the containment operators return a value as soon as they detect the first match.</source>
          <target state="translated">Darüber hinaus im Gegensatz zu den Operatoren, die Containment-Operatoren einen Wert zurück, sobald sie die erste Übereinstimmung erkennen.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The equality operators evaluate all input and then return all the matches in the collection.</source>
          <target state="translated">Die Gleichheitsoperatoren evaluieren alle Eingaben und dann alle in der Auflistung zurückgeben.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The following examples show the effect of the -Contains operator:</source>
          <target state="translated">Die folgenden Beispiele veranschaulichen die Auswirkung der-Contains-Operator:</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>C:PS&gt; 1,2,3 -contains 2 True</source>
          <target state="translated">C:PS &gt; 1,2,3 - 2 "true" enthält</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>C:PS&gt; "PowerShell" -contains "Shell" False</source>
          <target state="translated">C:PS &gt; "PowerShell"-"Shell", "false" enthält</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>C:PS&gt; "Windows", "PowerShell" -contains "Shell" False</source>
          <target state="translated">C:PS &gt; "Windows", "PowerShell"-"Shell", "false" enthält</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "abc", "def", "123" -contains "def" True</source>
          <target state="translated">PS C: &gt; "Abc", "Def", "123"-"Def" "true" enthält</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "true", "blue", "six" -contains "true" True</source>
          <target state="translated">PS C: &gt; "true", "Blau", "6"-"true" "true" enthält</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The following example shows how the containment operators differ from the equal to operator.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie die Containment-Operatoren von gleich-Operator unterscheiden.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The containment operators return a value of TRUE on the first match.</source>
          <target state="translated">Die Containment Operatoren geben den Wert TRUE zurück, bei der ersten Übereinstimmung.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 1,2,3,4,5,4,3,2,1 -eq 2</source>
          <target state="translated">PS C: &gt; 1,2,3,4,5,4,3,2,1 - Eq 2</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 1,2,3,4,5,4,3,2,1 -contains 2 True</source>
          <target state="translated">PS C: &gt; 1,2,3,4,5,4,3,2,1 - 2 "true" enthält</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>In a very large collection, the -Contains operator returns results quicker than the equal to operator.</source>
          <target state="translated">In einer sehr großen Auflistung-Operator gibt Ergebnisse schneller als gleich-Operator enthält.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Match Operators The match operators (-Match and -NotMatch) find elements that match or do not match a specified pattern using regular expressions.</source>
          <target state="translated">Operatoren der Übereinstimmung Operatoren entsprechen (-Übereinstimmung und -NotMatch) suchen Sie nach Elementen, die übereinstimmen oder ein bestimmten Muster mithilfe regulärer Ausdrücke stimmen nicht überein.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The syntax is:</source>
          <target state="translated">Die Syntax lautet:</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>&lt;string[]&gt; -Match &lt;regular-expression&gt; &lt;string[]&gt; -NotMatch &lt;regular-expression&gt;</source>
          <target state="translated">&lt; String [] &gt; - &lt; reguläre Ausdrücke &gt;&lt; String [] &gt; - NotMatch &lt; reguläre Ausdrücke &gt; übereinstimmen</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The following examples show some uses of the -Match operator:</source>
          <target state="translated">Die folgenden Beispiele zeigen einige der-Match-Operator verwendet:</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Windows", "PowerShell" -Match ".shell" PowerShell</source>
          <target state="translated">PS C: &gt; "Windows", "PowerShell"-".shell" PowerShell übereinstimmen</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>PS C:&gt; (Get-Command Get-Member -Syntax) -Match "-view" True</source>
          <target state="translated">PS C: &gt; (Get-Command Get-Member-Syntax)-Match "-Ansicht" True</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>PS C:&gt; (Get-Command Get-Member -Syntax) -NotMatch "-path" True</source>
          <target state="translated">PS C: &gt; (Get-Command Get-Member-Syntax) - NotMatch "-Path" "true"</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>PS C:&gt; (Get-Content Servers.txt) -Match "^Server\d\d" Server01 Server02</source>
          <target state="translated">PS C: &gt; (Get-Content "Servers.txt")-Match "^ Server\d\d" Server01 "server02"</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The match operators search only in strings.</source>
          <target state="translated">Die Übereinstimmung Operatoren Suche nur in Zeichenfolgen.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>They cannot search in arrays of integers or other objects.</source>
          <target state="translated">Sie können nicht in Arrays von ganzen Zahlen oder anderen Objekten suchen.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The -Match and -NotMatch operators populate the $Matches automatic variable when the input (the left-side argument) to the operator is a single scalar object.</source>
          <target state="translated">-Übereinstimmung und -NotMatch Operatoren füllen die automatische $Matches-Variable aus, wenn die Eingabe (das Argument links) an den Operator ein einzelnes skalare Objekt ist.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>When the input is scalar, the -Match and -NotMatch operators return a Boolean value and set the value of the $Matches automatic variable to the matched components of the argument.</source>
          <target state="translated">Wenn die Eingabe Skalar-Übereinstimmung und -NotMatch Operatoren geben einen booleschen Wert zurück, und legen Sie den Wert der automatischen Variablen $Matches auf die zugeordneten Komponenten des Arguments.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>If the input is a collection, the -Match and -NotMatch operators return the matching members of that collection, but the operator does not populate the $Matches variable.</source>
          <target state="translated">Wenn die Eingabe eine Auflistung ist die - Übereinstimmung und NotMatch - Operatoren zurück, die übereinstimmenden Elemente der Auflistung, aber der Operator die $Matches-Variable nicht aufgefüllt.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>For example, the following command submits a collection of strings to the -Match operator.</source>
          <target state="translated">Der folgende Befehl sendet beispielsweise eine Auflistung von Zeichenfolgen an den - Match-Operator.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The -Match operator returns the items in the collection that match.</source>
          <target state="translated">-Übereinstimmt, der Operator gibt die Elemente in der Auflistung, die übereinstimmen.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>It does not populate the $Matches automatic variable.</source>
          <target state="translated">Die automatische $Matches-Variable nicht aufgefüllt.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Sunday", "Monday", "Tuesday" -Match "sun" Sunday</source>
          <target state="translated">PS C: &gt; "Sunday", "Monday", "Tuesday"-"Sun" Sonntag übereinstimmen</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $matches</source>
          <target state="translated">PS C: &gt; $matches</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>PS C:&gt;</source>
          <target state="translated">PS C: &gt;</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>In contrast, the following command submits a single string to the -Match operator.</source>
          <target state="translated">Im Gegensatz dazu der folgende Befehl sendet eine einzelne Zeichenfolge-Match-Operator.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The -Match operator returns a Boolean value and populates the $Matches automatic variable.</source>
          <target state="translated">-Übereinstimmung Operator gibt einen booleschen Wert, und füllt die automatische $Matches-Variable.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Sunday" -Match "sun" True</source>
          <target state="translated">PS C: &gt; "Sunday"-"sun" "true" übereinstimmen</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $matches</source>
          <target state="translated">PS C: &gt; $matches</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Name                           Value</source>
          <target state="translated">Namenswert</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>0                              Sun</source>
          <target state="translated">0                              Sun</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The -NotMatch operator populates the $Matches automatic variable when the input is scalar and the result is False, that it, when it detects a match.</source>
          <target state="translated">Der Operator - NotMatch füllt die automatische $Matches-Variable aus, wenn die Eingabe Skalar ist, und das Ergebnis "False ist", It, wenn eine Übereinstimmung erkannt wird.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Sunday" -NotMatch "rain" True</source>
          <target state="translated">PS C: &gt; "Regen" True "Sunday" - NotMatch</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $matches</source>
          <target state="translated">PS C: &gt; $matches</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>PS C:&gt;</source>
          <target state="translated">PS C: &gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "Sunday" -NotMatch "day" False</source>
          <target state="translated">PS C: &gt; "Sunday" - NotMatch "Day", "false"</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>PS C:&gt; $matches</source>
          <target state="translated">PS C: &gt; $matches</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>PS C:&gt;</source>
          <target state="translated">PS C: &gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Name                           Value</source>
          <target state="translated">Namenswert</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>0                              day</source>
          <target state="translated">0                              day</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Replace Operator The -Replace operator replaces all or part of a value with the specified value using regular expressions.</source>
          <target state="translated">Operator-ersetzen-Operator ersetzt alle oder einen Teil eines Werts mit dem angegebenen Wert, der mithilfe von regulären Ausdrücken.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>You can use the -Replace operator for many administrative tasks, such as renaming files.</source>
          <target state="translated">Sie können den Replace-Operator für viele Verwaltungsaufgaben, wie z. B. das Umbenennen von Dateien.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>For example, the following command changes the file name extensions of all .gif files to .jpg:</source>
          <target state="translated">Beispielsweise ändert der folgende Befehl die Dateinamenerweiterungen aller GIF-Dateien zu JPG-Datei:</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Get-ChildItem | Rename-Item -NewName { $_ -Replace '.gif$','.jpg$' }</source>
          <target state="translated">Get-ChildItem | Rename-Item - NewName {$_-ersetzen Sie 'GIF$ ', 'jpg$ '}</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The syntax of the -Replace operator is as follows, where the <ph id="ph1">&lt;original&gt;</ph> placeholder represents the characters to be replaced, and the <ph id="ph2">&lt;substitute&gt;</ph> placeholder represents the characters that will replace them:</source>
          <target state="translated">Die Syntax-Operator wie folgt wird ersetzen, in dem die <ph id="ph1">&lt;original&gt;</ph> Platzhalter darstellt, die Zeichen ersetzt werden, und die <ph id="ph2">&lt;substitute&gt;</ph> Platzhalter darstellt, die Zeichen, die diese ersetzen:</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>By default, the -Replace operator is case-insensitive.</source>
          <target state="translated">In der Standardeinstellung - ersetzen-Operator ist Groß-/Kleinschreibung.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>To make it case sensitive, use -cReplace.</source>
          <target state="translated">Um die Groß-/Kleinschreibung vereinfachen, verwenden Sie - cReplace.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>To make it explicitly case-insensitive, use -iReplace.</source>
          <target state="translated">Um explizit Groß-/Kleinschreibung zu können, verwenden Sie - iReplace.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Consider the following examples:</source>
          <target state="translated">Betrachten Sie die folgenden Beispiele:</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>PS C:&gt; "book" -Replace "B", "C" Cook PS C:&gt; "book" -iReplace "B", "C" Cook PS C:&gt; "book" -cReplace "B", "C" book</source>
          <target state="translated">PS C: &gt; "book" - ersetzen "B", "C" Cook PS C: &gt; "book" - iReplace "B", "C" Cook PS C: &gt; "Book" - cReplace "B", "C" Buch</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>PS C:&gt; '&lt;command:parameter required="false" variableLength="true" globbing="false"'` | foreach {$_ -replace 'globbing="false"', 'globbing="true"'} &lt;command:parameter required="false" variableLength="true" globbing="true"</source>
          <target state="translated">PS C: &gt; ' &lt; erforderlichen Befehlsparameter: = "false" VariableLength = "true" Globmodus = "false" '' | Foreach {$_-ersetzen "Globmodus ="false"', ' Globmodus ="true""} &lt; erforderlichen Befehlsparameter: = "false" VariableLength = "true" Globmodus = "true"</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Bitwise Operators Windows PowerShell supports the standard bitwise operators, including bitwise-AND (-bAnd), the inclusive and exclusive bitwise-OR operators (-bOr and -bXor), and bitwise-NOT (-bNot).</source>
          <target state="translated">Bitweise Operatoren Windows PowerShell unterstützt die standard bitweisen Operatoren, bitweisen einschließlich- UND (-bAnd), die inklusiven und exklusiven bitweise OR-Operatoren (-bim und - bXor), und Bitweises NOT (-bnicht).</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 2.0, all bitwise operators work with 64-bit integers.</source>
          <target state="translated">Ab Windows PowerShell 2.0, arbeiten alle bitweise Operatoren mit 64-Bit-Ganzzahlen.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, the -shr (shift-right) and -shl (shift-left) are introduced to support bitwise arithmetic in Windows PowerShell.</source>
          <target state="translated">Ab Windows PowerShell 3.0 sind die - Shr (Verschiebung nach rechts) und -Shl (UMSCHALT links) eingeführt, um bitweise arithmetisch in Windows PowerShell unterstützen.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports the following bitwise operators.</source>
          <target state="translated">Windows PowerShell unterstützt die folgenden bitweisen Operatoren.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Operator  Description               Example</source>
          <target state="translated">Operator-Beschreibung-Beispiel</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>-bAnd     Bitwise AND               PS C:&gt; 10 -band 3</source>
          <target state="translated">-bAnd bitweises AND PS C: &gt; 10 - band 3</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>-bOr      Bitwise OR (inclusive)    PS C:&gt; 10 -bor 3</source>
          <target state="translated">bIm - bitweises OR (inklusiv) PS C: &gt; 10 - bim 3</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>11</source>
          <target state="translated">11</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>-bXor     Bitwise OR (exclusive)    PS C:&gt; 10 -bxor 3</source>
          <target state="translated">-bXor bitweises OR (exklusiv) PS C: &gt; 10 - Bxor 3</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>9</source>
          <target state="translated">9</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>-bNot     Bitwise NOT               PS C:&gt; -bNot 10</source>
          <target state="translated">Bitweise NOT - bnicht PS C: &gt; - bnicht 10</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>-11</source>
          <target state="translated">-11</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>-shl      Shift-left                PS C:&gt; 100 -shl 2</source>
          <target state="translated">Shl - Umschalt-Links PS C: &gt; 100 - Shl 2</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>400</source>
          <target state="translated">400</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>-shr      Shift-right               PS C:&gt; 100 -shr 1</source>
          <target state="translated">Shr - Verschiebung nach rechts PS C: &gt; 100 - Shr 1</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>50</source>
          <target state="translated">50</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Bitwise operators act on the binary format of a value.</source>
          <target state="translated">Bitweise Operatoren agieren in das Binärformat eines Werts.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>For example, the bit structure for the number 10 is 00001010 (based on 1 byte), and the bit structure for the number 3 is 00000011.</source>
          <target state="translated">Z. B. die Bit-Struktur für die Zahl 10 ist 00001010 (basierend auf 1 Byte) ausgewertet, und die Bit-Struktur für die Zahl 3 ist 00000011.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>When you use a bitwise operator to compare 10 to 3, the individual bits in each byte are compared.</source>
          <target state="translated">Wenn Sie einen bitweisen Operator zum Vergleichen von 10 bis 3 verwenden, werden einzelne Bits in jedem Byte verglichen.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>In a bitwise AND operation, the resulting bit is set to 1 only when both input bits are 1.</source>
          <target state="translated">Bei einer bitweisen AND-Operation wird das resultierende Bit auf 1 festgelegt, nur, wenn beide Eingabe Bits 1 sind.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>1010      (10)</source>
          <target state="translated">1010      (10)</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>0011      ( 3)</source>
          <target state="translated">0011      ( 3)</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>--------------  bAND</source>
          <target state="translated">--------------  bAND</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>0010      ( 2)</source>
          <target state="translated">0010      ( 2)</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>In a bitwise OR (inclusive) operation, the resulting bit is set to 1 when either or both input bits are 1.</source>
          <target state="translated">In einem Vorgang bitweises OR (inklusiv) ist der resultierende Bit auf 1 festgelegt, wenn eine oder beide Eingabe Bits 1 sind.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The resulting bit is set to 0 only when both input bits are set to 0.</source>
          <target state="translated">Nur, wenn beide Eingabe Bits auf 0 festgelegt sind, ist das resultierende Bit auf 0 festgelegt.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>1010      (10)</source>
          <target state="translated">1010      (10)</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>0011      ( 3)</source>
          <target state="translated">0011      ( 3)</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>--------------  bOR (inclusive)</source>
          <target state="translated">---bIm (inklusiv)</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>1011      (11)</source>
          <target state="translated">1011      (11)</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>In a bitwise OR (exclusive) operation, the resulting bit is set to 1 only when one input bit is 1.</source>
          <target state="translated">In einem Vorgang bitweises OR (ausschließlich) wird das resultierende Bit auf 1 festgelegt, nur, wenn eine Eingabe Bit 1 ist.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>1010      (10)</source>
          <target state="translated">1010      (10)</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>0011      ( 3)</source>
          <target state="translated">0011      ( 3)</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>--------------  bXOR (exclusive)</source>
          <target state="translated">---bXOR (exklusiv)</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>1001      ( 9)</source>
          <target state="translated">1001      ( 9)</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The bitwise NOT operator is a unary operator that produces the binary complement of the value.</source>
          <target state="translated">Der bitweise NOT-Operator ein unärer Operator, der die binären Komplement des Werts erzeugt wird.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>A bit of 1 is set to 0 and a bit of 0 is set to 1.</source>
          <target state="translated">Ein Bit 1 auf 0 festgelegt ist und ein Bit 0 auf 1 festgelegt ist.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>For example, the binary complement of 0 is -1, the maximum unsigned integer (0xffffffff), and the binary complement of -1 is 0.</source>
          <target state="translated">Z. B. das binäre Komplement von 0 ist-1, die maximale ganze Zahl (0xffffffff), und das binäre Komplement von-1 ist 0.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>PS C:&gt; -bNOT 10</source>
          <target state="translated">PS C: &gt; - bnicht 10</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>-11</source>
          <target state="translated">-11</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>0000 0000 0000 1010  (10)</source>
          <target state="translated">0000 0000 0000 1010  (10)</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>------------------------- bNOT 1111 1111 1111 0101  (-11, xfffffff5)</source>
          <target state="translated">---bnicht 1111 1111 1111 0101 (-11, xfffffff5)</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>In a bitwise shift-left operation, all bits are moved "n" places to the left, where "n" is the value of the right operand.</source>
          <target state="translated">Bei einer bitweisen Operation nach links verschieben werden alle Bits verschoben, dass "n" auf der linken Seite platziert, in dem der Wert des rechten Operanden ist "n".</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>A zero is inserted in the ones place.</source>
          <target state="translated">Eine NULL in die eingefügt platzieren.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>When the left operand is an Integer (32-bit) value, the lower 5 bits of the right operand determine how many bits of the left operand are shifted.</source>
          <target state="translated">Wenn der linke Operand eine ganze Zahl (32-Bit)-Wert ist, bestimmen die unteren 5 Bits des rechten Operanden, wie viele Bits des linken Operanden verschoben werden.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>When the left operand is a Long (64-bit) value, the lower 6 bits of the right operand determine how many bits of the left operand are shifted.</source>
          <target state="translated">Wenn der linke Operand einen Long-Wert (64-Bit)-Wert ist, bestimmen die unteren 6 Bits des rechten Operanden wie viele Bits des linken Operanden verschoben werden.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 21 -shl 1</source>
          <target state="translated">PS C: &gt; 21 - Shl 1</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>42</source>
          <target state="translated">42</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>00010101  (21)</source>
          <target state="translated">00010101  (21)</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>00101010  (42)</source>
          <target state="translated">00101010  (42)</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 21 -shl 2</source>
          <target state="translated">PS C: &gt; 21 - Shl 2</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>84</source>
          <target state="translated">84</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>00010101  (21)</source>
          <target state="translated">00010101  (21)</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>00101010  (42)</source>
          <target state="translated">00101010  (42)</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>01010100  (84)</source>
          <target state="translated">01010100  (84)</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>In a bitwise shift-right operation, all bits are moved "n" places to the right, where "n" is specified by the right operand.</source>
          <target state="translated">Bei einer bitweisen Verschiebung nach rechts-Operation werden alle Bits verschoben, dass "n", Stellen rechts in der "n" durch den rechten Operanden angegeben ist.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The shift-right operator (-shr) inserts a zero in the left-most place when shifting a positive or unsigned value to the right.</source>
          <target state="translated">Die Verschiebung nach rechts-Operator (-Shr) Fügt eine NULL in die linke Position einen Wert positiven oder ohne Vorzeichen nach rechts verschoben.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>When the left operand is an Integer (32-bit) value, the lower 5 bits of the right operand determine how many bits of the left operand are shifted.</source>
          <target state="translated">Wenn der linke Operand eine ganze Zahl (32-Bit)-Wert ist, bestimmen die unteren 5 Bits des rechten Operanden, wie viele Bits des linken Operanden verschoben werden.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>When the left operand is a Long (64-bit) value, the lower 6 bits of the right operand determine how many bits of the left operand are shifted.</source>
          <target state="translated">Wenn der linke Operand einen Long-Wert (64-Bit)-Wert ist, bestimmen die unteren 6 Bits des rechten Operanden wie viele Bits des linken Operanden verschoben werden.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 21 -shr 1</source>
          <target state="translated">PS C: &gt; 21 - Shr 1</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>10</source>
          <target state="translated">10</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>00010101  (21)</source>
          <target state="translated">00010101  (21)</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>00001010  (10)</source>
          <target state="translated">00001010  (10)</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>PS C:&gt; 21 -shr 2</source>
          <target state="translated">PS C: &gt; 21 - Shr 2</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>00010101  (21)</source>
          <target state="translated">00010101  (21)</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>00001010  (10)</source>
          <target state="translated">00001010  (10)</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>00000101  ( 5)</source>
          <target state="translated">00000101  ( 5)</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">SIEHE AUCH</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>about_Operators about_Regular_Expressions about_Wildcards Compare-Object Foreach-Object Where-Object</source>
          <target state="translated">About_Operators "about_regular_expressions" About_Wildcards Compare-Object Foreach-Object Where-Object</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>