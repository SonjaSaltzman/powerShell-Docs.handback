<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2627cb51dd92921a3a0c0b680aaa240b54d8e4db</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\Wait-Job.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aaca506ef91ac162f73a6b7fd2b8362b46dcbfad</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db92f79caec5742cb861329c6a4937923004ea78</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">cmdlet de PowerShell</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Wait-Job</source>
          <target state="translated">Wait-Job</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Wait-Job</source>
          <target state="translated">Wait-Job</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">SINOPSIS</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Suppresses the command prompt until one or all of the Windows PowerShell background jobs running in the session are complete.</source>
          <target state="translated">Suprime el símbolo del sistema hasta que finalicen uno o todos los trabajos en segundo plano de Windows PowerShell que se ejecutan en la sesión.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SINTAXIS</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SessionIdParameterSet (Default)</source>
          <target state="translated">SessionIdParameterSet (valor predeterminado)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>JobParameterSet</source>
          <target state="translated">JobParameterSet</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>NameParameterSet</source>
          <target state="translated">NameParameterSet</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>InstanceIdParameterSet</source>
          <target state="translated">InstanceIdParameterSet</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>StateParameterSet</source>
          <target state="translated">StateParameterSet</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>FilterParameterSet</source>
          <target state="translated">FilterParameterSet</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIPCIÓN</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> cmdlet waits for Windows PowerShell background jobs to complete before it displays the command prompt.</source>
          <target state="translated">El <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> cmdlet espera a que finalicen antes de mostrar el símbolo de trabajos en segundo plano de Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can wait until any background job is complete, or until all background jobs are complete, and you can set a maximum wait time for the job.</source>
          <target state="translated">Puede esperar hasta que haya finalizado algún trabajo en segundo plano, o hasta que todos los trabajos en segundo plano hayan finalizado; además, puede establecer un tiempo máximo de espera para el trabajo.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When the commands in the job are complete, <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> displays the command prompt and returns a job object so that you can pipe it to another command.</source>
          <target state="translated">Cuando se completan, los comandos en el trabajo <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> muestra el símbolo del sistema y devuelve un objeto de trabajo para que se pueden canalizar a otro comando.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> cmdlet to wait for background jobs, such as those that were started by using the Start-Job cmdlet or the <bpt id="p2">**</bpt>AsJob<ept id="p2">**</ept> parameter of the Invoke-Command cmdlet.</source>
          <target state="translated">Puede usar <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> cmdlet para esperar trabajos en segundo plano, como las que se iniciaron mediante el cmdlet Start-Job o <bpt id="p2">**</bpt>AsJob<ept id="p2">**</ept> parámetro del cmdlet Invoke-Command.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information about Windows PowerShell background jobs, see about_Jobs.</source>
          <target state="translated">Para obtener más información acerca de los trabajos de segundo plano de Windows PowerShell, consulte about_Jobs.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, the <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> cmdlet also waits for custom job types, such as workflow jobs and instances of scheduled jobs.</source>
          <target state="translated">A partir de Windows PowerShell 3.0, el <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> cmdlet espera también para los tipos de trabajo personalizados, como trabajos de flujo de trabajo y las instancias de los trabajos programados.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To enable <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> to wait for jobs of a particular type, import the module that supports the custom job type into the session before running a <bpt id="p2">**</bpt>Get-Job<ept id="p2">**</ept> command, either by using the Import-Module cmdlet or by using or getting a cmdlet in the module.</source>
          <target state="translated">Para habilitar <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> para esperar a que los trabajos de un tipo determinado, importe el módulo que admite el tipo de trabajo personalizado en la sesión antes de ejecutar un <bpt id="p2">**</bpt>Get-Job<ept id="p2">**</ept> comando mediante el cmdlet Import-Module o usando u obteniendo un cmdlet en el módulo.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For information about a particular custom job type, see the documentation of the custom job type feature.</source>
          <target state="translated">Para información sobre un tipo determinado de trabajo personalizado, vea la documentación de la característica del tipo de trabajo personalizado.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EJEMPLOS</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- EJEMPLO 1 --------------------------</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This command waits for all of the background jobs running in the session to complete.</source>
          <target state="translated">Este comando espera a que todos los trabajos en segundo plano que se estén ejecutando en la sesión finalicen.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This example shows how to use the Wait-Job cmdlet with jobs started on remote computers by using the Start-Job cmdlet.</source>
          <target state="translated">En este ejemplo se muestra cómo usar el cmdlet Wait-Job con trabajos iniciados en equipos remotos mediante el cmdlet Start-Job.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Both the Start-Job and Wait-Job commands are submitted to the remote computer by using the Invoke-Command cmdlet.</source>
          <target state="translated">Tanto los comandos Start-Job como Wait-Job se envían al equipo remoto mediante el cmdlet Invoke-Command.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This example uses Wait-Job to determine whether a Get-Date command running as a background job on three different computers is complete.</source>
          <target state="translated">En este ejemplo se usa Wait-Job para determinar si se ha completado un comando Get-Date que se estaban ejecutando como un trabajo en segundo plano en tres equipos distintos.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The first command creates a Windows PowerShell session (PSSession) on each of the three remote computers and stores them in the $s variable.</source>
          <target state="translated">El primer comando crea una sesión de Windows PowerShell (PSSession) en cada uno de los tres equipos remotos y las almacena en la variable $s.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The second command uses the Invoke-Command cmdlet to run a Start-Job command in each of the three sessions in $s.</source>
          <target state="translated">El segundo comando usa el cmdlet Invoke-Command para ejecutar un comando Start-Job en cada una de las tres sesiones en $s.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>All of the jobs are named Date1.</source>
          <target state="translated">Todos los trabajos se denominan Date1.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The third command uses the Invoke-Command cmdlet to run a Wait-Job command.</source>
          <target state="translated">El tercer comando usa el cmdlet Invoke-Command para ejecutar un comando Wait-Job.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This command waits for the Date1 jobs on each computer to complete.</source>
          <target state="translated">Este comando espera a que finalicen los trabajos Date1 en cada equipo.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>It stores the resulting collection (array) of job objects in the $done variable.</source>
          <target state="translated">Almacena la colección (matriz) resultante de objetos de trabajo en la variable $done.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The fourth command uses the Count property of the array of job objects in the $done variable to determine how many of the jobs are complete.</source>
          <target state="translated">El cuarto comando usa la propiedad Count de la matriz de objetos de trabajo en la variable $done para determinar cuántos de los trabajos están completos.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This example uses the <bpt id="p1">**</bpt>Any<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Wait-Job<ept id="p2">**</ept> to determine when the first of many background jobs running in the current session are complete.</source>
          <target state="translated">Este ejemplo se utiliza la <bpt id="p1">**</bpt>cualquier<ept id="p1">**</ept> parámetro de <bpt id="p2">**</bpt>Wait-Job<ept id="p2">**</ept> para determinar cuándo están completas el primero de muchos trabajos en segundo plano se ejecutan en la sesión actual.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It also shows how to use the <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> cmdlet to wait for remote jobs to complete.</source>
          <target state="translated">También muestra cómo utilizar el <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> cmdlet para esperar a que finalicen los trabajos remotos.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The first command creates a PSSession on each of the computers listed in the Machines.txt file and stores the PSSessions in the $s variable.</source>
          <target state="translated">El primer comando crea una PSSession en cada uno de los equipos enumerados en el archivo Machines.txt y almacena las PSSessions en la variable $s.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The command uses the Get-Content cmdlet to get the contents of the file.</source>
          <target state="translated">El comando utiliza el cmdlet Get-Content para obtener el contenido del archivo.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Content<ept id="p1">**</ept> command is enclosed in parentheses to ensure that it runs before the New-PSSession command.</source>
          <target state="translated">El <bpt id="p1">**</bpt>Get-Content<ept id="p1">**</ept> comando aparece encerrado entre paréntesis para asegurarse de que se ejecuta antes que el comando New-PSSession.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The second command stores a <bpt id="p1">**</bpt>Get-EventLog<ept id="p1">**</ept> command string (in quotation marks) in the $c variable.</source>
          <target state="translated">El segundo comando almacena un <bpt id="p1">**</bpt>Get-EventLog<ept id="p1">**</ept> comando cadena (entre comillas) en la variable $c.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The third command uses the Invoke-Command cmdlet to run a <bpt id="p1">**</bpt>Start-Job<ept id="p1">**</ept> command in each of the sessions in $s.</source>
          <target state="translated">El tercer comando usa el cmdlet Invoke-Command para ejecutar un <bpt id="p1">**</bpt>Start Job<ept id="p1">**</ept> comando en cada una de las sesiones en $s.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Start-Job<ept id="p1">**</ept> command starts a background job that runs the <bpt id="p2">**</bpt>Get-EventLog<ept id="p2">**</ept> command in the $c variable.</source>
          <target state="translated">El <bpt id="p1">**</bpt>Start Job<ept id="p1">**</ept> comando inicia un trabajo en segundo plano que se ejecuta el <bpt id="p2">**</bpt>Get-EventLog<ept id="p2">**</ept> comando en la variable $c.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>Using<ept id="p1">**</ept> scope modifier to indicate that the $c variable was defined on the local computer.</source>
          <target state="translated">El comando utiliza el <bpt id="p1">**</bpt>mediante<ept id="p1">**</ept> modificador de ámbito para indicar que se ha definido la variable $c en el equipo local.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Using<ept id="p1">**</ept> scope modifier is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">El <bpt id="p1">**</bpt>mediante<ept id="p1">**</ept> modificador de ámbito se introdujo en Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more information about the <bpt id="p1">**</bpt>Using<ept id="p1">**</ept> scope modifier, see about_Remote_Variables (http://go.microsoft.com/fwlink/?LinkID=252653).</source>
          <target state="translated">Para obtener más información sobre el <bpt id="p1">**</bpt>mediante<ept id="p1">**</ept> modificador de ámbito, vea about_Remote_Variables (http://go.microsoft.com/fwlink/?LinkID=252653).</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The fourth command uses the <bpt id="p1">**</bpt>Invoke-Command<ept id="p1">**</ept> cmdlet to run a <bpt id="p2">**</bpt>Wait-Job<ept id="p2">**</ept> command in the sessions.</source>
          <target state="translated">El cuarto comando usa el <bpt id="p1">**</bpt>Invoke-Command<ept id="p1">**</ept> para ejecutar un <bpt id="p2">**</bpt>Wait-Job<ept id="p2">**</ept> comando en las sesiones.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>Any<ept id="p1">**</ept> parameter to wait until the first job on the remote computers is complete.</source>
          <target state="translated">Usa el <bpt id="p1">**</bpt>cualquier<ept id="p1">**</ept> parámetro espere hasta que finalice la primera tarea en los equipos remotos.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This example shows how to use the Timeout parameter of Wait-Job to set a maximum wait time for the jobs running on remote computers.</source>
          <target state="translated">Este ejemplo muestra cómo usar el parámetro Timeout de Wait-Job para establecer un tiempo de espera máximo para los trabajos que se ejecutan en equipos remotos.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The first command creates a PSSession on each of three remote computers (Server01, Server02, and Server03), and it saves the PSSessions in the $s variable.</source>
          <target state="translated">El primer comando crea una PSSession en cada uno de los tres equipos remotos (Server01, Server02 y Server03) y guarda las PSSessions en la variable $s.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The second command uses the Invoke-Command cmdlet to run a Start-Job command in each of the PSSessions in $s.</source>
          <target state="translated">El segundo comando usa el cmdlet Invoke-Command para ejecutar un comando Start-Job en cada una de las PSSessions de $s.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>It saves the resulting job objects in the $jobs variable.</source>
          <target state="translated">Guarda los objetos de trabajo resultante en la variable $jobs.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The third command uses the Invoke-Command cmdlet to run a Wait-Job command in each of the PSSessions in $s.</source>
          <target state="translated">El tercer comando usa el cmdlet Invoke-Command para ejecutar un comando Wait-Job en cada una de las PSSessions de $s.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The Wait-Job command determines whether all of the commands have completed within 30 seconds.</source>
          <target state="translated">El comando Wait-Job determina si se han completado todos los comandos en 30 segundos.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>It uses the Timeout parameter with a value of 30 (seconds) to establish the maximum wait time and saves the results of the command in the $done variable.</source>
          <target state="translated">Usa el parámetro Timeout con un valor de 30 (segundos) para establecer el tiempo de espera máximo y guarda los resultados del comando en la variable $done.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In this case, after 30 seconds, only the command on the Server02 computer has completed.</source>
          <target state="translated">En este caso, después de 30 segundos, solo se ha completo el comando del equipo Server02.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Wait-Job ends the wait, displays the command prompt, and returns the object that represents the job that was completed.</source>
          <target state="translated">Wait-Job finaliza la espera, muestra el símbolo del sistema y devuelve el objeto que representa el trabajo que finalizó.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The $done variable contains a job object that represents the job that ran on Server02.</source>
          <target state="translated">La variable $done contiene un objeto de trabajo que representa el trabajo que se ejecutó en Server02.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This command identifies three jobs by their IDs and waits until any of them are complete.</source>
          <target state="translated">Este comando identifica tres trabajos por sus identificadores y espera hasta que se complete cualquiera de ellos.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The command prompt returns when the first job completes.</source>
          <target state="translated">El símbolo del sistema se devuelve cuando finaliza el primer trabajo.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This command waits 120 seconds (two minutes) for the DailyLog job to complete.</source>
          <target state="translated">Este comando espera 120 segundos (dos minutos) para que se complete el trabajo DailyLog.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If the job does not complete in the next two minutes, the command prompt returns anyway, and the job continues to run in the background.</source>
          <target state="translated">Si el trabajo no finaliza en los próximos dos minutos, se devuelve el símbolo del sistema de todos modos y el trabajo continúa ejecutándose en segundo plano.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This Wait-Job command uses the job name to identify the job to wait for.</source>
          <target state="translated">Este comando Wait-Job usa el nombre del trabajo para identificar el trabajo que se va a esperar.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 8 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 8 --------------------------</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This example shows how to use the Wait-Job cmdlet with jobs started on the local computer by using the Start-Job cmdlet.</source>
          <target state="translated">En este ejemplo se muestra cómo usar el cmdlet Wait-Job con trabajos iniciados en el equipo local mediante el cmdlet Start-Job.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>These commands start a job that gets the Windows PowerShell script files that were added or updated in the last week.</source>
          <target state="translated">Estos comandos inician un trabajo que obtiene los archivos de script de Windows PowerShell que se agregaron o actualizaron en la última semana.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The first command uses the Start-Job cmdlet to start a background job on the local computer.</source>
          <target state="translated">El primer comando usa el cmdlet Start-Job para iniciar un trabajo en segundo plano en el equipo local.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The job runs a Get-ChildItem command that gets all of the files with a ".ps1" file name extension that were added or updated in the last week.</source>
          <target state="translated">El trabajo ejecuta un comando Get-ChildItem, que obtiene todos los archivos con una extensión de nombre de archivo ".ps1" agregados o actualizados en la última semana.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The third command uses the Wait-Job cmdlet to wait until the job is complete.</source>
          <target state="translated">El tercer comando usa el cmdlet Wait-Job para esperar hasta que se complete el trabajo.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>When the job completes, the command displays the job object, which contains information about the job.</source>
          <target state="translated">Cuando el trabajo se completa, el comando muestra el objeto de trabajo, que contiene información sobre el trabajo.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 9 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 9 --------------------------</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This example shows how to use the Wait-Job cmdlet with jobs started on remote computers by using the AsJob parameter of the Invoke-Command cmdlet.</source>
          <target state="translated">En este ejemplo se muestra cómo usar el cmdlet Wait-Job con trabajos iniciados en equipos remotos mediante el parámetro AsJob del cmdlet Invoke-Command.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When using AsJob, the job is created on the local computer and the results are automatically returned to the local computer, even though the job runs on the remote computers.</source>
          <target state="translated">Al usar AsJob, se crea el trabajo en el equipo local y los resultados se devuelven automáticamente al equipo local, incluso aunque el trabajo se ejecute en los equipos remotos.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This example uses Wait-Job to determine whether a Get-Process command running in the sessions on three remote computers is complete.</source>
          <target state="translated">Este ejemplo usa Wait-Job para determinar si se completó un comando Get-Process que se estaba ejecutando en las sesiones en tres equipos remotos distintos.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The first command creates PSSessions on three computers and stores them in the $s variable.</source>
          <target state="translated">El primer comando crea PSSessions en tres equipos y las guarda en la variable $s.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The second command uses the Invoke-Command cmdlet to run a Get-Process command in each of the three PSSessions in $s.</source>
          <target state="translated">El segundo comando usa el cmdlet Invoke-Command para ejecutar un comando Get-Process en cada una de las tres PSSessions en $s.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The command uses the AsJob parameter to run the command asynchronously as a background job.</source>
          <target state="translated">El comando utiliza el parámetro AsJob para ejecutar el comando de forma asincrónica como un trabajo en segundo plano.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The command returns a job object, just like the jobs started by using Start-Job, and the job object is stored in the $j variable.</source>
          <target state="translated">El comando devuelve un objeto de trabajo, al igual que los trabajos iniciados mediante Start-Job y el objeto de trabajo se almacena en la variable $j.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The third command uses a pipeline operator (|) to send the job object in $j to the Wait-Job cmdlet.</source>
          <target state="translated">El tercer comando usa un operador de canalización (|) para enviar el objeto de trabajo de $j al cmdlet Wait-Job.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Notice that an Invoke-Command command is not required in this case, because the job resides on the local computer.</source>
          <target state="translated">Observe que un comando Invoke-Command no es necesario en este caso, porque el trabajo reside en el equipo local.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 10 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 10 --------------------------</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This command waits for the job with an ID value of 1.</source>
          <target state="translated">Este comando espera al trabajo con un valor de identificador 1.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARÁMETROS</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-Any</source>
          <target state="translated">-Cualquier</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Displays the command prompt (and returns the job object) when any job completes.</source>
          <target state="translated">Muestra el símbolo del sistema (y devuelve el objeto de trabajo) cuando se completa algún trabajo.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>By default, Wait-Job waits until all of the specified jobs are complete before displaying the prompt.</source>
          <target state="translated">De forma predeterminada, Wait-Job espera a que se completen todos los trabajos especificados antes de mostrar el símbolo del sistema.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>-Filter</source>
          <target state="translated">: Filtro</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Waits for jobs that satisfy all of the conditions established in the associated hash table.</source>
          <target state="translated">Espera a que los trabajos cumplan todas las condiciones establecidas en la tabla hash asociada.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Enter a hash table where the keys are job properties and the values are job property values.</source>
          <target state="translated">Especifique una tabla hash donde las claves sean propiedades de una tarea y los valores sean valores de propiedad de la tarea.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This parameter works only on custom job types, such as workflow jobs and scheduled jobs.</source>
          <target state="translated">Este parámetro solo funciona en tipos de trabajo personalizados, como trabajos de flujo de trabajo y trabajos programados.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>It does not work on standard background jobs, such as those created by using the Start-Job cmdlet.</source>
          <target state="translated">No funciona en los trabajos en segundo plano estándar, como los creados mediante el cmdlet Start-Job.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For information about support for this parameter, see the help topic for the job type.</source>
          <target state="translated">Para información sobre la compatibilidad para este parámetro, vea el tema de ayuda para el tipo de trabajo.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Este parámetro se incorporó en Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Continues waiting if jobs are in the <bpt id="p1">**</bpt>Suspended<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Disconnected<ept id="p2">**</ept> state.</source>
          <target state="translated">Sigue esperando si hay trabajos en la <bpt id="p1">**</bpt>suspendido<ept id="p1">**</ept> o <bpt id="p2">**</bpt>desconectado<ept id="p2">**</ept> estado.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> returns (terminates the wait) when jobs are in one of the following states: Completed, Failed, Stopped, Suspended, or Disconnected.</source>
          <target state="translated">De forma predeterminada, <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> devuelve (finaliza la espera) cuando los trabajos tienen uno de los siguientes estados: completado, error, detenido, suspendido o desconectado.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Este parámetro se incorporó en Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>-Id</source>
          <target state="translated">-Id</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Waits for jobs with the specified IDs.</source>
          <target state="translated">Espera trabajos con los identificadores especificados.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The ID is an integer that uniquely identifies the job within the current session.</source>
          <target state="translated">El identificador es un entero que identifica de forma única la tarea dentro de la sesión actual.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>It is easier to remember and type than the InstanceId, but it is unique only within the current session.</source>
          <target state="translated">Es más fácil de recordar y escribir que InstanceId, pero es único solo dentro de la sesión actual.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>You can type one or more IDs (separated by commas).</source>
          <target state="translated">Puede escribir uno o más identificadores (separados por comas).</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To find the ID of a job, type "Get-Job" without parameters.</source>
          <target state="translated">Para buscar el identificador de un trabajo, escriba "Get-Job" sin parámetros.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>-InstanceId</source>
          <target state="translated">-InstanceId</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Waits for jobs with the specified instance IDs.</source>
          <target state="translated">Espera trabajos con los identificadores de instancia especificados.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The default is all jobs.</source>
          <target state="translated">El valor predeterminado es todas las tareas.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>An instance ID is a GUID that uniquely identifies the job on the computer.</source>
          <target state="translated">Un identificador de instancia es un GUID que identifica de forma única la tarea en el equipo.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>To find the instance ID of a job, use Get-Job.</source>
          <target state="translated">Para buscar el identificador de instancia de una tarea, use Get-Job.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>-Job</source>
          <target state="translated">-Trabajo</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Waits for the specified jobs.</source>
          <target state="translated">Espera los trabajos especificados.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the job objects or a command that gets the job objects.</source>
          <target state="translated">Escriba una variable que contenga los objetos de trabajo o un comando que obtenga los objetos de trabajo.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>You can also use a pipeline operator to send job objects to the Wait-Job cmdlet.</source>
          <target state="translated">También puede usar un operador de canalización para enviar objetos de trabajo al cmdlet Wait-Job.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>By default, Wait-Job waits for all jobs created in the current session.</source>
          <target state="translated">De forma predeterminada, Wait-Job espera los trabajos creados en la sesión actual.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Waits for jobs with the specified friendly name.</source>
          <target state="translated">Espera trabajos con el nombre descriptivo especificado.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>-State</source>
          <target state="translated">-Estado</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Waits only for jobs in the specified state.</source>
          <target state="translated">Espera únicamente los trabajos con el estado especificado.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Valid values are NotStarted, Running, Completed, Failed, Stopped, Blocked, Suspended, Disconnected, Suspending, Stopping.</source>
          <target state="translated">Los valores válidos son no iniciado, ejecución, completado, error, detenido, bloqueado, Suspended, Disconnected, Suspending, deteniendo.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>For more information about job states, see "JobState Enumeration" in MSDN at http://msdn.microsoft.com/library/windows/desktop/system.management.automation.jobstate(v=vs.85).aspxhttp://msdn.microsoft.com/library/windows/desktop/system.management.automation.jobstate(v=vs.85).aspx</source>
          <target state="translated">Para obtener más información acerca de los Estados de trabajo, vea "JobState Enumeration" en MSDN en.aspxhttp://msdn.microsoft.com/library/windows/desktop/system.management.automation.jobstate http://msdn.microsoft.com/library/windows/desktop/system.management.automation.jobstate (v=vs.85) (v=vs.85).aspx</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>-Timeout</source>
          <target state="translated">-El tiempo de espera</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Determines the maximum wait time for each background job, in seconds.</source>
          <target state="translated">Determina el tiempo de espera máximo para cada trabajo en segundo plano, en segundos.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The default, -1, waits until the job completes, no matter how long it runs.</source>
          <target state="translated">El valor predeterminado, -1, espera a que finalice el trabajo, independientemente de cuánto tiempo se ejecuta.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The timing starts when you submit the Wait-Job command, not the Start-Job command.</source>
          <target state="translated">El tiempo se inicia cuando se envía el comando Wait-Job, no el comando Start-Job.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>If this time is exceeded, the wait ends and the command prompt returns, even if the job is still running.</source>
          <target state="translated">Si se supera este tiempo, la espera finaliza y se devuelve el símbolo del sistema, aunque todavía se esté ejecutando el trabajo.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>No error message is displayed.</source>
          <target state="translated">No se muestra ningún mensaje de error.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Este cmdlet admite los parámetros comunes:-Debug, - ErrorAction, - ErrorVariable, - InformationAction, - InformationVariable, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction y - WarningVariable.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Para obtener más información, consulte about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">ENTRADAS</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.RemotingJob</source>
          <target state="translated">System.Management.Automation.RemotingJob</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>You can pipe a job object to Wait-Job.</source>
          <target state="translated">Puede canalizar un objeto de trabajo a Wait-Job.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">SALIDAS</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSRemotingJob</source>
          <target state="translated">System.Management.Automation.PSRemotingJob</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Wait-Job returns job objects that represent the completed jobs.</source>
          <target state="translated">Wait-Job devuelve objetos de trabajo que representan los trabajos completados.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>If the wait ends because the value of the Timeout parameter is exceeded, Wait-Job does not return any objects.</source>
          <target state="translated">Si la espera finaliza porque se supera el valor del parámetro Timeout, Wait-Job no devuelve ningún objeto.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTAS</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> returns (terminates the wait) when jobs are in one of the following states: Completed, Failed, Stopped, Suspended, or Disconnected.</source>
          <target state="translated">De forma predeterminada, <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> devuelve (finaliza la espera) cuando los trabajos tienen uno de los siguientes estados: completado, error, detenido, suspendido o desconectado.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>To direct <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> to continue waiting for <bpt id="p2">**</bpt>Suspended<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Disconnected<ept id="p3">**</ept> jobs, use the <bpt id="p4">**</bpt>Force<ept id="p4">**</ept> parameter.</source>
          <target state="translated">Para dirigir <bpt id="p1">**</bpt>Wait-Job<ept id="p1">**</ept> seguir esperando <bpt id="p2">**</bpt>suspendido<ept id="p2">**</ept> y <bpt id="p3">**</bpt>desconectado<ept id="p3">**</ept> trabajos, use la <bpt id="p4">**</bpt>Force<ept id="p4">**</ept> parámetro.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">VÍNCULOS RELACIONADOS</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Get-Job</source>
          <target state="translated">Get-Job</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Invoke-Command</source>
          <target state="translated">Invoke-Command</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Receive-Job</source>
          <target state="translated">Trabajo de recepción</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Remove-Job</source>
          <target state="translated">Quitar trabajos</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Resume-Job</source>
          <target state="translated">Resume-Job</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Start-Job</source>
          <target state="translated">Tarea de inicio</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Stop-Job</source>
          <target state="translated">Trabajo de detención</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Suspend-Job</source>
          <target state="translated">Suspend-Job</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>about_Jobs</source>
          <target state="translated">about_Jobs</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>about_Job_Details</source>
          <target state="translated">about_Job_Details</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>about_Remote_Jobs</source>
          <target state="translated">about_Remote_Jobs</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>about_Remote_Variables</source>
          <target state="translated">about_Remote_Variables</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>