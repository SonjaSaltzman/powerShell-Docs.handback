<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">548dca15dd70dfebe9727df1c119ab7ffc2adea6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Import-Csv.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5f932097c81d7ca9e3483f238217e799f1e4d12</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ce7ab7313c2149b119b9e73db55cd3e63dc250a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">cmdlet PowerShell</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Import-Csv</source>
          <target state="translated">Import-Csv</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Import-Csv</source>
          <target state="translated">Import-Csv</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">RIEPILOGO</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Creates table-like custom objects from the items in a CSV file.</source>
          <target state="translated">Crea oggetti personalizzati simili a tabelle dagli elementi di un file CSV.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SINTASSI</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Delimiter (Default)</source>
          <target state="translated">Delimitatore (impostazione predefinita)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>UseCulture</source>
          <target state="translated">UseCulture</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIZIONE</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet creates table-like custom objects from the items in CSV files.</source>
          <target state="translated">Il <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet crea oggetti personalizzati simili a tabelle dagli elementi nel file CSV.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Each column in the CSV file becomes a property of the custom object and the items in rows become the property values.</source>
          <target state="translated">Ogni colonna nel file CSV diventa una proprietà dell'oggetto personalizzato e gli elementi nelle righe diventano i valori delle proprietà.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> works on any CSV file, including files that are generated by the Export-Csv cmdlet.</source>
          <target state="translated"><bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> funziona su qualsiasi file CSV, inclusi i file generati dal cmdlet Export-Csv.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can use the parameters of the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet to specify the column header row and the item delimiter, or direct <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> to use the list separator for the current culture as the item delimiter.</source>
          <target state="translated">È possibile utilizzare i parametri del <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet per specificare la riga di intestazione di colonna e il delimitatore di elementi oppure indicare <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> per utilizzare il separatore di elenco per le impostazioni cultura correnti come delimitatore di elementi.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also use the ConvertTo-Csv and ConvertFrom-Csv cmdlets to convert objects to CSV strings (and back).</source>
          <target state="translated">È inoltre possibile utilizzare i cmdlet ConvertTo-Csv e ConvertFrom-Csv per convertire oggetti in stringhe CSV (e viceversa).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>These cmdlets are the same as the <bpt id="p1">**</bpt>Export-CSV<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> cmdlets, except that they do not deal with files.</source>
          <target state="translated">Questi cmdlet sono gli stessi di <bpt id="p1">**</bpt>Export-CSV<ept id="p1">**</ept> e <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> cmdlet, ad eccezione del fatto che non gestiscono i file.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, if a header row entry in a CSV file contains an empty or null value, Windows PowerShell inserts a default header row name and displays a warning message.</source>
          <target state="translated">A partire da Windows PowerShell 3.0, se una voce di riga di intestazioni di un file CSV contiene un valore vuoto o Null, Windows PowerShell inserisce un nome di riga di intestazioni predefinito e visualizza un messaggio di avviso.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In previous versions of Windows PowerShell, if a header row entry in a CSV file contains an empty or null value, the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> command fails.</source>
          <target state="translated">Nelle versioni precedenti di Windows PowerShell, se una voce di riga di intestazione in un file CSV contiene un valore vuoto o null, il <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> comando ha esito negativo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">ESEMPI</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Example 1: Import process objects</source>
          <target state="translated">Esempio 1: Gli oggetti processo di importazione</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This example shows how to export and then import a CSV file of process objects.</source>
          <target state="translated">Questo esempio viene illustrato come esportare e importare un file CSV degli oggetti processo.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Process cmdlet to get the processes on the local computer.</source>
          <target state="translated">Il primo comando usa il cmdlet Get-Process per ottenere i processi nel computer locale.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the process objects to the Export-Csv cmdlet, which exports the process objects to the Processes.csv file in the current directory.</source>
          <target state="translated">Utilizza un operatore pipeline (|) per inviare gli oggetti processo al cmdlet Export-Csv, che consente di esportare gli oggetti processo per il file Processes csv nella directory corrente.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet to import the processes in the <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> file.</source>
          <target state="translated">Il secondo comando Usa il <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> per importare i processi di <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> file.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Then it saves the resulting process objects in the $P variable.</source>
          <target state="translated">Quindi Salva gli oggetti processo risultanti nella variabile $P.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The third command uses a pipeline operator to pipe the imported objects to the Get-Member cmdlet.</source>
          <target state="translated">Il terzo comando Usa un operatore pipeline per inviare tramite pipe gli oggetti importati al cmdlet Get-Member.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The result shows that they are <bpt id="p1">**</bpt>CSV:System.Diagnostic.Process<ept id="p1">**</ept> objects, not the <bpt id="p2">**</bpt>System.Diagnostic.Process<ept id="p2">**</ept> objects that <bpt id="p3">**</bpt>Get-Process<ept id="p3">**</ept> returns.</source>
          <target state="translated">Il risultato mostra che sono <bpt id="p1">**</bpt>CSV: System.Diagnostic.Process<ept id="p1">**</ept> oggetti, non il <bpt id="p2">**</bpt>System.Diagnostic.Process<ept id="p2">**</ept> oggetti <bpt id="p3">**</bpt>Get-Process<ept id="p3">**</ept> restituisce.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Also, because there is no entry type in the formatting files for the CSV version of the process objects, these objects are not formatted in the same way that standard process objects are formatted.</source>
          <target state="translated">Inoltre, poiché nei file di formattazione della versione CSV degli oggetti processo non c'è nessun tipo di voce, questi oggetti non vengono formattati allo stesso modo degli oggetti processo standard.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To display the objects, use the formatting cmdlets, such as Format-Table and Format-List, or pipe the objects to Out-GridView.</source>
          <target state="translated">Per visualizzare gli oggetti, usare i cmdlet di formattazione, ad esempio Format-Table e Format-List, oppure inviare gli oggetti tramite pipe a Out-GridView.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Example 2: Specify the delimiter</source>
          <target state="translated">Esempio 2: Specificare il delimitatore</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">*</bpt>Delimiter<ept id="p1">*</ept> parameter of the <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> cmdlet.</source>
          <target state="translated">In questo esempio viene illustrato come utilizzare il <bpt id="p1">*</bpt>delimitatore<ept id="p1">*</ept> parametro il <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> cmdlet.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In this example, the processes are exported to a file that uses a colon (:) as a delimiter.</source>
          <target state="translated">In questo esempio i processi vengono esportati in un file che usa i due punti (:) come delimitatore.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When importing, the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> file uses the <bpt id="p2">*</bpt>Delimiter<ept id="p2">*</ept> parameter to indicate the delimiter that is used in the file.</source>
          <target state="translated">Durante l'importazione, il <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> file Usa il <bpt id="p2">*</bpt>delimitatore<ept id="p2">*</ept> parametro per indicare il delimitatore utilizzato nel file.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Example 3: Specify the current culture for the delimiter</source>
          <target state="translated">Esempio 3: Specificare le impostazioni cultura correnti per il delimitatore</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">*</bpt>UseCulture<ept id="p1">*</ept> parameter of the <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> cmdlet.</source>
          <target state="translated">In questo esempio viene illustrato come utilizzare il <bpt id="p1">*</bpt>UseCulture<ept id="p1">*</ept> parametro il <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> cmdlet.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The first command imports the objects in the Processes.csv file into the $P variable.</source>
          <target state="translated">Il primo comando Importa gli oggetti nel file Processes csv nella variabile $P.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>UseCulture<ept id="p1">*</ept> parameter to direct <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> to use the list separator defined for the current culture.</source>
          <target state="translated">Usa il <bpt id="p1">*</bpt>UseCulture<ept id="p1">*</ept> per indicare a <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> di usare il separatore di elenco definito per le impostazioni cultura correnti.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The second command displays the list separator for the current culture.</source>
          <target state="translated">Il secondo comando visualizza il separatore di elenco per le impostazioni cultura correnti.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It uses the Get-Culture cmdlet to get the current culture.</source>
          <target state="translated">Usa il cmdlet Get-Culture per ottenere le impostazioni cultura correnti.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>It uses the dot (.) method to get the TextInfo property of the current culture and the ListSeparator property of the object in TextInfo.</source>
          <target state="translated">Usa il metodo del punto (.) per ottenere la proprietà TextInfo delle impostazioni cultura correnti e la proprietà ListSeparator dell'oggetto in TextInfo.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In this example, the command returns a comma.</source>
          <target state="translated">In questo esempio il comando restituisce una virgola.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Example 4: Change property names in an imported object</source>
          <target state="translated">Esempio 4: Modificare i nomi delle proprietà in un oggetto importato</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">*</bpt>Header<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> to change the names of properties in the resulting imported object.</source>
          <target state="translated">In questo esempio viene illustrato come utilizzare il <bpt id="p1">*</bpt>intestazione<ept id="p1">*</ept> parametro <bpt id="p2">**</bpt>Import-Csv<ept id="p2">**</ept> per modificare i nomi delle proprietà nell'oggetto importato risulta.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The first command uses the Start-Job cmdlet to start a background job that runs a Get-Process command on the local computer.</source>
          <target state="translated">Il primo comando usa il cmdlet Start-Job per avviare un processo in background che esegue un comando Get-Process nel computer locale.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A pipeline operator (|) sends the resulting job object to the Export-Csv cmdlet, which converts the job object to CSV format.</source>
          <target state="translated">Un operatore pipeline (|) invia l'oggetto processo risultante al cmdlet Export-Csv, che converte l'oggetto processo in formato CSV.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The second command saves a header in the $Header variable.</source>
          <target state="translated">Il secondo comando Salva un'intestazione nella variabile $Header.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Unlike the default header, this header uses MoreData instead of HasMoreData and State instead of JobStateInfo.</source>
          <target state="translated">A differenza dell'intestazione predefinita, questa intestazione utilizza MoreData anziché HasMoreData e stato invece JobStateInfo.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The next three commands delete the original header (the second line) from the Jobs.csv file.</source>
          <target state="translated">I tre comandi successivi eliminano l'intestazione originale, ossia la seconda riga, dal file Jobs.csv.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The sixth command uses the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet to import the Jobs.csv file and convert the CSV strings into a CSV version of the job object.</source>
          <target state="translated">Il sesto comando Usa il <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet per importare il file jobs e convertire il file CSV di stringhe in una versione CSV dell'oggetto processo.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>Header<ept id="p1">*</ept> parameter to submit the alternate header.</source>
          <target state="translated">Il comando Usa il <bpt id="p1">*</bpt>intestazione<ept id="p1">*</ept> parametro per inviare l'intestazione alternativa.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The results are stored in the $J variable.</source>
          <target state="translated">I risultati vengono archiviati nella variabile $J.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The seventh command displays the object in the $J variable.</source>
          <target state="translated">Il settimo comando Visualizza l'oggetto nella variabile $J.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The resulting object has MoreData and State properties, as shown in the command output.</source>
          <target state="translated">L'oggetto risultante ha le proprietà MoreData e stato, come illustrato nell'output del comando.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Example 5: Create a custom object using a CSV file</source>
          <target state="translated">Esempio 5: Creare un oggetto personalizzato utilizzando un file CSV</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This example shows how to create a custom object in Windows PowerShell by using a CSV file.</source>
          <target state="translated">Questo esempio illustra come creare un oggetto personalizzato in Windows PowerShell con un flle CSV.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Content cmdlet to get the Links.csv file.</source>
          <target state="translated">Il primo comando usa l cmdlet Get-Content per ottenere il file Links.csv.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet to import the Links.csv file.</source>
          <target state="translated">Il secondo comando Usa il <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet per importare il file Links.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>Header<ept id="p1">*</ept> parameter to specify LinkId and TopicTitle as property names for the new custom objects.</source>
          <target state="translated">Il comando Usa il <bpt id="p1">*</bpt>intestazione<ept id="p1">*</ept> parametro per specificare LinkId e TopicTitle come nomi di proprietà per i nuovi oggetti personalizzati.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The command saves the imported objects in the $A variable.</source>
          <target state="translated">Il comando Salva gli oggetti importati nella variabile $A.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The third command uses the Get-Member cmdlet to get the type and members of the custom objects in the $A variable.</source>
          <target state="translated">Il terzo comando Usa il cmdlet Get-Member per ottenere il tipo e i membri degli oggetti personalizzati nella variabile $A.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The output shows that <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> returns a collection of custom objects (<bpt id="p2">**</bpt>PSCustomObject<ept id="p2">**</ept>).</source>
          <target state="translated">L'output mostra che <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> restituisce una raccolta di oggetti personalizzati (<bpt id="p2">**</bpt>PSCustomObject<ept id="p2">**</ept>).</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In addition to some default properties, the custom objects have LinkID and TopicTitle note properties.</source>
          <target state="translated">Oltre ad alcune proprietà predefinite, gli oggetti personalizzati hanno proprietà di nota LinkID e TopicTitle.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This command shows that you can use the custom object like you would any object in Windows PowerShell.</source>
          <target state="translated">Questo comando mostra che è possibile usare l'oggetto personalizzato come qualsiasi altro oggetto di Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The command pipes the custom objects in the $A variable to the <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> cmdlet, which gets only objects with a <bpt id="p2">**</bpt>TopicTitle<ept id="p2">**</ept> property that includes alias.</source>
          <target state="translated">Il comando Invia tramite pipe gli oggetti personalizzati in variabile $A il <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> che ottiene solo gli oggetti con un <bpt id="p2">**</bpt>TopicTitle<ept id="p2">**</ept> proprietà che include l'alias.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The Where-Object command uses the new simplified command format that does not require symbols, script blocks, or curly braces.</source>
          <target state="translated">Il comando Where-Object Usa il nuovo formato di comando semplificato che non richiede simboli, blocchi di script o parentesi graffe.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Example 6: Import a CSV that is missing a value</source>
          <target state="translated">Esempio 6: Importazione CSV non è presente un valore</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This example shows how the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet in Windows PowerShell 3.0 responds when the header row in a CSV file includes a null or empty value.</source>
          <target state="translated">Questo esempio viene illustrato come il <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet Windows PowerShell 3.0 risponde quando la riga di intestazione in un file CSV include un valore null o vuoto.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> substitutes a default name for the header row.</source>
          <target state="translated"><bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> sostituisce un nome predefinito per la riga di intestazione.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The default name becomes the name of the property of the object that <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> returns.</source>
          <target state="translated">Il nome predefinito diventa il nome della proprietà dell'oggetto che <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> restituisce.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Content cmdlet to get the Projects.csv file on the Server02 remote computer.</source>
          <target state="translated">Il primo comando Usa il cmdlet Get-Content per ottenere il file Projects nel computer remoto Server02.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The output shows that the header row of the file is missing a value between ProjectName and Completed.</source>
          <target state="translated">L'output mostra che la riga di intestazione del file manca un valore compreso tra ProjectName e completato.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet to import the Projects.csv file.</source>
          <target state="translated">Il secondo comando Usa il <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cmdlet per importare il file Projects.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The output shows that <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> generates a warning and substitutes a default name, H1, for the missing header row value.</source>
          <target state="translated">L'output mostra che <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> Genera un avviso e sostituisce un nome predefinito, H1, per il valore di riga di intestazione mancante.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>H1 is also used for the name of the object property.</source>
          <target state="translated">H1 viene anche usato come nome della proprietà dell'oggetto.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The third command uses the dot method to get the value of the H1 property of the object that <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> creates.</source>
          <target state="translated">Il terzo comando Usa il metodo del punto per ottenere il valore della proprietà H1 dell'oggetto che <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> Crea.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARAMETRI</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-Delimiter</source>
          <target state="translated">-Delimitatore</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Specifies the delimiter that separates the property values in the CSV file.</source>
          <target state="translated">Specifica il delimitatore che separa i valori delle proprietà in un file CSV.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The default is a comma (,).</source>
          <target state="translated">Il valore predefinito è la virgola (,).</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Enter a character, such as a colon (:).</source>
          <target state="translated">Immettere un carattere, ad esempio due punti (:).</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>To specify a semicolon (;), enclose it in quotation marks.</source>
          <target state="translated">Per specificare un punto e virgola (;), racchiuderlo tra virgolette.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If you specify a character other than the actual string delimiter in the file, <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> cannot create objects from the CSV strings.</source>
          <target state="translated">Se si specifica un carattere diverso dal delimitatore di stringa effettivo nel file <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> non può creare oggetti dalle stringhe CSV.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Instead, it returns the strings.</source>
          <target state="translated">ma restituisce invece le stringhe.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>-Encoding</source>
          <target state="translated">-Codifica</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Specifies the type of character encoding that was used in the CSV file.</source>
          <target state="translated">Specifica il tipo di codifica dei caratteri usato nel file CSV.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">I valori accettabili per questo parametro sono:</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Unicode</source>
          <target state="translated">Unicode</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>UTF7</source>
          <target state="translated">UTF7</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>UTF8</source>
          <target state="translated">UTF8</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>ASCII</source>
          <target state="translated">ASCII</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>UTF32</source>
          <target state="translated">UTF32</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>BigEndianUnicode</source>
          <target state="translated">BigEndianUnicode</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>OEM</source>
          <target state="translated">OEM</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The default is ASCII.</source>
          <target state="translated">L'impostazione predefinita è ASCII.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Questo parametro è stato introdotto in Windows PowerShell 3.0.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>-Header</source>
          <target state="translated">: Intestazione</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Specifies an alternate column header row for the imported file.</source>
          <target state="translated">Specifica una riga di intestazioni di colonna alternativa per il file importato.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The column header determines the names of the properties of the object that <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> creates.</source>
          <target state="translated">L'intestazione di colonna determina i nomi delle proprietà dell'oggetto che <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> Crea.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Enter a comma-separated list of the column headers.</source>
          <target state="translated">Immettere un elenco di intestazioni di colonna delimitate da virgole.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Enclose each item in quotation marks (single or double).</source>
          <target state="translated">Racchiudere ogni elemento tra virgolette singole o doppie.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Do not enclose the header string in quotation marks.</source>
          <target state="translated">Non racchiudere la stringa di intestazioni tra virgolette.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>If you enter fewer column headers than there are columns, the remaining columns will have no header.</source>
          <target state="translated">Se si immette un numero di intestazioni di colonna minore del numero di colonne, le colonne rimanenti non avranno un'intestazione.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>If you enter more headers than there are columns, the extra headers are ignored.</source>
          <target state="translated">Se si immette un numero di intestazioni di colonna maggiore del numero di colonne, le intestazioni aggiuntive vengono ignorate.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>When using the <bpt id="p1">*</bpt>Header<ept id="p1">*</ept> parameter, delete the original header row from the CSV file.</source>
          <target state="translated">Quando si utilizza il <bpt id="p1">*</bpt>intestazione<ept id="p1">*</ept> parametro, eliminare la riga di intestazione originale dal file CSV.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Otherwise, <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> creates an extra object from the items in the header row.</source>
          <target state="translated">In caso contrario, <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> Crea un oggetto aggiuntivo dagli elementi nella riga di intestazione.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Specifies the path to the CSV file to import.</source>
          <target state="translated">Specifica il percorso del file CSV da importare.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">*</bpt>Path<ept id="p1">*</ept>, the value of the <bpt id="p2">*</bpt>LiteralPath<ept id="p2">*</ept> parameter is used exactly as it is typed.</source>
          <target state="translated">A differenza di <bpt id="p1">*</bpt>percorso<ept id="p1">*</ept>, il valore di <bpt id="p2">*</bpt>LiteralPath<ept id="p2">*</ept> parametro viene usato esattamente com'è digitato.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">Nessun carattere viene interpretato come carattere jolly.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">Se il percorso include caratteri di escape, racchiuderlo tra virgolette singole.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">Le virgolette singole indicano a Windows PowerShell di non interpretare i caratteri come sequenze di escape.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Specifies the path to the CSV file to import.</source>
          <target state="translated">Specifica il percorso del file CSV da importare.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>You can also pipe a path to <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept>.</source>
          <target state="translated">È inoltre possibile reindirizzare il percorso di <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>-UseCulture</source>
          <target state="translated">-UseCulture</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet uses the list separator for the current culture as the item delimiter.</source>
          <target state="translated">Indica che questo cmdlet Usa il separatore di elenco per le impostazioni cultura correnti come delimitatore di elementi.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The default is a comma (,).</source>
          <target state="translated">Il valore predefinito è la virgola (,).</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>To find the list separator for a culture, use the following command: <ph id="ph1">`(Get-Culture).TextInfo.ListSeparator`</ph>.</source>
          <target state="translated">Per trovare il separatore di elenco per impostazioni cultura, utilizzare il comando seguente: <ph id="ph1">`(Get-Culture).TextInfo.ListSeparator`</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>If you specify a character other than the delimiter used in the CSV strings, ConvertFrom-Csv cannot create objects from the CSV strings.</source>
          <target state="translated">Se si specifica un carattere diverso dal delimitatore usato nelle stringhe CSV, ConvertFrom-Csv non può creare oggetti dalle stringhe CSV.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Instead, it returns the strings.</source>
          <target state="translated">ma restituisce invece le stringhe.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Questo cmdlet supporta i parametri comuni:-eseguire il Debug, - ErrorAction, - ErrorVariable, - InformationAction, InformationVariable-, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction e - WarningVariable.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Per ulteriori informazioni, vedere about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">INPUT</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>You can pipe a string that contains a path to <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept>.</source>
          <target state="translated">È possibile inviare tramite pipe una stringa che contiene un percorso a <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">OUTPUT</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Oggetto</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>This cmdlet returns the objects described by the content in the CSV file.</source>
          <target state="translated">Questo cmdlet restituisce gli oggetti descritti dal contenuto nel file CSV.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTE</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Because the imported objects are CSV versions of the object type, they are not recognized and formatted by the Windows PowerShell type formatting entries that format the non-CSV versions of the object type.</source>
          <target state="translated">Poiché gli oggetti importati sono versioni CSV del tipo di oggetto, non vengono riconosciuti e formattati dalle voci di formattazione dei tipi di Windows PowerShell che formattano le versioni non CSV del tipo di oggetto.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The result of an <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> command is a collection of strings that form a table-like custom object.</source>
          <target state="translated">Il risultato di un <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> comando è una raccolta di stringhe che formano un oggetto personalizzato simile a tabella.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Each row is a separate string, so you can use the <bpt id="p1">**</bpt>Count<ept id="p1">**</ept> property of the object to count the table rows.</source>
          <target state="translated">Ogni riga è una stringa separata, pertanto è possibile utilizzare il <bpt id="p1">**</bpt>conteggio<ept id="p1">**</ept> proprietà dell'oggetto per contare le righe della tabella.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The columns are the properties of the object and items in the rows are the property values.</source>
          <target state="translated">Le colonne corrispondono alle proprietà dell'oggetto e gli elementi delle righe ai valori delle proprietà.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The column header row determines the number of columns and the column names.</source>
          <target state="translated">La riga di intestazioni di colonna determina il numero di colonne e i relativi nomi.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The column names are also the names of the properties of the objects.</source>
          <target state="translated">I nomi delle colonne corrispondono anche a quelli delle proprietà degli oggetti.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The first row is interpreted to be the column headers, unless you use the <bpt id="p1">*</bpt>Header<ept id="p1">*</ept> parameter to specify column headers.</source>
          <target state="translated">La prima riga viene interpretata come intestazioni di colonna, a meno che non si utilizza il <bpt id="p1">*</bpt>intestazione<ept id="p1">*</ept> parametro per specificare le intestazioni di colonna.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>If any row has more values than the header row, the additional values are ignored.</source>
          <target state="translated">Se una riga contiene più valori rispetto alla riga di intestazioni, i valori aggiuntivi vengono ignorati.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>If the column header row is missing a value or contains a null or empty value, <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> uses H followed by a number for the missing column header and property name.</source>
          <target state="translated">Se la riga di intestazione di colonna è presente un valore o contiene un valore null o vuoto, <bpt id="p1">**</bpt>Import-Csv<ept id="p1">**</ept> utilizza H seguito da un numero per il nome dell'intestazione e proprietà di colonna mancante.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>In the CSV file, each object is represented by a comma-separated list of the property values of the object.</source>
          <target state="translated">Nel file CSV ogni oggetto è rappresentato da un elenco dei valori delle proprietà dell'oggetto delimitati da virgole.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The property values are converted to strings (by using the ToString() method of the object), so they are generally represented by the name of the property value.</source>
          <target state="translated">I valori delle proprietà vengono convertiti in stringhe, tramite il metodo ToString() dell'oggetto, in modo da essere generalmente rappresentati dai relativi nomi.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Export-Csv does not export the methods of the object.</source>
          <target state="translated">Export-Csv non Esporta i metodi dell'oggetto.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">COLLEGAMENTI CORRELATI</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>ConvertFrom-Csv</source>
          <target state="translated">ConvertFrom-Csv</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>ConvertTo-Csv</source>
          <target state="translated">ConvertTo-Csv</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Export-Csv</source>
          <target state="translated">Export-Csv</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>