<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90d39be69cd03d30d27339c9f58407f39682bf14</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\Invoke-Expression.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">608be4ccd5e11958f991b2daf801db03a2e0448b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5669df1d4242564a798e28f9ec0d085e010618d5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">cmdlet PowerShell</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Invoke-Expression</source>
          <target state="translated">Invoke-Expression</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Invoke-Expression</source>
          <target state="translated">Invoke-Expression</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">RIEPILOGO</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Runs commands or expressions on the local computer.</source>
          <target state="translated">Esegue comandi o espressioni nel computer locale.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SINTASSI</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIZIONE</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Invoke-Expression cmdlet evaluates or runs a specified string as a command and returns the results of the expression or command.</source>
          <target state="translated">Il cmdlet Invoke-Expression valuta o esegue una stringa specificata come comando e restituisce i risultati del comando o dell'espressione.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Without Invoke-Expression, a string submitted at the command line would be returned (echoed) unchanged.</source>
          <target state="translated">Senza Invoke-Expression, una stringa inviata dalla riga di comando verrebbe restituita invariata.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">ESEMPI</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- ESEMPIO 1 --------------------------</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This example demonstrates the use of Invoke-Expression to evaluate an expression.</source>
          <target state="translated">Questo esempio illustra l'utilizzo di Invoke-Expression per valutare un'espressione.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Without Invoke-Expression, the expression is printed, but not evaluated.</source>
          <target state="translated">Senza Invoke-Expression, l'espressione viene visualizzata ma non valutata.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The first command assigns a value of "Get-Process" (a string) to the $command variable.</source>
          <target state="translated">Il primo comando assegna il valore "Get-Process" (stringa) alla variabile $command.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The second command shows the effect of typing the variable name at the command line.</source>
          <target state="translated">Il secondo comando mostra l'effetto della digitazione del nome della variabile nella riga di comando.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Windows PowerShell echoes the string.</source>
          <target state="translated">Windows PowerShell restituisce la stringa.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The third command uses Invoke-Expression to evaluate the string.</source>
          <target state="translated">Il terzo comando usa Invoke-Expression per valutare la stringa.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>These commands use Invoke-Expression to run a script, TestScript.ps1, on the local computer.</source>
          <target state="translated">Questi comandi usano Invoke-Expression per eseguire lo script TestScript.ps1 nel computer locale.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The two commands are equivalent.</source>
          <target state="translated">I due comandi sono equivalenti.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The first uses the Command parameter to specify the command to run.</source>
          <target state="translated">Il primo usa il parametro Command per specificare il comando da eseguire.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The second uses a pipeline operator (|) to send the command string to Invoke-Expression.</source>
          <target state="translated">Il secondo usa un operatore pipeline (|) per inviare la stringa di comando a Invoke-Expression.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This example runs a command string that is saved in the $Command variable.</source>
          <target state="translated">Questo esempio esegue una stringa di comando che viene salvata nella variabile $Command.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The command string is enclosed in single quotation marks because it includes a variable, $<bpt id="p1">_</bpt>, which represents the current object. If it were enclosed in double quotation marks, the $<ept id="p1">_</ept> variable would be replaced by its value before it was saved in the $Command variable.</source>
          <target state="translated">La stringa di comando è racchiuso tra virgolette singole perché include una variabile, $<bpt id="p1">_</bpt>, che rappresenta l'oggetto corrente. Se fosse stato racchiuso tra virgolette doppie, il simbolo $<ept id="p1">_</ept> variabile verrebbe sostituita dal relativo valore prima di essere salvata nella variabile $Command.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This command retrieves and runs the first example in the Get-EventLog cmdlet help topic.</source>
          <target state="translated">Questo comando recupera ed esegue il primo esempio nell'argomento della Guida del cmdlet Get-EventLog.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To run an example of a different cmdlet, change the value of the $cmdlet_name variable to the name of the cmdlet.</source>
          <target state="translated">Per eseguire un esempio di un cmdlet diverso, sostituire il valore della variabile $cmdlet_name con il nome del cmdlet</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>And, change the $example_number variable to the example number you want to run.</source>
          <target state="translated">e la variabile $example_number con il numero dell'esempio che si vuole eseguire.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command will fail if the example number is not valid.</source>
          <target state="translated">Se il numero dell'esempio non è valido, il comando non riuscirà.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">PARAMETRI</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>-Command</source>
          <target state="translated">-Command</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Specifies the command or expression to run.</source>
          <target state="translated">Specifica il comando o l'espressione da eseguire.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Type the command or expression or enter a variable that contains the command or expression.</source>
          <target state="translated">Digitare il comando o l'espressione o immettere una variabile che contiene il comando o l'espressione.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The Command parameter is required.</source>
          <target state="translated">Il parametro Command è obbligatorio.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">Questo cmdlet supporta i parametri comuni:-eseguire il Debug, - ErrorAction, - ErrorVariable, - InformationAction, InformationVariable-, - OutVariable,-OutBuffer, - PipelineVariable, - Verbose, - WarningAction e - WarningVariable.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Per ulteriori informazioni, vedere about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">INPUT</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>System.String or PSObject</source>
          <target state="translated">System. String o PSObject</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can pipe an object that represents the command to Invoke-Expression.</source>
          <target state="translated">È possibile inviare tramite pipe un oggetto che rappresenta il comando a Invoke-Expression.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Use the $input automatic variable to represent the input objects in the command.</source>
          <target state="translated">Usare la variabile automatica $input per rappresentare gli oggetti di input nel comando.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">OUTPUT</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>PSObject</source>
          <target state="translated">PSObject</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Returns the output that is generated by the invoked command (the value of the Command parameter).</source>
          <target state="translated">Restituisce l'output generato dal comando richiamato (il valore del parametro Command).</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTE</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An expression is a statement that can be evaluated and produces a result, such as a Windows PowerShell command.</source>
          <target state="translated">Un'espressione è un'istruzione che può essere valutata e produce un risultato, ad esempio un comando di Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Take reasonable precautions when using the Invoke-Expression cmdlet in scripts.</source>
          <target state="translated">Adottare le precauzioni adeguate quando si utilizza il cmdlet Invoke-Expression negli script.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When using Invoke-Expression to run a command that the user enters, verify that the command is safe to run before running it.</source>
          <target state="translated">Quando si usa Invoke-Expression per eseguire un comando immesso dall'utente, verificare che il comando sia sicuro prima di eseguirlo.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In general, it is best to design your script with predefined input options, rather than allowing freeform input.</source>
          <target state="translated">In generale, è consigliabile progettare lo script con opzioni di input predefinite, invece di consentire l'input manuale.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">COLLEGAMENTI CORRELATI</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Invoke-Command</source>
          <target state="translated">Invoke-Command</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>