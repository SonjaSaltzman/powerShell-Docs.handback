<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e52ac7d7a7fcf521b77018c297e44d60ec069b8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Functions_Advanced_Parameters.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ce315c8cd9e465979c2573740d88a33ba9caa10</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a6df0f99aece19895c05d69883252558965d64b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Functions_Advanced_Parameters</source>
          <target state="translated">about_Functions_Advanced_Parameters</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">cmdlet PowerShell</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Functions Advanced Parameters</source>
          <target state="translated">Informazioni sulle funzioni dei parametri avanzati</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Functions_Advanced_Parameters</source>
          <target state="translated">about_Functions_Advanced_Parameters</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Functions_Advanced_Parameters</source>
          <target state="translated">about_Functions_Advanced_Parameters</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">DESCRIZIONE BREVE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Explains how to add parameters to advanced functions.</source>
          <target state="translated">Viene illustrato come aggiungere parametri alle funzioni avanzate.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">DESCRIZIONE LUNGA</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can add parameters to the advanced functions that you write, and use parameter attributes and arguments to limit the parameter values that function users submit with the parameter.</source>
          <target state="translated">È possibile aggiungere parametri alle funzioni avanzate che è scrivere e utilizzare gli attributi di parametro e gli argomenti per limitare i valori dei parametri che consentono di inviare agli utenti di funzione con il parametro.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The parameters that you add to your function are available to users in addition to the common parameters that Windows PowerShell adds automatically to all cmdlets and advanced functions.</source>
          <target state="translated">I parametri aggiunti alla funzione sono disponibili per gli utenti oltre ai parametri comuni che Windows PowerShell aggiunge automaticamente a tutti i cmdlet e funzioni avanzate.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information about the Windows PowerShell common parameters, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">Per ulteriori informazioni sui parametri comuni di Windows PowerShell, vedere about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can use splatting with @Args to represent the parameters in a command.</source>
          <target state="translated">A partire da Windows PowerShell 3.0, è possibile utilizzare lo splatting con @Args per rappresentare i parametri in un comando.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This technique is valid on simple and advanced functions.</source>
          <target state="translated">Questa tecnica è valida per le funzioni semplici e avanzate.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information, see about_Functions (http://go.microsoft.com/fwlink/?LinkID=113231) and about_Splatting (http://go.microsoft.com/fwlink/?LinkID=262720).</source>
          <target state="translated">Per ulteriori informazioni, vedere about_Functions (http://go.microsoft.com/fwlink/?LinkID=113231) e about_Splatting (http://go.microsoft.com/fwlink/?LinkID=262720).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Static Parameters Static parameters are parameters that are always available in the function.</source>
          <target state="translated">Parametri statici parametri statici sono parametri che sono sempre disponibili per la funzione.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Most parameters in Windows PowerShell cmdlets and scripts are static parameters.</source>
          <target state="translated">La maggior parte dei parametri in cmdlet di Windows PowerShell e script sono statici.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following example shows the declaration of a ComputerName parameter that has the following characteristics:</source>
          <target state="translated">Nell'esempio seguente viene illustrata la dichiarazione di un parametro ComputerName che presenta le caratteristiche seguenti:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>It is mandatory (required).</source>
          <target state="translated">È obbligatorio (obbligatorio).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It takes input from the pipeline.</source>
          <target state="translated">Accetta input dalla pipeline.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It takes an array of strings as input.</source>
          <target state="translated">Accetta una matrice di stringhe come input.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ValueFromPipeline=$true)] [String[]] $ComputerName</source>
          <target state="translated">[parametro (obbligatorio = $true, ValueFromPipeline = $true)] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Attributes of Parameters</source>
          <target state="translated">Attributi dei parametri</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This section describes the attributes that you can add to function parameters.</source>
          <target state="translated">In questa sezione vengono descritti gli attributi che è possibile aggiungere parametri di funzione.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>All attributes are optional.</source>
          <target state="translated">Tutti gli attributi sono facoltativi.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>However, if you omit the CmdletBinding attribute, then to be recognized as an advanced function, the function must include the Parameter attribute.</source>
          <target state="translated">Tuttavia, se si omette l'attributo CmdletBinding, quindi per essere riconosciuta come una funzione avanzata, la funzione deve includere l'attributo di parametro.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can add one or multiple attributes in each parameter declaration.</source>
          <target state="translated">È possibile aggiungere uno o più attributi in ogni dichiarazione di parametro.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>There is no limit to the number of attributes that you can add to a parameter declaration.</source>
          <target state="translated">Non esiste alcun limite al numero di attributi che è possibile aggiungere a una dichiarazione di parametro.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The Parameter Attribute</source>
          <target state="translated">L'attributo di parametro</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The Parameter attribute is used to declare the attributes of function parameters.</source>
          <target state="translated">L'attributo di parametro viene utilizzato per dichiarare gli attributi dei parametri di funzione.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The Parameter attribute is optional, and you can omit it if none of the parameters of your functions need attributes, but to be recognized as an advanced function (rather than a simple function), a function must have either the CmdletBinding attribute or the Parameter attribute, or both.</source>
          <target state="translated">L'attributo di parametro è facoltativo, è possibile ometterlo se nessuno dei parametri degli attributi necessità funzioni, ma per essere riconosciuti come una funzione avanzata (anziché una funzione semplice) e una funzione deve avere l'attributo CmdletBinding o l'attributo di parametro o entrambi.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The Parameter attribute has arguments that define the characteristics of the parameter, such as whether the parameter is mandatory or optional.</source>
          <target state="translated">L'attributo di parametro dispone di argomenti che definiscono le caratteristiche del parametro, ad esempio se il parametro è obbligatorio o facoltativo.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Use the following syntax to declare the Parameter attribute, an argument, and an argument value.</source>
          <target state="translated">Utilizzare la sintassi seguente per dichiarare l'attributo di parametro, un argomento e un valore dell'argomento.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The parentheses that enclose the argument and its value must follow "Parameter" with no intervening space.</source>
          <target state="translated">Le parentesi che racchiudono l'argomento e il relativo valore devono seguire "Parametro" senza spazi intermedi.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>[parameter(Argument=value)] $ParameterName</source>
          <target state="translated">[parameter(Argument=value)] $ParameterName</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Use commas to separate arguments within the parentheses.</source>
          <target state="translated">Utilizzare le virgole per separare gli argomenti all'interno delle parentesi.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Use the following syntax to declare two arguments of the Parameter attribute.</source>
          <target state="translated">Utilizzare la sintassi seguente per dichiarare due argomenti dell'attributo di parametro.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>[parameter(Argument1=value1, Argument2=value2)]</source>
          <target state="translated">[parametro (argomento1 = value1, argomento2 = value2)]</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If you use the Parameter attribute without arguments (as an alternative to using the CmdletBinding attribute), the parentheses that follow the attribute name are still required.</source>
          <target state="translated">Se si utilizza l'attributo di parametro senza argomenti (in alternativa all'utilizzo dell'attributo CmdletBinding), le parentesi che seguono il nome dell'attributo sono ancora necessari.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>[parameter()] $ParameterName</source>
          <target state="translated">[parameter()] $ParameterName</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Mandatory Argument</source>
          <target state="translated">Argomento obbligatorio</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The Mandatory argument indicates that the parameter is required.</source>
          <target state="translated">L'argomento obbligatorio indica che il parametro è obbligatorio.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If this argument is not specified, the parameter is an optional parameter.</source>
          <target state="translated">Se questo argomento viene omesso, il parametro è un parametro facoltativo.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following example declares the ComputerName parameter.</source>
          <target state="translated">Nell'esempio seguente viene dichiarato il parametro ComputerName.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>It uses the Mandatory argument to make the parameter mandatory.</source>
          <target state="translated">Utilizza l'argomento obbligatorio per rendere il parametro obbligatorio.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [String[]] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Position Argument</source>
          <target state="translated">Argomento di posizione</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The Position argument determines whether the parameter name is required when the parameter is used in a command.</source>
          <target state="translated">L'argomento della posizione determina se il nome del parametro è obbligatorio quando il parametro viene utilizzato in un comando.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When a parameter declaration includes the Position argument, the parameter name can be omitted and Windows PowerShell identifies the unnamed parameter value by its position (or order) in the list of unnamed parameter values in the command.</source>
          <target state="translated">Quando una dichiarazione di parametro include l'argomento della posizione, il nome del parametro può essere omesso e Windows PowerShell identifica il valore del parametro senza nome dalla relativa posizione (o ordine) nell'elenco dei valori di parametro senza nome nel comando.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If the Position argument is not specified, the parameter name (or a parameter name alias or abbreviation) must precede the parameter value whenever the parameter is used in a command.</source>
          <target state="translated">Se l'argomento della posizione non è specificato, il nome del parametro (o un alias del nome del parametro o abbreviazione) deve precedere il valore del parametro ogni volta che il parametro viene utilizzato in un comando.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>By default, all function parameters are positional.</source>
          <target state="translated">Per impostazione predefinita, tutti i parametri di funzione sono posizionali.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Windows PowerShell assigns position numbers to parameters in the order in which the parameters are declared in the function.</source>
          <target state="translated">Windows PowerShell Assegna numeri di posizione ai parametri nell'ordine in cui i parametri sono dichiarati nella funzione.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To disable this feature, set the value of the PositionalBinding argument of the CmdletBinding attribute to $False.</source>
          <target state="translated">Per disabilitare questa funzionalità, impostare il valore dell'argomento dell'attributo CmdletBinding PositionalBinding $False.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The Position argument takes precedence over the value of the PositionalBinding argument for the parameters on which it is declared.</source>
          <target state="translated">L'argomento della posizione ha la precedenza sul valore dell'argomento PositionalBinding per i parametri in cui è dichiarato.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more information, see PositionalBinding in about_Functions_CmdletBindingAttribute.</source>
          <target state="translated">Per ulteriori informazioni, vedere PositionalBinding in about_Functions_CmdletBindingAttribute.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The value of the Position argument is specified as an integer.</source>
          <target state="translated">Il valore dell'argomento di posizione è specificato come valore intero.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A position value of 0 represents the first position in the command, a position value of 1 represents the second position in the command, and so on.</source>
          <target state="translated">Il valore di posizione 0 rappresenta la prima posizione nel comando, il valore di posizione 1 rappresenta la seconda posizione, il comando e così via.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If a function has no positional parameters, Windows PowerShell assigns positions to each parameter based on the order in which the parameters are declared.</source>
          <target state="translated">Se una funzione ha parametri posizionali, Windows PowerShell assegna posizioni per ogni parametro in base all'ordine in cui vengono dichiarati i parametri.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>However, as a best practice, do not rely on this assignment.</source>
          <target state="translated">Tuttavia, come procedura consigliata, non si basano su questa assegnazione.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>When you want parameters to be positional, use the Position argument.</source>
          <target state="translated">Parametri per essere posizionali, utilizzare l'argomento della posizione.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The following example declares the ComputerName parameter.</source>
          <target state="translated">Nell'esempio seguente viene dichiarato il parametro ComputerName.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>It uses the Position argument with a value of 0.</source>
          <target state="translated">Usa l'argomento della posizione con un valore pari a 0.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>As a result, when "-ComputerName" is omitted from command, its value must be the first or only unnamed parameter value in the command.</source>
          <target state="translated">Di conseguenza, quando "-ComputerName" viene omesso dal comando, il valore deve essere il primo o l'unico valore di parametro nel comando senza nome.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>[parameter(Position=0)] [String[]] $ComputerName</source>
          <target state="translated">[parameter(Position=0)] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>NOTE: When the Get-Help cmdlet displays the corresponding "Position?"</source>
          <target state="translated">NOTA: Quando il cmdlet Get-Help Visualizza "Posizione corrispondente?"</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>parameter attribute, the position value is incremented by 1.</source>
          <target state="translated">attributo di parametro, il valore della posizione viene incrementato di 1.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For example, a parameter with a Position argument value of 0 has a parameter attribute of "Position?</source>
          <target state="translated">Ad esempio, un parametro con il valore di un argomento di posizione 0 ha un attributo della "posizione?</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>1."</source>
          <target state="translated">1."</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>ParameterSetName Argument</source>
          <target state="translated">Argomento ParameterSetName</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The ParameterSetName argument specifies the parameter set to which a parameter belongs.</source>
          <target state="translated">L'argomento ParameterSetName specifica il parametro set a cui appartiene un parametro.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If no parameter set is specified, the parameter belongs to all the parameter sets defined by the function.</source>
          <target state="translated">Se non viene specificato alcun set di parametri, tutti i set di parametri definiti dalla funzione a cui appartiene il parametro.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Therefore, to be unique, each parameter set must have at least one parameter that is not a member of any other parameter set.</source>
          <target state="translated">Pertanto, per essere univoco, ogni set di parametri deve avere almeno un parametro che non è un membro di qualsiasi altro set di parametri.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The following example declares a ComputerName parameter in the Computer parameter set, a UserName parameter in the User parameter set, and a Summary parameter in both parameter sets.</source>
          <target state="translated">Nell'esempio seguente viene dichiarato un parametro ComputerName nel set di parametri di Computer, un parametro di nome utente nel set di parametri utente e un parametro di riepilogo in entrambi i set di parametri.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ParameterSetName="Computer")] [String[]] $ComputerName,</source>
          <target state="translated">[parametro (obbligatorio = $true, ParameterSetName = "Computer")] [String []] $ComputerName,</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ParameterSetName="User")] [String[]] $UserName,</source>
          <target state="translated">[parametro (obbligatorio = $true, ParameterSetName = "Utente")] [String []] $UserName,</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$false)] [Switch] $Summary</source>
          <target state="translated">[parameter(Mandatory=$false)] [Opzione] $Summary</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>You can specify only one ParameterSetName value in each argument and only one ParameterSetName argument in each Parameter attribute.</source>
          <target state="translated">È possibile specificare un solo valore ParameterSetName in ogni argomento e un solo argomento ParameterSetName in ciascun attributo di parametro.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>To indicate that a parameter appears in more than one parameter set, add additional Parameter attributes.</source>
          <target state="translated">Per indicare che un parametro appare più di un set di parametri, aggiungere altri attributi dei parametri.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The following example explicitly adds the Summary parameter to the Computer and User parameter sets.</source>
          <target state="translated">Nell'esempio seguente aggiunge in modo esplicito il parametro Summary il set di parametri di Computer e utente.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The Summary parameter is mandatory in one parameter set and optional in the other.</source>
          <target state="translated">Il parametro è obbligatorio per un parametro facoltativo in altro e imposta.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ParameterSetName="Computer")] [String[]] $ComputerName,</source>
          <target state="translated">[parametro (obbligatorio = $true, ParameterSetName = "Computer")] [String []] $ComputerName,</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ParameterSetName="User")] [String[]] $UserName,</source>
          <target state="translated">[parametro (obbligatorio = $true, ParameterSetName = "Utente")] [String []] $UserName,</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$false, ParameterSetName="Computer")] [parameter(Mandatory=$true, ParameterSetName="User")] [Switch] $Summary</source>
          <target state="translated">[parametro (obbligatorio = $false, ParameterSetName = "Computer")] [parametro (obbligatorio = $true, ParameterSetName = "Utente")] [Opzione] $Summary</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For more information about parameter sets, see "Cmdlet Parameter Sets" in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=142183.</source>
          <target state="translated">Per ulteriori informazioni sui set di parametri, vedere "Cmdlet nei set di parametri" di MSDN library all'indirizzo http://go.microsoft.com/fwlink/?LinkId=142183.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>ValueFromPipeline Argument</source>
          <target state="translated">Argomento ValueFromPipeline</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The ValueFromPipeline argument indicates that the parameter accepts input from a pipeline object.</source>
          <target state="translated">L'argomento ValueFromPipeline indica che il parametro accetta l'input da un oggetto di pipeline.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Specify this argument if the function accepts the entire object, not just a property of the object.</source>
          <target state="translated">Specificare questo argomento, se la funzione accetta l'intero oggetto, non solo una proprietà dell'oggetto.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The following example declares a ComputerName parameter that is mandatory and accepts an object that is passed to the function from the pipeline.</source>
          <target state="translated">Nell'esempio seguente dichiara un parametro ComputerName è obbligatorio che accetta un oggetto che viene passato alla funzione dalla pipeline.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ValueFromPipeline=$true)] [String[]] $ComputerName</source>
          <target state="translated">[parametro (obbligatorio = $true, ValueFromPipeline = $true)] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>ValueFromPipelineByPropertyName Argument</source>
          <target state="translated">Argomento ValueFromPipelineByPropertyName</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The valueFromPipelineByPropertyName argument indicates that the parameter accepts input from a property of a pipeline object.</source>
          <target state="translated">L'argomento valueFromPipelineByPropertyName indica che il parametro accetta l'input da una proprietà di un oggetto di pipeline.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The object property must have the same name or alias as the parameter.</source>
          <target state="translated">La proprietà dell'oggetto deve avere lo stesso nome o alias come parametro.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>For example, if the function has a ComputerName parameter, and the piped object has a ComputerName property, the value of the ComputerName property is assigned to the ComputerName parameter of the function.</source>
          <target state="translated">Ad esempio, la funzione ha un parametro ComputerName, se l'oggetto inviato tramite pipe ha una proprietà ComputerName, il valore della proprietà ComputerName viene assegnato al parametro ComputerName della funzione.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The following example declares a ComputerName parameter that is mandatory and accepts input from the ComputerName property of the object that is passed to the function through the pipeline.</source>
          <target state="translated">Nell'esempio seguente dichiara un parametro ComputerName è obbligatorio, che accetta l'input dalla proprietà ComputerName dell'oggetto che viene passato alla funzione tramite la pipeline.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ValueFromPipelineByPropertyName=$true)] [String[]] $ComputerName</source>
          <target state="translated">[parametro (obbligatorio = $true, ValueFromPipelineByPropertyName = $true)] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>ValueFromRemainingArguments Argument</source>
          <target state="translated">Argomento ValueFromRemainingArguments</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The ValueFromRemainingArguments argument indicates that the parameter accepts all of the parameters values in the command that are not assigned to other parameters of the function.</source>
          <target state="translated">L'argomento ValueFromRemainingArguments indica che il parametro accetta tutti i valori di parametri nel comando che non sono assegnati ad altri parametri della funzione.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The following example declares a ComputerName parameter that is mandatory and accepts all the remaining parameter values that were submitted to the function.</source>
          <target state="translated">Nell'esempio seguente dichiara un parametro ComputerName è obbligatoria e accetta i rimanenti valori dei parametri che sono stati inviati alla funzione.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true, ValueFromRemainingArguments=$true)] [String[]] $ComputerName</source>
          <target state="translated">[parametro (obbligatorio = $true, ValueFromRemainingArguments = $true)] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>HelpMessage Argument</source>
          <target state="translated">Argomento HelpMessage</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The HelpMessage argument specifies a string that contains a brief description of the parameter or its value.</source>
          <target state="translated">L'argomento HelpMessage specifica una stringa che contiene una breve descrizione del parametro o il relativo valore.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Windows PowerShell displays this message in the prompt that appears when a mandatory parameter value is missing from a command.</source>
          <target state="translated">Windows PowerShell Visualizza questo messaggio nel messaggio visualizzato quando un valore di parametro obbligatorio manca un comando.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>This argument has no effect on optional parameters.</source>
          <target state="translated">In questo argomento non ha effetto sui parametri facoltativi.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The following example declares a mandatory ComputerName parameter and a help message that explains the expected parameter value.</source>
          <target state="translated">Nell'esempio seguente viene dichiarato un parametro ComputerName obbligatorio e un messaggio che descrive il valore di parametro previsto.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>[parameter(mandatory=$true, HelpMessage="Enter one or more computer names separated by commas.")] [String[]] $ComputerName</source>
          <target state="translated">[parametro (obbligatorio = $true, HelpMessage = "Immettere uno o più nomi di computer separati da virgole.")] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Alias Attribute</source>
          <target state="translated">Attributo alias</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The Alias attribute establishes an alternate name for the parameter.</source>
          <target state="translated">L'attributo Alias stabilisce un nome alternativo per il parametro.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>There is no limit to the number of aliases that you can assign to a parameter.</source>
          <target state="translated">Non esiste alcun limite al numero di alias che è possibile assegnare a un parametro.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The following example shows a parameter declaration that adds the "CN" and "MachineName" aliases to the mandatory ComputerName parameter.</source>
          <target state="translated">Nell'esempio seguente viene illustrata una dichiarazione di parametro che aggiunge l'alias "CN" e "MachineName" per il parametro ComputerName obbligatorio.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [alias("CN","MachineName")] [String[]] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)] [alias("CN","MachineName")] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Parameter and Variable Validation Attributes</source>
          <target state="translated">Parametro e gli attributi di convalida variabile</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Validation attributes direct Windows PowerShell to test the parameter values that users submit when they call the advanced function.</source>
          <target state="translated">Gli attributi di convalida diretta di Windows PowerShell per verificare i valori dei parametri che gli utenti inviano quando chiamano la funzione avanzata.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>If the parameter values fail the test, an error is generated and the function is not called.</source>
          <target state="translated">Se i valori dei parametri non superano il test, viene generato un errore e non viene chiamata la funzione.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>You can also use some of the validation attributes to restrict the values that users can specify for variables.</source>
          <target state="translated">È inoltre possibile utilizzare alcuni degli attributi di convalida per limitare i valori che gli utenti possono specificare per le variabili.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>AllowNull Validation Attribute</source>
          <target state="translated">Attributo di convalida AllowNull</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The AllowNull attribute allows the value of a mandatory parameter to be null ($null).</source>
          <target state="translated">L'attributo AllowNull consente il valore di un parametro obbligatorio su null ($null).</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The following example declares a ComputerName parameter that can have a Null value.</source>
          <target state="translated">Nell'esempio seguente dichiara un parametro ComputerName che può avere un valore Null.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [AllowNull()] [String] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)] [AllowNull()] [String] $ComputerName</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>AllowEmptyString Validation Attribute</source>
          <target state="translated">Attributo di convalida AllowEmptyString</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The AllowEmptyString attribute allows the value of a mandatory parameter to be an empty string ("").</source>
          <target state="translated">L'attributo AllowEmptyString consente il valore di un parametro obbligatorio come una stringa vuota ("").</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The following example declares a ComputerName parameter that can have an empty string value.</source>
          <target state="translated">Nell'esempio seguente dichiara un parametro ComputerName che può avere un valore stringa vuota.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [AllowEmptyString()] [String] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)] [AllowEmptyString()] [String] $ComputerName</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>AllowEmptyCollection Validation Attribute</source>
          <target state="translated">Attributo di convalida AllowEmptyCollection</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The AllowEmptyCollection attribute allows the value of a mandatory parameter to be an empty collection (@()).</source>
          <target state="translated">L'attributo AllowEmptyCollection consente il valore di un parametro obbligatorio per un insieme vuoto (@()).</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The following example declares a ComputerName parameter that can have a empty collection value.</source>
          <target state="translated">Nell'esempio seguente dichiara un parametro ComputerName che può avere un valore raccolta vuota.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [AllowEmptyCollection()] [String[]] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)] [AllowEmptyCollection()] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>ValidateCount Validation Attribute</source>
          <target state="translated">Attributo di convalida ValidateCount</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The ValidateCount attribute specifies the minimum and maximum number of parameter values that a parameter accepts.</source>
          <target state="translated">L'attributo ValidateCount specifica il numero minimo e massimo dei valori di parametro che accetta un parametro.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Windows PowerShell generates an error if the number of parameter values in the command that calls the function is outside that range.</source>
          <target state="translated">Windows PowerShell genera un errore se il numero di valori dei parametri nel comando che chiama la funzione è incluso in tale intervallo.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The following parameter declaration creates a ComputerName parameter that takes 1 to 5 parameter values.</source>
          <target state="translated">La seguente dichiarazione di parametro crea un parametro ComputerName che accetta i valori dei parametri da 1 a 5.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [ValidateCount(1,5)] [String[]] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)] [ValidateCount(1,5)] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>ValidateLength Validation Attribute</source>
          <target state="translated">Attributo di convalida ValidateLength</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The ValidateLength attribute specifies the minimum and maximum number of characters in a parameter or variable value.</source>
          <target state="translated">L'attributo ValidateLength specifica il numero minimo e massimo di caratteri in un parametro o valore della variabile.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Windows PowerShell generates an error if the length of a value specified for a parameter or a variable is outside of the range.</source>
          <target state="translated">Windows PowerShell genera un errore se la lunghezza di un valore specificato per un parametro o una variabile è compreso nell'intervallo.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>In the following example, each computer name must have one to 10 characters.</source>
          <target state="translated">Nell'esempio seguente, ogni nome computer deve avere uno a 10 caratteri.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [ValidateLength(1,10)] [String[]] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)] [ValidateLength(1,10)] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the variable $number must be a minimum of one character in length, and a maximum of ten characters.</source>
          <target state="translated">Nell'esempio seguente, il valore della variabile $number deve essere almeno un carattere e un massimo di dieci caratteri.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>[Int32][ValidateLength(1,10)]$number = 01</source>
          <target state="translated">[Int32] [ValidateLength(1,10)] $number = 01</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>ValidatePattern Validation Attribute</source>
          <target state="translated">Attributo di convalida ValidatePattern</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The ValidatePattern attribute specifies a regular expression that is compared to the parameter or variable value.</source>
          <target state="translated">L'attributo ValidatePattern specifica un'espressione regolare che viene confrontata con il parametro o valore della variabile.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Windows PowerShell generates an error if the value does not match the regular expression pattern.</source>
          <target state="translated">Windows PowerShell genera un errore se il valore non corrisponde al modello di espressione regolare.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>In the following example, the parameter value must be a four-digit number, and each digit must be a number 0 to 9.</source>
          <target state="translated">Nell'esempio seguente, il valore del parametro deve essere un numero a quattro cifre e ogni cifra deve essere un numero da 0 a 9.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [ValidatePattern("[0-9][0-9][0-9][0-9]")] [String[]] $ComputerName</source>
          <target state="translated">[parameter(Mandatory=$true)] [ValidatePattern("[0-9][0-9][0-9][0-9]")] [String []] $ComputerName</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the variable $number must be a four-digit number, and each digit must be a number 0 to 9.</source>
          <target state="translated">Nell'esempio seguente, il valore della variabile $number deve essere un numero a quattro cifre e ogni cifra deve essere un numero da 0 a 9.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>[Int32][ValidatePattern("[0-9][0-9][0-9][0-9]")]$number = 1111</source>
          <target state="translated">[Int32] [ValidatePattern("[0-9][0-9][0-9][0-9]")] $number = 1111</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>ValidateRange Validation Attribute</source>
          <target state="translated">Attributo di convalida ValidateRange</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The ValidateRange attribute specifies a numeric range for each parameter or variable value.</source>
          <target state="translated">L'attributo ValidateRange specifica un intervallo numerico per ogni parametro o valore della variabile.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Windows PowerShell generates an error if any value is outside that range.</source>
          <target state="translated">Windows PowerShell genera un errore se qualsiasi valore è incluso in tale intervallo.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the Attempts parameter must be between 0 and 10.</source>
          <target state="translated">Nell'esempio seguente, il valore del parametro di tentativi deve essere compreso tra 0 e 10.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [ValidateRange(0,10)] [Int] $Attempts</source>
          <target state="translated">[parameter(Mandatory=$true)] [ValidateRange(0,10)] [Int] $Attempts</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the variable $number must be between 0 and 10.</source>
          <target state="translated">Nell'esempio seguente, il valore della variabile $number deve essere compreso tra 0 e 10.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>[Int32][ValidateRange(0,10)]$number = 5</source>
          <target state="translated">[Int32] [ValidateRange(0,10)] $number = 5</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>ValidateScript Validation Attribute</source>
          <target state="translated">Attributo di convalida ValidateScript</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The ValidateScript attribute specifies a script that is used to validate a parameter or variable value.</source>
          <target state="translated">L'attributo ValidateScript specifica uno script che viene utilizzato per convalidare un parametro o valore della variabile.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Windows PowerShell pipes the value to the script, and generates an error if the script returns "false" or if the script throws an exception.</source>
          <target state="translated">Windows PowerShell passa il valore per lo script e genera un errore se lo script restituisce "false" o se lo script genera un'eccezione.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>When you use the ValidateScript attribute, the value that is being validated is mapped to the $<bpt id="p1">_</bpt> variable. You can use the $<ept id="p1">_</ept> variable to refer to the value in the script.</source>
          <target state="translated">Quando si utilizza l'attributo ValidateScript, il valore da convalidare viene mappato di $<bpt id="p1">_</bpt> variabile. È possibile utilizzare il simbolo $<ept id="p1">_</ept> variabile per fare riferimento al valore nello script.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the EventDate parameter must be greater than or equal to the current date.</source>
          <target state="translated">Nell'esempio seguente, il valore del parametro EventDate deve essere maggiore o uguale alla data corrente.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>[parameter()] [ValidateScript({$_ -ge (get-date)})] [DateTime] $EventDate</source>
          <target state="translated">[parameter()] [ValidateScript ({$_ -ge (get-date)})] [DateTime] $EventDate</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the variable $date must be greater than or equal to the current date and time.</source>
          <target state="translated">Nell'esempio seguente, il valore della variabile $date deve essere maggiore o uguale alla data corrente e all'ora.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>[DateTime][ValidateScript({$_ -ge (get-date)})]$date = (get-date)</source>
          <target state="translated">[DateTime] [ValidateScript ({$_ -ge (get-date)})] $date = (get-date)</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>ValidateSet Attribute</source>
          <target state="translated">Attributo ValidateSet</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The ValidateSet attribute specifies a set of valid values for a parameter or variable.</source>
          <target state="translated">L'attributo ValidateSet specifica un set di valori validi per un parametro o variabile.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Windows PowerShell generates an error if a parameter or variable value does not match a value in the set.</source>
          <target state="translated">Windows PowerShell genera un errore se un parametro o valore della variabile non corrisponde a un valore nel set.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the Detail parameter can only be "Low," "Average," or "High."</source>
          <target state="translated">Nell'esempio seguente, il valore del parametro dettaglio può essere solo "Low", "Media" o "Alto".</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [ValidateSet("Low", "Average", "High")] [String[]] $Detail</source>
          <target state="translated">[parameter(Mandatory=$true)] [ValidateSet ("Basso", "Media", "Alto")] [String []] $Detail</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the variable $flavor must be either Chocolate, Strawberry, or Vanilla.</source>
          <target state="translated">Nell'esempio seguente, il valore della variabile $flavor deve essere cioccolato, fragola o normale.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>[String][ValidateSet("Chocolate", "Strawberry", "Vanilla")]$flavor = Strawberry</source>
          <target state="translated">[String] [ValidateSet ("Cioccolato", "Alla", "Normale")] $flavor = fragola</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>ValidateNotNull Validation Attribute</source>
          <target state="translated">Attributo di convalida ValidateNotNull</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The ValidateNotNull attribute specifies that the parameter value cannot be null ($null).</source>
          <target state="translated">L'attributo ValidateNotNull specifica che il valore del parametro non può essere null ($null).</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Windows PowerShell generates an error if the parameter value is null.</source>
          <target state="translated">Windows PowerShell genera un errore se il valore del parametro è null.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The ValidateNotNull attribute is designed to be used when the type of the parameter value is not specified or when the specified type will accept a value of Null.</source>
          <target state="translated">L'attributo ValidateNotNull è progettato per essere utilizzato quando il tipo del valore del parametro non è specificato o il tipo specificato accetterà un valore null.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>(If you specify a type that will not accept a null value, such as a string, the null value will be rejected without the ValidateNotNull attribute, because it does not match the specified type.)</source>
          <target state="translated">(Se si specifica un tipo che non accettano un valore null, ad esempio una stringa, il valore null verrà rifiutato, senza l'attributo ValidateNotNull, poiché non corrisponde al tipo specificato.)</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the ID parameter cannot be null.</source>
          <target state="translated">Nell'esempio seguente, il valore del parametro ID non può essere null.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [ValidateNotNull()]</source>
          <target state="translated">[parameter(Mandatory=$true)] [ValidateNotNull()]</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>$ID</source>
          <target state="translated">$ID</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>ValidateNotNullOrEmpty Validation Attribute</source>
          <target state="translated">Attributo di convalida ValidateNotNullOrEmpty</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The ValidateNotNullOrEmpty attribute specifies that the parameter value cannot be null ($null) and cannot be an empty string ("").</source>
          <target state="translated">Il ValidateNotNullOrEmpty attributo specifica che il valore del parametro non può essere null ($null) e non può essere una stringa vuota ("").</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Windows PowerShell generates an error if the parameter is used in a function call, but its value is null, an empty string, or an empty array.</source>
          <target state="translated">Windows PowerShell genera un errore se il parametro viene utilizzato in una chiamata di funzione, ma il relativo valore è null, una stringa vuota o una matrice vuota.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$true)] [ValidateNotNullOrEmpty()] [String[]] $UserName</source>
          <target state="translated">[parameter(Mandatory=$true)] [ValidateNotNullOrEmpty()] [String []] $UserName</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Dynamic Parameters</source>
          <target state="translated">Parametri dinamici</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Dynamic parameters are parameters of a cmdlet, function, or script that are available only under certain conditions.</source>
          <target state="translated">I parametri dinamici sono parametri di un cmdlet, funzione o uno script che sono disponibili solo in determinate condizioni.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>For example, several provider cmdlets have parameters that are available only when the cmdlet is used in the provider drive, or in a particular path of the provider drive.</source>
          <target state="translated">Ad esempio, diversi provider cmdlet includono parametri che sono disponibili solo quando il cmdlet viene utilizzato nell'unità del provider, o in un percorso specifico dell'unità di provider.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>For example, the Encoding parameter is available on the Add-Content, Get-Content, and Set-Content cmdlets only when it is used in a file system drive.</source>
          <target state="translated">Ad esempio, il parametro di codifica è disponibile in Add-Content, Get-Content e i cmdlet Set-Content solo quando viene utilizzato in un'unità file system.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>You can also create a parameter that appears only when another parameter is used in the function command or when another parameter has a certain value.</source>
          <target state="translated">È inoltre possibile creare un parametro che viene visualizzata solo quando si usa un altro parametro nel comando funzione o un altro parametro dispone di un determinato valore.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Dynamic parameters can be very useful, but use them only when necessary, because they can be difficult for users to discover.</source>
          <target state="translated">I parametri dinamici possono essere molto utile, ma utilizzarli solo se necessario, perché possono essere difficile per gli utenti di individuare.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>To find a dynamic parameter, the user must be in the provider path, use the ArgumentList parameter of the Get-Command cmdlet, or use the Path parameter of Get-Help.</source>
          <target state="translated">Per trovare un parametro dinamico, l'utente deve essere nel percorso del provider, utilizzare il parametro ArgumentList del cmdlet Get-Command, oppure utilizzare il parametro Path di Get-Help.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>To create a dynamic parameter for a function or script, use the DynamicParam keyword.</source>
          <target state="translated">Per creare un parametro dinamico per una funzione o uno script, utilizzare la parola chiave DynamicParam.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The syntax is as follows:</source>
          <target state="translated">La sintassi è come segue:</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>DynamicParam {&lt;statement-list&gt;}</source>
          <target state="translated">DynamicParam {&lt; elenco di istruzioni &gt;}</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>In the statement list, use an If statement to specify the conditions under which the parameter is available in the function.</source>
          <target state="translated">Nell'elenco, di utilizzare un'istruzione per specificare le condizioni in cui il parametro è disponibile nella funzione.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Use the New-Object cmdlet to create a System.Management.Automation.RuntimeDefinedParameter object to represent the parameter and specify its name.</source>
          <target state="translated">Utilizzare il cmdlet New-Object per creare un oggetto System.Management.Automation.RuntimeDefinedParameter per rappresentare il parametro e specificare il relativo nome.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>You can also use a New-Object command to create a System.Management.Automation.ParameterAttribute object to represent attributes of the parameter, such as Mandatory, Position, or ValueFromPipeline or its parameter set.</source>
          <target state="translated">È inoltre possibile utilizzare un comando New-Object per creare un oggetto System.Management.Automation.ParameterAttribute per rappresentare gli attributi del parametro, ad esempio obbligatorio, posizione, o ValueFromPipeline o set di parametri.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The following example shows a sample function with standard parameters named Name and Path, and an optional dynamic parameter named DP1.The DP1 parameter is in the PSet1 parameter set and has a type of Int32.</source>
          <target state="translated">Nell'esempio seguente viene illustrato un esempio di funzione con parametri standard denominati nome e il percorso e un parametro dinamico facoltativo denominato DP1. Il parametro DP1 è il set di parametri PSet1 e dispone di un tipo di Int32.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The DP1 parameter is available in the Sample function only when the value of the Path parameter contains "HKLM:", indicating that it is being used in the HKEY_LOCAL_MACHINE registry drive.</source>
          <target state="translated">Il parametro DP1 è disponibile nella funzione di esempio solo quando il valore del parametro Path contiene "HKLM:", che indica che viene usato nell'unità del Registro di sistema HKEY_LOCAL_MACHINE.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>function Get-Sample { [CmdletBinding()] Param ([String]$Name, [String]$Path)</source>
          <target state="translated">funzione Get-Sample {Param in [CmdletBinding()] ([String] $Name, [String] $Path)</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>DynamicParam { if ($path -match ".HKLM.:") { $attributes = new-object System.Management.Automation.ParameterAttribute $attributes.ParameterSetName = "__AllParameterSets" $attributes.Mandatory = $false $attributeCollection = new-object ` -Type System.Collections.ObjectModel.Collection[System.Attribute] $attributeCollection.Add($attributes)</source>
          <target state="translated">DynamicParam {se ($path-corrispondenza ". HKLM.: ") {$attributes = nuovo oggetto System.Management.Automation.ParameterAttribute $attributes. ParameterSetName = "__AllParameterSets" $attributes. Obbligatorio = $false $attributeCollection = nuovo oggetto '-tipo System.Collections.ObjectModel.Collection[System.Attribute] $attributeCollection.Add($attributes)</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>$dynParam1 = new-object ` -Type System.Management.Automation.RuntimeDefinedParameter("dp1", [Int32], $attributeCollection)</source>
          <target state="translated">$dynParam1 = nuovo oggetto '-tipo System.Management.Automation.RuntimeDefinedParameter("dp1", [Int32], $attributeCollection)</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>$paramDictionary = new-object ` -Type System.Management.Automation.RuntimeDefinedParameterDictionary $paramDictionary.Add("dp1", $dynParam1) return $paramDictionary } } }</source>
          <target state="translated">$paramDictionary = nuovo oggetto '-tipo System.Management.Automation.RuntimeDefinedParameterDictionary $paramDictionary.Add ("dp1", $dynParam1) restituiscono $paramDictionary}}}</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>For more information, see "RuntimeDefinedParameter Class" in the MSDN (Microsoft Developer Network) library at http://go.microsoft.com/fwlink/?LinkID=145130.</source>
          <target state="translated">Per ulteriori informazioni, vedere "Classe RuntimeDefinedParameter" in MSDN (Microsoft Developer Network) library all'http://go.microsoft.com/fwlink/?LinkID=145130.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Switch Parameters Switch parameters are parameters with no parameter value.</source>
          <target state="translated">Opzione commutatore parametri parametri sono non prevede alcun valore di parametro.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>They are effective only when they are used and have only one effect.</source>
          <target state="translated">Sono valide solo quando vengono utilizzati e hanno effetto solo uno.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>For example, the -NoProfile parameter of PowerShell.exe is a switch parameter.</source>
          <target state="translated">Ad esempio, il parametro - NoProfile di PowerShell.exe è un parametro opzionale.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>To create a switch parameter in a function, specify the Switch type in the parameter definition.</source>
          <target state="translated">Per creare un parametro in una funzione, specificare il tipo di opzione nella definizione del parametro.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>For example: Param ([Switch]<ph id="ph1">&lt;ParameterName&gt;</ph>) -or- Param</source>
          <target state="translated">Ad esempio: Param ([opzione]<ph id="ph1">&lt;ParameterName&gt;</ph>) - oppure - Param</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>[parameter(Mandatory=$false)] [Switch]</source>
          <target state="translated">[parameter(Mandatory=$false)] [Opzione]</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Switch parameters are easy to use and are preferred over Boolean parameters, which have a more difficult syntax.</source>
          <target state="translated">I parametri di opzione sono facili da usare e Preferiti tramite i parametri booleani, che hanno una sintassi più difficile.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>For example, to use a switch parameter, the user types the parameter in the command.</source>
          <target state="translated">Ad esempio, per utilizzare un parametro opzionale, l'utente digita il parametro nel comando.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>-IncludeAll</source>
          <target state="translated">-IncludeAll</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>To use a Boolean parameter, the user types the parameter and a Boolean value.</source>
          <target state="translated">Per utilizzare un parametro booleano, l'utente digita il parametro e un valore booleano.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>-IncludeAll:$true</source>
          <target state="translated">-IncludeAll: $true</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>When creating switch parameters, choose the parameter name carefully.</source>
          <target state="translated">Durante la creazione di parametri di opzione, scegliere con attenzione il nome del parametro.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Be sure that the parameter name communicates the effect of the parameter to the user, and avoid ambiguous terms, such as Filter or Maximum, that might imply that a value is required.</source>
          <target state="translated">Assicurarsi che il nome del parametro comunica l'effetto del parametro per l'utente ed evitare condizioni ambigui, ad esempio di filtro o massimo, che potrebbe implicare che è necessario specificare un valore.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">VEDERE ANCHE</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>about_Functions about_Functions_Advanced about_Functions_Advanced_Methods about_Functions_CmdletBindingAttribute about_Functions_OutputTypeAttribute</source>
          <target state="translated">about_Functions about_Functions_Advanced about_Functions_Advanced_Methods about_Functions_CmdletBindingAttribute about_Functions_OutputTypeAttribute</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>