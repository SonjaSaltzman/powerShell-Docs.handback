<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1e1b7b998af89484ef8a741c52fbfca703ce9b0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Methods.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf97dad03e3ef75f348456b3fb0a775843d21954</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">353d62fac859ec6df86fc2836233a7e9182defea</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">cmdlet PowerShell</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>about_methods</source>
          <target state="translated">about_methods</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About methods</source>
          <target state="translated">Informazioni sui metodi</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_methods</source>
          <target state="translated">about_methods</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_methods</source>
          <target state="translated">about_methods</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">DESCRIZIONE BREVE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes how to use methods to perform actions on objects in  Windows PowerShell�.</source>
          <target state="translated">Viene descritto come utilizzare i metodi per eseguire azioni sugli oggetti in Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">DESCRIZIONE LUNGA</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Windows PowerShell uses objects to represent the items in data stores or the state of the computer.</source>
          <target state="translated">Windows PowerShell utilizza gli oggetti per rappresentare gli elementi in archivi dati o lo stato del computer.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, FileInfo objects represent the files in file system drives and ProcessInfo objects represent the processes on the computer.</source>
          <target state="translated">Ad esempio, gli oggetti FileInfo rappresentano i file nell'unità del file system e gli oggetti classe ProcessInfo rappresentano i processi nel computer.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Objects have properties, which store data about the object, and methods that let you change the object.</source>
          <target state="translated">Gli oggetti hanno proprietà che archiviano dati sull'oggetto, e i metodi che consentono di modificare l'oggetto.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A "method" is a set of instructions that specify an action you can perform on the object.</source>
          <target state="translated">Un "metodo" è un set di istruzioni che specificano un'azione che è possibile eseguire sull'oggetto.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For example, the FileInfo object includes the CopyTo method that copies the file that the FileInfo object represents.</source>
          <target state="translated">Ad esempio, l'oggetto FileInfo include il metodo CopyTo che copia il file rappresentato dall'oggetto FileInfo.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To get the methods of any object, use the Get-Member cmdlet.</source>
          <target state="translated">Per ottenere i metodi di qualsiasi oggetto, utilizzare il cmdlet Get-Member.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Use its MemberType property with a value of "Method".</source>
          <target state="translated">Utilizzare la relativa proprietà MemberType con un valore di "Metodo".</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following command gets the methods of process objects.</source>
          <target state="translated">Il comando seguente ottiene i metodi degli oggetti processo.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To perform or "invoke" a method of an object, type a dot (.), the method name, and a set of parentheses "()".</source>
          <target state="translated">Per eseguire o un metodo di un oggetto "richiama", digitare un punto (.), il nome del metodo e un set di parentesi "()".</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If the method has arguments, place the argument values inside the parentheses.</source>
          <target state="translated">Se il metodo dispone di argomenti, inserire i valori dell'argomento all'interno delle parentesi.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The parentheses are required for every method call, even when there are no arguments.</source>
          <target state="translated">Le parentesi sono necessarie per ogni chiamata al metodo, anche quando non sono presenti argomenti.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For example, the following command invokes the Kill method of processes to end the Notepad process on the computer.</source>
          <target state="translated">Ad esempio, il comando seguente richiama il metodo di terminazione dei processi per terminare il processo di blocco note nel computer.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>As a result, the instance of Notepad closes.</source>
          <target state="translated">Di conseguenza, si chiude l'istanza del blocco note.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>(The Get-Process command is enclosed in parentheses to insure that it runs before the Kill method is invoked.</source>
          <target state="translated">(Il comando Get-Process è racchiusa tra parentesi per garantire che venga eseguito prima che venga richiamato il metodo Kill.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Another very useful process is the Split method of strings.</source>
          <target state="translated">Un altro processo molto utile è il metodo di suddivisione delle stringhe.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The split method takes a delimiter character argument that tells the method where to split the string.</source>
          <target state="translated">Il metodo split accetta un argomento di tipo carattere delimitatore che indichi la posizione in cui suddividere la stringa al metodo.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>As shown in the previous examples, you can invoke a method on an object that you get by using a command or an object in a variable.</source>
          <target state="translated">Come illustrato negli esempi precedenti, è possibile richiamare un metodo su un oggetto che si ottiene utilizzando un comando o un oggetto in una variabile.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Starting in  Windows PowerShell 4.0, method invocation by using dynamic method names is supported.</source>
          <target state="translated">A partire da Windows PowerShell 4.0, la chiamata al metodo utilizzando nomi di metodo dinamici è supportata.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>LEARNING ABOUT METHODS</source>
          <target state="translated">INFORMAZIONI SUI METODI DI APPRENDIMENTO</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To find definitions of the methods of an object, go to help topic for the object type in MSDN and look for its methods page.</source>
          <target state="translated">Per trovare le definizioni dei metodi di un oggetto, consultare Guida l'argomento relativo al tipo di oggetto in MSDN e cercare la pagina di metodi.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example, the following page describes the methods of process objects (System.Diagnostics.Process).</source>
          <target state="translated">Ad esempio, la pagina seguente vengono descritti i metodi degli oggetti processo (System.Diagnostics.Process).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To determine the arguments of a method, review the method definition, which is like the syntax diagram of a  Windows PowerShell cmdlet.</source>
          <target state="translated">Per determinare gli argomenti di un metodo, esaminare la definizione del metodo, che è simile al diagramma della sintassi di un cmdlet di Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A method definition might have one or more method signatures, which are like the parameter sets of  Windows PowerShell cmdlets.</source>
          <target state="translated">Definizione di un metodo potrebbe essere uno o più firme del metodo, che sono il set di parametri dei cmdlet Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The signatures show all of the valid formats of commands to invoke the method.</source>
          <target state="translated">Le firme di visualizzare tutti i formati validi di comandi per richiamare il metodo.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For example, the CopyTo method of the FileInfo class contains the following two method signatures:</source>
          <target state="translated">Ad esempio, il metodo CopyTo della classe FileInfo contiene le firme del due metodo seguenti:</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The first method signature takes the destination file name (and a path).</source>
          <target state="translated">La firma del metodo prima accetta il nome di file di destinazione (e un percorso).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following example use The first CopyTo method to copy the Final.txt file to the C:\Bin directory.</source>
          <target state="translated">Nell'esempio seguente utilizza il primo metodo CopyTo per copiare il file Final.txt nella directory C:\Bin.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The second method signature take a destination file name and a Boolean value that determines whether the destination file should be overwritten, if it already exists.</source>
          <target state="translated">La firma del metodo secondo hanno un nome di file di destinazione e un valore booleano che determina se è necessario sovrascrivere il file di destinazione, se esiste già.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following example use The second CopyTo method to copy the Final.txt file to the C:\Bin directory, and to overwrite existing files.</source>
          <target state="translated">Nell'esempio seguente utilizza il secondo metodo CopyTo per copiare il file Final.txt nella directory C:\Bin e sovrascrivere i file esistenti.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>METHODS OF SCALAR OBJECTS AND COLLECTIONS</source>
          <target state="translated">METODI DI OGGETTI SCALARI E RACCOLTE</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The methods of one ("scalar") object of a particular type are often different from the methods of a collection of objects of the same type.</source>
          <target state="translated">I metodi di un oggetto ("scalare") di un determinato tipo spesso sono diversi dai metodi di una raccolta di oggetti dello stesso tipo.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For example, every process has a Kill method, but a collection of processes does not have a Kill method.</source>
          <target state="translated">Ad esempio, ogni processo dispone di un metodo Kill, ma una raccolta di processi non dispone di un metodo Kill.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0,  Windows PowerShell tries to prevent scripting errors that result from the differing methods of scalar objects and collections.</source>
          <target state="translated">A partire da Windows PowerShell 3.0, Windows PowerShell tenta di evitare errori di script che derivano da metodi diversi di oggetti scalari e raccolte.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 4.0, collection filtering by using a method syntax is supported.</source>
          <target state="translated">A partire da Windows PowerShell 4.0, raccolta filtro utilizzando una sintassi del metodo è supportato.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you submit a collection, but request a method that exists only on single ("scalar") objects, Windows invokes the method on every object in the collection.</source>
          <target state="translated">Se si invia una raccolta, ma un metodo che esiste solo su singoli oggetti ("scalari") della richiesta, Windows richiama il metodo su ogni oggetto nella raccolta.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If the method exists on the individual objects and on the collection,  Windows PowerShell does not alter the result.</source>
          <target state="translated">Se il metodo esista per singoli oggetti e la raccolta, Windows PowerShell non modifica il risultato.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This feature also works on properties of scalar objects and collections.</source>
          <target state="translated">Questa funzionalità funziona anche sulle proprietà di raccolte e gli oggetti scalari.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information, see about_Properties.</source>
          <target state="translated">Per ulteriori informazioni, vedere about_Properties.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">ESEMPI</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following example runs the Kill method of individual process objects on a collection of process objects.</source>
          <target state="translated">Nell'esempio seguente esegue il metodo Kill degli oggetti processo singoli su una raccolta di oggetti processo.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This example works only on  Windows PowerShell 3.0 and later versions of  Windows PowerShell.</source>
          <target state="translated">In questo esempio funziona solo su Windows PowerShell 3.0 e versioni successive di Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The first command starts three instances of the Notepad process.</source>
          <target state="translated">Il primo comando avvia tre istanze del processo Blocco note.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The second command uses the Get-Process command to get all three instance of the Notepad process and save them in the $p variable.</source>
          <target state="translated">Il secondo comando Usa il comando Get-Process per ottenere tutte le tre istanze del processo Blocco note e salvarli nella variabile $p.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The third command uses the Count property of all collections to verify that there are three processes in the $p variable.</source>
          <target state="translated">Il terzo comando Usa la proprietà Count di tutte le raccolte per verificare che vi sono tre processi nella variabile $p.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The fourth command runs the Kill method on all three processes in the $p variable.</source>
          <target state="translated">Il quarto comando viene eseguito il metodo Kill su tutti e tre i processi nella variabile $p.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This command works even though a collection of processes does not have a Kill method.</source>
          <target state="translated">Questo comando funziona anche se una raccolta di processi non dispone di un metodo Kill.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The fifth command uses the Get-Process command to confirm that the Kill command worked.</source>
          <target state="translated">Il quinto comando utilizza il comando Get-Process per verificare che sia stato eseguito il comando Kill.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To perform the same task on  Windows PowerShell 2.0, use the Foreach-Object cmdlet to run the method on each object in the collection.</source>
          <target state="translated">Per eseguire la stessa attività in Windows PowerShell 2.0, utilizzare il cmdlet Foreach-Object per eseguire il metodo su ogni oggetto nella raccolta.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">VEDERE ANCHE</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>about_Objects</source>
          <target state="translated">about_Objects</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>about_Properties</source>
          <target state="translated">about_Properties</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Get-Member</source>
          <target state="translated">Get-Member</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>