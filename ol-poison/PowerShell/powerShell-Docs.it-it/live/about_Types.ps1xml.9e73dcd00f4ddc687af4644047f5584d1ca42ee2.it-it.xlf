<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">92fc6355c344b3c8e9d1085a2b3f91bbcb0d1119</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Types.ps1xml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">58b5b4fe53107821e75a4b260e2d08ba805312db</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90e5515bb689451a5de53796b1b5711c9215c1fd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Types.ps1xml</source>
          <target state="translated">about_Types.ps1xml</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">cmdlet PowerShell</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Types.ps1xml</source>
          <target state="translated">Su Types. ps1xml</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Types.ps1xml</source>
          <target state="translated">about_Types.ps1xml</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Types.ps1xml</source>
          <target state="translated">about_Types.ps1xml</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">DESCRIZIONE BREVE</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Explains how to use Types.ps1xml files to extend the types of objects that are used in Windows PowerShell.</source>
          <target state="translated">Viene illustrato come utilizzare i file Types. ps1xml per estendere i tipi di oggetti utilizzabili in Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">DESCRIZIONE LUNGA</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Extended type data defines additional properties and methods ("members") of object types in Windows PowerShell.</source>
          <target state="translated">Dati di tipo esteso definiscono proprietà e metodi ("membri") dei tipi di oggetti aggiuntivi in Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>There are two techniques for adding extended type data to a Windows PowerShell session.</source>
          <target state="translated">Sono disponibili due tecniche per l'aggiunta di dati di tipo esteso per una sessione di Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-- Types.ps1xml file: An XML file that defines extended type data.</source>
          <target state="translated">-File Types ps1xml: file XML che definisce i dati di tipo esteso.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>-- Update-TypeData: A cmdlet that reloads Types.ps1xml files and defines extended data for types in the current session.</source>
          <target state="translated">-Update-TypeData: file di un cmdlet che ricarica Types. ps1xml e definisce i dati estesi per i tipi nella sessione corrente.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This topic describes Types.ps1xml files.</source>
          <target state="translated">In questo argomento vengono descritti i file Types. ps1xml.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information about using the Update-TypeData cmdlet to add dynamic extended type data to the current session see Update-TypeData (http://go.microsoft.com/fwlink/?LinkID=113421).</source>
          <target state="translated">Per ulteriori informazioni sull'utilizzo del cmdlet Update-TypeData per aggiungere tipi estesi dinamico dei dati per la sessione corrente, vedere Update-TypeData (http://go.microsoft.com/fwlink/?LinkID=113421).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>About Extended Type Data</source>
          <target state="translated">Informazioni sui dati di tipo esteso</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Extended type data defines additional properties and methods ("members") of object types in Windows PowerShell.</source>
          <target state="translated">Dati di tipo esteso definiscono proprietà e metodi ("membri") dei tipi di oggetti aggiuntivi in Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can extend any type that is supported by Windows PowerShell and use the added properties and methods in the same way that you use the properties that are defined on the object types.</source>
          <target state="translated">È possibile estendere qualsiasi tipo supportato da Windows PowerShell e utilizzare i metodi e proprietà aggiuntiva nello stesso modo che si utilizzano le proprietà definite per i tipi di oggetto.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, Windows PowerShell adds a DateTime property to all System.DateTime objects, such as the ones that the Get-Date cmdlet returns.</source>
          <target state="translated">Ad esempio, Windows PowerShell aggiunge una proprietà DateTime a tutti gli oggetti System. DateTime, ad esempio quelli restituiti dal cmdlet Get-Date.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>PS C:&gt; (Get-Date).DateTime Sunday, January 29, 2012 9:43:57 AM</source>
          <target state="translated">PS C: &gt; (Get-Date). DateTime domenica 29 gennaio 2012 9:43:57 AM</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You won't find the DateTime property in the description of the System.DateTime structure (http://msdn.microsoft.com/library/system.datetime.aspx), because Windows PowerShell adds the property and it is visible only in Windows PowerShell.</source>
          <target state="translated">La proprietà DateTime non disponibili nella descrizione della struttura System. DateTime (http://msdn.microsoft.com/library/system.datetime.aspx), perché Windows PowerShell aggiunge la proprietà e è visibile solo in Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To add the DateTime property to all Windows PowerShell sessions, Windows PowerShell defines the DateTime property in the Types.ps1xml file in the Windows PowerShell installation directory ($pshome).</source>
          <target state="translated">Per aggiungere la proprietà DateTime a tutte le sessioni di Windows PowerShell, Windows PowerShell definisce la proprietà DateTime nel file Types. ps1xml nella directory di installazione di Windows PowerShell ($pshome).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Adding Extended Type Data to Windows PowerShell.</source>
          <target state="translated">Aggiunta di dati di tipo esteso per Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>There are three sources of extended type data in Windows PowerShell sessions.</source>
          <target state="translated">Esistono tre origini dati di tipo esteso in sessioni di Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>--  The Types.ps1xml files in the Windows PowerShell installation directory are loaded automatically into every Windows PowerShell session.</source>
          <target state="translated">-- I file Types. ps1xml nella directory di installazione di Windows PowerShell sono caricati automaticamente in ogni sessione di Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>--  The Types.ps1xml files that modules export are loaded when the module is imported into the current session.</source>
          <target state="translated">-- I file Types. ps1xml esportano i moduli vengono caricati quando viene importato il modulo nella sessione corrente.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>--  Extended type data that is defined by using the Update-TypeData cmdlet is added only to the current session.</source>
          <target state="translated">-Dati di tipo esteso definito utilizzando il cmdlet Update-TypeData viene aggiunto solo alla sessione corrente.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>It is not saved in a file.</source>
          <target state="translated">Non viene salvata in un file.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In the session, the extended type data from the three sources is applied to objects in the same way and is available on all objects of the specified types.</source>
          <target state="translated">Nella sessione, i dati di tipo esteso da tre origini applicati agli oggetti nello stesso modo e disponibile per tutti gli oggetti dei tipi specificati.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The TypeData Cmdlets</source>
          <target state="translated">I cmdlet TypeData</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following TypeData cmdlets are included in the Microsoft.PowerShell.Utility module in Windows PowerShell 3.0 and later versions of Windows PowerShell.</source>
          <target state="translated">I cmdlet TypeData seguenti sono inclusi nel modulo Microsoft.PowerShell.Utility in Windows PowerShell 3.0 e versioni successive di Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Get-TypeData:     Gets extended type data in the current session.</source>
          <target state="translated">Get-TypeData: Dati di tipo Ottiene esteso nella sessione corrente.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Update-TypeData:  Reloads Types.ps1xml files.</source>
          <target state="translated">Update-TypeData: Ricaricamenti ps1xml.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Adds extended type data to the current session.</source>
          <target state="translated">Aggiunge dati di tipo esteso nella sessione corrente.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Remove-TypeData:  Removes extended type data from the current session.</source>
          <target state="translated">Remove-TypeData: Rimuove i dati di tipo esteso dalla sessione corrente.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information about these cmdlets, see the help topic for each cmdlet.</source>
          <target state="translated">Per ulteriori informazioni su questi cmdlet, vedere l'argomento della Guida per ciascun cmdlet.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Built-in Types.ps1xml Files</source>
          <target state="translated">File Types. ps1xml incorporato</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The Types.ps1xml files in the $pshome directory are added automatically to every session.</source>
          <target state="translated">I file Types. ps1xml nella directory $pshome vengono aggiunti automaticamente a ogni sessione.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The Types.ps1xml file in the Windows PowerShell installation directory ($pshome) is an XML-based text file that lets you add properties and methods to the objects that are used in Windows PowerShell.</source>
          <target state="translated">Il file Types ps1xml nella directory di installazione di Windows PowerShell ($pshome) è un file di testo basato su XML che consente di aggiungere proprietà e metodi agli oggetti che vengono utilizzati in Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Windows PowerShell has built-in Types.ps1xml files that add several elements to the .NET Framework types, but you can create additional Types.ps1xml files to further extend the types.</source>
          <target state="translated">Windows PowerShell include file Types. ps1xml incorporati aggiungono diversi elementi per i tipi .NET Framework, ma è possibile creare ulteriori file Types. ps1xml per estendere ulteriormente i tipi.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For example, by default, array objects (System.Array) have a Length property that lists the number of objects in the array.</source>
          <target state="translated">Ad esempio, per impostazione predefinita, gli oggetti array (Array) avere una proprietà di lunghezza che elenca il numero di oggetti nella matrice.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>However, because the name "length" does not clearly describe the property, Windows PowerShell adds an alias property named "Count" that displays the same value.</source>
          <target state="translated">Tuttavia, poiché la proprietà non è descritto chiaramente il nome "lunghezza", Windows PowerShell aggiunge una proprietà alias denominata "Count" che consente di visualizzare lo stesso valore.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The following XML adds the Count property to the System.Array type.</source>
          <target state="translated">Il codice XML seguente aggiunge la proprietà Count per il tipo di Array.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>System.Array<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;AliasProperty&gt;
&lt;Name&gt;</ph>Count<ph id="ph2">&lt;/Name&gt;
&lt;ReferencedMemberName&gt;</ph> Length</source>
          <target state="translated">System. Array<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;AliasProperty&gt;
&lt;Name&gt;</ph>conteggio<ph id="ph2">&lt;/Name&gt;
&lt;ReferencedMemberName&gt;</ph> lunghezza</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To get the new AliasProperty, use a Get-Member command on any array, as shown in the following example.</source>
          <target state="translated">Per ottenere il nuovo AliasProperty, utilizzare il comando Get-Member su qualsiasi matrice, come illustrato nell'esempio seguente.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Get-Member -inputobject (1,2,3,4)</source>
          <target state="translated">Get-Member - inputobject (1,2,3,4)</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The command returns the following results.</source>
          <target state="translated">Il comando restituisce i risultati seguenti.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Name           MemberType    Definition</source>
          <target state="translated">Nome MemberType definizione</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Count          AliasProperty Count = Length Address        Method        System.Object&amp; Address(Int32 ) Clone          Method        System.Object Clone() CopyTo         Method        System.Void CopyTo(Array array, Int32 index): Equals         Method        System.Boolean Equals(Object obj) Get            Method        System.Object Get(Int32 )</source>
          <target state="translated">Conteggio AliasProperty conteggio = lunghezza indirizzo metodo System. Object &amp; indirizzo (Int32) Clone metodo System. Object clone CopyTo metodo void CopyTo(Array array, Int32 index): uguale a metodo System. Boolean Equals(Object obj) Get metodo System. Object Get (Int32)</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>As a result, you can use either the Count property or the Length property of arrays in Windows PowerShell.</source>
          <target state="translated">Di conseguenza, è possibile utilizzare la proprietà Count o la proprietà Length di matrici in Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Ad esempio:</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; (1, 2, 3, 4).count</source>
          <target state="translated">C:\ps&gt; &gt; (1, 2, 3, 4) .count</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; (1, 2, 3, 4).length</source>
          <target state="translated">C:\ps&gt; &gt; (1, 2, 3, 4). Length</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Creating New Types.ps1xml Files</source>
          <target state="translated">Creazione di nuovi file ps1xml</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The .ps1xml files that are installed with Windows PowerShell are digitally signed to prevent tampering because the formatting can include script blocks.</source>
          <target state="translated">I file con estensione PS1XML che vengono installati con Windows PowerShell sono firmati digitalmente per impedire manomissioni perché la formattazione può includere i blocchi di script.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Therefore, to add a property or method to a .NET Framework type, create your own Types.ps1xml files, and then add them to your Windows PowerShell session.</source>
          <target state="translated">Per aggiungere una proprietà o metodo a un tipo .NET Framework, creare i propri file Types. ps1xml e quindi aggiungerli alla sessione di Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To create a new file, start by copying an existing Types.ps1xml file.</source>
          <target state="translated">Per creare un nuovo file, avviare la copia di un file Types. ps1xml esistente.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The new file can have any name, but it must have a .ps1xml file name extension.</source>
          <target state="translated">Il nuovo file può avere qualsiasi nome, ma deve avere un'estensione di file con estensione ps1xml.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You can place the new file in any directory that is accessible to Windows PowerShell, but it is useful to place the files in the Windows PowerShell installation directory ($pshome) or in a subdirectory of the installation directory.</source>
          <target state="translated">È possibile inserire il nuovo file in qualsiasi directory in cui è possibile accedere a Windows PowerShell, ma è utile posizionare i file nella directory di installazione di Windows PowerShell ($pshome) o in una sottodirectory della directory di installazione.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When you have saved the new file, use the Update-TypeData cmdlet to add the new file to your Windows PowerShell session.</source>
          <target state="translated">Dopo aver salvato il nuovo file, utilizzare il cmdlet Update-TypeData per aggiungere il nuovo file di sessione di Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If you want your types to take precedence over the types that are defined in the built-in file, use the PrependData parameter of the Update-TypeData cmdlet.</source>
          <target state="translated">Se si desidera i tipi hanno la precedenza sui tipi definiti nel file incorporato, utilizzare il parametro PrependData del cmdlet Update-TypeData.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Update-TypeData affects only the current session.</source>
          <target state="translated">Update-TypeData ha effetto solo nella sessione corrente.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To make the change to all future sessions, export the console, or add the Update-TypeData command to your Windows PowerShell profile.</source>
          <target state="translated">Per apportare la modifica a tutte le sessioni future, esportare la console o aggiungere il comando Update-TypeData al profilo di Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Types.ps1xml and Add-Member</source>
          <target state="translated">Types. ps1xml e Add-Member</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The Types.ps1xml files add properties and methods to all the instances of the objects of the specified .NET Framework type in the affected Windows PowerShell session.</source>
          <target state="translated">I file Types. ps1xml aggiungono proprietà e metodi per tutte le istanze degli oggetti del tipo specificato di .NET Framework nella sessione di Windows PowerShell interessata.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>However, if you need to add properties or methods only to one instance of an object, use the Add-Member cmdlet.</source>
          <target state="translated">Tuttavia, se è necessario aggiungere proprietà o metodi solo a un'istanza di un oggetto, utilizzare il cmdlet Add-Member.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more information,see Add-Member.</source>
          <target state="translated">Per ulteriori informazioni, vedere Add-Member.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Example: Adding an Age Member to FileInfo Objects</source>
          <target state="translated">Esempio: Aggiunta di un membro di età per oggetti FileInfo</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This example shows how to add an Age property to file objects (System.IO.FileInfo).</source>
          <target state="translated">In questo esempio viene illustrato come aggiungere una proprietà Age agli oggetti del file (System.IO.FileInfo).</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The age of a file is the difference between its creation time and the current time in days.</source>
          <target state="translated">La validità di un file è la differenza tra l'ora di creazione e l'ora corrente in giorni.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>It is easiest to use the original Types.ps1xml file as a template for the new file.</source>
          <target state="translated">È consigliabile utilizzare il file Types. ps1xml originale come modello per il nuovo file.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The following command copies the original file to a file called MyTypes.ps1xml in the $pshome directory.</source>
          <target state="translated">Il comando seguente copia il file originale in un file denominato MyTypes.ps1xml nella directory $pshome.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>copy-item Types.ps1xml MyTypes.ps1xml</source>
          <target state="translated">Copia elemento Types. ps1xml MyTypes.ps1xml</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Next, open the Types.ps1xml file in any XML or text editor, such as Notepad.</source>
          <target state="translated">Quindi, aprire il file Types ps1xml in qualsiasi editor di testo o XML, ad esempio Blocco note.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Because the Age property is calculated by using a script block, find a <ph id="ph1">&lt;ScriptProperty&gt;</ph> tag to use as a model for the new Age property.</source>
          <target state="translated">Poiché la proprietà Age viene calcolata utilizzando un blocco di script, trovare un <ph id="ph1">&lt;ScriptProperty&gt;</ph> tag da utilizzare come modello per la nuova proprietà Age.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Copy the XML between the <ph id="ph1">&lt;Type&gt;</ph> and <ph id="ph2">&lt;/Type&gt;</ph> tags of the code to create the script property.</source>
          <target state="translated">Copiare il codice XML tra i <ph id="ph1">&lt;Type&gt;</ph> e <ph id="ph2">&lt;/Type&gt;</ph> tag del codice per creare la proprietà di script.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Then, delete the remainder of the file, except for the opening &lt;?xml&gt; and <ph id="ph1">&lt;Types&gt;</ph> tags and the closing <ph id="ph2">&lt;/Types&gt;</ph> tag.</source>
          <target state="translated">Eliminare quindi il resto del file, ad eccezione di apertura &lt;? xml &gt; e <ph id="ph1">&lt;Types&gt;</ph> tag e la chiusura <ph id="ph2">&lt;/Types&gt;</ph> tag.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>You must also delete the digital signature to prevent errors.</source>
          <target state="translated">È inoltre necessario eliminare la firma digitale per evitare errori.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Begin with the model script property, such as the following script property, which was copied from the original Types.ps1xml file.</source>
          <target state="translated">Iniziare con la proprietà di script del modello, ad esempio la proprietà di script seguente, che è stata copiata il file Types. ps1xml originale.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>System.Guid<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;ScriptProperty&gt;
&lt;Name&gt;</ph>Guid<ph id="ph2">&lt;/Name&gt;
&lt;GetScriptBlock&gt;</ph>$this.ToString()</source>
          <target state="translated">GUID<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;ScriptProperty&gt;
&lt;Name&gt;</ph>Guid<ph id="ph2">&lt;/Name&gt;
&lt;GetScriptBlock&gt;</ph>$questo. ToString)</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Then, change the name of the .NET Framework type, the name of the property, and the value of the script block to create an Age property for file objects.</source>
          <target state="translated">Quindi, modificare il nome del tipo di .NET Framework, il nome della proprietà e il valore del blocco di script per creare una proprietà Age per gli oggetti del file.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>System.IO.FileInfo<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;ScriptProperty&gt;
&lt;Name&gt;</ph>Age<ph id="ph2">&lt;/Name&gt;
&lt;GetScriptBlock&gt;</ph> ((get-date) - ($this.creationtime)).days</source>
          <target state="translated">System.IO.FileInfo<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;ScriptProperty&gt;
&lt;Name&gt;</ph>Age<ph id="ph2">&lt;/Name&gt;
&lt;GetScriptBlock&gt;</ph> ((get-date)-($this.creationtime)).days</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>After you save the file and close it, run an Update-TypeData command, such as the following command, to add the new Types.ps1xml file to the current session.</source>
          <target state="translated">Dopo aver salvato il file e chiuderlo, eseguire un comando Update-TypeData, ad esempio il comando seguente per aggiungere il nuovo file Types ps1xml alla sessione corrente.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The command uses the PrependData parameter to place the new file in a higher precedence order than the original file.</source>
          <target state="translated">Il comando Usa il parametro PrependData per inserire il nuovo file in un ordine di precedenza maggiore rispetto al file originale.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>(For more information about Update-TypeData, see Update-TypeData.)</source>
          <target state="translated">(Per ulteriori informazioni su Update-TypeData, vedere Update-TypeData).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>update-typedata -prependpath $pshome\MyTypes.ps1xml</source>
          <target state="translated">Update-typedata - prependpath $pshome\MyTypes.ps1xml</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>To test the change, run a Get-ChildItem command to get the PowerShell.exe file in the $pshome directory, and then pipe the file to the Format-List cmdlet to list all of the properties of the file.</source>
          <target state="translated">Per testare la modifica, eseguire un comando Get-ChildItem per ottenere il file PowerShell.exe nella directory $pshome e quindi inviare tramite pipe il file al cmdlet Format-List per elencare tutte le proprietà del file.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>As a result of the change, the Age property appears in the list.</source>
          <target state="translated">Come risultato della modifica, la proprietà Age viene visualizzata nell'elenco.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>get-childitem $pshome\PowerShell.exe | format-list -property *</source>
          <target state="translated">get-childitem $pshome\PowerShell.exe | formato elenco-proprietà *</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>PSPath            : Microsoft.PowerShell.Core\FileSystem::C:\WINDOWS... PSParentPath      : Microsoft.PowerShell.Core\FileSystem::C:\WINDOWS... PSChildName       : PowerShell.exe PSDrive           : C PSProvider        : Microsoft.PowerShell.Core\FileSystem PSIsContainer     : False Age               : 16 VersionInfo       : File:             C:\WINDOWS\system32\WindowsPow... InternalName:     POWERSHELL OriginalFilename: PowerShell.EXE</source>
          <target state="translated">PSPath: Microsoft.PowerShell.Core\FileSystem::C:\WINDOWS... PSParentPath: Microsoft.PowerShell.Core\FileSystem::C:\WINDOWS... PSChildName: PowerShell.exe PSDrive: PSProvider C: Microsoft.PowerShell.Core\FileSystem PSIsContainer: Age False: VersionInfo 16: File: C:\WINDOWS\system32\WindowsPow... Nomeinterno: POWERSHELL OriginalFilename: PowerShell.EXE</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>You can also display the Age property of the file by using the following command.</source>
          <target state="translated">È inoltre possibile visualizzare la proprietà Age del file utilizzando il comando seguente.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>(get-childitem $pshome\PowerShell.exe).age</source>
          <target state="translated">(get-childitem $pshome\PowerShell.exe).age</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>16</source>
          <target state="translated">16</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The XML in Types.ps1xml Files</source>
          <target state="translated">Il codice XML nel file Types. ps1xml</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;Types&gt;</ph> tag encloses all of the types that are defined in the file.</source>
          <target state="translated">Il <ph id="ph1">&lt;Types&gt;</ph> tag racchiude tutti i tipi definiti nel file.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>There should be only one pair of <ph id="ph1">&lt;Types&gt;</ph> tags.</source>
          <target state="translated">Dovrebbe esserci solo una coppia di <ph id="ph1">&lt;Types&gt;</ph> tag.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Each .NET Framework type mentioned in the file should be represented by a pair of <ph id="ph1">&lt;Type&gt;</ph> tags.</source>
          <target state="translated">Ogni tipo di .NET Framework indicato nel file deve essere rappresentato da una coppia di <ph id="ph1">&lt;Type&gt;</ph> tag.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The type tags must contain the following tags:</source>
          <target state="translated">Tag del tipo deve contenere i seguenti tag:</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>: A pair of <ph id="ph1">&lt;Name&gt;</ph> tags that enclose the name of the affected .NET Framework type.</source>
          <target state="translated">: Una coppia di <ph id="ph1">&lt;Name&gt;</ph> tag che racchiudono il nome del tipo di .NET Framework interessato.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>: A pair of <ph id="ph1">&lt;Members&gt;</ph> tags that enclose the tags for the new properties and methods that are defined for the .NET Framework type.</source>
          <target state="translated">: Una coppia di <ph id="ph1">&lt;Members&gt;</ph> tag che racchiudono i tag per le nuove proprietà e i metodi definiti per il tipo di .NET Framework.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Any of the following member tags can be inside the <ph id="ph1">&lt;Members&gt;</ph> tags.</source>
          <target state="translated">I seguenti tag di membro possono essere all'interno di <ph id="ph1">&lt;Members&gt;</ph> tag.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>: Defines a new name for an existing property.</source>
          <target state="translated">: Definisce un nuovo nome per una proprietà esistente.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;AliasProperty&gt;</ph> tag must have a pair of <ph id="ph2">&lt;Name&gt;</ph> tags that specify the name of the new property and a pair of <ph id="ph3">&lt;ReferencedMemberName&gt;</ph> tags that specify the existing property.</source>
          <target state="translated">Il <ph id="ph1">&lt;AliasProperty&gt;</ph> tag deve essere una coppia di <ph id="ph2">&lt;Name&gt;</ph> tag che specificano il nome della nuova proprietà e una coppia di <ph id="ph3">&lt;ReferencedMemberName&gt;</ph> tag che specificano la proprietà esistente.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For example, the Count alias property is an alias for the Length property of array objects.</source>
          <target state="translated">Ad esempio, la proprietà alias Count è un alias per la proprietà di durata degli oggetti di matrice.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>System.Array<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;AliasProperty&gt;
&lt;Name&gt;</ph>Count<ph id="ph2">&lt;/Name&gt;
&lt;ReferencedMemberName&gt;</ph>Length</source>
          <target state="translated">System. Array<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;AliasProperty&gt;
&lt;Name&gt;</ph>conteggio<ph id="ph2">&lt;/Name&gt;
&lt;ReferencedMemberName&gt;</ph>lunghezza</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>:  References a static method of a .NET Framework class.</source>
          <target state="translated">: Fa riferimento a un metodo statico di una classe .NET Framework.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;CodeMethod&gt;</ph> tag must have a pair of <ph id="ph2">&lt;Name&gt;</ph> tags that specify the name of the new method and a pair of <ph id="ph3">&lt;GetCodeReference&gt;</ph> tags that specify the code in which the method is defined.</source>
          <target state="translated">Il <ph id="ph1">&lt;CodeMethod&gt;</ph> tag deve essere una coppia di <ph id="ph2">&lt;Name&gt;</ph> tag che specificano il nome del nuovo metodo e una coppia di <ph id="ph3">&lt;GetCodeReference&gt;</ph> tag che specificano il codice in cui è definito il metodo.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>For example, the Mode property of directories (System.IO.DirectoryInfo objects) is a code property defined in the Windows PowerShell FileSystem provider.</source>
          <target state="translated">Ad esempio, la proprietà modalità di directory (System.IO.DirectoryInfo objects) è una proprietà di codice definita nel provider FileSystem di Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>System.IO.DirectoryInfo<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;CodeProperty&gt;
&lt;Name&gt;</ph>Mode<ph id="ph2">&lt;/Name&gt;
&lt;GetCodeReference&gt;
&lt;TypeName&gt;</ph>Microsoft.PowerShell.Commands.FileSystemProvider<ph id="ph3">&lt;/TypeName&gt;
&lt;MethodName&gt;</ph>Mode</source>
          <target state="translated">System.IO.DirectoryInfo<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;CodeProperty&gt;
&lt;Name&gt;</ph>modalità<ph id="ph2">&lt;/Name&gt;
&lt;GetCodeReference&gt;
&lt;TypeName&gt;</ph>Microsoft.PowerShell.Commands.FileSystemProvider<ph id="ph3">&lt;/TypeName&gt;
&lt;MethodName&gt;</ph>modalità</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>: References a static method of a .NET Framework class.</source>
          <target state="translated">: Fa riferimento a un metodo statico di una classe .NET Framework.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;CodeProperty&gt;</ph> tag must have a pair of <ph id="ph2">&lt;Name&gt;</ph> tags that specify the name of the new property and a pair of <ph id="ph3">&lt;GetCodeReference&gt;</ph> tags that specify the code in which the property is defined.</source>
          <target state="translated">Il <ph id="ph1">&lt;CodeProperty&gt;</ph> tag deve essere una coppia di <ph id="ph2">&lt;Name&gt;</ph> tag che specificano il nome della nuova proprietà e una coppia di <ph id="ph3">&lt;GetCodeReference&gt;</ph> tag che specificano il codice in cui la proprietà è definita.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For example, the Mode property of directories (System.IO.DirectoryInfo objects) is a code property defined in the Windows PowerShell FileSystem provider.</source>
          <target state="translated">Ad esempio, la proprietà modalità di directory (System.IO.DirectoryInfo objects) è una proprietà di codice definita nel provider FileSystem di Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>System.IO.DirectoryInfo<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;CodeProperty&gt;
&lt;Name&gt;</ph>Mode<ph id="ph2">&lt;/Name&gt;
&lt;GetCodeReference&gt;
&lt;TypeName&gt;</ph>Microsoft.PowerShell.Commands.FileSystemProvider<ph id="ph3">&lt;/TypeName&gt;
&lt;MethodName&gt;</ph>Mode</source>
          <target state="translated">System.IO.DirectoryInfo<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;CodeProperty&gt;
&lt;Name&gt;</ph>modalità<ph id="ph2">&lt;/Name&gt;
&lt;GetCodeReference&gt;
&lt;TypeName&gt;</ph>Microsoft.PowerShell.Commands.FileSystemProvider<ph id="ph3">&lt;/TypeName&gt;
&lt;MethodName&gt;</ph>modalità</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>: Defines a collection of members (properties and methods).</source>
          <target state="translated">: Definisce una raccolta di membri (proprietà e metodi).</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;MemberSet&gt;</ph> tags appear within the primary <ph id="ph2">&lt;Members&gt;</ph> tags.</source>
          <target state="translated">Il <ph id="ph1">&lt;MemberSet&gt;</ph> tag vengono visualizzati all'interno di primario <ph id="ph2">&lt;Members&gt;</ph> tag.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The tags must enclose a pair of <ph id="ph1">&lt;Name&gt;</ph> tags surrounding the name of the member set and a pair of secondary <ph id="ph2">&lt;Members&gt;</ph> tags that surround the members (properties and methods) in the set.</source>
          <target state="translated">Il tag deve essere racchiuso tra una coppia di <ph id="ph1">&lt;Name&gt;</ph> tag che racchiudono il nome del set di membri e una coppia di database secondario <ph id="ph2">&lt;Members&gt;</ph> che racchiudono i membri (proprietà e metodi) nel set.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Any of the tags that create a property (such as <ph id="ph1">&lt;NoteProperty&gt;</ph> or <ph id="ph2">&lt;ScriptProperty&gt;</ph>) or a method (such as <ph id="ph3">&lt;Method&gt;</ph> or <ph id="ph4">&lt;ScriptMethod&gt;</ph>) can be members of the set.</source>
          <target state="translated">Uno qualsiasi dei tag che creare una proprietà (ad esempio <ph id="ph1">&lt;NoteProperty&gt;</ph> o <ph id="ph2">&lt;ScriptProperty&gt;</ph>) o un metodo (ad esempio <ph id="ph3">&lt;Method&gt;</ph> o <ph id="ph4">&lt;ScriptMethod&gt;</ph>) possono essere membri del set.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>In Types.ps1xml files, the <ph id="ph1">&lt;MemberSet&gt;</ph> tag is used to define the default views of the .NET Framework objects in Windows PowerShell.</source>
          <target state="translated">Nel file Types. ps1xml, il <ph id="ph1">&lt;MemberSet&gt;</ph> tag viene utilizzato per definire le viste predefinite degli oggetti .NET Framework in Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>In this case, the name of the member set (the value within the <ph id="ph1">&lt;Name&gt;</ph> tags) is always "PsStandardMembers", and the names of the properties (the value of the <ph id="ph2">&lt;Name&gt;</ph> tag) are one of the following:</source>
          <target state="translated">In questo caso, imposta il nome del membro (il valore all'interno di <ph id="ph1">&lt;Name&gt;</ph> tag) è sempre "PsStandardMembers" e i nomi delle proprietà (il valore di <ph id="ph2">&lt;Name&gt;</ph> tag) sono uno dei seguenti:</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>DefaultDisplayProperty: A single property of an object.</source>
          <target state="translated">DefaultDisplayProperty: Una singola proprietà di un oggetto.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>DefaultDisplayPropertySet: One or more properties of an object.</source>
          <target state="translated">DefaultDisplayPropertySet: Una o più proprietà di un oggetto.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>DefaultKeyPropertySet: One or more key properties of an object.</source>
          <target state="translated">DefaultKeyPropertySet: Uno o più proprietà chiave di un oggetto.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>A key property identifies instances of property values, such as the ID number of items in a session history.</source>
          <target state="translated">Una proprietà chiave identifica le istanze di valori di proprietà, ad esempio il numero di ID di elementi in una cronologia della sessione.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>For example, the following XML defines the default display of services (System.ServiceProcess.ServiceController objects) that are returned by the Get-Service cmdlet.</source>
          <target state="translated">Ad esempio, il codice XML seguente definisce la visualizzazione predefinita di servizi (System.ServiceProcess.ServiceController oggetti) che vengono restituiti dal cmdlet Get-Service.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>It defines a member set named "PsStandardMembers" that consists of a default property set with the Status, Name, and DisplayName properties.</source>
          <target state="translated">Definisce un set di membri denominato "PsStandardMembers" che è costituito da una proprietà predefinita impostata con le proprietà di stato, Name e DisplayName.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>System.ServiceProcess.ServiceController<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;MemberSet&gt;
&lt;Name&gt;</ph>PSStandardMembers<ph id="ph2">&lt;/Name&gt;
&lt;Members&gt;
&lt;PropertySet&gt;
&lt;Name&gt;</ph>DefaultDisplayPropertySet<ph id="ph3">&lt;/Name&gt;
&lt;ReferencedProperties&gt;
&lt;Name&gt;</ph>Status<ph id="ph4">&lt;/Name&gt;
&lt;Name&gt;</ph>Name<ph id="ph5">&lt;/Name&gt;
&lt;Name&gt;</ph>DisplayName</source>
          <target state="translated">System.ServiceProcess.ServiceController<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;MemberSet&gt;
&lt;Name&gt;</ph>PSStandardMembers<ph id="ph2">&lt;/Name&gt;
&lt;Members&gt;
&lt;PropertySet&gt;
&lt;Name&gt;</ph>DefaultDisplayPropertySet<ph id="ph3">&lt;/Name&gt;
&lt;ReferencedProperties&gt;
&lt;Name&gt;</ph>stato<ph id="ph4">&lt;/Name&gt;
&lt;Name&gt;</ph>nome<ph id="ph5">&lt;/Name&gt;
&lt;Name&gt;</ph>DisplayName</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>: References a native method of the underlying object.</source>
          <target state="translated">: Fa riferimento a un metodo nativo dell'oggetto sottostante.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>: A collection of the methods of the object.</source>
          <target state="translated">: Una raccolta di metodi dell'oggetto.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>: Defines a property with a static value.</source>
          <target state="translated">: Definisce una proprietà con un valore statico.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;NoteProperty&gt;</ph> tag must have a pair of <ph id="ph2">&lt;Name&gt;</ph> tags that specify the name of the new property and a pair of <ph id="ph3">&lt;Value&gt;</ph> tags that specify the value of the property.</source>
          <target state="translated">Il <ph id="ph1">&lt;NoteProperty&gt;</ph> tag deve essere una coppia di <ph id="ph2">&lt;Name&gt;</ph> tag che specificano il nome della nuova proprietà e una coppia di <ph id="ph3">&lt;Value&gt;</ph> tag che specificano il valore della proprietà.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>For example, the following XML creates a Status property for directories (System.IO.DirectoryInfo objects).</source>
          <target state="translated">Ad esempio, il codice XML seguente crea una proprietà di stato per le directory (System.IO.DirectoryInfo objects).</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The value of the Status property is always "Success".</source>
          <target state="translated">Il valore della proprietà Status è sempre "Completato".</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>System.IO.DirectoryInfo<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;NoteProperty&gt;
&lt;Name&gt;</ph>Status<ph id="ph2">&lt;/Name&gt;
&lt;Value&gt;</ph>Success</source>
          <target state="translated">System.IO.DirectoryInfo<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;NoteProperty&gt;
&lt;Name&gt;</ph>stato<ph id="ph2">&lt;/Name&gt;
&lt;Value&gt;</ph>riuscita</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>: Properties that take arguments and return a value.</source>
          <target state="translated">: Proprietà che accettano argomenti e restituiscono un valore.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>: A collection of the properties of the object.</source>
          <target state="translated">: Una raccolta di proprietà dell'oggetto.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>: A property of the base object.</source>
          <target state="translated">: Proprietà dell'oggetto di base.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>: Defines a collection of properties of the object.</source>
          <target state="translated">: Definisce un insieme di proprietà dell'oggetto.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;PropertySet&gt;</ph> tag must have a pair of <ph id="ph2">&lt;Name&gt;</ph> tags that specify the name of the property set and a pair of <ph id="ph3">&lt;ReferencedProperty&gt;</ph> tags that specify the properties.</source>
          <target state="translated">Il <ph id="ph1">&lt;PropertySet&gt;</ph> tag deve essere una coppia di <ph id="ph2">&lt;Name&gt;</ph> tag che specificano il nome del set di proprietà e una coppia di <ph id="ph3">&lt;ReferencedProperty&gt;</ph> tag che specificano le proprietà.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The names of the properties are enclosed in <ph id="ph1">&lt;Name&gt;</ph> tag pairs.</source>
          <target state="translated">I nomi delle proprietà sono racchiusi <ph id="ph1">&lt;Name&gt;</ph> coppie di tag.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>In Types.ps1xml, <ph id="ph1">&lt;PropertySet&gt;</ph> tags are used to define sets of properties for the default display of an object.</source>
          <target state="translated">In Types. ps1xml, <ph id="ph1">&lt;PropertySet&gt;</ph> tag vengono utilizzati per definire i set di proprietà per la visualizzazione predefinita di un oggetto.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>You can identify the default displays by the value "PsStandardMembers" in the <ph id="ph1">&lt;Name&gt;</ph> tag of a <ph id="ph2">&lt;MemberSet&gt;</ph> tag.</source>
          <target state="translated">È possibile identificare consente di visualizzare i valore predefinito per il valore "PsStandardMembers" nel <ph id="ph1">&lt;Name&gt;</ph> tag di un <ph id="ph2">&lt;MemberSet&gt;</ph> tag.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>For example, the following XML creates a Status property for directories (System.IO.DirectoryInfo objects).</source>
          <target state="translated">Ad esempio, il codice XML seguente crea una proprietà di stato per le directory (System.IO.DirectoryInfo objects).</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The value of the Status property is always "Success".</source>
          <target state="translated">Il valore della proprietà Status è sempre "Completato".</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>System.ServiceProcess.ServiceController<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;MemberSet&gt;
&lt;Name&gt;</ph>PSStandardMembers<ph id="ph2">&lt;/Name&gt;
&lt;Members&gt;
&lt;PropertySet&gt;
&lt;Name&gt;</ph>DefaultDisplayPropertySet<ph id="ph3">&lt;/Name&gt;
&lt;ReferencedProperties&gt;
&lt;Name&gt;</ph>Status&lt;/Name <ph id="ph4">&lt;Name&gt;</ph>Name<ph id="ph5">&lt;/Name&gt;
&lt;Name&gt;</ph>DisplayName</source>
          <target state="translated">System.ServiceProcess.ServiceController<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;MemberSet&gt;
&lt;Name&gt;</ph>PSStandardMembers<ph id="ph2">&lt;/Name&gt;
&lt;Members&gt;
&lt;PropertySet&gt;
&lt;Name&gt;</ph>DefaultDisplayPropertySet<ph id="ph3">&lt;/Name&gt;
&lt;ReferencedProperties&gt;
&lt;Name&gt;</ph>stato &lt; / Name <ph id="ph4">&lt;Name&gt;</ph>nome<ph id="ph5">&lt;/Name&gt;
&lt;Name&gt;</ph>DisplayName</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>: Defines a method whose value is the output of a script.</source>
          <target state="translated">: Definisce un metodo il cui valore è l'output di uno script.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;ScriptMethod&gt;</ph> tag must have a pair of <ph id="ph2">&lt;Name&gt;</ph> tags that specify the name of the new method and a pair of <ph id="ph3">&lt;Script&gt;</ph> tags that enclose the script block that returns the method result.</source>
          <target state="translated">Il <ph id="ph1">&lt;ScriptMethod&gt;</ph> tag deve essere una coppia di <ph id="ph2">&lt;Name&gt;</ph> tag che specificano il nome del nuovo metodo e una coppia di <ph id="ph3">&lt;Script&gt;</ph> tag che racchiudono il blocco di script che restituisce il risultato del metodo.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>For example, the ConvertToDateTime and ConvertFromDateTime methods of management objects (System.System.Management.ManagementObject) are script methods that use the ToDateTime and ToDmtfDateTime static methods of the System.Management.ManagementDateTimeConverter class.</source>
          <target state="translated">Ad esempio, i metodi ConvertToDateTime e ConvertFromDateTime degli oggetti di gestione (System.System.Management.ManagementObject) sono metodi di script che utilizzano il ToDateTime e ToDmtfDateTime metodi statici della classe System.Management.ManagementDateTimeConverter.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>System.Management.ManagementObject<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;ScriptMethod&gt;
&lt;Name&gt;</ph>ConvertToDateTime</source>
          <target state="translated">System.Management.ManagementObject<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;ScriptMethod&gt;
&lt;Name&gt;</ph>ConvertToDateTime</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>ConvertFromDateTime<ph id="ph1">&lt;/Name&gt;
&lt;Script&gt;
[System.Management.ManagementDateTimeConverter]::ToDmtfDateTime($args[0])
&lt;/Script&gt;
&lt;/ScriptMethod&gt;
&lt;/Members&gt;
&lt;/Type&gt;

&lt;ScriptProperty&gt;</ph>: Defines a property whose value is the output of a script.</source>
          <target state="translated">ConvertFromDateTime<ph id="ph1">&lt;/Name&gt;
&lt;Script&gt;
[System.Management.ManagementDateTimeConverter]::ToDmtfDateTime($args[0])
&lt;/Script&gt;
&lt;/ScriptMethod&gt;
&lt;/Members&gt;
&lt;/Type&gt;

&lt;ScriptProperty&gt;</ph>: definisce una proprietà il cui valore è l'output di uno script.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;ScriptProperty&gt;</ph> tag must have a pair of <ph id="ph2">&lt;Name&gt;</ph> tags that specify the name of the new property and a pair of <ph id="ph3">&lt;GetScriptBlock&gt;</ph> tags that enclose the script block that returns the property value.</source>
          <target state="translated">Il <ph id="ph1">&lt;ScriptProperty&gt;</ph> tag deve essere una coppia di <ph id="ph2">&lt;Name&gt;</ph> tag che specificano il nome della nuova proprietà e una coppia di <ph id="ph3">&lt;GetScriptBlock&gt;</ph> tag che racchiudono il blocco di script che restituisce il valore della proprietà.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>For example, the VersionInfo property of files (System.IO.FileInfo objects) is a script property that results from using the FullName property of the GetVersionInfo static method of System.Diagnostics.FileVersionInfo objects.</source>
          <target state="translated">Ad esempio, la proprietà VersionInfo dei file (System.IO.FileInfo objects) è una proprietà di script risultante dall'utilizzo della proprietà FullName del metodo statico GetVersionInfo System.Diagnostics.FileVersionInfo oggetti.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>System.IO.FileInfo<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;ScriptProperty&gt;
&lt;Name&gt;</ph>VersionInfo</source>
          <target state="translated">System.IO.FileInfo<ph id="ph1">&lt;/Name&gt;
&lt;Members&gt;
&lt;ScriptProperty&gt;
&lt;Name&gt;</ph>VersionInfo</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>System.Diagnostics.FileVersionInfo</source>
          <target state="translated">System.Diagnostics.FileVersionInfo</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>For more information, see the Windows PowerShell Software Development Kit (SDK) in the MSDN (Microsoft Developer Network )library at http://go.microsoft.com/fwlink/?LinkId=144538.</source>
          <target state="translated">Per ulteriori informazioni, vedere Windows PowerShell Software Development Kit (SDK) in MSDN (Microsoft Developer Network) library all'http://go.microsoft.com/fwlink/?LinkId=144538.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Update-TypeData</source>
          <target state="translated">Update-TypeData</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>To load your Types.ps1xml files into a Windows PowerShell session, run the Update-TypeData cmdlet.</source>
          <target state="translated">Per caricare i file Types. ps1xml in una sessione di Windows PowerShell, eseguire il cmdlet Update-TypeData.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>If you want the types in your file to take precedence over types in the built-in Types.ps1xml file, add the PrependData parameter of Update-TypeData.</source>
          <target state="translated">Se si desidera che i tipi nel file la precedenza sui tipi di file Types ps1xml incorporate, aggiungere il parametro PrependData di Update-TypeData.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Update-TypeData affects only the current session.</source>
          <target state="translated">Update-TypeData ha effetto solo nella sessione corrente.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>To make the change to all future sessions, export the session, or add the Update-TypeData command to your Windows PowerShell profile.</source>
          <target state="translated">Per apportare la modifica a tutte le sessioni future, esportare la sessione o aggiungere il comando Update-TypeData al profilo di Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Exceptions that occur in properties, or from adding properties to an Update-TypeData command, do not report errors to StdErr.</source>
          <target state="translated">Le eccezioni che si verificano nelle proprietà o di aggiungere proprietà a un comando Update-TypeData, segnalare gli errori in StdErr.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>This is to suppress exceptions that would occur in many common types during formatting and outputting.</source>
          <target state="translated">Ciò serve a sopprimere le eccezioni che si verificherebbero in molti dei tipi più comuni durante la formattazione e l'output.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>If you are getting .NET Framework properties, you can work around the suppression of exceptions by using method syntax instead, as shown in the following example:</source>
          <target state="translated">Se si stanno ottenendo proprietà di .NET Framework, è possibile risolvere l'eliminazione delle eccezioni usando la sintassi del metodo, come illustrato nell'esempio seguente:</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>"hello".get_Length()</source>
          <target state="translated">"hello".get_Length()</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Note that method syntax can only be used with .NET Framework properties.</source>
          <target state="translated">Si noti che la sintassi del metodo può essere usata solo con le proprietà di .NET Framework.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Properties that are added by running the Update-TypeData cmdlet cannot use method syntax.</source>
          <target state="translated">Le proprietà che vengono aggiunte eseguendo il cmdlet Update-TypeData non possono usare la sintassi del metodo.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Signing a Types.ps1xml File</source>
          <target state="translated">Firma di un File Types. ps1xml</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>To protect users of your Types.ps1xml file, you can sign the file using a digital signature.</source>
          <target state="translated">Per proteggere gli utenti del file Types. ps1xml, è possibile firmare il file utilizzando una firma digitale.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>For more information, see about_Signing.</source>
          <target state="translated">Per ulteriori informazioni, vedere about_Signing.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">VEDERE ANCHE</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>about_Signing (http://go.microsoft.com/fwlink/?LinkID=113268) Copy-Item (http://go.microsoft.com/fwlink/?LinkID=113292) Copy-ItemProperty (http://go.microsoft.com/fwlink/?LinkID=113293) Get-Member (http://go.microsoft.com/fwlink/?LinkID=113322) Get-TypeData (http://go.microsoft.com/fwlink/?LinkID=217033) Remove-TypeData (http://go.microsoft.com/fwlink/?LinkID=217038) Update-TypeData (http://go.microsoft.com/fwlink/?LinkID=113421)</source>
          <target state="translated">about_Signing (http://go.microsoft.com/fwlink/?LinkID=113268) Copy-Item (http://go.microsoft.com/fwlink/?LinkID=113292) Copy-ItemProperty (http://go.microsoft.com/fwlink/?LinkID=113293) Get-Member (http://go.microsoft.com/fwlink/?LinkID=113322) Get-TypeData (http://go.microsoft.com/fwlink/?LinkID=217033) Remove-TypeData (http://go.microsoft.com/fwlink/?LinkID=217038) Update-TypeData (http://go.microsoft.com/fwlink/?LinkID=113421)</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>