<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88ae16a21f5a99e7ea61f5ce8c176ed2e24bda8a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\Get-PSBreakpoint.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dcb4990226e8bc872003aa503ed533a72119d92f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b97b19f037f2abe8f70ef46ca2fa0155550e8ac</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-PSBreakpoint</source>
          <target state="translated">Get-PSBreakpoint</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-PSBreakpoint</source>
          <target state="translated">Get-PSBreakpoint</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the breakpoints that are set in the current session.</source>
          <target state="translated">現在のセッションで設定されたブレークポイントを取得します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Script (Default)</source>
          <target state="translated">スクリプト (既定値)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">種類</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">コマンド</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">変数</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Id</source>
          <target state="translated">Id</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The Get-PSBreakPoint cmdlet gets the breakpoints that are set in the current session.</source>
          <target state="translated">Get-PSBreakPoint コマンドレットは、現在のセッションで設定されたブレークポイントを取得します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can use the cmdlet parameters to get particular breakpoints.</source>
          <target state="translated">コマンドレットのパラメーターを使用して、特定のブレークポイントを取得できます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A breakpoint is a point in a command or script where execution stops temporarily so that you can examine the instructions.</source>
          <target state="translated">ブレークポイントとは、実行を一時的に停止して命令を調べることができるようにするための、コマンドまたはスクリプト内のポイントです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Get-PSBreakpoint is one of several cmdlets designed for debugging Windows PowerShell scripts and commands.</source>
          <target state="translated">Get-PSBreakpoint は Windows PowerShell スクリプトおよびコマンドをデバッグするために設計されたコマンドレットの 1 つです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information about the Windows PowerShell debugger, see about_Debuggers.</source>
          <target state="translated">Windows PowerShell のデバッガーの詳細については、「about_Debuggers」を参照してください。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This command gets all breakpoints set on all scripts and functions in the current session.</source>
          <target state="translated">このコマンドは、現在のセッション内のすべてのスクリプトおよび関数に設定されているすべてのブレークポイントを取得します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This command gets the breakpoint with breakpoint ID 2.</source>
          <target state="translated">このコマンドは、ブレークポイント ID が 2 のブレークポイントを取得します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>These commands show how to get a breakpoint by piping a breakpoint ID to Get-PSBreakpoint.</source>
          <target state="translated">パイプを使用してブレークポイント ID を Get-PSBreakpoint に渡してブレークポイントを取得する方法を次のコマンドに示します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The first command uses the Set-PSBreakpoint cmdlet to create a breakpoint on the Increment function in the Sample.ps1 script.</source>
          <target state="translated">最初のコマンドは、Set-PSBreakpoint コマンドレットを使用して、Sample.ps1 スクリプトの Increment 関数にブレークポイントを作成します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>It saves the breakpoint object in the $b variable.</source>
          <target state="translated">ブレークポイント オブジェクトは $b 変数に保存されます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The second command uses the dot operator (.) to get the Id property of the breakpoint object in the $b variable.</source>
          <target state="translated">2 番目のコマンドでは、ドット演算子 (.) を使用して、$b 変数内のブレークポイント オブジェクトの Id プロパティを取得します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the ID to the Get-PSBreakpoint cmdlet.</source>
          <target state="translated">次にパイプライン演算子 (|) を使用して、ID を Get-PSBreakpoint コマンドレットに送信します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>As a result, Get-PSBreakpoint gets the breakpoint with the specified ID.</source>
          <target state="translated">その結果、指定した ID のブレークポイントが取得されます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This command gets all of the breakpoints in the Sample.ps1 and SupportScript.ps1 files.</source>
          <target state="translated">このコマンドは、Sample.ps1 ファイルと SupportScript.ps1 ファイル内のすべてのブレークポイントを取得します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This command does not get other breakpointS that might be set in other scripts or on functions in the session.</source>
          <target state="translated">このコマンドは、セッション内の他のスクリプトまたは関数に設定されているブレークポイントを取得しません。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This command gets all Command breakpoints that are set on Read-Host or Write-Host commands in the Sample.ps1 file.</source>
          <target state="translated">このコマンドは、Sample.ps1 ファイル内の Read-Host コマンドまたは Write-Host コマンドに設定されているすべてのコマンド ブレークポイントを取得します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This command gets all Command breakpoints in the Sample.ps1 file.</source>
          <target state="translated">このコマンドは、Sample.ps1 ファイル内のすべてのコマンド ブレークポイントを取得します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This command gets breakpoints that are set on the $index and $swap variables in the current session.</source>
          <target state="translated">このコマンドは、現在のセッションの $index 変数と $swap 変数に設定されているブレークポイントを取得します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 8 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 8 --------------------------</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This command gets all line and variable breakpoints in the Sample.ps1 script.</source>
          <target state="translated">このコマンドは、Sample.ps1 スクリプト内のすべての行ブレークポイントと変数ブレークポイントを取得します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">パラメータ</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>-Command</source>
          <target state="translated">-Command</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets command breakpoints that are set on the specified command names.</source>
          <target state="translated">指定したコマンド名に設定されているコマンドのブレークポイントを取得します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Enter the command names, such as the name of a cmdlet or function.</source>
          <target state="translated">コマンドレットや関数の名前などのコマンド名を入力します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-Id</source>
          <target state="translated">-Id</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Gets the breakpoints with the specified breakpoint IDs.</source>
          <target state="translated">指定したブレークポイント ID を持つブレークポイントを取得します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Enter the IDs in a comma-separated list.</source>
          <target state="translated">ID をコンマ区切りリスト形式で入力します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You can also pipe breakpoint IDs to Get-PSBreakpoint.</source>
          <target state="translated">パイプを使用してブレークポイント ID を Get-PSBreakpoint に渡すこともできます。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>-Script</source>
          <target state="translated">スクリプト</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets only the breakpoints in the specified scripts.</source>
          <target state="translated">指定したスクリプト内のブレークポイントのみを取得します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Enter the  path (optional) and names of one or more script files.</source>
          <target state="translated">1 つまたは複数のスクリプト ファイルのパス (省略可能) と名前を入力します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you omit the path, the default location is the current directory.</source>
          <target state="translated">パスを省略した場合、現在のディレクトリが既定の場所になります。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>-Type</source>
          <target state="translated">型</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets only breakpoints of the specified types.</source>
          <target state="translated">指定した型のブレークポイントのみを取得します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Enter one or more types.</source>
          <target state="translated">1 つまたは複数の型を入力します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Valid values are Line, Command, and Variable.</source>
          <target state="translated">有効な値は、Line、Command、および Variable です。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You can also pipe breakpoint types to Get-PSBreakpoint.</source>
          <target state="translated">パイプを使用してブレークポイントの型を Get-PSBreakpoint に渡すこともできます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-Variable</source>
          <target state="translated">変数の値</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets variable breakpoints that are set on the specified variable names.</source>
          <target state="translated">指定した変数名に設定されている変数のブレークポイントを取得します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Enter the variable names without dollar signs.</source>
          <target state="translated">ドル記号を付けずに変数名を入力します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">このコマンドレットは、共通のパラメーターをサポートしています:-デバッグ、-erroraction、-errorvariable、- InformationAction-InformationVariable、- OutVariable、-OutBuffer、- PipelineVariable、- Verbose、および - WarningVariable です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">詳細については、about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216) を参照してください。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">入力</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>System.Int32, Microsoft.PowerShell.Commands.BreakpointType</source>
          <target state="translated">System.Int32、Microsoft.PowerShell.Commands.BreakpointType</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can pipe breakpoint IDs and breakpoint types to Get-PSBreakpoint.</source>
          <target state="translated">パイプを使用してブレークポイント ID とブレークポイントの型を Get-PSBreakpoint に渡すこともできます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">出力</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.Breakpoint</source>
          <target state="translated">System.Management.Automation.Breakpoint</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Get-PSBreakPoint returns objects that represent the breakpoints in the session.</source>
          <target state="translated">Get-PSBreakPoint は、セッション内のブレークポイントを表すオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ノート</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>You can use Get-PSBreakpoint or its alias, "gbp".</source>
          <target state="translated">Get-PSBreakpoint またはそのエイリアスである "gbp" を使用できます。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">関連リンク</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Disable-PSBreakpoint</source>
          <target state="translated">Disable-PSBreakpoint</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Enable-PSBreakpoint</source>
          <target state="translated">Enable-PSBreakpoint</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Get-PSCallStack</source>
          <target state="translated">Get-PSCallStack</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Remove-PSBreakpoint</source>
          <target state="translated">Remove-PSBreakpoint</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Set-PSBreakpoint</source>
          <target state="translated">Set-PSBreakpoint</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>about_Debuggers</source>
          <target state="translated">about_Debuggers</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>