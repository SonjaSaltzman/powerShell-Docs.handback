<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">564d9b840eb89fed736cc8461868d6d183c99f05</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\Get-TypeData.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb22de2307bd0e2751b0cf5dba16da93a73a479d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">025015b0fd63591b3fbbfb4582b4df3bde7e7ce1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-TypeData</source>
          <target state="translated">Get-TypeData</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-TypeData</source>
          <target state="translated">Get-TypeData</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the extended type data in the current session.</source>
          <target state="translated">現在のセッションで、拡張型データを取得します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept> cmdlet gets the extended type data in the current session.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept> コマンドレットは、現在のセッションの拡張型データを取得します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This includes type data that was added to the session by Types.ps1xml file and dynamic type data that was added by using the parameter of the Update-TypeData cmdlet.</source>
          <target state="translated">これには、Types.ps1xml ファイルによってセッションに追加された型のデータと Update-typedata コマンドレットのパラメーターを使用して追加されたデータを動的な型が含まれます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can use the extended type data that <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept> returns to examine the type data in the session and send it to the <bpt id="p2">**</bpt>Update-TypeData<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Remove-TypeData<ept id="p3">**</ept> cmdlets.</source>
          <target state="translated">拡張型データを使用することができますを <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept> を返します。 セッションの種類のデータを検査し、を送信する、 <bpt id="p2">**</bpt>Update-typedata<ept id="p2">**</ept> と <bpt id="p3">**</bpt>Remove-typedata<ept id="p3">**</ept> コマンドレットです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Extended type data adds properties and methods to objects in Windows PowerShell.</source>
          <target state="translated">拡張型データは、Windows PowerShell 内のオブジェクトにプロパティとメソッドを追加します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can use the added properties and methods in the same ways that you would use the properties and methods that are defined in the object type.</source>
          <target state="translated">その追加されたプロパティとメソッドを、オブジェクトの型によって決定されるプロパティとメソッドを使用するのと同じ方法で使用することができます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>However, when writing scripts, be aware that the added properties and methods might not be present in every Windows PowerShell session.</source>
          <target state="translated">ただし、スクリプトを記述する際は、追加されたプロパティおよびメソッドは、すべての Windows PowerShell セッションに存在しているとは限らないことに注意してください。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information about Types.ps1xml files, see about_Types.ps1xml (http://go.microsoft.com/fwlink/?LinkID=113274).</source>
          <target state="translated">Types.ps1xml ファイルの詳細については、about_Types.ps1xml (http://go.microsoft.com/fwlink/?LinkID=113274) を参照してください。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information about dynamic type data that the <bpt id="p1">**</bpt>Update-TypeData<ept id="p1">**</ept> cmdlet adds, see Update-TypeData.</source>
          <target state="translated">動的な型のデータの詳細についてを <bpt id="p1">**</bpt>Update-typedata<ept id="p1">**</ept> Update-typedata コマンドレットは、次の追加を参照してください。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This cmdlet is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">このコマンドレットは、Windows PowerShell 3.0 で導入されました。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example 1</source>
          <target state="translated">例 1</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This command gets all extended type data in the current session.</source>
          <target state="translated">このコマンドは、現在のセッションのすべて拡張型データを取得します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example 2</source>
          <target state="translated">例 2</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This command gets all types in the current session that have names that contain "Eventing".</source>
          <target state="translated">このコマンドは、現在のセッションで、"Eventing" を含む名前を持つすべての型を取得します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>1:</source>
          <target state="translated">1:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This command gets the script block that creates the value of the <bpt id="p1">**</bpt>EventID<ept id="p1">**</ept> property of <bpt id="p2">**</bpt>EventLogEntry<ept id="p2">**</ept> objects.</source>
          <target state="translated">このコマンドの値を作成するスクリプト ブロックの取得、 <bpt id="p1">**</bpt>EventID<ept id="p1">**</ept> プロパティの <bpt id="p2">**</bpt>EventLogEntry<ept id="p2">**</ept> のオブジェクト。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example 3</source>
          <target state="translated">例 3</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This command gets the script block that defines the <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> property of <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> objects in Windows PowerShell.</source>
          <target state="translated">このコマンドを定義するスクリプト ブロックの取得、 <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> の <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> Windows PowerShell でのオブジェクト。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept> cmdlet to get the extended type data for the <bpt id="p2">**</bpt>System.DataTime<ept id="p2">**</ept> type.</source>
          <target state="translated">このコマンドは、 <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept> 拡張型データを取得するコマンドレット、 <bpt id="p2">**</bpt>System.DataTime<ept id="p2">**</ept> 型です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The command gets the <bpt id="p1">**</bpt>Members<ept id="p1">**</ept> property of the <bpt id="p2">**</bpt>TypeData<ept id="p2">**</ept> object.</source>
          <target state="translated">コマンドは、取得、 <bpt id="p1">**</bpt>メンバー<ept id="p1">**</ept> のプロパティ、 <bpt id="p2">**</bpt>TypeData<ept id="p2">**</ept> オブジェクトです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Members<ept id="p1">**</ept> property contains  a hash table of properties and methods that are defined by extended type data.</source>
          <target state="translated"> <bpt id="p1">**</bpt>メンバー<ept id="p1">**</ept> プロパティには、プロパティと拡張型データによって定義されているメソッドのハッシュ テーブルが含まれています。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Each key in the Members hash table is a property or method name and each value is the definition of the property or method value.</source>
          <target state="translated">Members ハッシュ テーブルの各キーは、プロパティ名またはメソッド名であり、各値は、プロパティ値またはメソッド値の定義です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command gets the <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> key in Members and its <bpt id="p2">**</bpt>GetScriptBlock<ept id="p2">**</ept> property value.</source>
          <target state="translated">コマンドは、取得、 <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> メンバーのキーとその <bpt id="p2">**</bpt>GetScriptBlock<ept id="p2">**</ept> プロパティの値。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The output shows the script block that creates the value of the <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> property of every <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> object in Windows PowerShell.</source>
          <target state="translated">出力の値を作成するスクリプト ブロックには、 <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> のプロパティすべて <bpt id="p2">**</bpt>System.DateTime<ept id="p2">**</ept> Windows PowerShell 内のオブジェクト。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Example 4</source>
          <target state="translated">例 4</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This command finds the Types.ps1xml file that added extended type data for the <bpt id="p1">**</bpt>EventLogEntry<ept id="p1">**</ept> type to the session.</source>
          <target state="translated">このコマンドは、拡張型データを追加した Types.ps1xml ファイルを検索、 <bpt id="p1">**</bpt>EventLogEntry<ept id="p1">**</ept> セッションへの型。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> cmdlet (alias = "dir") to perform a recursive search for Types.ps1xml files in the Windows PowerShell installation directory ($pshome) and its subdirectories.</source>
          <target state="translated">このコマンドを使用して、 <bpt id="p1">**</bpt>Get-childitem<ept id="p1">**</ept> コマンドレット (エイリアス ="dir") を Windows PowerShell のインストール ディレクトリ ($pshome) とそのサブディレクトリに Types.ps1xml ファイルの再帰検索を実行します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The command sends the Types.ps1xml files to the Select-String cmdlet, which does a full-text search for the "<bpt id="p1">**</bpt>EventLogEntry<ept id="p1">**</ept>" type name in the files and returns the matches.</source>
          <target state="translated">コマンドでは、Types.ps1xml ファイルを送信するは、フルテキスト検索、Select-string コマンドレットに、"<bpt id="p1">**</bpt>EventLogEntry<ept id="p1">**</ept>"型名でファイルとの一致項目を返します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">パラメータ</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-TypeName</source>
          <target state="translated">型名</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets type data only for the types with the specified names.</source>
          <target state="translated">指定された名前を持つ型の型データのみを取得します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept> gets all types in the session.</source>
          <target state="translated">既定では、 <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept> セッション内のすべての種類を取得します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Enter type names or a name patterns.</source>
          <target state="translated">型の名前または名前パターンを入力します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Full names (or name patterns with wildcard characters) are required, even for types in the System namespace.</source>
          <target state="translated">System 名前空間の型であっても、完全な名前 (またはワイルドカード文字を使用した名前パターン) が必要です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Wildcards are supported and the parameter name (-TypeName) is optional.</source>
          <target state="translated">ワイルドカードはサポートされており、パラメーター名 (-TypeName) は省略可能です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can also pipe type names to <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept>.</source>
          <target state="translated">型名をパイプすることも <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept>します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">このコマンドレットは、共通のパラメーターをサポートしています:-デバッグ、-erroraction、-errorvariable、- InformationAction-InformationVariable、- OutVariable、-OutBuffer、- PipelineVariable、- Verbose、および - WarningVariable です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">詳細については、about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216) を参照してください。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">入力</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can pipe type names to <bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept>.</source>
          <target state="translated">型名をパイプ処理できます <bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept>します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">出力</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.Runspaces.TypeData</source>
          <target state="translated">System.Management.Automation.Runspaces.TypeData</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ノート</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get-TypeData<ept id="p1">**</ept> gets only the extended type data in the current session.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-typedata<ept id="p1">**</ept> 、現在のセッションの拡張型データのみを取得します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>It does not get extended type data that is on the computer, but has not been added to the current session, such as extended types that are defined in modules that have not been imported into the current session.</source>
          <target state="translated">このコマンドレットは、モジュールに定義されている一方で現在のセッションにインポートされていない拡張型のように、コンピューター上に存在していて現在のセッションに追加されていない拡張型データは取得しません。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">関連リンク</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>about_Types.ps1xml</source>
          <target state="translated">about_Types.ps1xml</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Remove-TypeData</source>
          <target state="translated">Remove-TypeData</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Update-TypeData</source>
          <target state="translated">Update-TypeData</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>