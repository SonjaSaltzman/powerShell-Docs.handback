<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">79a1c45c98ec51717e2cdc325b14b0c18e81ded7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Get-Variable.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">48f9778f379951511bcfd1048e61d996522a980c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b536cb600289e1405885ecd8aa96870a182b66d1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Get-Variable</source>
          <target state="translated">Get-Variable</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get-Variable</source>
          <target state="translated">Get-Variable</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the variables in the current console.</source>
          <target state="translated">現在のコンソール内の変数を取得します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get-Variable<ept id="p1">**</ept> cmdlet gets the Windows PowerShell variables in the current console.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Get-variable<ept id="p1">**</ept> コマンドレットは、現在のコンソールから Windows PowerShell 変数を取得します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can retrieve just the values of the variables by specifying the <bpt id="p1">*</bpt>ValueOnly<ept id="p1">*</ept> parameter, and you can filter the variables returned by name.</source>
          <target state="translated">変数の値だけを取得するには指定することによって、 <bpt id="p1">*</bpt>ValueOnly<ept id="p1">*</ept> パラメーター、名前によって返される変数をフィルター処理できます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Example 1: Get variables by letter</source>
          <target state="translated">例 1: 文字で変数を取得します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This command gets variables with names that begin with the letter m.</source>
          <target state="translated">このコマンドは、m という文字で始まる名前の変数を取得します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The command also gets the value of the variables.</source>
          <target state="translated">コマンドは、変数の値も取得します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example 2: Get variable values by letter</source>
          <target state="translated">例 2: 文字で変数の値を取得します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This command gets only the values of the variables that have names that begin with m.</source>
          <target state="translated">このコマンドは、m で始まる名前を持つ変数の値のみを取得します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Example 3: Get variables by two letters</source>
          <target state="translated">例 3: 2 つの文字で変数を取得します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This command gets information about the variables that begin with either the letter M or the letter P.</source>
          <target state="translated">このコマンドは、文字 M または p.、文字のいずれかで始まる変数に関する情報を取得します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Example 4: Get variables by scope</source>
          <target state="translated">例 4: スコープで変数を取得します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The first command gets only the variables that are defined in the local scope.</source>
          <target state="translated">最初のコマンドは、ローカル スコープで定義されている変数のみを取得します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It is equivalent to <ph id="ph1">`Get-Variable -Scope Local`</ph> and can be abbreviated as <ph id="ph2">`gv -s 0`</ph>.</source>
          <target state="translated">同じになります <ph id="ph1">`Get-Variable -Scope Local`</ph> ように短縮できますと <ph id="ph2">`gv -s 0`</ph>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The second command uses the Compare-Object cmdlet to find the variables that are defined in the parent scope (Scope 1) but are visible only in the local scope (Scope 0).</source>
          <target state="translated">2 番目のコマンドでは、Compare-object コマンドレットを使用して、親スコープ (スコープ 1) で定義されている変数を検索するが、ローカル スコープ (スコープ 0) でのみ表示されます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">パラメータ</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-Exclude</source>
          <target state="translated">-除外します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Specifies an array of items that this cmdlet excludes from the operation.</source>
          <target state="translated">このコマンドレットでは、操作から除外する項目の配列を指定します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">ワイルドカードを使用できます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>-Include</source>
          <target state="translated">-Include します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Specifies an array of items upon which the cmdlet will act, excluding all others.</source>
          <target state="translated">処理対象とするコマンドレットは、他のすべてのユーザーを除外する項目の配列を指定します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">ワイルドカードを使用できます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Specifies the name of the variable.</source>
          <target state="translated">変数の名前を指定します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">ワイルドカードを使用できます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You can also pipe a variable name to <bpt id="p1">**</bpt>Get-Variable<ept id="p1">**</ept>.</source>
          <target state="translated">変数名を指定をパイプすることもできます。 <bpt id="p1">**</bpt>Get-variable<ept id="p1">**</ept>します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-Scope</source>
          <target state="translated">スコープ</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Specifies the variables in the scope.</source>
          <target state="translated">スコープ内の変数を指定します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">このパラメーターに対して使用できる値:</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Global</source>
          <target state="translated">グローバル</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Local</source>
          <target state="translated">ローカル</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Script</source>
          <target state="translated">スクリプト</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A number relative to the current scope (0 through the number of scopes, where 0 is the current scope and 1 is its parent)</source>
          <target state="translated">現在のスコープ (0 ~ 0 は、現在のスコープは、1 はその親のスコープの数) の相対的な数値</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Local is the default.</source>
          <target state="translated">ローカルでは、既定値です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For more information, see about_Scopes.</source>
          <target state="translated">詳細については、「about_Scopes」を参照してください。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-ValueOnly</source>
          <target state="translated">-ValueOnly</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet gets only the value of the variable.</source>
          <target state="translated">このコマンドレットが、変数の値のみを取得することを示します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">このコマンドレットは、共通のパラメーターをサポートしています:-デバッグ、-erroraction、-errorvariable、- InformationAction-InformationVariable、- OutVariable、-OutBuffer、- PipelineVariable、- Verbose、および - WarningVariable です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">詳細については、about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216) を参照してください。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">入力</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can pipe a string that contains the variable name to <bpt id="p1">**</bpt>Get-Variable<ept id="p1">**</ept>.</source>
          <target state="translated">変数の名前を含む文字列をパイプする <bpt id="p1">**</bpt>Get-variable<ept id="p1">**</ept>します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">出力</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSVariable</source>
          <target state="translated">System.Management.Automation.PSVariable</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This cmdlet returns a <bpt id="p1">**</bpt>System.Management.AutomationPSVariable<ept id="p1">**</ept> object for each variable that it gets.</source>
          <target state="translated">このコマンドレットが返す、 <bpt id="p1">**</bpt>System.Management.AutomationPSVariable<ept id="p1">**</ept> は、取得した各変数のオブジェクト。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The object type depends on the variable.</source>
          <target state="translated">オブジェクトの型は変数に依存します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ノート</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This cmdlet does not manage environment variables.</source>
          <target state="translated">このコマンドレットは、環境変数を管理しません。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To manage environment variables, you can use the environment variable provider.</source>
          <target state="translated">環境変数を管理するには、環境変数プロバイダーを使用します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">関連リンク</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Clear-Variable</source>
          <target state="translated">Clear-Variable</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>New-Variable</source>
          <target state="translated">New-Variable</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Remove-Variable</source>
          <target state="translated">Remove-Variable</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Set-Variable</source>
          <target state="translated">Set-Variable</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>