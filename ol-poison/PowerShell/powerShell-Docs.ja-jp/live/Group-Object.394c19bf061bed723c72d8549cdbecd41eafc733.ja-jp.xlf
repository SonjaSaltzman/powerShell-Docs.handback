<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7e781182cce27daf828a0d6c60a412c01f1d3eb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\Group-Object.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">46b60d36655cafa6e658ae82b2c816993538cc8f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aef0977d162b6cc320ee684e7bbcfeea289483da</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Group-Object</source>
          <target state="translated">Group-Object</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Group-Object</source>
          <target state="translated">Group-Object</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Groups objects that contain the same value for specified properties.</source>
          <target state="translated">指定したプロパティに対して同じ値を含むオブジェクトをグループ化します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Group-Object cmdlet displays objects in groups based on the value of a specified property.</source>
          <target state="translated">Group-Object コマンドレットは、指定したプロパティの値に基づいてグループ内のオブジェクトを表示します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Group-Object returns a table with one row for each property value and a column that displays the number of items with that value.</source>
          <target state="translated">Group-Object は、プロパティ値ごとに 1 行ずつ、および項目数とその値を表示する列を含むテーブルを返します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you specify more than one property, Group-Object first groups them by the values of the first property, and then, within each property group, it groups by the value of the next property.</source>
          <target state="translated">1 つ以上のプロパティを指定すると、Group-Object は、まず最初のプロパティの値別にそれらをグループ化し、次に、各プロパティ グループ内で次のプロパティの値別にグループ化します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This command gets the files in the current location that have a .doc extension and groups them by size.</source>
          <target state="translated">このコマンドは、現在の場所にある .doc 拡張子を持つファイルを取得し、サイズ別にグループ化します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This command gets the files in the current location, sorts them by file name extension, and then groups them by file name extension.</source>
          <target state="translated">このコマンドは、現在の場所にあるファイルを取得し、それらをファイル名の拡張子で並べ替えてから、ファイル名拡張子別にグループ化します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Note that the files are sorted before they are grouped.</source>
          <target state="translated">グループ化する前に、ファイルが並べ替えられる点に注意してください。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This example shows how to use script blocks as the value of the Property parameter.</source>
          <target state="translated">この例は、Property パラメーターの値としてスクリプト ブロックを使用する方法を示しています。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This command displays the integers from 1 to 35, grouped by the remainder left when they are divided by 2 or 3.</source>
          <target state="translated">このコマンドは、2 または 3 で除算したときの剰余によってグループ化された 1 から 35 までの整数を表示します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>These commands display the 1,000 most recent entries in the System event log, grouped by Event ID.</source>
          <target state="translated">これらのコマンドは、イベント ID によってグループ化された、システム イベント ログ内の最新の 1,000 個のエントリを表示します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-EventLog cmdlet to retrieve the events and the assignment operator (=) to save them in the $events variable.</source>
          <target state="translated">最初のコマンドは、Get-EventLog コマンドレットを使用してイベントと代入演算子 (=) を取得し、それらを $events 変数に保存します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The second command uses a pipeline operator (|) to send the events in the $events variable to the Group-Object cmdlet.</source>
          <target state="translated">2 番目のコマンドは、パイプライン演算子 (|) を使用して $events 変数内のイベントを Group-Object コマンドレットに送信します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The command uses the Property parameter to specify that the events should be grouped according to the value of their EventID property.</source>
          <target state="translated">コマンドは、Property パラメーターを使用して、イベントを EventID プロパティの値に従ってグループ化するように指定します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In the output, the Count column represents the number of entries in each group, the Name column represents the EventID values that define a group, and the Group column represents the objects in each group.</source>
          <target state="translated">出力では、Count 列に各グループ内のエントリ数、Name 列にグループを定義する EventID 値、および Group 列に各グループ内のオブジェクトが示されます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This example demonstrates the effect of the NoElement parameter.</source>
          <target state="translated">この例は、NoElement パラメーターの影響を示しています。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>These commands group the processes on the computer by priority class.</source>
          <target state="translated">これらのコマンドは、コンピューター上のプロセスを優先度クラス別にグループ化します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Process cmdlet to get the processes on the computer.</source>
          <target state="translated">最初のコマンドは、Get-Process コマンドレットを使用してコンピューター上のプロセスを取得します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the results to Group-Object, which groups the objects by the value of the PriorityClass property of the process.</source>
          <target state="translated">パイプライン演算子 (|) を使用して、プロセスの PriorityClass プロパティの値別にオブジェクトをグループ化する Group-Object に結果を送信します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The second command is identical to the first, except that it uses the NoElement parameter to eliminate the members of the group from the output.</source>
          <target state="translated">2 番目のコマンドは、NoElement パラメーターを使用して出力からグループのメンバーを除去する点を除いて、最初のコマンドと同じです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The result is a table with only the count and property value name.</source>
          <target state="translated">結果は、数とプロパティ値名のみを含むテーブルになります。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">次のサンプル出力に結果を示します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This command demonstrates how to provide the value of the Property parameter as a script block.</source>
          <target state="translated">このコマンドは、スクリプト ブロックとして、Property パラメーターの値を提供する方法を示します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This command displays the most recent 1,000 entries from the system event log, grouped according to the time between when they were generated and when they were written to the log.</source>
          <target state="translated">このコマンドは、生成された時点からログに書き込まれた時点までの時間に従ってグループ化された、システム イベント ログの最新の 1,000 エントリを表示します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The command uses the Get-EventLog cmdlet to get the event log entries.</source>
          <target state="translated">コマンドは、Get-EventLog コマンドレットを使用して、イベント ログ エントリを取得します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the entries to the Group-Object cmdlet.</source>
          <target state="translated">パイプライン演算子 (|) を使用して、エントリを Group-Object コマンドレットに送信します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The value of the Property parameter is specified as a script block (an expression in braces).</source>
          <target state="translated">Property パラメーターの値は、スクリプト ブロック (波かっこ内の式) として指定されます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The result of evaluating the script block is the time between when the log entry was generated and when it was written to the log.</source>
          <target state="translated">スクリプト ブロックの評価結果は、ログ エントリが生成された時点からログに書き込まれた時点までの時間です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>That value is used to group the 1,000 most recent events.</source>
          <target state="translated">その値は、1,000 件の最新のイベントをグループ化するためにに使用されます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This command groups the items in the current directory by file name extension.</source>
          <target state="translated">このコマンドは、ファイル名拡張子別に、現在のディレクトリ内の項目をグループ化します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>It uses the NoElement parameter to omit the members of the group.</source>
          <target state="translated">NoElement パラメーターを使用して、グループのメンバーを省略します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">次のサンプル出力に結果を示します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 8 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 8 --------------------------</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This example shows how to find the unique and non-unique (repeated) property values in a collection.</source>
          <target state="translated">この例は、コレクション内で一意のプロパティ値と一意でない (繰り返される) プロパティ値を検索する方法を示します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The first command gets the unique elements of an array by piping the array to the Get-Unique cmdlet.</source>
          <target state="translated">最初のコマンドは、パイプを使用して配列を Get-Unique コマンドレットに渡すことで、配列の一意の要素を取得します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The second command gets the non-unique elements of an array.</source>
          <target state="translated">2 番目のコマンドは、配列の一意でない要素を取得します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It pipes the array to the Group-Object cmdlet, which groups the objects by value.</source>
          <target state="translated">パイプを使用して、値別にオブジェクトをグループ化する Group-Object コマンドレットに配列を渡します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The resulting groups are piped to the Where-Object cmdlet, which selects objects with groups with more than one member.</source>
          <target state="translated">結果のグループはパイプを使用して Where-Object コマンドレットに渡されます。このコマンドレットは、2 つ以上のメンバーを含むグループを持つオブジェクトを選択します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The third command shows a practical use for this technique.</source>
          <target state="translated">3 番目のコマンドは、この技法のための実用的な使用法を示しています。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>It uses the same method to find processes on the computer that have the same process name.</source>
          <target state="translated">同じメソッドを使用して、コンピューター上で同じプロセス名のプロセスを検索します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">次のサンプル出力に結果を示します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 9 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 9 --------------------------</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This example uses the AsHashTable and AsString parameters to return the groups in a hash table, that is, as a collection of key-value pairs.</source>
          <target state="translated">この例では、AsHashTable と AsString パラメーターを使用して、ハッシュ テーブル内のグループを、キーと値のペアのコレクションとして返します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the resulting hash table, each property value is a key, and the group elements are the values.</source>
          <target state="translated">結果のハッシュ テーブルでは、各プロパティ値がキーで、グループの要素が値です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Because each key is a property of the hash table object, you can use dot notation to display the values.</source>
          <target state="translated">各キーがハッシュ テーブルのオブジェクトのプロパティであるため、ドット表記を使用して値を表示します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The first command gets the Get and Set cmdlets in the session, groups them by verb, returns the groups as a hash table, and saves the hash table in the $a variable.</source>
          <target state="translated">最初のコマンドは、セッションの Get および Set コマンドレットを取得し、動詞別にグループ化して、グループをハッシュ テーブルとして返し、ハッシュ テーブルを $a 変数に保存します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The second command displays the hash table in $a.</source>
          <target state="translated">2 番目のコマンドは、$a にハッシュ テーブルを表示します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>There are two key-value pairs, one for the Get cmdlets and one for the Set cmdlets.</source>
          <target state="translated">コマンドレットについては、Get と Set コマンドレットの 2 つのキー/値ペアがあります。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The third command uses dot notation to display the values of the Get key in $a.</source>
          <target state="translated">3 番目のコマンドはドット表記を使用して $ の Get キーの値を表示します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The values are CmdletInfo object.</source>
          <target state="translated">値は、CmdletInfo オブジェクトです。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The AsString parameter does not convert the objects in the groups to strings.</source>
          <target state="translated">AsString パラメーターは、グループ内のオブジェクトを文字列に変換しません。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">パラメータ</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-AsHashTable</source>
          <target state="translated">-AsHashTable</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Returns the group as a hash table.</source>
          <target state="translated">グループをハッシュ テーブルとして返します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The keys of the hash table are the property values by which the objects are grouped.</source>
          <target state="translated">ハッシュ テーブルのキーは、オブジェクトをグループ化するためのプロパティの値です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The values of the hash table are the objects that have that property value.</source>
          <target state="translated">ハッシュ テーブルの値は、そのプロパティ値を含むオブジェクトです。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>By itself, the AsHashTable parameter returns each hash table in which each key is an instance of the grouped object.</source>
          <target state="translated">単独で、AsHashTable パラメーターは各ハッシュ テーブルを返します。ハッシュ テーブルでは、各キーがグループ化されたオブジェクトのインスタンスとなっています。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>When used with the  AsString parameter, the keys in the hash table are strings.</source>
          <target state="translated">AsString パラメーターと共に使用する場合、ハッシュ テーブル内のキーは文字列です。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-AsString</source>
          <target state="translated">-AsString</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Converts the hash table keys to strings.</source>
          <target state="translated">ハッシュ テーブルのキーを文字列に変換します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>By default, the hash table keys are instances of the grouped object.</source>
          <target state="translated">既定では、ハッシュ テーブルのキーは、グループ化されたオブジェクトのインスタンスです。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when used with the AsHashTable parameter.</source>
          <target state="translated">このパラメーターは、AsHashTable パラメーターと共に使用する場合にのみ有効です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-CaseSensitive</source>
          <target state="translated">-CaseSensitive</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Makes the grouping case-sensitive.</source>
          <target state="translated">グループ化において大文字と小文字を区別します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Without this parameter, the property values of objects in a group might have different cases.</source>
          <target state="translated">このパラメーターを指定しない場合、グループ内のオブジェクトのプロパティ値は大文字と小文字が区別されません。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>-Culture</source>
          <target state="translated">カルチャ</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Specifies the culture to use when comparing strings.</source>
          <target state="translated">文字列を比較するときに使用するカルチャを指定します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-Inputobject</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Specifies the objects to group.</source>
          <target state="translated">オブジェクトをグループに指定します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">オブジェクトが格納されている変数を入力するか、オブジェクトを取得するコマンドまたは式を入力します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When you use the InputObject parameter to submit a collection of objects to Group-Object, Group-Object receives one object that represents the collection.</source>
          <target state="translated">InputObject パラメーターを使用してオブジェクトのコレクションを　Group-Object　に送信すると、Group-Object はコレクションを表す 1 つのオブジェクトを受け取ります。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>As a result, it creates a single group with that object as its member.</source>
          <target state="translated">その結果、そのオブジェクトをメンバーとする単一のグループを作成します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To group the objects in a collection, pipe the objects to Group-Object.</source>
          <target state="translated">コレクション内のオブジェクトをグループ化するには、パイプを使用してオブジェクトを Group-Object に渡します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-NoElement</source>
          <target state="translated">-NoElement</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Omits the members of a group from the results.</source>
          <target state="translated">結果からグループのメンバーを除外します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-Property</source>
          <target state="translated">-プロパティ</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Specifies the properties for grouping.</source>
          <target state="translated">グループ化のためのプロパティを指定します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The objects are arranged into groups based on the value of the specified property.</source>
          <target state="translated">オブジェクトは、指定したプロパティの値に基づいてグループに配置されます。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The value of the Property parameter can be a new calculated property.</source>
          <target state="translated">Property パラメーターの値として、新しい集計プロパティを使用できます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To create a calculated, property, create a hash table with an Expression key that specifies a string or script block value.</source>
          <target state="translated">計算されたプロパティを作成するには、文字列またはスクリプト ブロックの値を指定する Expression キーを伴うハッシュ テーブルを作成します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">このコマンドレットは、共通のパラメーターをサポートしています:-デバッグ、-erroraction、-errorvariable、- InformationAction-InformationVariable、- OutVariable、-OutBuffer、- PipelineVariable、- Verbose、および - WarningVariable です。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">詳細については、about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216) を参照してください。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">入力</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You can pipe any object to Group-Object</source>
          <target state="translated">パイプを使用して任意のオブジェクトを Group-Object に渡すことができます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">出力</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Microsoft.PowerShell.Commands.GroupInfo or System.Collections.Hashtable</source>
          <target state="translated">Microsoft.PowerShell.Commands.GroupInfo または System.Collections.Hashtable</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>When you use the AsHashTable parameter, Group-Object returns a hash table.</source>
          <target state="translated">AsHashTable パラメーターを使用すると、Group-Object はハッシュ テーブルを返します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns a GroupInfo object.</source>
          <target state="translated">それ以外の場合は、GroupInfo オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ノート</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can also use the GroupBy parameter of the formatting cmdlets (such as Format-Table <ph id="ph1">\[</ph>m2<ph id="ph2">\]</ph> and Format-List <ph id="ph3">\[</ph>m2<ph id="ph4">\]</ph>) to group objects.</source>
          <target state="translated">書式設定コマンドレットの GroupBy パラメーターを使用することもできます (Format-table など <ph id="ph1">\[</ph>m2<ph id="ph2">\]</ph> と Format-list <ph id="ph3">\[</ph>m2<ph id="ph4">\]</ph>) をグループ オブジェクトにします。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Unlike Group-Object, which creates a single table with a row for each property value, the GroupBy parameters create a table for each property value with a row for each item that has the property value.</source>
          <target state="translated">プロパティ値ごとに 1 行ずつの単一のテーブルを作成する Group-Object　とは異なり、GroupBy パラメーターは、プロパティ値を持つ項目ごとに 1 行ずつのテーブルをプロパティ値ごとに作成します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Group-Object does not require that the objects being grouped be of the same Microsoft .NET Framework type.</source>
          <target state="translated">Group-Object では、グループ化されるオブジェクトが同じ Microsoft .NET Framework 型である必要はありません。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>When grouping objects of different .NET Framework types, Group-Object uses the following rules:</source>
          <target state="translated">異なる .NET Framework 型のオブジェクトをグループ化する場合、Group-Object は次の規則を使用します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Same Property Names and Types: If the objects have a property with the specified name, and the property values have the same .NET Framework type, the property values are grouped by using the same rules that would be used for objects of the same type.</source>
          <target state="translated">同じプロパティ名と型: プロパティの値が同じ型のオブジェクトのために使用される同じ規則を使用してグループ化、オブジェクトが指定した名前のプロパティがあるプロパティの値が同じ .NET Framework 型である場合は、です。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Same Property Names, Different Types: If the objects have a property with the specified name, but the property values have a different .NET Framework type in different objects, Group-Object uses the .NET Framework type of the first occurrence of the property as the .NET Framework type for that property group.</source>
          <target state="translated">プロパティ名が同じ、さまざまな種類: 場合は、オブジェクトが指定した名前のプロパティがあるプロパティの値が異なるオブジェクトに異なる .NET Framework 型を持つ、グループ オブジェクトを使用してプロパティの最初に見つかった位置の .NET Framework 型 .NET Framework の型としてそのプロパティ グループのです。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>When an object has a property with a different type, the property value is converted to the type for that group.</source>
          <target state="translated">オブジェクトに異なる型のプロパティがある場合、プロパティ値は、そのグループの型に変換されます。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>If the type conversion fails, the object is not included in the group.</source>
          <target state="translated">型変換に失敗した場合、オブジェクトはグループに含まれません。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Missing Properties: Objects that do not have a specified property are considered ungroupable.</source>
          <target state="translated">プロパティが指定されていません: オブジェクト、指定したプロパティがないと見なされるグループ化不能です。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Ungroupable objects appear in the final GroupInfo object output in a group named AutomationNull.Value.</source>
          <target state="translated">グループ化不能なオブジェクトは、AutomationNull.Value という名前のグループの GroupInfo オブジェクトの最終出力に表示されます。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">関連リンク</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>