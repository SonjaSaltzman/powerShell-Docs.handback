<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ff7448deee9ed3ca146ab33c78736cf40693535</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\Import-Clixml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d35fb31a5eca6720027e4c61404e3bbc177ef3e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cdba758bf53c11a3af8c1b3e972df3c22131f02c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Import-Clixml</source>
          <target state="translated">Import-clixml</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Import-Clixml</source>
          <target state="translated">Import-clixml</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Imports a CLIXML file and creates corresponding objects within Windows PowerShell.</source>
          <target state="translated">CLIXML ファイルをインポートし、Windows PowerShell 内で対応するオブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ByPath (Default)</source>
          <target state="translated">ByPath (既定値)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ByLiteralPath</source>
          <target state="translated">ByLiteralPath</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Import-Clixml cmdlet imports a CLIXML file with data that represents Microsoft .NET Framework objects and creates the objects in Windows PowerShell.</source>
          <target state="translated">Import-Clixml コマンドレットは、Microsoft .NET Framework オブジェクトを表すデータと共に CLIXML ファイルをインポートし、Windows PowerShell 内でオブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A valuable use of Import-CliXml is to import credentials and secure strings that have been exported as secure XML by running the Export-CliXml cmdlet.</source>
          <target state="translated">Import-clixml の効果的な使用は、資格情報と Export-clixml コマンドレットを実行してセキュリティで保護された XML としてエクスポートされているセキュリティで保護された文字列をインポートします。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For an example of how to do this, see Example 2 in this topic.</source>
          <target state="translated">これを行う方法の例は、このトピックの例 2 を参照してください。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This command uses the Export-Clixml cmdlet to save a serialized copy of the process information returned by Get-Process.</source>
          <target state="translated">このコマンドは、Export-clixml コマンドレットを使用して、Get-process によって返されるプロセス情報のシリアル化されたコピーを保存します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It then uses Import-Clixml to retrieve the contents of the serialized file and re-create an object that is stored in the $processes variable.</source>
          <target state="translated">その後、Import-Clixml を使用してシリアル化されたファイルの内容を取得し、$processes 変数に格納されているオブジェクトを再作成します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The Export-CliXml cmdlet encrypts credential objects by using the Windows Data Protection APIhttp://msdn.microsoft.com/library/windows/apps/xaml/hh464970.aspx.</source>
          <target state="translated">Export-clixml コマンドレットは、Windows データ保護 APIhttp://msdn.microsoft.com/library/windows/apps/xaml/hh464970.aspx を使用して、資格情報オブジェクトを暗号化します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This ensures that only your user account can decrypt the contents of the credential object.</source>
          <target state="translated">これにより、自分のユーザー アカウントに資格情報オブジェクトの内容が復号化できます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In this example, given a credential that you've stored in the $credential variable by running the Get-Credential cmdlet, you can run the Export-CliXml cmdlet to save the credential to disk.In the example, the file in which the credential is stored is represented by TestScript.ps1.credential.</source>
          <target state="translated">Get-credential コマンドレットを実行して $credential 変数に保存された資格情報を指定された、この例では、資格情報をディスクに保存する Export-clixml コマンドレットを実行できます。例では、資格情報が格納されているファイルは TestScript.ps1.credential によって表されます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Replace TestScript with the name of the script with which you are loading the credential.</source>
          <target state="translated">TestScript を使用するには、資格情報を読み込んでいるスクリプトの名前に置き換えます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In the second command, you pipe the credential object to Export-CliXml, and save it to the path, $credxmlpath, that you specified in the first command.</source>
          <target state="translated">2 番目のコマンドは、資格情報オブジェクトを Export-clixml コマンドレットにパイプ処理し、最初のコマンドで指定した $credxmlpath、パスに保存します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To import the credential automatically into your script, run the final two commands.</source>
          <target state="translated">スクリプト内に資格情報を自動的にインポートするには、最後の 2 つのコマンドを実行します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This time, you are running Import-CliXml to import the secured credential object into your script.</source>
          <target state="translated">今回は、スクリプト内にセキュリティで保護された資格情報オブジェクトをインポートするには、Import-clixml を実行しています。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This eliminates the risk of exposing plain-text passwords in your script.</source>
          <target state="translated">これにより、スクリプトでプレーン テキスト パスワードが漏えいするリスクがなくなります。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">パラメータ</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Specifies the XML files.</source>
          <target state="translated">XML ファイルを指定します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">– LiteralPath</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Specifies the XML files.</source>
          <target state="translated">XML ファイルを指定します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">**</bpt>Path<ept id="p1">**</ept>, the value of the <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> parameter is used exactly as it is typed.</source>
          <target state="translated">異なり <bpt id="p1">**</bpt>パス<ept id="p1">**</ept>, の値、 <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> は入力したとおりにパラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">ワイルドカードとして解釈される文字はありません。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">パスにエスケープ文字が含まれている場合は、単一引用符で囲みます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">単一引用符で囲んだ文字はエスケープ シーケンスとして解釈されません。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-First</source>
          <target state="translated">優先</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets only the specified number of objects.</source>
          <target state="translated">指定された数のオブジェクトのみを取得します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Enter the number of objects to get.</source>
          <target state="translated">取得するオブジェクトの数を入力します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>-Skip</source>
          <target state="translated">スキップ</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Ignores the specified number of objects and then gets the remaining objects.</source>
          <target state="translated">指定された数のオブジェクトを無視してから、残りのオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Enter the number of objects to skip.</source>
          <target state="translated">スキップするオブジェクトの数を入力します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>-IncludeTotalCount</source>
          <target state="translated">-IncludeTotalCount</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Reports the total number of objects in the data set (an integer) followed by the selected objects.</source>
          <target state="translated">データ セット内のオブジェクトの総数 (整数) と選択されたオブジェクトを報告します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If the cmdlet cannot determine the total count, it displays "Unknown total count."</source>
          <target state="translated">コマンドレットで総数を確認できない場合は、"合計数不明" と表示されます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The integer has an Accuracy property that indicates the reliability of the total count value.</source>
          <target state="translated">この整数には、この合計値の信頼性を示す Accuracy プロパティがあります。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The value of Accuracy ranges from 0.0 to 1.0 where 0.0 means that the cmdlet could not count the objects, 1.0 means that the count is exact, and a value between 0.0 and 1.0 indicates an increasingly reliable estimate.</source>
          <target state="translated">Accuracy の値の範囲は 0.0 ～ 1.0 です。この場合、0.0 はコマンドレットでオブジェクトをカウントできなかったことを意味し、1.0 は数が正確であることを意味します。値が 0.0 と 1.0 の間の場合は、大きくなるにつれて信頼性が高くなることを示します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">このコマンドレットは、共通のパラメーターをサポートしています:-デバッグ、-erroraction、-errorvariable、- InformationAction-InformationVariable、- OutVariable、-OutBuffer、- PipelineVariable、- Verbose、および - WarningVariable です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">詳細については、about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216) を参照してください。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">入力</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can pipe a string that contains a path to Import-Clixml.</source>
          <target state="translated">パイプを使用してパスを含む文字列を Import-Clixml に渡すことができます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">出力</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>PSObject</source>
          <target state="translated">PSObject</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Import-Clixml returns objects that have been deserialized from the stored XML files.</source>
          <target state="translated">Import-Clixml は、格納された XML ファイルから逆シリアル化されたオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ノート</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>When specifying multiple values for a parameter, use commas to separate the values.</source>
          <target state="translated">パラメーターの複数の値を指定する場合は、コンマを使用して値を区切ります。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example, "<ph id="ph1">\&lt;</ph>parameter-name<ph id="ph2">\&gt;</ph> <ph id="ph3">\&lt;</ph>value1<ph id="ph4">\&gt;</ph>, <ph id="ph5">\&lt;</ph>value2<ph id="ph6">\&gt;</ph>".</source>
          <target state="translated">たとえば、"<ph id="ph1">\&lt;</ph>パラメーター名<ph id="ph2">\&gt;</ph> <ph id="ph3">\&lt;</ph>value1<ph id="ph4">\&gt;</ph>, 、<ph id="ph5">\&lt;</ph>value2<ph id="ph6">\&gt;</ph>"です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">関連リンク</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Use PowerShell to Pass Credentials to Legacy Systems</source>
          <target state="translated">PowerShell を使用して従来のシステムに資格情報を渡す</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Securely Store Credentials on Disk</source>
          <target state="translated">資格情報をディスクに安全に格納します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Export-Clixml</source>
          <target state="translated">Export-clixml コマンドレット</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>