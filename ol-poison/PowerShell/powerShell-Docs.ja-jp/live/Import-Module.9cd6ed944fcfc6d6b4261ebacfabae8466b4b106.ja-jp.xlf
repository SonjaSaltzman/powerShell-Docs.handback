<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">026c25702cd028b18ee1401aa9c7e5ab61e91f6e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\Import-Module.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a76ce622ee56cafd6fde99a6e0d9414840e4707c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b277912ce6e02d7cdbf25e47a958b6e8e456d2df</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell コマンドレット</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Import-Module</source>
          <target state="translated">Import-Module</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Import-Module</source>
          <target state="translated">Import-Module</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Adds modules to the current session.</source>
          <target state="translated">現在のセッションにモジュールを追加します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name (Default)</source>
          <target state="translated">名前 (既定値)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>CimSession</source>
          <target state="translated">CimSession</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>PSSession</source>
          <target state="translated">PSSession</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Assembly</source>
          <target state="translated">［アセンブリ］</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>ModuleInfo</source>
          <target state="translated">ModuleInfo</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet adds one or more modules to the current session.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> コマンドレットでは、現在のセッションに 1 つまたは複数のモジュールを追加します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The modules that you import must be installed on the local computer or a remote computer.</source>
          <target state="translated">インポートするモジュールは、ローカル コンピューターまたはリモート コンピューターにインストールされている必要があります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, installed modules are automatically imported to the session when you use any commands or providers in the module.</source>
          <target state="translated">Windows PowerShell 3.0 以降は、モジュールで任意のコマンドまたはプロバイダーを使用すると、インストールされているモジュールが自動的にセッションにインポートされます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, you can still use the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> command to import a module and you can enable and disable automatic module importing by using the <bpt id="p2">**</bpt>$PSModuleAutoloadingPreference<ept id="p2">**</ept> preference variable.</source>
          <target state="translated">ただし、引き続き使用できます、 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> モジュールをインポートするコマンドが有効にしてを使用して、自動モジュール インポートを無効にする、 <bpt id="p2">**</bpt>$PSModuleAutoloadingPreference<ept id="p2">**</ept> ユーザー設定変数です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information about modules, see about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311).</source>
          <target state="translated">モジュールの詳細については、about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311) を参照してください。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information about the <bpt id="p1">**</bpt>$PSModuleAutoloadingPreference<ept id="p1">**</ept> variable, see about_Preference_Variables (http://go.microsoft.com/fwlink/?LinkID=113248).</source>
          <target state="translated">詳細については、 <bpt id="p1">**</bpt>$PSModuleAutoloadingPreference<ept id="p1">**</ept> 変数では、「about_preference_variables」(http://go.microsoft.com/fwlink/?LinkID=113248)。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A module is a package that contains members (such as cmdlets, providers, scripts, functions, variables, and other tools and files) that can be used in Windows PowerShell.</source>
          <target state="translated">モジュールは、Windows PowerShell で使用できます (コマンドレット、プロバイダー、スクリプト、関数、変数、およびその他のツールおよびファイル) などのメンバーを含むパッケージです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>After a module is imported, you can use the module members in your session.</source>
          <target state="translated">モジュールをインポートすると、モジュールのメンバーをセッションで使用できます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To import a module, use the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Assembly<ept id="p2">**</ept>,  <bpt id="p3">**</bpt>ModuleInfo<ept id="p3">**</ept>, <bpt id="p4">**</bpt>MinimumVersion<ept id="p4">**</ept> and <bpt id="p5">**</bpt>RequiredVersion<ept id="p5">**</ept> parameters to identify the module to import.</source>
          <target state="translated">モジュールをインポートするには、使用、 <bpt id="p1">**</bpt>名前<ept id="p1">**</ept>, 、<bpt id="p2">**</bpt>アセンブリ<ept id="p2">**</ept>,  、<bpt id="p3">**</bpt>ModuleInfo<ept id="p3">**</ept>, 、<bpt id="p4">**</bpt>MinimumVersion<ept id="p4">**</ept> と <bpt id="p5">**</bpt>RequiredVersion<ept id="p5">**</ept> インポートするモジュールを識別するパラメーターです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> imports all members that the module exports, but you can use the <bpt id="p2">**</bpt>Alias<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Function<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Cmdlet<ept id="p4">**</ept>, and <bpt id="p5">**</bpt>Variable<ept id="p5">**</ept> parameters to restrict the members that are imported.</source>
          <target state="translated">既定では、 <bpt id="p1">**</bpt>モジュールのインポート<ept id="p1">**</ept> 、モジュールがエクスポートされるすべてのメンバーのインポートを使用することができますが、 <bpt id="p2">**</bpt>エイリアス<ept id="p2">**</ept>, 、<bpt id="p3">**</bpt>関数<ept id="p3">**</ept>, 、<bpt id="p4">**</bpt>コマンドレット<ept id="p4">**</ept>, と <bpt id="p5">**</bpt>変数<ept id="p5">**</ept> インポートされたメンバーを制限するパラメーターです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">**</bpt>NoClobber<ept id="p1">**</ept> parameter to prevent <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> from importing members that have the same names as members in the current session.</source>
          <target state="translated">使用することも、 <bpt id="p1">**</bpt>NoClobber<ept id="p1">**</ept> を防ぐためにパラメーター <bpt id="p2">**</bpt>Import-module<ept id="p2">**</ept> を現在のセッション内のメンバーと同じ名前を持つメンバーをインポートします。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> imports a module only into the current session.</source>
          <target state="translated"><bpt id="p1">**</bpt>モジュールのインポート<ept id="p1">**</ept> 、現在のセッションにのみモジュールをインポートします。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To import the module into all sessions, add an <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> command to your Windows PowerShell profile.</source>
          <target state="translated">すべてのセッションにモジュールをインポートするには、追加、 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> コマンドを Windows PowerShell プロファイル。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For more information about profiles, see about_Profiles (http://go.microsoft.com/fwlink/?LinkID=113729).</source>
          <target state="translated">プロファイルの詳細については、「about_Profiles (http://go.microsoft.com/fwlink/?LinkID=113729) を参照してください。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Also, beginning in Windows PowerShell 3.0, you can use <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> to import Common Information Model (CIM) modules, in which the cmdlets are defined in Cmdlet Definition XML (CDXML) files.</source>
          <target state="translated">また、Windows PowerShell 3.0 以降では、使用する <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> コマンドレットがコマンドレット定義 XML (CDXML) ファイルで定義されている、Common Information Model (CIM) モジュールをインポートします。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This feature allows you to use cmdlets that are implemented in non-managed code assemblies, such as those written in C++.</source>
          <target state="translated">この機能により、C++ で記述されたコードなどの非マネージ コード アセンブリに実装されているコマンドレットを使用することができます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>With these new features, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet becomes a primary tool for managing heterogeneous enterprises that include Windows computers and computers that are running other operating systems.</source>
          <target state="translated">これらの新機能と <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> コマンドレットの Windows コンピューターと他のオペレーティング システムを実行しているコンピューターが含まれた異機種混在の企業を管理するための主要なツールになります。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To manage remote Windows computers that have Windows PowerShell and Windows PowerShell remoting enabled, create a PSSession on the remote computer and then use the <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Get-Module<ept id="p2">**</ept> to get the Windows PowerShell modules in the PSSession.</source>
          <target state="translated">Windows PowerShell および Windows PowerShell リモート処理が有効になっているリモートの Windows コンピューターを管理するリモート コンピューターの PSSession を作成しを使用して、 <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> のパラメーター <bpt id="p2">**</bpt>Get-module<ept id="p2">**</ept> 、PSSession で Windows PowerShell モジュールを取得します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When you import the modules, and then use the imported commands in the current session, the commands run implicitly in the PSSession on the remote computer.</source>
          <target state="translated">モジュールをインポートした後、インポートしたコマンドを現在のセッションで使用すると、コマンドは、暗黙的にリモート コンピューター上の PSSession で実行されます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You can use this strategy to manage the remote computer.</source>
          <target state="translated">この戦略を使用して、リモート コンピューターを管理できます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can use a similar strategy to manage computers that do not have Windows PowerShell remoting enabled, including computers that are not running a Windows operating system, and Windows computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">これに似た戦略を使用して、Windows PowerShell リモート処理が有効になっていないコンピューターを管理できます。このようなコンピューターには、Windows オペレーティング システムが実行されていないコンピューターや、Windows PowerShell がある一方で Windows PowerShell リモート処理が有効になっていない Windows コンピューターが該当します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Begin by creating a "CIM session" on the remote computer; a connection to Windows Management Instrumentation (WMI) on the remote computer.</source>
          <target state="translated">最初にリモート コンピューター上の「CIM セッション」を作成します。リモート コンピューター上の接続に Windows Management Instrumentation (WMI) です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Then use the <bpt id="p1">**</bpt>CIMSession<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> to import CIM modules from the remote computer.</source>
          <target state="translated">使用して、 <bpt id="p1">**</bpt>CIMSession<ept id="p1">**</ept> のパラメーター <bpt id="p2">**</bpt>Import-module<ept id="p2">**</ept> リモート コンピューターから CIM モジュールをインポートします。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When you import a CIM module and then run the imported commands, the commands run implicitly on the remote computer.</source>
          <target state="translated">CIM モジュールをインポートし、インポートされたコマンドを実行すると、コマンドはリモート コンピューター上で暗黙的に実行されます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You can use this WMI and CIM strategy to manage the remote computer.</source>
          <target state="translated">この WMI と CIM の戦略を使用して、リモート コンピューターを管理できます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This command imports the members of the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> module into the current session.</source>
          <target state="translated">このコマンドは、のメンバーをインポート、 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> モジュールを現在のセッションにします。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> parameter name (-Name) is optional and can be omitted.</source>
          <target state="translated"> <bpt id="p1">**</bpt>名前<ept id="p1">**</ept> パラメーター名 (-名前) を省略して、省略できます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> does not generate any output when it imports a module.</source>
          <target state="translated">既定では、 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> モジュールをインポートするとき、出力を生成しません。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To request output, use the <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> or <bpt id="p2">**</bpt>AsCustomObject<ept id="p2">**</ept> parameter, or the <bpt id="p3">**</bpt>Verbose<ept id="p3">**</ept> common parameter.</source>
          <target state="translated">出力を要求するには、使用、 <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> または <bpt id="p2">**</bpt>AsCustomObject<ept id="p2">**</ept> パラメーター、または <bpt id="p3">**</bpt>Verbose<ept id="p3">**</ept> 共通パラメーター。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This command imports all available modules in the path specified by the PSModulePath environment variable ($env:PSModulePath) into the current session.</source>
          <target state="translated">このコマンドは、PSModulePath 環境変数 ($env:PSModulePath) によって指定されたパスで利用可能なすべてのモジュールを現在のセッションにインポートします。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>These commands import the members of the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ServerManager<ept id="p2">**</ept> modules into the current session.</source>
          <target state="translated">これらのコマンドのメンバーのインポート、 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> と <bpt id="p2">**</bpt>ServerManager<ept id="p2">**</ept> 現在のセッションにモジュールです。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Module-Module cmdlet to get the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ServerManager<ept id="p2">**</ept> modules.</source>
          <target state="translated">最初のコマンドを取得する Get モジュール コマンドレットを使用して、 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> と <bpt id="p2">**</bpt>ServerManager<ept id="p2">**</ept> モジュールです。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>It saves the objects in the $m variable.</source>
          <target state="translated">オブジェクトは $m 変数に保存されます。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> parameter is required when you are getting modules that are not yet imported into the session.</source>
          <target state="translated"> <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> のセッションにまだインポートされていないモジュールを取得する場合は、パラメーターは必須です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>ModuleInfo<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> to import the modules into the current session.</source>
          <target state="translated">2 番目のコマンドを使用して、 <bpt id="p1">**</bpt>ModuleInfo<ept id="p1">**</ept> のパラメーター <bpt id="p2">**</bpt>Import-module<ept id="p2">**</ept> を現在のセッションにモジュールをインポートします。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>These commands are equivalent to using a pipeline operator (|) to send the output of a <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> command to <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept>.</source>
          <target state="translated">これらのコマンドはパイプライン演算子 (|) の出力の送信先を使用すると、 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> コマンドを <bpt id="p2">**</bpt>Import-module<ept id="p2">**</ept>します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This command uses an explicit path to identify the module to import.</source>
          <target state="translated">このコマンドは明示的なパスを使用して、インポートするモジュールを指定します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>It also uses the <bpt id="p1">**</bpt>Verbose<ept id="p1">**</ept> common parameter to get a list of the items imported from the module.</source>
          <target state="translated">使用して、 <bpt id="p1">**</bpt>Verbose<ept id="p1">**</ept> 共通パラメーターをモジュールからインポートされたアイテムの一覧を取得します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Without the <bpt id="p1">**</bpt>Verbose<ept id="p1">**</ept>, <bpt id="p2">**</bpt>PassThru<ept id="p2">**</ept>, or <bpt id="p3">**</bpt>AsCustomObject<ept id="p3">**</ept> parameter, <bpt id="p4">**</bpt>Import-Module<ept id="p4">**</ept> does not generate any output when it imports a module.</source>
          <target state="translated">なし、 <bpt id="p1">**</bpt>Verbose<ept id="p1">**</ept>, 、<bpt id="p2">**</bpt>PassThru<ept id="p2">**</ept>, 、または <bpt id="p3">**</bpt>AsCustomObject<ept id="p3">**</ept> パラメーター、 <bpt id="p4">**</bpt>Import-module<ept id="p4">**</ept> モジュールをインポートするとき、出力を生成しません。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This example shows how to restrict the module members that are imported into the session and the effect of this command on the session.</source>
          <target state="translated">この例は、セッションにインポートされたモジュール メンバーを制限する方法と、このコマンドがセッションに与える影響を示しています。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The first command imports only the <bpt id="p1">**</bpt>Add-BitsTransfer<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Get-BitsTransfer<ept id="p2">**</ept> cmdlets from the <bpt id="p3">**</bpt>BitsTransfer<ept id="p3">**</ept> module.</source>
          <target state="translated">最初のコマンドはのみをインポート、 <bpt id="p1">**</bpt>Add-bitstransfer<ept id="p1">**</ept> と <bpt id="p2">**</bpt>Get-bitstransfer<ept id="p2">**</ept> コマンドレットから、 <bpt id="p3">**</bpt>BitsTransfer<ept id="p3">**</ept> モジュールです。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>Cmdlet<ept id="p1">**</ept> parameter to restrict the cmdlets that the module imports.</source>
          <target state="translated">コマンドを使用して、 <bpt id="p1">**</bpt>コマンドレット<ept id="p1">**</ept> パラメーターは、モジュールをインポートするコマンドレットを制限します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">**</bpt>Alias<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Variable<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Function<ept id="p3">**</ept> parameters to restrict other members that a module imports.</source>
          <target state="translated">使用することも、 <bpt id="p1">**</bpt>エイリアス<ept id="p1">**</ept>, 、<bpt id="p2">**</bpt>変数<ept id="p2">**</ept>, 、および <bpt id="p3">**</bpt>関数<ept id="p3">**</ept> モジュールをインポートするその他のメンバーを制限するパラメーターです。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The second command uses the Get-Module cmdlet to get the object that represents the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> module.</source>
          <target state="translated">2 番目のコマンドを表すオブジェクトを取得する、Get-module コマンドレットを使用して、 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> モジュールです。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ExportedCmdlets<ept id="p1">**</ept> property lists all of the cmdlets that the module exports, even when they were not all imported.</source>
          <target state="translated"> <bpt id="p1">**</bpt>ExportedCmdlets<ept id="p1">**</ept> プロパティには、すべてこれらすべてがインポートされた場合でも、モジュールがエクスポートされるコマンドレットの一覧表示します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>Module<ept id="p1">**</ept> parameter of the Get-Command cmdlet to get the commands that were imported from the <bpt id="p2">**</bpt>BitsTransfer<ept id="p2">**</ept> module.</source>
          <target state="translated">3 番目のコマンドを使用して、 <bpt id="p1">**</bpt>モジュール<ept id="p1">**</ept> からインポートされたコマンドを取得する Get-command コマンドレットのパラメーター、 <bpt id="p2">**</bpt>BitsTransfer<ept id="p2">**</ept> モジュールです。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The results confirm that only the <bpt id="p1">**</bpt>Add-BitsTransfer<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Get-BitsTransfer<ept id="p2">**</ept> cmdlets were imported.</source>
          <target state="translated">結果の確認だけである、 <bpt id="p1">**</bpt>Add-bitstransfer<ept id="p1">**</ept> と <bpt id="p2">**</bpt>Get-bitstransfer<ept id="p2">**</ept> コマンドレットをインポートしました。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>These commands import the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> module into the current session, add a prefix to the member names, and then display the prefixed member names.</source>
          <target state="translated">これらのコマンドをインポート、 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> 現在のセッションにモジュールがメンバー名にプレフィックスを追加し、プレフィックスの付いたメンバー名を表示します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet to import the <bpt id="p2">**</bpt>BitsTransfer<ept id="p2">**</ept> module.</source>
          <target state="translated">最初のコマンドを使用して、 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> コマンドレットをインポート、 <bpt id="p2">**</bpt>BitsTransfer<ept id="p2">**</ept> モジュールです。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>Prefix<ept id="p1">**</ept> parameter to add the PS prefix to all members that are imported from the module and the <bpt id="p2">**</bpt>PassThru<ept id="p2">**</ept> parameter to return a module object that represents the imported module.</source>
          <target state="translated">使用して、 <bpt id="p1">**</bpt>プレフィックス<ept id="p1">**</ept> 、モジュールからインポートされるすべてのメンバーに PS というプレフィックスを追加するパラメーターと <bpt id="p2">**</bpt>PassThru<ept id="p2">**</ept> パラメーターをインポートされたモジュールを表すモジュール オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> cmdlet to get the members that have been imported from the module.</source>
          <target state="translated">2 番目のコマンドを使用して、 <bpt id="p1">**</bpt>Get-command<ept id="p1">**</ept> コマンドレットをモジュールからインポートされたメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>Module<ept id="p1">**</ept> parameter to specify the module.</source>
          <target state="translated">使用して、 <bpt id="p1">**</bpt>モジュール<ept id="p1">**</ept> パラメーターをモジュールを指定します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The output shows that the module members were correctly prefixed.</source>
          <target state="translated">出力から、モジュール メンバーにプレフィックスが正しく追加されたことがわかります。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The prefix that you use applies only to the members in the current session.</source>
          <target state="translated">使用するプレフィックスは、現在のセッションのメンバーにのみ適用されます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>It does not change the module.</source>
          <target state="translated">モジュールは変更されません。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>These commands demonstrate how to get and use the custom object that <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> returns.</source>
          <target state="translated">これらのコマンドを取得して、カスタム オブジェクトを使用する方法のデモンストレーションを <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> を返します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Custom objects include synthetic members that represent each of the imported module members.</source>
          <target state="translated">カスタム オブジェクトには、インポートされた各モジュール メンバーを表す合成メンバーが含まれます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For example, the cmdlets and functions in a module are converted to script methods of the custom object.</source>
          <target state="translated">たとえば、モジュールのコマンドレットと関数は、カスタム オブジェクトのスクリプト メソッドに変換されます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Custom objects are very useful in scripting.</source>
          <target state="translated">カスタム オブジェクトはスクリプトに非常に便利です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>They are also useful when several imported objects have the same names.</source>
          <target state="translated">また、インポートされた複数のオブジェクトが同じ名前を持つ場合にも役立ちます。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Using the script method of an object is equivalent to specifying the fully qualified name of an imported member, including its module name.</source>
          <target state="translated">オブジェクトのスクリプト メソッドを使用すると、モジュール名を含め、インポートされたメンバーの完全修飾名を指定した場合と同じ効果が得られます。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>AsCustomObject<ept id="p1">**</ept> parameter can be used only when importing a script module, so the first task is to determine which of the available modules is a script module.</source>
          <target state="translated"> <bpt id="p1">**</bpt>AsCustomObject<ept id="p1">**</ept> パラメーターは、スクリプト モジュールは、スクリプト モジュールをインポートするため、最初のタスクが利用可能なモジュールのどちらかを決定する場合にのみ使用できます。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Module cmdlet to get the available modules.</source>
          <target state="translated">最初のコマンドでは、Get-module コマンドレットを使用して、利用可能なモジュールを取得します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator (|) to pass the module objects to the Format-Tablee cmdlet, which lists the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ModuleType<ept id="p2">**</ept> of each module in a table.</source>
          <target state="translated">コマンドは、一覧にしたモジュール オブジェクトを書式設定 Tablee コマンドレットに渡す、パイプライン演算子 (|) を使用して、 <bpt id="p1">**</bpt>名前<ept id="p1">**</ept> と <bpt id="p2">**</bpt>ModuleType<ept id="p2">**</ept> テーブル内の各モジュールのです。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet to import the <bpt id="p2">**</bpt>PSDiagnostics<ept id="p2">**</ept> script module.</source>
          <target state="translated">2 番目のコマンドを使用して、 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> コマンドレットをインポート、 <bpt id="p2">**</bpt>PSDiagnostics<ept id="p2">**</ept> スクリプト モジュールです。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>AsCustomObject<ept id="p1">**</ept> parameter to request a custom object and the <bpt id="p2">**</bpt>PassThru<ept id="p2">**</ept> parameter to return the  object.</source>
          <target state="translated">コマンドを使用して、 <bpt id="p1">**</bpt>AsCustomObject<ept id="p1">**</ept> カスタム オブジェクトを要求するパラメーター、および <bpt id="p2">**</bpt>PassThru<ept id="p2">**</ept> オブジェクトを取得するパラメーターです。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The command saves the resulting custom object in the $a variable.</source>
          <target state="translated">このコマンドは、結果のカスタム オブジェクトを $a 変数に保存します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The third command uses a pipeline operator to send the $a variable to the Get-Member cmdlet, which gets the properties and methods of the PSCustomObject in $a.</source>
          <target state="translated">3 番目のコマンドは、パイプライン演算子を使用して、$a 変数を Get-member コマンドレットは、$ 内のプロパティと、PSCustomObject のメソッドの取得に送信する、です。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The output shows a <bpt id="p1">**</bpt>Show-Calendar<ept id="p1">**</ept> script method.</source>
          <target state="translated">出力結果が示す、 <bpt id="p1">**</bpt>Show-calendar<ept id="p1">**</ept> メソッドのスクリプトを作成します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The last command uses the <bpt id="p1">**</bpt>Show-Calendar<ept id="p1">**</ept> script method.</source>
          <target state="translated">最後のコマンドを使用して、 <bpt id="p1">**</bpt>Show-calendar<ept id="p1">**</ept> メソッドのスクリプトを作成します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The method name must be enclosed in quotation marks, because it includes a hyphen.</source>
          <target state="translated">メソッド名にはハイフンが含まれるため、引用符で囲む必要があります。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 8 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 8 --------------------------</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> when you are re-importing a module into the same session.</source>
          <target state="translated">使用する方法を示します、 <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> のパラメーター <bpt id="p2">**</bpt>Import-module<ept id="p2">**</ept> を同じセッションにモジュールを再インポートするとき。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The first command imports the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> module.</source>
          <target state="translated">最初のコマンドをインポート、 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> モジュールです。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The second command imports the module again, this time using the <bpt id="p1">**</bpt>Prefix<ept id="p1">**</ept> parameter.</source>
          <target state="translated">2 番目のコマンドは、モジュールをインポート、この時間を使ってもう一度、 <bpt id="p1">**</bpt>プレフィックス<ept id="p1">**</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The second command also includes the <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> parameter, which removes the module and then imports it again.</source>
          <target state="translated">2 番目のコマンドも含まれています、 <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> パラメーター、モジュールを削除してから再インポートします。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Without this parameter, the session would include two copies of each <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> cmdlet, one with the standard name and one with the prefixed name.</source>
          <target state="translated">このパラメーターがない場合、セッションがそれぞれのコピー 2 つには含まれます <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> コマンドレット、標準的な名前のいずれかとプレフィックスの付いた名前のいずれかです。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 9 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 9 --------------------------</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This example shows how to run commands that have been hidden by imported commands.</source>
          <target state="translated">この例は、インポートされたコマンドで非表示になったコマンドを実行する方法を示しています。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The first command run the Get-Date cmdlet.</source>
          <target state="translated">最初のコマンドは、Get-date コマンドレットを実行します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>It returns a <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> object with the current date.</source>
          <target state="translated">返す、 <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> 、現在の日付を持つオブジェクト。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The second command imports the <bpt id="p1">**</bpt>TestModule<ept id="p1">**</ept> module.</source>
          <target state="translated">2 番目のコマンドをインポート、 <bpt id="p1">**</bpt>TestModule<ept id="p1">**</ept> モジュールです。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>This module includes a function named <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> that returns the year and day of the year.</source>
          <target state="translated">このモジュールには、という名前の関数が含まれています。 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 年と、年の通算日を返します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The third command runs the <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> command again.</source>
          <target state="translated">3 番目のコマンドを実行、 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> コマンドを再します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Because functions take precedence over cmdlets, the <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> function from the <bpt id="p2">**</bpt>TestModule<ept id="p2">**</ept> module runs, instead of the <bpt id="p3">**</bpt>Get-Date<ept id="p3">**</ept> cmdlet.</source>
          <target state="translated">関数はコマンドレットより優先するため、 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> から機能、 <bpt id="p2">**</bpt>TestModule<ept id="p2">**</ept> モジュールの実行の代わりに、 <bpt id="p3">**</bpt>Get-date<ept id="p3">**</ept> コマンドレットです。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The fourth command uses the <bpt id="p1">**</bpt>All<ept id="p1">**</ept> parameter of the <bpt id="p2">**</bpt>Get-Command<ept id="p2">**</ept> to get all of the Get-Date commands in the session.</source>
          <target state="translated">4 番目のコマンドを使用して、 <bpt id="p1">**</bpt>すべて<ept id="p1">**</ept> のパラメーター、 <bpt id="p2">**</bpt>Get-command<ept id="p2">**</ept> セッション内のすべての Get-date コマンドを取得します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The results show that there are two <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> commands in the session, a function from the <bpt id="p2">**</bpt>TestModule<ept id="p2">**</ept> module and a cmdlet from the <bpt id="p3">**</bpt>Microsoft.PowerShell.Utility<ept id="p3">**</ept> module.</source>
          <target state="translated">2 つの結果を表示する <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 関数からのセッションでコマンド、 <bpt id="p2">**</bpt>TestModule<ept id="p2">**</ept> モジュールとコマンドレットを <bpt id="p3">**</bpt>Microsoft.PowerShell.Utility<ept id="p3">**</ept> モジュールです。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The fifth command runs the hidden cmdlet by qualifying the command name with the module name.</source>
          <target state="translated">5 番目のコマンドは、コマンド名をモジュール名で修飾して、非表示のコマンドレットを実行します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>For more information about command precedence in Windows PowerShell, see about_Command_Precedence (http://go.microsoft.com/fwlink/?LinkID=113214).</source>
          <target state="translated">Windows PowerShell のコマンドの優先順位の詳細については、「about_Command_Precedence (http://go.microsoft.com/fwlink/?LinkID=113214) を参照してください。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 10 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 10 --------------------------</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This command imports the PSWorkflow module.</source>
          <target state="translated">このコマンドは、PSWorkflow モジュールをインポートします。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>MinimumVersion<ept id="p1">**</ept> (alias=Version) parameter of <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> to import only version 3.0.0.0 or greater of the module.</source>
          <target state="translated">使用して、 <bpt id="p1">**</bpt>MinimumVersion<ept id="p1">**</ept> (バージョンとエイリアス =) のパラメーター <bpt id="p2">**</bpt>モジュールのインポート<ept id="p2">**</ept> バージョン 3.0.0.0 のみをインポートするモジュールの以上。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">**</bpt>RequiredVersion<ept id="p1">**</ept> parameter to import a particular version of a module, or use the <bpt id="p2">**</bpt>Module<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Version<ept id="p3">**</ept> parameters of the <bpt id="p4">**</bpt>#Requires<ept id="p4">**</ept> keyword to require a particular version of a module in a script.</source>
          <target state="translated">使用することも、 <bpt id="p1">**</bpt>RequiredVersion<ept id="p1">**</ept> のモジュールの場合、特定のバージョンをインポートまたは使用するパラメーター、 <bpt id="p2">**</bpt>モジュール<ept id="p2">**</ept> と <bpt id="p3">**</bpt>バージョン<ept id="p3">**</ept> のパラメーター、 <bpt id="p4">**</bpt>#Requires<ept id="p4">**</ept> をスクリプト内でモジュールの特定のバージョンを必要とするキーワードです。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 10 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 10 --------------------------</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet to import a module from a remote computer.</source>
          <target state="translated">この例では、使用して、 <bpt id="p1">**</bpt>モジュールのインポート<ept id="p1">**</ept> コマンドレットをリモート コンピューターからモジュールをインポートします。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>This command uses the Implicit Remoting feature of Windows PowerShell.</source>
          <target state="translated">このコマンドは、Windows PowerShell の暗黙的なリモート処理機能を使用します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>When you import modules from another session, you can use the cmdlets in the current session.</source>
          <target state="translated">別のセッションからモジュールをインポートすると、現在のセッションでコマンドレットを使用することができます。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>However, commands that use the cmdlets actually run in the remote session.</source>
          <target state="translated">ただし、コマンドレットを使用するコマンドは、実際にはリモート セッションで実行されます。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 11 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 11 --------------------------</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The commands in this example enable you to manage the storage systems of a remote computer that is not running a Windows operating system.</source>
          <target state="translated">この例のコマンドを使用すると、Windows オペレーティング システムが実行されていないリモート コンピューターの記憶域システムを管理することができます。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>In this example, because the administrator of the computer has installed the Module Discovery WMI provider, the CIM commands can use the default values, which are designed for the provider.</source>
          <target state="translated">この例では、コンピューターの管理者によってモジュール検出用の WMI プロバイダーがインストールされているため、CIM コマンドでプロバイダー用の既定値を使用できます。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">パラメータ</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>-Alias</source>
          <target state="translated">エイリアス</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Imports only the specified aliases from the module into the current session.</source>
          <target state="translated">指定されたエイリアスのみをモジュールから現在のセッションにインポートします。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Enter a comma-separated list of aliases.</source>
          <target state="translated">エイリアスのコンマ区切りのリストを入力します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">ワイルドカード文字を使用できます。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Some modules automatically export selected aliases into your session when you import the module.</source>
          <target state="translated">一部のモジュールは、モジュールをインポートすると、選択されたエイリアスをセッションに自動的にエクスポートします。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>This parameter lets you select from among the exported aliases.</source>
          <target state="translated">このパラメーターを使用すると、エクスポートされたエイリアスの中から選択できます。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>-ArgumentList</source>
          <target state="translated">-ArgumentList</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Specifies arguments (parameter values) that are passed to a script module during the Import-Module command.</source>
          <target state="translated">Import-Module コマンドの実行中にスクリプト モジュールに渡される引数 (パラメーターの値) を指定します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when you are importing a script module.</source>
          <target state="translated">このパラメーターは、スクリプト モジュールをインポートする場合にのみ有効です。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>You can also refer to ArgumentList by its alias, "args".</source>
          <target state="translated">ArgumentList はエイリアス "args" で参照することもできます。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>For more information, see about_Aliases.</source>
          <target state="translated">詳細については、「about_Aliases」を参照してください。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>-AsCustomObject</source>
          <target state="translated">-AsCustomObject</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Returns a custom object with members that represent the imported module members.</source>
          <target state="translated">インポートされたモジュール メンバーを表すメンバーを持つカスタム オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This parameter is valid only for script modules.</source>
          <target state="translated">このパラメーターは、スクリプト モジュールに対してのみ有効です。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>When you use the AsCustomObject parameter, Import-Module imports the module members into the session and then returns a PSCustomObject object instead of a PSModuleInfo object.</source>
          <target state="translated">AsCustomObject パラメーターを使用すると、Import-Module はモジュール メンバーをセッションにインポートし、PSModuleInfo オブジェクトではなく PSCustomObject オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>You can save the custom object in a variable and use dot notation to invoke the members.</source>
          <target state="translated">カスタム オブジェクトを変数に保存し、ドット表記を使用してメンバーを呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>-Assembly</source>
          <target state="translated">アセンブリ</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Imports the cmdlets and providers implemented in the specified assembly objects.</source>
          <target state="translated">指定されたアセンブリ オブジェクトに実装されているコマンドレットとプロバイダーをインポートします。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains assembly objects or a command that creates assembly objects.</source>
          <target state="translated">アセンブリ オブジェクトが保存されている変数か、アセンブリ オブジェクトを作成するコマンドを入力します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>You can also pipe an assembly object to Import-Module.</source>
          <target state="translated">パイプを使用してアセンブリ オブジェクトを Import-Module に渡すこともできます。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>When you use this parameter, only the cmdlets and providers implemented by the specified assemblies are imported.</source>
          <target state="translated">このパラメーターを使用すると、指定されたアセンブリによって実装されたコマンドレットとプロバイダーのみがインポートされます。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>If the module contains other files, they are not imported, and you might be missing important members of the module.</source>
          <target state="translated">モジュールにその他のファイルが含まれている場合、それらのファイルはインポートされないため、モジュールの重要なメンバーを取得できない可能性があります。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Use this parameter for debugging and testing the module, or when you are instructed to use it by the module author.</source>
          <target state="translated">モジュールのデバッグやテストを実行する場合や、モジュールの作成者によって使用するよう指示された場合に、このパラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>-CimNamespace</source>
          <target state="translated">-CimNamespace</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Specifies the namespace of an alternate CIM provider that exposes CIM modules.</source>
          <target state="translated">CIM モジュールを公開する代替 CIM プロバイダーの名前空間を指定します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The default value is the namespace of the Module Discovery WMI provider.</source>
          <target state="translated">既定値は、モジュール検出用の WMI プロバイダーの名前空間です。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Use this parameter to import CIM modules from computers and devices that are not running a Windows operating system.</source>
          <target state="translated">Windows オペレーティング システムを実行していないコンピューターやデバイスから CIM モジュールをインポートする場合に、このパラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">このパラメーターは、Windows PowerShell 3.0 で導入されました。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>-CimResourceUri</source>
          <target state="translated">-CimResourceUri</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Specifies an alternate location for CIM modules.</source>
          <target state="translated">CIM モジュールの代替の場所を指定します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The default value is the  resource URI of the Module Discovery WMI provider on the remote computer.</source>
          <target state="translated">既定値は、リモート コンピューター上にあるモジュール検出用 WMI プロバイダーのリソース URI です。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Use this parameter to import CIM modules from computers and devices that are not running a Windows operating system.</source>
          <target state="translated">Windows オペレーティング システムを実行していないコンピューターやデバイスから CIM モジュールをインポートする場合に、このパラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">このパラメーターは、Windows PowerShell 3.0 で導入されました。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>-Cmdlet</source>
          <target state="translated">コマンドレット</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Imports only the specified cmdlets from the module into the current session.</source>
          <target state="translated">指定されたコマンドレットのみをモジュールから現在のセッションにインポートします。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Enter a list of cmdlets.</source>
          <target state="translated">コマンドレットのリストを入力します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">ワイルドカード文字を使用できます。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Some modules automatically export selected cmdlets into your session when you import the module.</source>
          <target state="translated">一部のモジュールは、モジュールをインポートすると、選択されたコマンドレットをセッションに自動的にエクスポートします。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>This parameter lets you select from among the exported cmdlets.</source>
          <target state="translated">このパラメーターを使用すると、エクスポートされたコマンドレットの中から選択できます。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>-DisableNameChecking</source>
          <target state="translated">-DisableNameChecking</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Suppresses the message that warns you when you import a cmdlet or function whose name includes an unapproved verb or a prohibited character.</source>
          <target state="translated">承認されていない動詞または禁止されている文字が名前に含まれているコマンドレットまたは関数をインポートした場合に、警告するメッセージが表示されないようにします。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>By default,  when a module that you import exports cmdlets or functions that have unapproved verbs in their names, the Windows PowerShell displays the following warning message:</source>
          <target state="translated">既定では、インポートしたモジュールによって、承認されていない動詞が名前に含まれているコマンドレットまたは関数がエクスポートされた場合に、Windows PowerShell によって次の警告メッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>"WARNING: Some imported command names include unapproved verbs which might make them less discoverable.</source>
          <target state="translated">"警告: 一部のインポートされたコマンドの名前にすると見つけにくいに認められていない動詞が含まれます。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Use the Verbose parameter for more detail or type Get-Verb to see the list of approved verbs."</source>
          <target state="translated">詳細については Verbose パラメーターを使用するか、「Get-Verb」と入力して承認されている動詞の一覧を参照してください。"</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>This message is only a warning.</source>
          <target state="translated">このメッセージは、単なる警告です。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The complete module is still imported, including the non-conforming commands.</source>
          <target state="translated">実際には、非準拠のコマンドを含む、すべてのモジュールがインポートされます。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Although the message is displayed to module users, the naming problem should be fixed by the module author.</source>
          <target state="translated">モジュール ユーザーにメッセージが表示されますが、名前付けの問題はモジュール作成者が解決する必要があります。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Re-imports a module and its members, even if the module or its members have an access mode of read-only.</source>
          <target state="translated">モジュールまたはそのメンバーのアクセス モードが読み取り専用の場合でも、モジュールとそのメンバーを再インポートします。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>-Function</source>
          <target state="translated">関数</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Imports only the specified functions from the module into the current session.</source>
          <target state="translated">指定された関数のみをモジュールから現在のセッションにインポートします。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Enter a list of functions.</source>
          <target state="translated">関数のリストを入力します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">ワイルドカード文字を使用できます。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Some modules automatically export selected functions into your session when you import the module.</source>
          <target state="translated">一部のモジュールは、モジュールをインポートすると、選択された関数をセッションに自動的にエクスポートします。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>This parameter lets you select from among the exported functions.</source>
          <target state="translated">このパラメーターを使用すると、エクスポートされた関数の中から選択できます。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>-Global</source>
          <target state="translated">-グローバル</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Imports modules into the global session state so they are available to all commands in the session.</source>
          <target state="translated">モジュールがセッションですべてのコマンドに利用できるように、モジュールをグローバル セッション状態にインポートします。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>By default, the commands in a module, including commands from nested modules, are imported into the caller's session state.</source>
          <target state="translated">既定では、モジュール内のコマンドは、入れ子になったモジュールのコマンドも含めて、呼び出し元のセッション状態にインポートされます。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>To restrict the commands that a module exports, use an Export-ModuleMember command in the script module.</source>
          <target state="translated">モジュールがエクスポートするコマンドを制限するには、スクリプト モジュールに Export-modulemember コマンドを使用します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Global<ept id="p1">**</ept> parameter is equivalent to the <bpt id="p2">**</bpt>Scope<ept id="p2">**</ept> parameter with a value of <bpt id="p3">**</bpt>Global<ept id="p3">**</ept>.</source>
          <target state="translated"> <bpt id="p1">**</bpt>グローバル<ept id="p1">**</ept> パラメーターは、 <bpt id="p2">**</bpt>スコープ<ept id="p2">**</ept> パラメーターの値を持つ <bpt id="p3">**</bpt>グローバル<ept id="p3">**</ept>します。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>-ModuleInfo</source>
          <target state="translated">-ModuleInfo</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Specifies module objects to import.</source>
          <target state="translated">インポートするモジュール オブジェクトを指定します。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the module objects, or a command that gets the module objects, such as a "Get-Module -ListAvailable" command.</source>
          <target state="translated">モジュール オブジェクトが保存されている変数を入力するか、"Get-Module -ListAvailable" コマンドなど、モジュール オブジェクトを取得するコマンドを入力します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>You can also pipe module objects to Import-Module.</source>
          <target state="translated">パイプを使用してモジュール オブジェクトを Import-Module に渡すこともできます。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Specifies the names of the modules to import.</source>
          <target state="translated">インポートするモジュールの名前を指定します。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Enter the name of the module or the name of a file in the module, such as a .psd1, .psm1, .dll, or ps1 file.</source>
          <target state="translated">.psd1、.psm1、.dll、.ps1 ファイルなど、モジュール名またはモジュールのファイル名を入力します。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>File paths are optional.</source>
          <target state="translated">ファイル パスは省略可能です。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Wildcards are not permitted.</source>
          <target state="translated">ワイルドカードは使用できません。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>You can also pipe module names and file names to Import-Module.</source>
          <target state="translated">パイプを使用してモジュール名とファイル名を Import-Module に渡すこともできます。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>If you omit a path, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> looks for the module in the paths saved in the PSModulePath environment variable ($env:PSModulePath).</source>
          <target state="translated">パスを省略した場合 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> PSModulePath 環境変数に保存されたパスでモジュールを探します ($env:path: psmodulepath 環境変数)。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Specify only the module name whenever possible.</source>
          <target state="translated">可能な限り、モジュール名のみを指定してください。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>When you specify a file name, only the members that are implemented in that file are imported.</source>
          <target state="translated">ファイル名を指定した場合は、そのファイルに実装されているメンバーのみがインポートされます。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>If the module contains other files, they are not imported, and you might be missing important members of the module.</source>
          <target state="translated">モジュールにその他のファイルが含まれている場合、それらのファイルはインポートされないため、モジュールの重要なメンバーを取得できない可能性があります。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>-NoClobber</source>
          <target state="translated">-NoClobber</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Does not import commands that have the same names as existing commands in the current session.</source>
          <target state="translated">現在のセッション内にある既存のコマンドと同じ名前を持つコマンドがインポートされないようにします。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> imports all exported module commands.</source>
          <target state="translated">既定では、 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> エクスポート時のモジュールのすべてのコマンドをインポートします。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Commands with the same names can hide or replace commands in the session.</source>
          <target state="translated">同じ名前を持つコマンドは、非表示にするか、セッション内のコマンドに置き換えることができます。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>To avoid command name conflicts in a session, use the <bpt id="p1">**</bpt>Prefix<ept id="p1">**</ept> or <bpt id="p2">**</bpt>NoClobber<ept id="p2">**</ept> parameters.</source>
          <target state="translated">コマンド名の競合を避けるため、セッションを使用して、 <bpt id="p1">**</bpt>プレフィックス<ept id="p1">**</ept> または <bpt id="p2">**</bpt>NoClobber<ept id="p2">**</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>For more information about name conflicts and command precedence, see "Modules and Name Conflicts" in about_Modules and about_Command_Precedence.</source>
          <target state="translated">名前の競合およびコマンドの優先順位の詳細については、about_Modules と about_Command_Precedence「モジュールと名前の競合」を参照してください。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>This parameter was added in Windows PowerShell 3.0.</source>
          <target state="translated">このパラメーターは、Windows PowerShell 3.0 で追加されました。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>-PassThru</source>
          <target state="translated">-PassThru</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Returns objects that represent the modules that were imported.</source>
          <target state="translated">インポートされたモジュールを表すオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>By default, this cmdlet does not generate any output.</source>
          <target state="translated">既定では、このコマンドレットによる出力はありません。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>-Prefix</source>
          <target state="translated">プレフィックス</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Adds the specified prefix to the nouns in the names of imported module members.</source>
          <target state="translated">指定されたプレフィックスを、インポートされたモジュール メンバーの名前の名詞に追加します。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Use this parameter to avoid name conflicts that might occur when different members in the session have the same name.</source>
          <target state="translated">セッションに同じ名前の別のメンバーが存在する場合に発生する名前の競合を回避するには、このパラメーターを使用します。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>This parameter does not change the module, and it does not affect files that the module imports for its own use (known as "nested modules").</source>
          <target state="translated">このパラメーターによってモジュールが変更されることはなく、モジュールが自己使用のためにインポートするファイル ("入れ子になったモジュール" と呼ばれます) には影響しません。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>It affects only the names of members in the current session.</source>
          <target state="translated">このパラメーターは、現在のセッションのメンバー名にのみ影響します。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>For example, if you specify the prefix "UTC" and then import a Get-Date cmdlet, the cmdlet is known in the session as Get-UTCDate, and it is not confused with the original Get-Date cmdlet.</source>
          <target state="translated">たとえば、プレフィックス "UTC" を指定して Get-Date コマンドレットをインポートした場合、このコマンドレットはセッションで Get-UTCDate として認識され、元の Get-Date コマンドレットと混同されることはありません。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The value of this parameter takes precedence over the <bpt id="p1">**</bpt>DefaultCommandPrefix<ept id="p1">**</ept> property of the module, which specifies the default prefix.</source>
          <target state="translated">このパラメーターの値よりも優先、 <bpt id="p1">**</bpt>DefaultCommandPrefix<ept id="p1">**</ept> 既定のプレフィックスを指定すると、モジュールのプロパティです。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>-Variable</source>
          <target state="translated">変数の値</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Imports only the specified variables from the module into the current session.</source>
          <target state="translated">指定された変数のみをモジュールから現在のセッションにインポートします。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Enter a list of variables.</source>
          <target state="translated">変数のリストを入力します。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">ワイルドカード文字を使用できます。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Some modules automatically export selected variables into your session when you import the module.</source>
          <target state="translated">一部のモジュールは、モジュールをインポートすると、選択された変数をセッションに自動的にエクスポートします。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>This parameter lets you select from among the exported variables.</source>
          <target state="translated">このパラメーターを使用すると、エクスポートされた変数の中から選択できます。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>-CimSession</source>
          <target state="translated">-CimSession</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Specifies a CIM session on the remote computer.</source>
          <target state="translated">リモート コンピューター上の CIM セッションを指定します。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the CIM session or a command that gets the CIM session, such as a Get-CIMSessionhttp://go.microsoft.com/fwlink/?LinkId=227966 command.</source>
          <target state="translated">CIM セッションまたは Get CIMSessionhttp://go.microsoft.com/fwlink/?LinkId=227966 コマンドなど、CIM セッションを取得するコマンドを含む変数を入力します。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> uses the CIM session connection to import modules from the remote computer into the current session.</source>
          <target state="translated"><bpt id="p1">**</bpt>モジュールのインポート<ept id="p1">**</ept> CIM セッションの接続を使用して、現在のセッションにリモート コンピューターからモジュールをインポートします。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>When you use the commands from the imported module in the current session, the commands actually run on the remote computer.</source>
          <target state="translated">インポートされたモジュールのコマンドを現在のセッションで使用すると、実際にはコマンドはリモート コンピューター上で実行されます。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>You can use this parameter to import modules from computers and devices that are not running a Windows operating system, and Windows computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">このパラメーターを使用すると、Windows オペレーティング システムを実行していないコンピューターやデバイス、および Windows PowerShell が搭載されていても Windows PowerShell リモート処理が有効になっていない Windows コンピューターからモジュールをインポートできます。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">このパラメーターは、Windows PowerShell 3.0 で導入されました。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>-MinimumVersion</source>
          <target state="translated">-MinimumVersion</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Imports only a version of the module that is greater than or equal to the specified value.</source>
          <target state="translated">指定された値以上のバージョンのモジュールのみをインポートします。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>If no version qualifies, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> generates an error.</source>
          <target state="translated">バージョンが該当しない場合 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> 、エラーが発生します。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> imports the module without checking the version number.</source>
          <target state="translated">既定では、 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> バージョン番号を確認せず、モジュールをインポートします。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>MinimumVersion<ept id="p1">**</ept> parameter name or its alias, <bpt id="p2">**</bpt>Version<ept id="p2">**</ept>.</source>
          <target state="translated">使用して、 <bpt id="p1">**</bpt>MinimumVersion<ept id="p1">**</ept> パラメーターの名前またはそのエイリアスである <bpt id="p2">**</bpt>バージョン<ept id="p2">**</ept>です。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>To specify an exact version, use the <bpt id="p1">**</bpt>RequiredVersion<ept id="p1">**</ept> parameter.</source>
          <target state="translated">正確なバージョンを指定するには、使用、 <bpt id="p1">**</bpt>RequiredVersion<ept id="p1">**</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">**</bpt>Module<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Version<ept id="p2">**</ept> parameters of the #Requires keyword to require a specific version of a module in a script.</source>
          <target state="translated">使用することも、 <bpt id="p1">**</bpt>モジュール<ept id="p1">**</ept> と <bpt id="p2">**</bpt>バージョン<ept id="p2">**</ept> のパラメーター、#Requires をスクリプト内でモジュールの特定のバージョンを必要とするキーワードです。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">このパラメーターは、Windows PowerShell 3.0 で導入されました。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>-PSSession</source>
          <target state="translated">PSSession</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Imports modules from the specified Windows PowerShell user-managed session ("PSSession") into the current session.</source>
          <target state="translated">指定された Windows PowerShell ユーザー管理セッション ("PSSession") から現在のセッションにモジュールをインポートします。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains a PSSession or a command that gets a PSSession, such as a Get-PSSession command.</source>
          <target state="translated">PSSession や Get-pssession コマンドなどの PSSession を取得するコマンドを含む変数を入力します。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>When you import a module from a different session into the current session, you can use the cmdlets from the module in the current session, just as you would use cmdlets from a local module.</source>
          <target state="translated">別のセッションから現在のセッションにモジュールをインポートする際、ローカル モジュールのコマンドレットを使用するのと同じように、モジュールのコマンドレットを現在のセッションで使用できます。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Commands that use the remote cmdlets actually run in the remote session, but the remoting details are managed in the background by Windows PowerShell.</source>
          <target state="translated">リモート コマンドレットを使用するコマンドは、実際には、リモート セッションで実行されますが、リモート処理の詳細はバック グラウンドで Windows PowerShell によって管理されます。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>This parameter uses the Implicit Remoting feature of Windows PowerShell.</source>
          <target state="translated">このパラメーターは、Windows PowerShell の暗黙的なリモート処理機能を使用します。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>It is equivalent to using the Import-PSSession cmdlet to import particular modules from a session.</source>
          <target state="translated">これは、セッションから特定のモジュールをインポートする Import-pssession コマンドレットを使用してに相当します。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cannot import Windows PowerShell Core modules from another session.</source>
          <target state="translated"><bpt id="p1">**</bpt>モジュールのインポート<ept id="p1">**</ept> 別のセッションから Windows PowerShell コア モジュールをインポートすることはできません。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell Core modules have names that begin with Microsoft.PowerShell.</source>
          <target state="translated">Windows PowerShell のコア モジュールには、Microsoft.PowerShell で始まる名前があります。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">このパラメーターは、Windows PowerShell 3.0 で導入されました。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>-RequiredVersion</source>
          <target state="translated">-RequiredVersion</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Imports only the specified version of the module.</source>
          <target state="translated">指定されたバージョンのモジュールのみをインポートします。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>If the version is not installed, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> generates an error.</source>
          <target state="translated">バージョンがインストールされていない場合 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> 、エラーが発生します。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> imports the module without checking the version number.</source>
          <target state="translated">既定では、 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> バージョン番号を確認せず、モジュールをインポートします。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>To specify a minimum version, use the <bpt id="p1">**</bpt>MinimumVersion<ept id="p1">**</ept> parameter.</source>
          <target state="translated">最小バージョンを指定するには、使用、 <bpt id="p1">**</bpt>MinimumVersion<ept id="p1">**</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">**</bpt>Module<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Version<ept id="p2">**</ept> parameters of the #Requires keyword to require a specific version of a module in a script.</source>
          <target state="translated">使用することも、 <bpt id="p1">**</bpt>モジュール<ept id="p1">**</ept> と <bpt id="p2">**</bpt>バージョン<ept id="p2">**</ept> のパラメーター、#Requires をスクリプト内でモジュールの特定のバージョンを必要とするキーワードです。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Scripts that use the <bpt id="p1">**</bpt>RequiredVersion<ept id="p1">**</ept> parameter to import modules that are included with existing releases of the Windows operating system do not automatically run in future releases of the Windows operating system.</source>
          <target state="translated">使用するスクリプト、 <bpt id="p1">**</bpt>RequiredVersion<ept id="p1">**</ept> の Windows オペレーティング システムの既存のリリースに含まれるモジュールをインポートするパラメーターに自動的には実行できません将来のリリースの Windows オペレーティング システムです。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>This is because Windows PowerShell module version numbers in future releases of the Windows operating system are higher than module version numbers in existing releases of the Windows operating system.</source>
          <target state="translated">これは、Windows オペレーティング システムの将来のリリースにおける Windows PowerShell モジュールのバージョン番号が、Windows オペレーティング システムの既存のリリースにおけるモジュールのバージョン番号より大きくなるためです。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">このパラメーターは、Windows PowerShell 3.0 で導入されました。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>-Scope</source>
          <target state="translated">スコープ</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Imports the module only into the specified scope.</source>
          <target state="translated">指定されたスコープにのみモジュールをインポートします。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Valid values are:</source>
          <target state="translated">有効な値は、</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Global<ept id="p1">**</ept>: Available to all commands in the session.</source>
          <target state="translated"><bpt id="p1">**</bpt>グローバル<ept id="p1">**</ept>: セッション内のすべてのコマンドを使用します。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Equivalent to the <bpt id="p1">**</bpt>Global<ept id="p1">**</ept> parameter.</source>
          <target state="translated">等価の <bpt id="p1">**</bpt>グローバル<ept id="p1">**</ept> パラメーター。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Local<ept id="p1">**</ept>: Available only in the current scope.</source>
          <target state="translated"><bpt id="p1">**</bpt>ローカル<ept id="p1">**</ept>: 現在のスコープでのみ使用できます。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>By default, the module is imported into the current scope, which could be a script or module.</source>
          <target state="translated">既定では、モジュールは現在のスコープ (スクリプトまたはモジュール) にインポートされます。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">このパラメーターは、Windows PowerShell 3.0 で導入されました。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">このコマンドレットは、共通のパラメーターをサポートしています:-デバッグ、-erroraction、-errorvariable、- InformationAction-InformationVariable、- OutVariable、-OutBuffer、- PipelineVariable、- Verbose、および - WarningVariable です。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">詳細については、about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216) を参照してください。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">入力</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>System.String, System.Management.Automation.PSModuleInfo, System.Reflection.Assembly</source>
          <target state="translated">System.String System.Management.Automation.PSModuleInfo、System.Reflection.Assembly</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>You can pipe a module name, module object, or assembly object to Import-Module.</source>
          <target state="translated">パイプを使用して、モジュール名、モジュール オブジェクト、またはアセンブリ オブジェクトを Import-Module に渡すことができます。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">出力</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>None, System.Management.Automation.PSModuleInfo, or System.Management.Automation.PSCustomObject</source>
          <target state="translated">None、System.Management.Automation.PSModuleInfo、または System.Management.Automation.PSCustomObject</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>By default, Import-Module does not generate any output.</source>
          <target state="translated">既定では、Import-Module は出力を生成しません。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>If you use the PassThru parameter, it generates a System.Management.Automation.PSModuleInfo object that represents the module.</source>
          <target state="translated">PassThru パラメーターを使用すると、モジュールを表す System.Management.Automation.PSModuleInfo オブジェクトを生成します。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>If you use the AsCustomObject parameter, it generates a PSCustomObject object.</source>
          <target state="translated">AsCustomObject パラメーターを使用すると、PSCustomObject オブジェクトを生成します。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">ノート</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Before you can import a module, the module must be installed on the local computer, that is, the module directory must be copied to a directory that is accessible to your local computer.</source>
          <target state="translated">モジュールをインポートするには、そのモジュールがローカル コンピューターにインストールされている必要があります。つまり、モジュール ディレクトリが、ローカル コンピューターからアクセス可能なディレクトリにコピーされている必要があります。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>For more information, see about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311).</source>
          <target state="translated">詳細については、about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311) を参照してください。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> and <bpt id="p2">**</bpt>CIMSession<ept id="p2">**</ept> parameters to import modules that are installed on remote computers.</source>
          <target state="translated">使用することも、 <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> と <bpt id="p2">**</bpt>CIMSession<ept id="p2">**</ept> パラメーターをリモート コンピューターにインストールされているモジュールをインポートします。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>However, commands that use the cmdlets in these modules actually run in the remote session on the remote computer.</source>
          <target state="translated">ただし、これらのモジュールでコマンドレットを使用するコマンドは、実際にはリモート コンピューターのリモート セッションで実行されます。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>If you import members with the same name and the same type into your session, Windows PowerShell uses the member imported last by default.</source>
          <target state="translated">名前と型が同じメンバーをセッションにインポートした場合、Windows PowerShell は既定で、最後にインポートされたメンバーを使用します。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Variables and aliases are replaced, and the originals are not accessible.</source>
          <target state="translated">変数とエイリアスは置き換えられ、オリジナルにはアクセスできなくなります。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Functions, cmdlets and providers are merely "shadowed" by the new members, and they can be accessed by qualifying the command name with the name of its snap-in, module, or function path.</source>
          <target state="translated">関数、コマンドレット、およびプロバイダーは新しいメンバーによって単に "シャドウ" されます。これらには、そのスナップイン、モジュール、または関数のパスの名前でコマンド名を修飾すればアクセスできます。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>To update the formatting data for commands that have been imported from a module, use the Update-FormatData cmdlet.</source>
          <target state="translated">モジュールからインポートされたコマンドの書式設定データを更新するには、Update-formatdata コマンドレットを使用します。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Update-FormatData<ept id="p1">**</ept> also updates the formatting data for commands in the session that were imported from modules.</source>
          <target state="translated"><bpt id="p1">**</bpt>Update-formatdata<ept id="p1">**</ept> もセッション内のモジュールからインポートされたコマンドの書式設定データを更新します。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>If the formatting file for a module changes, you can run an <bpt id="p1">**</bpt>Update-FormatData<ept id="p1">**</ept> command to update the formatting data for imported commands.</source>
          <target state="translated">モジュールの書式設定ファイルが変更された場合は、実行、 <bpt id="p1">**</bpt>Update-formatdata<ept id="p1">**</ept> コマンドのコマンドをインポートしたデータの書式設定を更新します。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>You do not need to import the module again.</source>
          <target state="translated">モジュールをもう一度インポートする必要はありません。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, the core commands that are installed with Windows PowerShell are packaged in modules.</source>
          <target state="translated">Windows PowerShell 3.0 以降、Windows PowerShell と共にインストールされるコア コマンドはモジュールにパッケージ化されています。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 2.0, and in host programs that create older-style sessions in later versions of Windows PowerShell, the core commands are packaged in snap-ins ("PSSnapins").</source>
          <target state="translated">Windows PowerShell 2.0、およびそれ以降のバージョンの Windows PowerShell で古いスタイルのセッションを作成するホスト プログラムでは、コア コマンドはスナップイン ("PSSnapins") にパッケージ化されています。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>The exception is <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, which is always a snap-in.</source>
          <target state="translated">例外は、 <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, 、これは、常にスナップインです。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Also, remote sessions, such as those started by the New-PSSession cmdlet, are older-style sessions that include core snap-ins.</source>
          <target state="translated">また、New-pssession コマンドレットによって開始されたものなどのリモート セッションは、コア スナップインを含む古いスタイルのセッション。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>For information about the <bpt id="p1">**</bpt>CreateDefault2<ept id="p1">**</ept> method that creates newer-style sessions with core modules, see "CreateDefault2 Method" in MSDN at http://msdn.microsoft.com/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2(v=VS.85).aspxhttp://msdn.microsoft.com/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2(v=VS.85).aspx.</source>
          <target state="translated">については、 <bpt id="p1">**</bpt>CreateDefault2<ept id="p1">**</ept> コア モジュールを含む新しいスタイルのセッションを作成するメソッドは、http://msdn.microsoft.com/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2 (v=VS.85).aspxhttp://msdn.microsoft.com/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2 (v=VS.85).aspx に MSDN の CreateDefault2 メソッドを表示。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cannot import Windows PowerShell Core modules from another session.</source>
          <target state="translated"><bpt id="p1">**</bpt>モジュールのインポート<ept id="p1">**</ept> 別のセッションから Windows PowerShell コア モジュールをインポートすることはできません。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell Core modules have names that begin with Microsoft.PowerShell.</source>
          <target state="translated">Windows PowerShell のコア モジュールには、Microsoft.PowerShell で始まる名前があります。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 2.0, some of the property values of the module object, such as the <bpt id="p1">**</bpt>ExportedCmdlets<ept id="p1">**</ept> and <bpt id="p2">**</bpt>NestedModules<ept id="p2">**</ept> property values, were not populated until the module was imported and were not available on the module object that the <bpt id="p3">**</bpt>PassThru<ept id="p3">**</ept> parameter returns.</source>
          <target state="translated">Windows PowerShell 2.0 では、モジュールのプロパティ値の一部などのオブジェクト、 <bpt id="p1">**</bpt>ExportedCmdlets<ept id="p1">**</ept> と <bpt id="p2">**</bpt>NestedModules<ept id="p2">**</ept> モジュールがインポートされ、モジュール オブジェクトに対して使用できなかったまで、プロパティの値は設定されませんでしたが、 <bpt id="p3">**</bpt>PassThru<ept id="p3">**</ept> パラメーターを返します。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 3.0, all module property values are populated.</source>
          <target state="translated">Windows PowerShell 3.0 では、すべてのモジュール プロパティ値が格納されます。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>If you attempt to import a module that contains mixed-mode assemblies that are not compatible with Windows PowerShell 3.0, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> returns an error message like the following one.</source>
          <target state="translated">Windows PowerShell 3.0 と互換性がない混合モードのアセンブリを格納しているモジュールをインポートしようとすると <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> 次のようなエラー メッセージが返されます。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>This error occurs when a module that is designed for Windows PowerShell 2.0 contains at least one mixed-module assembly, that is, an assembly that includes both managed and non-managed code, such as C++ and C#.</source>
          <target state="translated">このエラーは、Windows PowerShell 2.0 を対象とするモジュールには、少なくとも 1 つの混在モジュール アセンブリ、つまり、C++ や c# などのマネージ コードと非マネージ コードを含むアセンブリが含まれている場合に発生します。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>To import a module that contains mixed-mode assemblies, start Windows PowerShell 2.0 by using the following command, and then try the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> command again.</source>
          <target state="translated">混合モードのアセンブリを格納しているモジュールをインポートするには、次のコマンドを使用して Windows PowerShell 2.0 を起動してから再試行して、 <bpt id="p1">**</bpt>Import-module<ept id="p1">**</ept> コマンドを再します。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>To use the CIM session feature, the remote computer must have WS-Management remoting and Windows Management Instrumentation (WMI), which is the Microsoft implementation of the Common Information Model (CIM) standard.</source>
          <target state="translated">CIM セッション機能を使用するには、リモート コンピューターにおいて、WS-Management リモート処理と Common Information Model (CIM) 標準の Microsoft 実装である Windows Management Instrumentation (WMI) が必要です。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The computer must also have the Module Discovery WMI provider or an alternate CIM provider that has the same basic features.</source>
          <target state="translated">さらに、モジュール検出用の WMI プロバイダーまたは同じ基本機能を備えた代替 CIM プロバイダーもコンピューターに必要です。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>You can use the CIM session feature on computers that are not running a Windows operating system and on Windows computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">CIM セッション機能は、Windows オペレーティング システムが実行されていないコンピューターや、Windows PowerShell がある一方で Windows PowerShell リモート処理が有効になっていない Windows コンピューターで使用することができます。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>You can also use the CIM parameters to get CIM modules from computers that have Windows PowerShell remoting enabled, including the local computer.</source>
          <target state="translated">また、CIM パラメーターを使用して、ローカル コンピューターを含め、Windows PowerShell リモート処理が有効になっているコンピューターから CIM モジュールを取得することもできます。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>When you create a CIM session on the local computer, Windows PowerShell uses DCOM, instead of WMI, to create the session.</source>
          <target state="translated">ローカル コンピューター上に CIM セッションを作成するとき、Windows PowerShell は、WMI ではなく DCOM を使用してセッションを作成します。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">関連リンク</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Export-ModuleMember</source>
          <target state="translated">Export-ModuleMember</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Get-Module</source>
          <target state="translated">Get-Module</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>New-Module</source>
          <target state="translated">New-Module</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Remove-Module</source>
          <target state="translated">Remove-Module</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Get-Verb</source>
          <target state="translated">Get-Verb</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>