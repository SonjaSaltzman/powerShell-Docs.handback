<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">50ebc8a737b50aba5a5af49716b59905da74669a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\cookbooks\Using-Static-Classes-and-Methods.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ec41061343dd5e59dc5adbefe744f5a9887b813</xliffext:olskeletonhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Targeting source file commit 03ac4b90d299b316194f1fa932e7dbf62d4b1c8e is lower than latest handed back source file commit 3222a0ba54e87b214c5ebf64e587f920d531956a</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Using Static Classes and Methods</source>
          <target state="translated">정적 클래스 및 메서드 사용</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">powershell,cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Using Static Classes and Methods</source>
          <target state="translated">정적 클래스 및 메서드 사용</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Not all .NET Framework classes can be created by using <bpt id="p1">**</bpt>New<ph id="ph1">\-</ph>Object<ept id="p1">**</ept>.</source>
          <target state="translated">일부 .NET Framework 클래스는 <bpt id="p1">**</bpt>New<ph id="ph1">\-</ph>Object<ept id="p1">**</ept>를 사용하여 만들 수 없습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For example, if you try to create a <bpt id="p1">**</bpt>System.Environment<ept id="p1">**</ept> or a <bpt id="p2">**</bpt>System.Math<ept id="p2">**</ept> object with <bpt id="p3">**</bpt>New<ph id="ph1">\-</ph>Object<ept id="p3">**</ept>, you will get the following error messages:</source>
          <target state="translated">예를 들어 <bpt id="p3">**</bpt>New<ph id="ph1">\-</ph>Object<ept id="p3">**</ept>를 사용하여 <bpt id="p1">**</bpt>System.Environment<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>System.Math<ept id="p2">**</ept> 개체를 만들려고 하면 다음과 같은 오류 메시지가 나타납니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>These errors occur because there is no way to create a new object from these classes.</source>
          <target state="translated">이러한 오류는 .NET Framework 클래스에서 새 개체를 만들 수 없기 때문에 발생합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>These classes are reference libraries of methods and properties that do not change state.</source>
          <target state="translated">.NET Framework 클래스는 상태가 바뀌지 않는 메서드와 속성의 참조 라이브러리로,</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You don't need to create them, you simply use them.</source>
          <target state="translated">직접 만들지 않아도 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Classes and methods such as these are called <bpt id="p1">*</bpt>static classes<ept id="p1">*</ept> because they are not created, destroyed, or changed.</source>
          <target state="translated">만들거나, 제거하거나, 변경할 수 없으므로 이러한 클래스와 메서드를 <bpt id="p1">*</bpt>정적 클래스<ept id="p1">*</ept>라고 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To make this clear we will provide examples that use static classes.</source>
          <target state="translated">이해를 돕기 위해 이 설명서에서는 정적 클래스를 사용하는 예제를 제공합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Getting Environment Data with System.Environment</source>
          <target state="translated">System.Environment를 사용하여 환경 데이터 보기</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Usually, the first step in working with an object in Windows PowerShell is to use Get<ph id="ph1">\-</ph>Member to find out what members it contains.</source>
          <target state="translated">일반적으로 Windows PowerShell에서 개체를 사용할 때 수행하는 첫 단계는 Get<ph id="ph1">\-</ph>Member를 사용하여 해당 개체 안에 들어 있는 멤버를 확인하는 것입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>With static classes, the process is a little different because the actual class is not an object.</source>
          <target state="translated">정적 클래스를 사용할 경우 실제 클래스가 개체가 아니므로 약간 다른 방식으로 이 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Referring to the Static System.Environment Class</source>
          <target state="translated">정적 System.Environment 클래스 참조</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can refer to a static class by surrounding the class name with square brackets.</source>
          <target state="translated">클래스 이름을 대괄호로 묶으면 정적 클래스를 참조할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, you can refer to <bpt id="p1">**</bpt>System.Environment<ept id="p1">**</ept> by typing the name within brackets.</source>
          <target state="translated">예를 들어 대괄호 안에 이름을 입력하여 <bpt id="p1">**</bpt>System.Environment<ept id="p1">**</ept>를 참조할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Doing so displays some generic type information:</source>
          <target state="translated">이렇게 하면 다음과 같은 일반적인 유형 정보가 표시됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>As we mentioned previously, Windows PowerShell automatically prepends '<bpt id="p1">**</bpt>System.<ept id="p1">**</ept>'</source>
          <target state="translated">앞에서 언급한 것처럼 Windows PowerShell에서 <bpt id="p1">**</bpt>New Object<ept id="p1">**</ept>를 사용하면</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>to type names when you use <bpt id="p1">**</bpt>New<ph id="ph1">\-</ph>Object<ept id="p1">**</ept>.</source>
          <target state="translated">자동으로 유형 이름 앞에 '<bpt id="p1">**</bpt>System.<ept id="p1">**</ept>'이 추가됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The same thing happens when using a bracketed type name, so you can specify <bpt id="p1">**</bpt><ph id="ph1">\[</ph>System.Environment]<ept id="p1">**</ept> as <bpt id="p2">**</bpt><ph id="ph2">\[</ph>Environment]<ept id="p2">**</ept>.</source>
          <target state="translated">대괄호로 묶은 유형 이름을 사용하는 경우에도 마찬가지이므로 <bpt id="p1">**</bpt><ph id="ph1">\[</ph>System.Environment]<ept id="p1">**</ept>를 <bpt id="p2">**</bpt><ph id="ph2">\[</ph>Environment]<ept id="p2">**</ept>로 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>System.Environment<ept id="p1">**</ept> class contains general information about the working environment for the current process, which is powershell.exe when working within Windows PowerShell.</source>
          <target state="translated"><bpt id="p1">**</bpt>System.Environment<ept id="p1">**</ept> 클래스에는 현재 프로세스(Windows PowerShell에서 작업하는 경우 powershell.exe임)의 작업 환경에 대한 일반적인 정보가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you try to view details of this class by typing <bpt id="p1">**</bpt><ph id="ph1">\[</ph>System.Environment] | Get<ph id="ph2">\-</ph>Member<ept id="p1">**</ept>, the object type is reported as being <bpt id="p2">**</bpt>System.RuntimeType<ept id="p2">**</ept> , not <bpt id="p3">**</bpt>System.Environment<ept id="p3">**</ept>:</source>
          <target state="translated"><bpt id="p1">**</bpt><ph id="ph1">\[</ph>System.Environment] | Get<ph id="ph2">\-</ph>Member<ept id="p1">**</ept>를 입력하여 이 클래스에 대한 세부 정보를 표시하면 다음과 같이 개체 유형이 <bpt id="p3">**</bpt>System.Environment<ept id="p3">**</ept>가 아니라 <bpt id="p2">**</bpt>System.RuntimeType<ept id="p2">**</ept>으로 표시됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To view static members with Get<ph id="ph1">\-</ph>Member, specify the <bpt id="p1">**</bpt>Static<ept id="p1">**</ept> parameter:</source>
          <target state="translated">Get<ph id="ph1">\-</ph>Member를 사용하여 정적 멤버를 보려면 다음과 같이 <bpt id="p1">**</bpt>Static<ept id="p1">**</ept> 매개 변수를 지정합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>We can now select properties to view from System.Environment.</source>
          <target state="translated">이제 System.Environment를 사용하여 표시할 속성을 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Displaying Static Properties of System.Environment</source>
          <target state="translated">System.Environment의 정적 속성 표시</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The properties of System.Environment are also static, and must be specified in a different way than normal properties.</source>
          <target state="translated">System.Environment의 속성도 정적이므로 일반적인 속성과 다른 방식으로 지정해야 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>We use <bpt id="p1">**</bpt>::<ept id="p1">**</ept> to indicate to Windows PowerShell that we want to work with a static method or property.</source>
          <target state="translated">Windows PowerShell에서는 <bpt id="p1">**</bpt>::<ept id="p1">**</ept>을 사용하여 작업할 정적 메서드나 속성을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To see the command that was used to launch Windows PowerShell, we check the <bpt id="p1">**</bpt>CommandLine<ept id="p1">**</ept> property by typing:</source>
          <target state="translated">Windows PowerShell을 시작하는 데 사용된 명령을 보려면 다음과 같이 입력하여 <bpt id="p1">**</bpt>CommandLine<ept id="p1">**</ept> 속성을 표시합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To check the operating system version, display the OSVersion property by typing:</source>
          <target state="translated">운영 체제 버전을 확인하려면 다음과 같이 입력하여 OSVersion 속성을 표시합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>We can check whether the computer is in the process of shutting down by displaying the <bpt id="p1">**</bpt>HasShutdownStarted<ept id="p1">**</ept> property:</source>
          <target state="translated">다음과 같이 <bpt id="p1">**</bpt>HasShutdownStarted<ept id="p1">**</ept> 속성을 표시하면 컴퓨터가 종료 중인지 여부를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Doing Math with System.Math</source>
          <target state="translated">System.Math를 사용하여 산술 연산 수행</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The System.Math static class is useful for performing some mathematical operations.</source>
          <target state="translated">System.Math 정적 클래스는 일부 산술 연산을 수행하는 데 유용합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The important members of <bpt id="p1">**</bpt>System.Math<ept id="p1">**</ept> are mostly methods, which we can display by using <bpt id="p2">**</bpt>Get<ph id="ph1">\-</ph>Member<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>System.Math<ept id="p1">**</ept>의 중요한 멤버는 대부분 <bpt id="p2">**</bpt>Get<ph id="ph1">\-</ph>Member<ept id="p2">**</ept>를 사용하여 표시할 수 있는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>System.Math has several methods with the same name, but they are distinguished by the type of their parameters.</source>
          <target state="translated">System.Math에는 동일한 이름을 가진 메서드가 여러 개 있지만 유형이 서로 다릅니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Type the following command to list the methods of the <bpt id="p1">**</bpt>System.Math<ept id="p1">**</ept> class.</source>
          <target state="translated">다음 명령을 입력하면 <bpt id="p1">**</bpt>System.Math<ept id="p1">**</ept> 클래스의 메서드를 표시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This displays several mathematical methods.</source>
          <target state="translated">여기에는 여러 가지 산술 메서드가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Here is a list of commands that demonstrate how some of the common methods work:</source>
          <target state="translated">다음은 일반적인 메서드의 작동 방법을 보여 주는 명령 목록입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>