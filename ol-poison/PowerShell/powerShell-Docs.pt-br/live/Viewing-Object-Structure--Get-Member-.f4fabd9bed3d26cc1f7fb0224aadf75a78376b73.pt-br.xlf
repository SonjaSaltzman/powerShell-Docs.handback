<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8cd074bc4314aeb8d50fa31d74d9a1b2d2a37469</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\cookbooks\Viewing-Object-Structure--Get-Member-.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9e7b17026dc81e8a9f6a47790c3b77362021c3e4</xliffext:olskeletonhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Targeting source file commit 03ac4b90d299b316194f1fa932e7dbf62d4b1c8e is lower than latest handed back source file commit 3222a0ba54e87b214c5ebf64e587f920d531956a</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Viewing Object Structure  Get Member</source>
          <target state="translated">Exibindo a estrutura do objeto com Get Member</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">PowerShell, cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Viewing Object Structure (Get-Member)</source>
          <target state="translated">Exibindo a estrutura do objeto (Get-Member)</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Because objects play such a central role in Windows PowerShell, there are several native commands designed to work with arbitrary object types.</source>
          <target state="translated">Como objetos representam um papel central no Windows PowerShell, há vários comandos nativos projetados para trabalhar com tipos de objetos arbitrários.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The most important one is the <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>Member<ept id="p1">**</ept> command.</source>
          <target state="translated">O mais importante é o comando <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>Member<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The simplest technique for analyzing the objects that a command returns is to pipe the output of that command to the <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>Member<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">A técnica mais simples para analisar os objetos que retornam um comando é direcionar a saída desse comando para o cmdlet <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>Member<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>Member<ept id="p1">**</ept> cmdlet shows you the formal name of the object type and a complete listing of its members.</source>
          <target state="translated">O cmdlet <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>Member<ept id="p1">**</ept> mostra o nome formal do tipo de objeto e uma listagem completa de seus membros.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The number of elements that are returned can sometimes be overwhelming.</source>
          <target state="translated">O número de elementos que são retornados, às vezes, pode ser imenso.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, a process object can have over 100 members.</source>
          <target state="translated">Por exemplo, um objeto de processo pode ter mais de 100 membros.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To see all the members of a Process object and page the output so you can view all of it, type:</source>
          <target state="translated">Para ver todos os membros de um objeto e Process e paginar a saída para que você possa exibir tudo, digite:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The output from this command will look something like this:</source>
          <target state="translated">A saída deste comando será parecida com isto:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>We can make this long list of information more usable by filtering for elements we want to see.</source>
          <target state="translated">Podemos tornar essa longa lista de informações mais utilizável com filtragem dos elementos que você deseja ver.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>Member<ept id="p1">**</ept> command lets you list only members that are properties.</source>
          <target state="translated">O comando <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>Member<ept id="p1">**</ept> permite listar somente os membros que são propriedades.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>There are several forms of properties.</source>
          <target state="translated">Há várias formas de propriedades.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The cmdlet displays properties of any type if we set the <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>MemberMemberType<ept id="p1">**</ept> parameter to the value <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept>.</source>
          <target state="translated">O cmdlet exibirá as propriedades de qualquer tipo se definirmos o parâmetro <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>MemberMemberType<ept id="p1">**</ept> com o valor <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The resulting list is still very long, but a bit more manageable:</source>
          <target state="translated">A lista resultante ainda é muito longa, mas um pouco mais fácil de gerenciar:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The allowed values of MemberType are AliasProperty, CodeProperty, Property, NoteProperty, ScriptProperty, Properties, PropertySet, Method, CodeMethod, ScriptMethod, Methods, ParameterizedProperty, MemberSet, and All.</source>
          <target state="translated">Os valores permitidos para MemberType são AliasProperty, CodeProperty, Property, NoteProperty, ScriptProperty, Properties, PropertySet, Method, CodeMethod, ScriptMethod, Methods, ParameterizedProperty, MemberSet e All.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>There are over 60 properties for a process.</source>
          <target state="translated">Há mais de 60 propriedades para um processo.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The reason Windows PowerShell often shows only a handful of properties for any well<ph id="ph1">\-</ph>known object is that showing all of them would produce an unmanageable amount of information.</source>
          <target state="translated">O motivo que faz o Windows PowerShell geralmente mostrar apenas algumas propriedades para qualquer objeto conhecido é que mostrar todas elas produziria uma quantidade incontrolável de informações.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Windows PowerShell determines how to display an object type by using information stored in XML files that have names ending in .format.ps1xml.</source>
          <target state="translated">O Windows PowerShell determina como exibir um tipo de objeto usando informações armazenadas em arquivos XML que têm nomes que terminam com .format.ps1xml.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The formatting data for process objects, which are .NET System.Diagnostics.Process objects, is stored in PowerShellCore.format.ps1xml.</source>
          <target state="translated">Os dados de formatação para objetos de processo, que são objetos .NET System.Diagnostics.Process, são armazenados em PowerShellCore.format.ps1xml.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you need to look at properties other than those that Windows PowerShell displays by default, you will need to format the output data yourself.</source>
          <target state="translated">Se você precisar examinar propriedades diferentes que o Windows PowerShell exibe por padrão, deverá formatar os dados de saída por conta própria.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This can be done by using the format cmdlets.</source>
          <target state="translated">Isso pode ser feito usando os cmdlets de formato.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>