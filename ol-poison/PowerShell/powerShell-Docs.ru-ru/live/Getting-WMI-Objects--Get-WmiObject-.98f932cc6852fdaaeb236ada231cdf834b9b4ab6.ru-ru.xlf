<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e6f58860c7aebcf60d8df562f009fce0db3c955</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\cookbooks\Getting-WMI-Objects--Get-WmiObject-.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">680809545ec4f06e2a2f6fcacacd14ba3c89f051</xliffext:olskeletonhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Targeting source file commit 03ac4b90d299b316194f1fa932e7dbf62d4b1c8e is lower than latest handed back source file commit 3222a0ba54e87b214c5ebf64e587f920d531956a</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Getting WMI Objects  Get WmiObject</source>
          <target state="translated">Получение объектов WMI с помощью Get-WmiObject</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">powershell,командлет</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Getting WMI Objects (Get-WmiObject)</source>
          <target state="translated">Получение объектов WMI (Get-WmiObject)</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Getting WMI Objects (Get<ph id="ph1">\-</ph>WmiObject)</source>
          <target state="translated">Получение объектов WMI (Get<ph id="ph1">\-</ph>WmiObject)</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Windows Management Instrumentation (WMI) is a core technology for Windows system administration because it exposes a wide range of information in a uniform manner.</source>
          <target state="translated">Инструментарий управления Windows (WMI) является ключевой технологией системного администрирования Windows, поскольку предоставляет широкий спектр сведений в унифицированном виде.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Because of how much WMI makes possible, the Windows PowerShell cmdlet for accessing WMI objects, <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>WmiObject<ept id="p1">**</ept>, is one of the most useful for doing real work.</source>
          <target state="translated">Поскольку спектр возможностей инструментария WMI достаточно широк, командлет <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>WmiObject<ept id="p1">**</ept> Windows PowerShell, служащий для доступа к объектам WMI, оказывается одним из наиболее полезных.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>We are going to discuss how to use Get<ph id="ph1">\-</ph>WmiObject to access WMI objects and then how to use WMI objects to do specific things.</source>
          <target state="translated">Мы рассмотрим, как командлет Get<ph id="ph1">\-</ph>WmiObject обращается к объектам WMI и как использовать объекты WMI для выполнения определенных задач.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Listing WMI Classes</source>
          <target state="translated">Вывод списка классов WMI</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The first problem most WMI users encounter is trying to find out what can be done with WMI.</source>
          <target state="translated">Первая проблема, с которой сталкивается большинство пользователей WMI, — это выяснение того, что можно сделать с помощью инструментария WMI.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>WMI classes describe the resources that can be managed.</source>
          <target state="translated">Классы WMI описывают ресурсы, которыми можно управлять.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>There are hundreds of WMI classes, some of which contain dozens of properties.</source>
          <target state="translated">Имеются сотни классов WMI, некоторые из которых содержат множество свойств.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>WmiObject<ept id="p1">**</ept> addresses this problem by making WMI discoverable.</source>
          <target state="translated">Командлет <bpt id="p1">**</bpt>Get<ph id="ph1">\-</ph>WmiObject<ept id="p1">**</ept> решает эту проблему, предоставляя сведения об инструментарии WMI.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can get a list of the WMI classes available on the local computer by typing:</source>
          <target state="translated">Список классов WMI, доступных на локальном компьютере, можно получить, введя команду:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can retrieve the same information from a remote computer by using the ComputerName parameter, specifying a computer name or IP address:</source>
          <target state="translated">Можно извлечь те же сведения на удаленном компьютере, указав в параметре ComputerName имя компьютера или его IP-адрес:</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The class listing returned by remote computers may vary due to the specific operating system the computer is running and the particular WMI extensions added by installed applications.</source>
          <target state="translated">Список классов, возвращаемый удаленным компьютером, может различаться в зависимости от операционной системы компьютера и определенных расширений WMI, добавленных установленными приложениями.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When using Get<ph id="ph1">\-</ph>WmiObject to connect to a remote computer, the remote computer must be running WMI and, under the default configuration, the account you are using must be in the local administrators group on the remote computer.</source>
          <target state="translated">При использовании командлета Get<ph id="ph1">\-</ph>WmiObject для подключения к удаленному компьютеру на последнем должен быть запущен инструментарий WMI, а используемая учетная запись должна входить в группу локальных администраторов на удаленном компьютере (конфигурация по умолчанию).</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The remote system does not need to have Windows PowerShell installed.</source>
          <target state="translated">На удаленной системе может быть не установлена оболочка Windows PowerShell.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This allows you to administer operating systems that are not running Windows PowerShell, but do have WMI available.</source>
          <target state="translated">Это позволяет администрировать операционные системы, на которых не запущена оболочка Windows PowerShell, но имеется инструментарий WMI.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can even include the ComputerName when connecting to the local system.</source>
          <target state="translated">При подключении к локальной системе можно указать и параметр ComputerName.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can use the local computer's name, its IP address (or the loopback address 127.0.0.1), or the WMI<ph id="ph1">\-</ph>style '.' as the computer name.</source>
          <target state="translated">Можно использовать имя локального компьютера, его IP-адрес (или петлевой адрес 127.0.0.1) либо "." (в стиле инструментария WMI) в качестве имени компьютера.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you are running Windows PowerShell on a computer named Admin01 with IP address 192.168.1.90, the following commands will all return the WMI class listing for that computer:</source>
          <target state="translated">Если на компьютере с именем "Admin01" и IP-адресом 192.168.1.90 запущена оболочка Windows PowerShell, следующие команды возвратят список классов WMI для этого компьютера:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Get<ph id="ph1">\-</ph>WmiObject uses the root<ph id="ph2">\/</ph>cimv2 namespace by default.</source>
          <target state="translated">Командлет Get<ph id="ph1">\-</ph>WmiObject использует по умолчанию пространство имен root<ph id="ph2">\/</ph>rootcimv2.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If you want to specify another WMI namespace, use the <bpt id="p1">**</bpt>Namespace<ept id="p1">**</ept> parameter and specify the corresponding namespace path:</source>
          <target state="translated">Чтобы задать другое пространство имен WMI, воспользуйтесь параметром <bpt id="p1">**</bpt>Namespace<ept id="p1">**</ept> и укажите путь к соответствующему пространству имен:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Displaying WMI Class Details</source>
          <target state="translated">Вывод сведений о классе WMI</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you already know the name of a WMI class, you can use it to get information immediately.</source>
          <target state="translated">Если имя класса WMI уже известно, можно немедленно получить сведения о нем.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, one of the WMI classes commonly used for retrieving information about a computer is <bpt id="p1">**</bpt>Win32<ph id="ph1">\_</ph>OperatingSystem<ept id="p1">**</ept>.</source>
          <target state="translated">Например, одним из классов WMI, используемых для получения сведений о компьютере, является <bpt id="p1">**</bpt>Win32<ph id="ph1">\_</ph>OperatingSystem<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Although we are showing all of the parameters, the command can be expressed in a more succinct way.</source>
          <target state="translated">Хотя показаны все параметры, команда может быть представлена в более короткой форме.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ComputerName<ept id="p1">**</ept> parameter is not necessary when connecting to the local system.</source>
          <target state="translated">Параметр <bpt id="p1">**</bpt>ComputerName<ept id="p1">**</ept> не является обязательным при подключении к локальной системе.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>We show it to demonstrate the most general case and remind you about the parameter.</source>
          <target state="translated">Мы покажем это, чтобы продемонстрировать наиболее общий случай и напомнить об этом параметре.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Namespace<ept id="p1">**</ept> defaults to root<ph id="ph1">\/</ph>cimv2, and can be omitted as well.</source>
          <target state="translated">По умолчанию параметр <bpt id="p1">**</bpt>Namespace<ept id="p1">**</ept> имеет значение root<ph id="ph1">\/</ph>rootcimv2 и может быть опущен.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Finally, most cmdlets allow you to omit the name of common parameters.</source>
          <target state="translated">В конце концов, большинство командлетов позволяет опускать имя типовых параметров.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>With Get<ph id="ph1">\-</ph>WmiObject, if no name is specified for the first parameter, Windows PowerShell treats it as the <bpt id="p1">**</bpt>Class<ept id="p1">**</ept> parameter.</source>
          <target state="translated">Если в командлете Get<ph id="ph1">\-</ph>WmiObject не указано имя для первого параметра, Windows PowerShell считает его параметром <bpt id="p1">**</bpt>Class<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This means the last command could have been issued by typing:</source>
          <target state="translated">Это значит, что последнюю команду можно было ввести в таком виде:</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Win32<ph id="ph1">\_</ph>OperatingSystem<ept id="p1">**</ept> class has many more properties than those displayed here.</source>
          <target state="translated">Класс <bpt id="p1">**</bpt>Win32<ph id="ph1">\_</ph>OperatingSystem<ept id="p1">**</ept> имеет больше свойств, чем показано здесь.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can use Get<ph id="ph1">\-</ph>Member to see all the properties.</source>
          <target state="translated">Можно воспользоваться командлетом Get<ph id="ph1">\-</ph>Member, чтобы показать все свойства.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The properties of a WMI class are automatically available like other object properties:</source>
          <target state="translated">Свойства класса WMI автоматически доступны, как и другие свойства объекта:</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Displaying Non<ph id="ph1">\-</ph>Default Properties with Format Cmdlets</source>
          <target state="translated">Вывод свойств, отличных от используемых по умолчанию, с помощью командлетов Format</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you want information contained in the <bpt id="p1">**</bpt>Win32<ph id="ph1">\_</ph>OperatingSystem<ept id="p1">**</ept> class that is not displayed by default, you can display it by using the <bpt id="p2">**</bpt>Format<ept id="p2">**</ept> cmdlets.</source>
          <target state="translated">Если необходимо показать сведения, содержащиеся в классе <bpt id="p1">**</bpt>Win32<ph id="ph1">\_</ph>OperatingSystem<ept id="p1">**</ept>, которые не выводятся по умолчанию, можно воспользоваться командлетом <bpt id="p2">**</bpt>Format<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For example, if you want to display available memory data, type:</source>
          <target state="translated">Например, если нужно показать сведения о количестве доступной памяти, введите:</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Wildcards work with property names in <bpt id="p1">**</bpt>Format<ph id="ph1">\-</ph>Table<ept id="p1">**</ept>, so the final pipeline element can be reduced to <bpt id="p2">**</bpt>Format<ph id="ph2">\-</ph>Table <ph id="ph3">\-</ph>Property TotalV<ph id="ph4">\&amp;</ph>#42;,Free<ph id="ph5">\&amp;</ph>#42;<ept id="p2">**</ept></source>
          <target state="translated">Подстановочные знаки допускаются в именах свойств в командлете <bpt id="p1">**</bpt>Format<ph id="ph1">\-</ph>Table<ept id="p1">**</ept>, поэтому последний элемент конвейера может быть сокращен до <bpt id="p2">**</bpt>Format<ph id="ph2">\-</ph>Table <ph id="ph3">\-</ph>Property TotalV<ph id="ph4">\&amp;</ph>#42;,Free<ph id="ph5">\&amp;</ph>#42;<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The memory data might be more readable if you format it as a list by typing:</source>
          <target state="translated">Сведения о памяти можно представить в более понятном виде, отформатировав список с помощью следующей команды:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>