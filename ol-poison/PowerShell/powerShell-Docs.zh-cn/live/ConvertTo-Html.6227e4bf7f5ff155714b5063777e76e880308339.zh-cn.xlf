<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7e72c8936ad0538bd47a9d6344c68be90d0079be</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\ConvertTo-Html.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f26578a3ab470ca5ee963510a9e86350ccd02df3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f40df53bbd133ac36778cfb3bf2d1004e8f1baf2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>ConvertTo-Html</source>
          <target state="translated">ConvertTo-Html</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ConvertTo-Html</source>
          <target state="translated">ConvertTo-Html</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Converts Microsoft .NET Framework objects into HTML that can be displayed in a Web browser.</source>
          <target state="translated">将 Microsoft .NET Framework 对象转换为可在 Web 浏览器中显示的 HTML。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Page (Default)</source>
          <target state="translated">页 （默认）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Fragment</source>
          <target state="translated">片段</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The ConvertTo-Html cmdlet converts .NET Framework objects into HTML that can be displayed in a Web browser.</source>
          <target state="translated">ConvertTo-Html cmdlet 将 .NET Framework 对象转换为可在 Web 浏览器中显示的 HTML。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can use this cmdlet to display the output of a command in a Web page.</source>
          <target state="translated">可使用此 cmdlet 在网页上显示命令的输出内容。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can use the parameters of ConvertTo-Html to select object properties, to specify a table or list format, to specify the HTML page title, to add text before and after the object, and to return only the table or list fragment, instead of a strict DTD page.</source>
          <target state="translated">你可以使用 ConvertTo-Html 的参数来选择对象属性、指定表格或列表格式、指定 HTML 页面标题、在对象前后添加文本，以及仅返回表格或列表片段，而不是完整的 DTD 页面。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When you submit multiple objects to ConvertTo-Html, Windows PowerShell creates the table (or list) based on the properties of the first object that you submit.</source>
          <target state="translated">当向 ConvertTo-Html 提交多个对象时，Windows PowerShell 基于所提交的第一个对象的属性来创建表格（或列表）。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the remaining objects do not have one of the specified properties, the property value of that object is an empty cell.</source>
          <target state="translated">如果剩余的对象不具有所指定的属性之一，则该对象的属性值为空单元。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If the remaining objects have additional properties, those property values are not included in the file.</source>
          <target state="translated">如果剩余的对象有其他属性，这些属性值将不包括在文件中。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 示例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page that displays the properties of the current date.</source>
          <target state="translated">此命令创建用来显示当前日期的属性的 HTML 页。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It uses the InputObject parameter to submit the results of a Get-Date command to the ConvertTo-Html cmdlet.</source>
          <target state="translated">它使用 InputObject 参数将 Get-Date 命令的结果提交到 ConvertTo-Html cmdlet。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page that lists the Windows PowerShell aliases in the current console.</source>
          <target state="translated">此命令创建 HTML 页，该页列出了当前控制台中的 Windows PowerShell 别名。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The command uses the Get-Alias cmdlet to get the aliases.</source>
          <target state="translated">该命令使用 Get-Alias cmdlet 来获取别名。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It uses the pipeline operator (|) to send the aliases to the ConvertTo-Html cmdlet, which creates the HTML page.</source>
          <target state="translated">它使用管道运算符 (|) 将别名发送到 ConvertTo-Html cmdlet，此 cmdlet 将创建 HTML 页。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page called pslog.htm that displays the events in the Windows PowerShell event log on the local computer.</source>
          <target state="translated">此命令创建一个名为 pslog.htm 的 HTML 页，该页将显示本地计算机上 Windows PowerShell 事件日志中的事件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It uses the Get-EventLog cmdlet to get the events in the Windows PowerShell log and then uses the pipeline operator (|) to send the events to the ConvertTo-Html cmdlet.</source>
          <target state="translated">它使用 Get-EventLog cmdlet 获取 Windows PowerShell 日志中的事件，然后使用管道运算符 (|) 将事件发送到 ConvertTo-Html cmdlet。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The command also uses the redirection operator (<ph id="ph1">\&gt;</ph>) to send the HTML code to the pslog.htm file.</source>
          <target state="translated">该命令还使用重定向运算符 (<ph id="ph1">\&gt;</ph>) 来将 HTML 代码发送到 pslog.htm 文件。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>These commands create and open an HTML page that lists the name, path, and company of the processes on the local computer.</source>
          <target state="translated">这些命令创建并打开一个 HTML 页，该页列出了本地计算机上进程的名称、路径和所属公司。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Process cmdlet to get objects that represent the processes running on the computer.</source>
          <target state="translated">第一个命令使用 Get-Process cmdlet 获取用来表示计算机中运行的进程的对象。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The command uses the pipeline operator (|) to send the process objects to the ConvertTo-Html cmdlet.</source>
          <target state="translated">该命令使用管道运算符 (|) 将进程对象发送到 ConvertTo-Html cmdlet。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The command uses the Property parameter to select three properties of the process objects to be included in the table.</source>
          <target state="translated">该命令使用 Property 参数来选择要包括在表中的进程对象的三个属性。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The command uses the Title parameter to specify a title for the HTML page.</source>
          <target state="translated">该命令使用 Title 参数来指定 HTML 页的标题。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The command also uses the redirection operator (<ph id="ph1">\&gt;</ph>) to send the resulting HTML to a file named Proc.htm.</source>
          <target state="translated">该命令还使用重定向运算符 (<ph id="ph1">\&gt;</ph>) 将生成的 HTML 发送到名为 Proc.htm 的文件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The second command uses the Invoke-Item cmdlet (alias = ii) to open the Proc.htm in the default browser.</source>
          <target state="translated">第二个命令使用 Invoke-Item cmdlet（别名为 ii）在默认浏览器中打开 Proc.htm。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The two commands are separated by a semicolon (;).</source>
          <target state="translated">这两个命令以分号 (;) 来分隔。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page of the service objects that the Get-Service cmdlet returns.</source>
          <target state="translated">该命令创建 Get-Service cmdlet 返回的服务对象的 HTML 页。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The command uses the CssUri parameter to specify a cascading style sheet for the HTML page.</source>
          <target state="translated">该命令使用 CssUri 参数来指定 HTML 页的级联样式表。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The CssUri parameter adds an additional "<ph id="ph1">\&lt;</ph>link rel="stylesheet" type="text/css" tag to the resulting HTML.</source>
          <target state="translated">CssUri 参数将添加一个附加的"<ph id="ph1">\&lt;</ph>k rel ="stylesheet"type ="text/css"标记添加到生成的 HTML。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The HREF attribute in the tag contains the name of the style sheet.</source>
          <target state="translated">标记中的 HREF 属性包含该样式表的名称。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This command creates an HTML page of the service objects that the Get-Service cmdlet returns.</source>
          <target state="translated">该命令创建 Get-Service cmdlet 返回的服务对象的 HTML 页。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The command uses the As parameter to specify a list format.</source>
          <target state="translated">该命令使用 As 参数来指定列表格式。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The redirection operator (<ph id="ph1">\&gt;</ph>) sends the resulting HTML to the Services.htm file.</source>
          <target state="translated">重定向运算符 (<ph id="ph1">\&gt;</ph>) 将生成的 HTML 发送到 Services.htm 文件。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This command uses ConvertTo-Html to generate an HTML table of the current date.</source>
          <target state="translated">此命令使用 ConvertTo-Html 来生成当前日期的 HTML 表。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The command uses the Get-Date cmdlet to get the current date.</source>
          <target state="translated">该命令使用 Get-Date cmdlet 来获取当前日期。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the results to the ConvertTo-Html cmdlet (aliased as "cth").</source>
          <target state="translated">它使用管道运算符 (|) 将结果发送至 ConvertTo-Html cmdlet（别名为“cth”）。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The ConvertTo-Html command includes the Fragment parameter, which limits the output to an HTML table.</source>
          <target state="translated">该 ConvertTo-Html 命令包括 Fragment 参数，该参数限制向 HTML 表进行的输出。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>As a result, the other elements of an HTML page, such as the <ph id="ph1">\&lt;</ph>HEAD<ph id="ph2">\&gt;</ph> and <ph id="ph3">\&lt;</ph>BODY<ph id="ph4">\&gt;</ph> tags, are omitted.</source>
          <target state="translated">因此，其他元素的 html 页上，如 <ph id="ph1">\&lt;</ph>H e a d<ph id="ph2">\&gt;</ph> 和 <ph id="ph3">\&lt;</ph>正文<ph id="ph4">\&gt;</ph> 标记中，将省略。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 8 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 8 --------------------------</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This command uses the Get-EventLog cmdlet to get events from the "Windows PowerShell" event log.</source>
          <target state="translated">该命令使用 Get-EventLog cmdlet 获取“Windows PowerShell”事件日志中的事件。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the events to the ConvertTo-Html cmdlet, which converts the events to HTML format.</source>
          <target state="translated">它使用管道运算符 (|) 将事件发送到 ConvertTo-Html cmdlet，此 cmdlet 将事件转换为 HTML 格式。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The ConvertTo-Html command uses the Property parameter to select only the ID, Level, and Task properties of the event.</source>
          <target state="translated">ConvertTo-Html 命令使用 Property 参数来仅选择事件的 ID、Level 和 Task 属性。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 9 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 9 --------------------------</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This command creates and opens a Web page that displays the services on the computer that begin with "A".</source>
          <target state="translated">此命令创建并打开网页，该页显示计算机中以“A”开头的服务。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>It uses the Title, Body, PreContent, and PostContent parameters of ConvertTo-Html to customize the output.</source>
          <target state="translated">它使用 ConvertTo-Html 的 Title、Body、PreContent 和 PostContent 参数来自定义输出。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The first part of the command uses the Get-Service cmdlet to get the services on the computer that begin with "A".</source>
          <target state="translated">该命令的第一部分使用 Get-Service cmdlet 来获取计算机中以“A”开头的服务。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator (|) to send the results to the ConvertTo-Html cmdlet.</source>
          <target state="translated">该命令使用管道运算符 (|) 将结果发送到 ConvertTo-Html cmdlet。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The command uses a redirection operator (<ph id="ph1">\&gt;</ph>) to send the output to the Services.htm file.</source>
          <target state="translated">该命令使用重定向运算符 (<ph id="ph1">\&gt;</ph>) 将输出发送到 Services.htm 文件。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A semicolon (;) ends the first command and starts a second command, which uses the Invoke-Item cmdlet (alias = "ii") to open the Services.htm file in the default browser.</source>
          <target state="translated">分号 (;) 结束第一个命令并启动第二个命令，第二个命令将使用 Invoke-Item cmdlet（别名为“ii”）在默认浏览器中打开 Services.htm 文件。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>-As</source>
          <target state="translated">身份</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Determines whether the object is formatted as a table or a list.</source>
          <target state="translated">确定将对象设置为表格格式还是列表格式。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Valid values are TABLE and LIST.</source>
          <target state="translated">有效值为 TABLE 和 LIST。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The default value is TABLE.</source>
          <target state="translated">默认值为 TABLE。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The TABLE value generates an HTML table that resembles the Windows PowerShell table format.</source>
          <target state="translated">TABLE 值会生成一个类似于 Windows PowerShell 表格格式的 HTML 表。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The header row displays the property names.</source>
          <target state="translated">标题行显示属性名称。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Each table row represents an object and displays the object's values for each property.</source>
          <target state="translated">表格的每一行表示一个对象，并显示该对象的每个属性值。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The LIST value generates a two-column HTML table for each object that resembles the Windows PowerShell list format.</source>
          <target state="translated">LIST 值为每个对象生成一个包含两列的 HTML 表，该表类似于 Windows PowerShell 列表格式。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The first column displays the property name; the second column displays the property value.</source>
          <target state="translated">第一列显示属性名称；第二列显示属性值。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-Body</source>
          <target state="translated">正文</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Specifies the text to add after the opening <ph id="ph1">\&lt;</ph>BODY<ph id="ph2">\&gt;</ph> tag.</source>
          <target state="translated">指定要在开始添加的文本 <ph id="ph1">\&lt;</ph>正文<ph id="ph2">\&gt;</ph> 标记。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>By default, there is no text in that position.</source>
          <target state="translated">默认情况下，该位置没有文本。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-CssUri</source>
          <target state="translated">-CssUri</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Specifies the Uniform Resource Identifier (URI) of the cascading style sheet (CSS) that is applied to the HTML file.</source>
          <target state="translated">指定级联样式表 (CSS) 的统一资源标识符 (URI)，该 URI 适用于 HTML 文件。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The URI is included in a style sheet link in the output.</source>
          <target state="translated">输出中的样式表链接中包含该 URI。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>-Fragment</source>
          <target state="translated">片段</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Generates only an HTML table.</source>
          <target state="translated">仅生成一个 HTML 表。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The HTML, HEAD, TITLE, and BODY tags are omitted.</source>
          <target state="translated">省略了 HTML、HEAD、TITLE 和 BODY 标记。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>-Head</source>
          <target state="translated">-H e a d</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Specifies the content of the <ph id="ph1">\&lt;</ph>HEAD<ph id="ph2">\&gt;</ph> tag.</source>
          <target state="translated">指定的内容 <ph id="ph1">\&lt;</ph>H e a d<ph id="ph2">\&gt;</ph> 标记。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The default is "<ph id="ph1">\&lt;</ph>title<ph id="ph2">\&gt;</ph>HTML TABLE<ph id="ph3">\&lt;</ph>/title<ph id="ph4">\&gt;</ph>".</source>
          <target state="translated">默认值是"<ph id="ph1">\&lt;</ph>标题<ph id="ph2">\&gt;</ph>HTML 表<ph id="ph3">\&lt;</ph>/t<ph id="ph4">\&gt;</ph>"。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If you use the Head parameter, the Title parameter is ignored.</source>
          <target state="translated">如果使用 Head 参数，则忽略 Title 参数。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Specifies the objects to be represented in HTML.</source>
          <target state="translated">指定要用 HTML 表示的对象。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects or type a command or expression that gets the objects.</source>
          <target state="translated">输入一个包含对象的变量，或键入可获取对象的命令或表达式。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If you use this parameter to submit multiple objects, such as all of the services on a computer, ConvertTo-Html creates a table that displays the properties of a collection or of an array of objects (System.Object<ph id="ph1">\[\]</ph>).</source>
          <target state="translated">如果使用此参数来提交多个对象，如所有服务的计算机上，Convertto-html 将创建表，其中显示的属性集合或对象的数组 (System.Object<ph id="ph1">\[\]</ph>)。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>To create a table of the individual objects, use the pipeline operator to pipe the objects to ConvertTo-Html.</source>
          <target state="translated">若要创建由单个对象组成的表格，请使用管道运算符通过管道将对象传递给 ConvertTo-Html。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>-PostContent</source>
          <target state="translated">-PostContent</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Specifies text to add after the closing <ph id="ph1">\&lt;</ph>/TABLE<ph id="ph2">\&gt;</ph> tag.</source>
          <target state="translated">指定要添加在结束后的文本 <ph id="ph1">\&lt;</ph>/表<ph id="ph2">\&gt;</ph> 标记。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>By default, there is no text in that position.</source>
          <target state="translated">默认情况下，该位置没有文本。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>-PreContent</source>
          <target state="translated">-PreContent</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Specifies text to add before the opening <ph id="ph1">\&lt;</ph>TABLE<ph id="ph2">\&gt;</ph> tag.</source>
          <target state="translated">指定在开始之前要添加的文本 <ph id="ph1">\&lt;</ph>表<ph id="ph2">\&gt;</ph> 标记。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>By default, there is no text in that position.</source>
          <target state="translated">默认情况下，该位置没有文本。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>-Property</source>
          <target state="translated">属性</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Includes the specified properties of the objects in the HTML.</source>
          <target state="translated">在 HTML 中包括所指定的对象属性。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The value of the Property parameter can be a new calculated property.</source>
          <target state="translated">Property 参数的值可以是新的计算属性。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To create a calculated property, use a hash table.</source>
          <target state="translated">若要创建计算属性，请使用哈希表。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Valid keys are:</source>
          <target state="translated">有效键包括：</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Label <ph id="ph1">\&lt;</ph>string<ph id="ph2">\&gt;</ph> (unlike with Select-Object or Format-Table, the Name key is not supported)</source>
          <target state="translated">标签 <ph id="ph1">\&lt;</ph>字符串<ph id="ph2">\&gt;</ph> （与不同的是与 Select-object 或表格格式，名称密钥不支持）</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Expression <ph id="ph1">\&lt;</ph>string<ph id="ph2">\&gt;</ph> or <ph id="ph3">\&lt;</ph>script block</source>
          <target state="translated">表达式 <ph id="ph1">\&lt;</ph>字符串<ph id="ph2">\&gt;</ph> 或 <ph id="ph3">\&lt;</ph>脚本块</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>-Title</source>
          <target state="translated">-标题</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Specifies a title for the HTML file, that is, the text that appears between the <ph id="ph1">\&lt;</ph>TITLE<ph id="ph2">\&gt;</ph> tags.</source>
          <target state="translated">指定为 HTML 文件，即之间显示的文本标题 <ph id="ph1">\&lt;</ph>标题<ph id="ph2">\&gt;</ph> 标记。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>You can pipe any .NET object to ConvertTo-Html.</source>
          <target state="translated">可以通过管道将任何 .NET 对象传递给 ConvertTo-Html。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>ConvertTo-Html returns series of strings that comprise valid HTML.</source>
          <target state="translated">ConvertTo-Html 返回一系列包含有效 HTML 的字符串。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>To use this cmdlet, pipe one or more objects to the cmdlet or use the InputObject parameter to specify the object.</source>
          <target state="translated">若要使用此 cmdlet，请通过管道将一个或多个对象传递给该 cmdlet，或使用 InputObject 参数来指定对象。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>When the input consists of multiple objects, the output of these two methods is quite different.</source>
          <target state="translated">当输入由多个对象组成时，这两种方法的输出将完全不同。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>When you pipe multiple objects to a cmdlet, Windows PowerShell sends the objects to the cmdlet one at a time.</source>
          <target state="translated">当通过管道传递给 cmdlet 的多个对象时，Windows PowerShell 将一次将对象发送到其中一个 cmdlet 上。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>As a result, ConvertTo-Html creates a table that displays the individual objects.</source>
          <target state="translated">因此，ConvertTo-Html 将创建一个显示单独对象的表格。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>For example, if you pipe the processes on a computer to ConvertTo-Html, the resulting table displays all of the processes.</source>
          <target state="translated">例如，如果通过管道将计算机上的进程传递给 ConvertTo-Html，则生成的表格将显示所有进程。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>When you use the InputObject parameter to submit multiple objects, ConvertTo-Html receives these objects as a collection or as an array.</source>
          <target state="translated">当你使用 InputObject 参数提交多个对象时，Convertto-html 将接收这些对象，作为一个集合或数组。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>As a result, it creates a table that displays the array and its properties, not the items in the array.</source>
          <target state="translated">因此，它会创建一个表格，该表格将显示数组及其属性，而非数组中的项。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>For example, if you use InputObject to submit the processes on a computer to ConvertTo-Html, the resulting table displays an object array (System.Object<ph id="ph1">\[\]</ph>) and its properties.</source>
          <target state="translated">例如，如果你使用 InputObject 提交给 Convertto-html 计算机上的进程，则生成的表将显示一个对象数组 (System.Object<ph id="ph1">\[\]</ph>) 并将其属性。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>To comply with the XHTML Strict DTD,the DOCTYPE tag is modified accordingly:</source>
          <target state="translated">若要符合 XHTML Strict DTD，应相应修改 DOCTYPE 标记：</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>(<ph id="ph1">\&lt;</ph>!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"<ph id="ph2">\&gt;</ph>)</source>
          <target state="translated">(<ph id="ph1">\&lt;</ph>!DOCTYPE html PUBLIC"-//W3C//DTD XHTML 1.0 Strict / / EN""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"<ph id="ph2">\&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>ConvertTo-Csv</source>
          <target state="translated">ConvertTo-Csv</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>ConvertTo-Xml</source>
          <target state="translated">ConvertTo-Xml</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>