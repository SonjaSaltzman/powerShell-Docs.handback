<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">efeab6f05e194e5a2b4ab013bc33c27dd23b575e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\Export-FormatData.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a718770ab414823235775bb5ecd1e9238d8aca2b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eae8fbc0c8ba762b4da61a07de91f449a0320bf0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Export-FormatData</source>
          <target state="translated">Export-formatdata</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Export-FormatData</source>
          <target state="translated">Export-formatdata</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Saves formatting data from the current session in a formatting file.</source>
          <target state="translated">将当前会话中的格式设置数据保存在格式设置文件中。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ByPath (Default)</source>
          <target state="translated">ByPath （默认值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ByLiteralPath</source>
          <target state="translated">ByLiteralPath</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Export-FormatData cmdlet creates Windows PowerShell formatting files (format.ps1xml) from the formatting objects in the current session.</source>
          <target state="translated">Export-FormatData cmdlet 可从当前会话中的格式化对象创建 Windows PowerShell 格式设置文件 (format.ps1xml)。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It takes the ExtendedTypeDefinition objects that Get-FormatData returns and saves them in a file in XML format.</source>
          <target state="translated">它采用 Get-FormatData 返回的 ExtendedTypeDefinition 对象，并将其保存在使用 XML 格式的文件中。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Windows PowerShell uses the data in formatting files (format.ps1xml) to generate the default display of Microsoft .NET Framework objects in the session.</source>
          <target state="translated">Windows PowerShell 使用格式设置文件 (format.ps1xml) 中的数据来生成会话中 Microsoft .NET Framework 对象的默认显示。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can view and edit the formatting files and use the Update-FormatData cmdlet to add the formatting data to a session.</source>
          <target state="translated">你可以查看和编辑这些格式设置文件，并使用 Update-FormatData cmdlet 将格式设置数据添加到会话中。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information about formatting files in Windows PowerShell, see about_Format.ps1xml.</source>
          <target state="translated">有关 Windows PowerShell 中格式设置文件的详细信息，请参阅 about_Format.ps1xml。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 示例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This command exports all of the format data in the session to the AllFormat.ps1xml file.</source>
          <target state="translated">此命令将会话中的所有格式数据导出到 AllFormat.ps1xml 文件中。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The command uses the Get-FormatData cmdlet to get the format data in the session.</source>
          <target state="translated">该命令使用 Get-FormatData cmdlet 获取会话中的格式数据。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A value of * (all) for the TypeName parameter directs the cmdlet to get all of the data in the session.</source>
          <target state="translated">TypeName 参数的值 *（全部）指示 cmdlet 获取会话中的所有数据。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator (|) to send the format data from the Get-FormatData command to the Export-FormatData cmdlet, which exports the format data to the AllFormat.ps1 file.</source>
          <target state="translated">该命令使用管道运算符 (|) 将格式数据从 Get-FormatData 命令发送到 Export-FormatData cmdlet，该 cmdlet 将格式数据导出到 AllFormat.ps1 文件中。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The Export-FormatData command uses the IncludeScriptBlock parameter to include script blocks in the format data in the file.</source>
          <target state="translated">Export-FormatData 命令使用 IncludeScriptBlock 参数将格式数据中的脚本块包括在文件中。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>These commands export the format data for the HelpInfoShort type to the Help.format.ps1xml file.</source>
          <target state="translated">这些命令将 HelpInfoShort 类型的格式数据导出到 Help.format.ps1xml 文件中。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-FormatData cmdlet to get the format data for the HelpInfoShort type, and it saves it in the $f variable.</source>
          <target state="translated">第一个命令使用 Get-FormatData cmdlet 来获取 HelpInfoShort 类型的格式数据，并将其保存在 $f 变量中。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The second command uses the InputObject parameter of the Export-FormatData to enter the format data saved in the $f variable.</source>
          <target state="translated">第二个命令使用 Export-FormatData 的 InputObject 参数来输入保存在 $f 变量中的格式数据。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It also uses the IncludeScriptBlock parameter to include script blocks in the output.</source>
          <target state="translated">它还使用 IncludeScriptBlock 参数将脚本块包括在输出中。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This example shows the effect of omitting the IncludeScriptBlock parameter from an Export-FormatData command.</source>
          <target state="translated">此示例显示了省略 Export-FormatData 命令的 IncludeScriptBlock 参数的效果。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-FormatData cmdlet to get the format data for the System.Diagnostics.Process object that the Get-Process cmdlet returns.</source>
          <target state="translated">第一个命令使用 Get-FormatData cmdlet 来获取 Get-Process cmdlet 返回的 System.Diagnostics.Process 对象的格式数据。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator (|) to send the formatting data to the Export-FormatData cmdlet, which exports it to the Process.format.ps1xml file in the current directory.</source>
          <target state="translated">该命令使用管道运算符 (|) 将格式设置数据发送到 Export-FormatData cmdlet，此 cmdlet 将其导出到当前目录中的 Process.format.ps1xml 文件中。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In this case, the Export-FormatData command does not use the IncludeScriptBlock parameter.</source>
          <target state="translated">在本示例中，Export-FormatData 命令不使用 IncludeScriptBlock 参数。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The second command uses the Update-FormatData cmdlet to add the Process.format.ps1xml file to the current session.</source>
          <target state="translated">第二个命令使用 Update-FormatData cmdlet 将 Process.format.ps1xml 文件添加到当前会话。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The command uses the PrependPath parameter to ensure that the formatting data for process objects in the Process.format.ps1xml file is found before the standard formatting data for process objects.</source>
          <target state="translated">该命令使用 PrependPath 参数，以确保 Process.format.ps1xml 文件中的进程对象的格式设置数据位于进程对象的标准格式设置数据之前。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The third command shows the effects of this change.</source>
          <target state="translated">第三个命令显示此更改的效果。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The command uses the Get-Process cmdlet to get processes that have names that begin with "P".</source>
          <target state="translated">该命令使用 Get-Process cmdlet 来获取名称以“P”开头的进程。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The output shows that property values that are calculated by using script blocks are missing from the display.</source>
          <target state="translated">该输出指明未显示通过使用脚本块而计算出的属性值。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Overwrites an existing output file, even if the file has the read-only attribute.</source>
          <target state="translated">即使该文件具有只读属性，也覆盖现有的输出文件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-IncludeScriptBlock</source>
          <target state="translated">-IncludeScriptBlock</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Determines whether script blocks in the format data are exported.</source>
          <target state="translated">确定是否导出格式数据中的脚本块。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Because script blocks contain code and can be used maliciously, they are not exported by default.</source>
          <target state="translated">因为脚本块包含代码且可被恶意使用，所以在默认情况下不导出它们。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Specifies the format data objects to be exported.</source>
          <target state="translated">指定要导出的格式数据对象。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects or a command that gets the objects, such as a Get-FormatData command.</source>
          <target state="translated">输入一个包含对象的变量，或可获取这些对象的命令（如 Get-FormatData 命令）。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can also pipe the objects from Get-FormatData to Export-FormatData.</source>
          <target state="translated">此外，可以通过管道将这些对象从 Get-FormatData 传递给 Export-FormatData。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-NoClobber</source>
          <target state="translated">-NoClobber</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Prevents the cmdlet from overwriting existing files.</source>
          <target state="translated">阻止 cmdlet 覆盖现有文件。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>By default, Export-FormatData overwrites files without warning unless the file has the read-only attribute.</source>
          <target state="translated">默认情况下，Export-FormatData 将在不显示警告的情况下覆盖文件，除非该文件具有只读属性。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To direct Export-FormatData to overwrite read-only files, use the Force parameter.</source>
          <target state="translated">若要指示 Export-FormatData 覆盖只读文件，请使用 Force 参数。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Specifies a location for the output file.</source>
          <target state="translated">指定输出文件的位置。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Enter a path (optional) and file name with a format.ps1xml file name extension.</source>
          <target state="translated">输入路径（可选）和具有 format.ps1xml 文件扩展名的文件名。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If you omit the path, Export-FormatData creates the file in the current directory.</source>
          <target state="translated">如果省略路径，则 Export-FormatData 在当前目录中创建该文件。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If you use a file name extension other than .ps1xml, the Update-FormatData cmdlet will not recognize the file.</source>
          <target state="translated">如果使用 .ps1xml 以外的文件扩展名，则 Update-FormatData cmdlet 将无法识别该文件。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If you specify an existing file, Export-FormatData overwrites the file without warning, unless the file has the read-only attribute.</source>
          <target state="translated">如果指定现有文件，则 Export-FormatData 将在不显示警告的情况下覆盖文件，除非该文件具有只读属性。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>To overwrite a read-only file, use the Force parameter.</source>
          <target state="translated">若要覆盖只读文件，请使用 Force 参数。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To prevent files from being overwritten, use the NoClobber parameter.</source>
          <target state="translated">若要防止文件被覆盖，请使用 NoClobber 参数。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Specifies a location for the output file.</source>
          <target state="translated">指定输出文件的位置。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Unlike the <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> parameter, the value of <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> is used exactly as it is typed.</source>
          <target state="translated">与不同 <bpt id="p1">**</bpt>路径<ept id="p1">**</ept> 参数、 的值 <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> 完全按照其键入时，才使用。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">不会将任何字符解释为通配符。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">如果路径包括转义符，请将其括在单引号中。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">单引号会告知 Windows PowerShell 不要将所有字符都解释为转义序列。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.ExtendedTypeDefinition</source>
          <target state="translated">System.Management.Automation.ExtendedTypeDefinition</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You can pipe ExtendedTypeDefinition objects from Get-FormatData to Export-FormatData.</source>
          <target state="translated">此外，可以通过管道将 ExtendedTypeDefinition 对象从 Get-FormatData 传递给 Export-FormatData。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">无</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Export-FormatData does not return any objects.</source>
          <target state="translated">Export-FormatData 不返回任何对象。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>It generates a file and saves it in the specified path.</source>
          <target state="translated">它将生成一个文件并将其保存在指定的路径中。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>To use any formatting file, including an exported formatting file, the execution policy for the session must allow scripts and configuration files to run.</source>
          <target state="translated">若要使用任何格式设置文件（包括已导出的格式设置文件），会话的执行策略必须允许运行脚本和配置文件。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For more information, see about_Execution_Policies.</source>
          <target state="translated">有关详细信息，请参阅 about_Execution_Policies。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Get-FormatData</source>
          <target state="translated">Get-FormatData</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Update-FormatData</source>
          <target state="translated">Update-FormatData</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>