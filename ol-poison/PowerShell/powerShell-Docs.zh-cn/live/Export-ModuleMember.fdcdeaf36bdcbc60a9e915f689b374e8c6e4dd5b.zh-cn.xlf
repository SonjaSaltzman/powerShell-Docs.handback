<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">15826c2a6f6be65b449ed0552d79ebf38de23f61</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\Export-ModuleMember.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bfb69efb0bba31e06f5ddc8757f02ed7b1cbab16</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0269520679c2d0e15f064f419a5d40f6f66fa9e9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Export-ModuleMember</source>
          <target state="translated">Export-ModuleMember</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Export-ModuleMember</source>
          <target state="translated">Export-ModuleMember</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Specifies the module members that are exported.</source>
          <target state="translated">指定要导出的模块成员。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Export-ModuleMember cmdlet specifies the module members (such as cmdlets, functions, variables, and aliases) that are exported from a script module (.psm1) file, or from a dynamic module created by using the New-Module cmdlet.</source>
          <target state="translated">Export-ModuleMember cmdlet 指定从脚本模块 (.psm1) 文件或从使用 New-Module cmdlet 创建的动态模块中导出的模块成员（如 cmdlet、函数、变量和别名）。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This cmdlet can be used only in a script module file or a dynamic module.</source>
          <target state="translated">此 cmdlet 只能用于脚本模块文件或动态模块。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If a script module does not include an Export-ModuleMember command, the functions in the script module are exported, but the variables and aliases are not.</source>
          <target state="translated">如果脚本模块中不包含 Export-ModuleMember 命令，则只导出脚本模块中的函数，而不导出变量和别名。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When a script module includes Export-ModuleMember commands, only the members specified in the Export-ModuleMember commands are exported.</source>
          <target state="translated">如果脚本模块中包含 Export-modulemember 命令，则只导出在该 Export-ModuleMember 命令中指定的成员。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can also use Export-ModuleMember to suppress or export members that the script module imports from other modules.</source>
          <target state="translated">还可以使用 Export-ModuleMember 来禁止显示或导出脚本模块从其他模块导入的成员。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An Export-ModuleMember command is optional, but it is a best practice.</source>
          <target state="translated">尽管 Export-ModuleMember 命令是可选的，但它是最佳做法。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Even if the command confirms the default values, it demonstrates the intention of the module author.</source>
          <target state="translated">即使该命令确认了默认值，但它演示了模块作者的初衷。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 示例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This command exports the aliases defined in the script module, along with the functions defined in the script module.</source>
          <target state="translated">此命令导出在脚本模块中定义的别名和函数。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To export the aliases, which are not exported by default, you must also explicitly specify the functions.</source>
          <target state="translated">若要导出别名（默认情况下不会导出别名），还必须明确指定函数。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Otherwise, only the aliases will be exported.</source>
          <target state="translated">否则，只会导出别名。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This command exports three aliases and three functions defined in the script module.</source>
          <target state="translated">此命令导出在脚本模块中定义的三个别名和三个函数。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can use this command format to specify the names of module members.</source>
          <target state="translated">可以使用此命令格式指定模块成员的名称。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This command specifies that no members defined in the script module are exported.</source>
          <target state="translated">此命令指定不导出在脚本模块中定义的成员。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This command prevents the module members from being exported, but it does not hide the members.</source>
          <target state="translated">此命令阻止导出模块成员，但不隐藏模块成员。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Users can read and copy module members or use the call operator (&amp;) to invoke module members that are not exported.</source>
          <target state="translated">用户可以读取和复制模块成员，或使用调用运算符 (&amp;) 来调用未导出的模块成员。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This command exports only the $increment variable from the script module.</source>
          <target state="translated">此命令只从脚本模块中导出 $increment 变量。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>No other members are exported.</source>
          <target state="translated">不导出其他成员。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If you want to export a variable, in addition to exporting the functions in a module, the Export-ModuleMember command must include the names of all of the functions and the name of the variable.</source>
          <target state="translated">若要导出某个变量，除了导出模块中的函数外，Export-ModuleMember 命令还必须包含所有这些函数的名称和该变量的名称。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>These commands show how multiple Export-ModuleMember commands are interpreted in a script module (.psm1) file.</source>
          <target state="translated">这些命令显示了如何解释脚本模块 (.psm1) 文件中的多个 Export-ModuleMember 命令。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>These commands create three functions and one alias, and then they export two of the functions and the alias.</source>
          <target state="translated">这些命令创建了三个函数和一个别名，然后导出其中两个函数和该别名。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Without the Export-ModuleMember commands, all three of the functions would be exported, but the alias would not be exported.</source>
          <target state="translated">在没有 Export-ModuleMember 命令的情况下，将导出全部三个函数，但不导出别名。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>With the Export-ModuleMember commands, only the Get-Test and Start-Test functions and the STT alias are exported.</source>
          <target state="translated">使用 Export-ModuleMember 命令时，仅导出 Get-Test 和 Start-Test 函数以及 STT 别名。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This command shows how to use Export-ModuleMember in a dynamic module that is created by using the New-Module cmdlet.</source>
          <target state="translated">此命令显示了如何在使用 New-Module cmdlet 创建的动态模块中使用 Export-ModuleMember。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In this example, Export-ModuleMember is used to export both the "Hi" alias and the "SayHello" function in the dynamic module.</source>
          <target state="translated">在此示例中，Export-ModuleMember 用于同时导出该动态模块中的“Hi”别名和“SayHello”函数。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This example includes a function named Export that declares a function or creates a variable, and then writes an Export-ModuleMember command for the function or variable.</source>
          <target state="translated">此示例包含一个名为 Export 的函数，用于声明函数或创建变量，然后为该函数或变量编写一个 Export-ModuleMember 命令。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This lets you declare and export a function or variable in a single command.</source>
          <target state="translated">这样可以通过单个命令声明和导出函数或变量。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To use the Export function, include it in your script module.</source>
          <target state="translated">若要使用 Export 函数，请将其包含在脚本模块中。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To export a function, type "Export" before the Function keyword.</source>
          <target state="translated">若要导出某个函数，请在 Function 关键字之前键入“Export”。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To export a variable, use the following format to declare the variable and set its value:</source>
          <target state="translated">若要导出某个变量，请使用以下格式声明该变量并为其设置值：</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>export variable <ph id="ph1">\&lt;</ph>variable-name<ph id="ph2">\&gt;</ph> <ph id="ph3">\&lt;</ph>value</source>
          <target state="translated">导出变量 <ph id="ph1">\&lt;</ph>变量名称<ph id="ph2">\&gt;</ph> <ph id="ph3">\&lt;</ph>值</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The commands in the example show the correct format.</source>
          <target state="translated">该示例中的命令显示了正确的格式。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In this example, only the New-Test function and the $Interval variable are exported.</source>
          <target state="translated">在此示例中，仅导出 New-Test 函数和 $Interval 变量。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-Alias</source>
          <target state="translated">别名</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Specifies the aliases that are exported from the script module file.</source>
          <target state="translated">指定要从脚本模块文件中导出的别名。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Enter the alias names.</source>
          <target state="translated">输入别名。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-Cmdlet</source>
          <target state="translated">-Cmdlet</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Specifies the cmdlets that are exported from the script module file.</source>
          <target state="translated">指定要从脚本模块文件中导出的 cmdlet。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Enter the cmdlet names.</source>
          <target state="translated">输入 cmdlet 名称。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You cannot create cmdlets in a script module file, but you can import cmdlets from a binary module into a script module and re-export them from the script module.</source>
          <target state="translated">不能在脚本模块文件中创建 cmdlet，但可将二进制模块中的 cmdlet 导入到脚本模块中，然后重新从该脚本模块中导出这些 cmdlet。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-Function</source>
          <target state="translated">函数指针</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Specifies the functions that are exported from the script module file.</source>
          <target state="translated">指定要从脚本模块文件中导出的函数。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Enter the function names.</source>
          <target state="translated">输入函数名称。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You can also pipe function name strings to Export-ModuleMember.</source>
          <target state="translated">还可以通过管道将函数名称字符串传递给 Export-ModuleMember。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-Variable</source>
          <target state="translated">单变量</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Specifies the variables that are exported from the script module file.</source>
          <target state="translated">指定要从脚本模块文件中导出的变量。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Enter the variable names (without a dollar sign).</source>
          <target state="translated">输入变量名称（不带美元符号）。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can pipe function name strings to Export-ModuleMember.</source>
          <target state="translated">可以通过管道将函数名称字符串传递给 Export-ModuleMember。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">无</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This cmdlet does not generate any output.</source>
          <target state="translated">此 cmdlet 将不生成任何输出。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To exclude a member from the list of exported members, add an Export-ModuleMember command that lists all other members but omits the member that you want to exclude.</source>
          <target state="translated">若要从导出成员的列表中排除某个成员，请添加一个 Export-ModuleMember 命令，该命令将列出所有其他成员，但忽略要排除的成员。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Get-Module</source>
          <target state="translated">Get-Module</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Import-Module</source>
          <target state="translated">Import-Module</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Remove-Module</source>
          <target state="translated">Remove-Module</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>