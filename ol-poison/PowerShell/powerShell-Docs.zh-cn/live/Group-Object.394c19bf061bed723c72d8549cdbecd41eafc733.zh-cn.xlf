<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7e781182cce27daf828a0d6c60a412c01f1d3eb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\Group-Object.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">46b60d36655cafa6e658ae82b2c816993538cc8f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aef0977d162b6cc320ee684e7bbcfeea289483da</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Group-Object</source>
          <target state="translated">Group-Object</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Group-Object</source>
          <target state="translated">Group-Object</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Groups objects that contain the same value for specified properties.</source>
          <target state="translated">包含相同指定属性的值的组对象。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Group-Object cmdlet displays objects in groups based on the value of a specified property.</source>
          <target state="translated">Group-Object cmdlet 可根据指定属性的值按组显示对象。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Group-Object returns a table with one row for each property value and a column that displays the number of items with that value.</source>
          <target state="translated">Group-Object 将返回一个表，其中每个属性值对应一行，同时一个列显示具有该值的项数。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you specify more than one property, Group-Object first groups them by the values of the first property, and then, within each property group, it groups by the value of the next property.</source>
          <target state="translated">如果指定多个属性，则 Group-Object 先按第一个属性的值对其进行分组，然后在每个属性组中，按下一属性的值进行分组。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 示例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This command gets the files in the current location that have a .doc extension and groups them by size.</source>
          <target state="translated">此命令将获取当前位置中扩展名为 .doc 的文件，并按大小对它们进行分组。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This command gets the files in the current location, sorts them by file name extension, and then groups them by file name extension.</source>
          <target state="translated">此命令将获取当前位置中的文件，并按文件扩展名对其进行排序、分组。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Note that the files are sorted before they are grouped.</source>
          <target state="translated">请注意，应先对文件进行排序，再对其进行分组。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This example shows how to use script blocks as the value of the Property parameter.</source>
          <target state="translated">此示例显示了如何将脚本块用作 Property 参数的值。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This command displays the integers from 1 to 35, grouped by the remainder left when they are divided by 2 or 3.</source>
          <target state="translated">此命令将显示从 1 到 35 的整数，按除以 2 或 3 后的余数进行分组。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>These commands display the 1,000 most recent entries in the System event log, grouped by Event ID.</source>
          <target state="translated">这些命令将显示系统事件日志中的 1000 个最新条目，它们按事件 ID 进行分组。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-EventLog cmdlet to retrieve the events and the assignment operator (=) to save them in the $events variable.</source>
          <target state="translated">第一个命令使用 Get-EventLog cmdlet 检索事件，并使用赋值运算符 (=) 来将它们保存在 $events 变量中。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The second command uses a pipeline operator (|) to send the events in the $events variable to the Group-Object cmdlet.</source>
          <target state="translated">第二个命令使用管道运算符 (|) 将 $events 变量中的事件发送到 Group-Object cmdlet。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The command uses the Property parameter to specify that the events should be grouped according to the value of their EventID property.</source>
          <target state="translated">该命令使用 Property 参数指定应按照事件的 EventID 属性的值对这些事件进行分组。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In the output, the Count column represents the number of entries in each group, the Name column represents the EventID values that define a group, and the Group column represents the objects in each group.</source>
          <target state="translated">在输出中，Count 列表示每个组中的条目数、Name 列表示用于定义一个组的 EventID 值、Group 列表示每个组中的对象。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This example demonstrates the effect of the NoElement parameter.</source>
          <target state="translated">此示例演示了 NoElement 参数的效果。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>These commands group the processes on the computer by priority class.</source>
          <target state="translated">这些命令按优先级对计算机上的进程进行分组。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Process cmdlet to get the processes on the computer.</source>
          <target state="translated">第一个命令使用 Get-Process cmdlet 来获取计算机上的进程。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the results to Group-Object, which groups the objects by the value of the PriorityClass property of the process.</source>
          <target state="translated">它使用管道运算符 (|) 来将结果发送到 Group-Object，后者再按该进程的 PriorityClass 属性的值对这些对象进行分组。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The second command is identical to the first, except that it uses the NoElement parameter to eliminate the members of the group from the output.</source>
          <target state="translated">第二个命令与第一个完全相同，只不过它使用 NoElement 参数从输出中清除该组的成员。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The result is a table with only the count and property value name.</source>
          <target state="translated">结果是一个仅具有计数和属性值名称的表。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">结果显示在下面的示例输出中。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This command demonstrates how to provide the value of the Property parameter as a script block.</source>
          <target state="translated">此命令演示了如何以脚本块形式提供 Property 参数的值。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This command displays the most recent 1,000 entries from the system event log, grouped according to the time between when they were generated and when they were written to the log.</source>
          <target state="translated">此命令将显示系统事件日志中的 1000 个最新条目，根据从生成到写入日志之间的时间来对其进行分组。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The command uses the Get-EventLog cmdlet to get the event log entries.</source>
          <target state="translated">该命令使用 Get-EventLog cmdlet 获取事件日志条目。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the entries to the Group-Object cmdlet.</source>
          <target state="translated">它使用管道运算符 (|) 将这些条目发送到 Group-Object cmdlet。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The value of the Property parameter is specified as a script block (an expression in braces).</source>
          <target state="translated">将 Property 参数的值指定为一个脚本块（用大括号括起来的表达式）。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The result of evaluating the script block is the time between when the log entry was generated and when it was written to the log.</source>
          <target state="translated">评估脚本块的结果是日志条目从生成到写入日志之间的时间。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>That value is used to group the 1,000 most recent events.</source>
          <target state="translated">该值用于对 1000 个最新事件进行分组。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This command groups the items in the current directory by file name extension.</source>
          <target state="translated">此命令将按文件扩展名对当前目录中的项进行分组。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>It uses the NoElement parameter to omit the members of the group.</source>
          <target state="translated">它使用 NoElement 参数来省略该组的成员。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">结果显示在下面的示例输出中。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 8 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 8 --------------------------</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This example shows how to find the unique and non-unique (repeated) property values in a collection.</source>
          <target state="translated">此示例显示了如何在集合中查找唯一和非唯一（重复）属性值。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The first command gets the unique elements of an array by piping the array to the Get-Unique cmdlet.</source>
          <target state="translated">第一个命令通过管道将某个数组传递给 Get-Unique cmdlet，以获取该数组的唯一元素。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The second command gets the non-unique elements of an array.</source>
          <target state="translated">第二个命令将获取数组中的非唯一元素。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It pipes the array to the Group-Object cmdlet, which groups the objects by value.</source>
          <target state="translated">它通过管道将该数组传递给 Group-Object cmdlet，后者再按值对这些对象进行分组。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The resulting groups are piped to the Where-Object cmdlet, which selects objects with groups with more than one member.</source>
          <target state="translated">通过管道将生成的组传递给 Where-Object cmdlet，后者将选择具有多个成员的组的对象。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The third command shows a practical use for this technique.</source>
          <target state="translated">第三个命令显示了此技术的实际用途。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>It uses the same method to find processes on the computer that have the same process name.</source>
          <target state="translated">它将使用相同的方法来查找计算机上具有相同进程名称的进程。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">结果显示在下面的示例输出中。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 9 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 9 --------------------------</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This example uses the AsHashTable and AsString parameters to return the groups in a hash table, that is, as a collection of key-value pairs.</source>
          <target state="translated">此示例使用 AsHashTable 和 AsString 参数来返回哈希表中的组，即键-值对集合的形式。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the resulting hash table, each property value is a key, and the group elements are the values.</source>
          <target state="translated">在生成的哈希表中，每个属性值都是一个键，组元素是值。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Because each key is a property of the hash table object, you can use dot notation to display the values.</source>
          <target state="translated">因为每个键都是哈希表对象的一个属性，所以你可以使用点表示法来显示这些值。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The first command gets the Get and Set cmdlets in the session, groups them by verb, returns the groups as a hash table, and saves the hash table in the $a variable.</source>
          <target state="translated">第一个命令将获取会话中的 Get cmdlet 和 Set cmdlet、按谓词对其进行分组、以哈希表形式返回这些组，并将该哈希表保存在 $a 变量中。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The second command displays the hash table in $a.</source>
          <target state="translated">第二个命令显示 $ 中的哈希表。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>There are two key-value pairs, one for the Get cmdlets and one for the Set cmdlets.</source>
          <target state="translated">有两个键 / 值对，一个对应 Get cmdlet，一个对应 Set cmdlet。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The third command uses dot notation to display the values of the Get key in $a.</source>
          <target state="translated">第三个命令使用点表示法显示 $ Get 键的值。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The values are CmdletInfo object.</source>
          <target state="translated">值是 CmdletInfo 对象。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The AsString parameter does not convert the objects in the groups to strings.</source>
          <target state="translated">AsString 参数不会将这些组中的对象转换为字符串。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-AsHashTable</source>
          <target state="translated">-AsHashTable</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Returns the group as a hash table.</source>
          <target state="translated">以哈希表形式返回组。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The keys of the hash table are the property values by which the objects are grouped.</source>
          <target state="translated">哈希表的键是作为对象分组依据的属性值。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The values of the hash table are the objects that have that property value.</source>
          <target state="translated">哈希表的值是具有该属性值的对象。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>By itself, the AsHashTable parameter returns each hash table in which each key is an instance of the grouped object.</source>
          <target state="translated">AsHashTable 参数通过自身返回每个哈希表，其中每个键都是一个分组对象的实例。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>When used with the  AsString parameter, the keys in the hash table are strings.</source>
          <target state="translated">与 AsString 参数一起使用时，哈希表中的键是字符串。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-AsString</source>
          <target state="translated">-AsString</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Converts the hash table keys to strings.</source>
          <target state="translated">将哈希表键转换为字符串。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>By default, the hash table keys are instances of the grouped object.</source>
          <target state="translated">默认情况下，哈希表键是分组对象的实例。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when used with the AsHashTable parameter.</source>
          <target state="translated">此参数仅在与 AsHashTable 参数一起使用时才有效。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-CaseSensitive</source>
          <target state="translated">-CaseSensitive</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Makes the grouping case-sensitive.</source>
          <target state="translated">使分组区分大小写。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Without this parameter, the property values of objects in a group might have different cases.</source>
          <target state="translated">在没有此参数的情况下，组中对象的属性值可能有不同的大小写。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>-Culture</source>
          <target state="translated">区域性</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Specifies the culture to use when comparing strings.</source>
          <target state="translated">指定要在比较字符串时使用的区域性。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Specifies the objects to group.</source>
          <target state="translated">指定要分组的对象。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">输入一个包含对象的变量，或键入可获取对象的命令或表达式。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When you use the InputObject parameter to submit a collection of objects to Group-Object, Group-Object receives one object that represents the collection.</source>
          <target state="translated">使用 InputObject 参数将对象集合提交到 Group-Object 时，Group-Object 会收到一个表示该集合的对象。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>As a result, it creates a single group with that object as its member.</source>
          <target state="translated">因此，它将创建一个组并将该对象用作其成员。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To group the objects in a collection, pipe the objects to Group-Object.</source>
          <target state="translated">若要对集合中的对象进行分组，请通过管道将对象传递给 Group-Object。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-NoElement</source>
          <target state="translated">-NoElement</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Omits the members of a group from the results.</source>
          <target state="translated">忽略结果中某个组的成员。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-Property</source>
          <target state="translated">属性</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Specifies the properties for grouping.</source>
          <target state="translated">指定用于分组的属性。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The objects are arranged into groups based on the value of the specified property.</source>
          <target state="translated">根据指定属性的值将对象排列成组。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The value of the Property parameter can be a new calculated property.</source>
          <target state="translated">Property 参数的值可以是新的计算属性。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To create a calculated, property, create a hash table with an Expression key that specifies a string or script block value.</source>
          <target state="translated">若要创建计算属性，请创建一个具有 Expression 键的哈希表，该键可指定字符串或脚本块值。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You can pipe any object to Group-Object</source>
          <target state="translated">可以通过管道将任何对象传递给 Group-Object</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Microsoft.PowerShell.Commands.GroupInfo or System.Collections.Hashtable</source>
          <target state="translated">Microsoft.PowerShell.Commands.GroupInfo 或 System.Collections.Hashtable</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>When you use the AsHashTable parameter, Group-Object returns a hash table.</source>
          <target state="translated">当你使用 AsHashTable 参数时，Group-Object 将返回一个哈希表。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns a GroupInfo object.</source>
          <target state="translated">否则，它会返回一个 GroupInfo 对象。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can also use the GroupBy parameter of the formatting cmdlets (such as Format-Table <ph id="ph1">\[</ph>m2<ph id="ph2">\]</ph> and Format-List <ph id="ph3">\[</ph>m2<ph id="ph4">\]</ph>) to group objects.</source>
          <target state="translated">您还可以使用格式设置 cmdlet 的 GroupBy 参数 (如 Format-table <ph id="ph1">\[</ph>m2<ph id="ph2">\]</ph> 和 Format-list <ph id="ph3">\[</ph>m2<ph id="ph4">\]</ph>) 对组对象。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Unlike Group-Object, which creates a single table with a row for each property value, the GroupBy parameters create a table for each property value with a row for each item that has the property value.</source>
          <target state="translated">与 Group-Object（用于创建单个表，其中每个属性值对应一行）不同，GroupBy 参数为每个属性值创建一个表，其中具有该属性值的每个项对应一行。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Group-Object does not require that the objects being grouped be of the same Microsoft .NET Framework type.</source>
          <target state="translated">Group-Object 不要求要分组的对象类型属于同一 Microsoft.NET Framework 类型。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>When grouping objects of different .NET Framework types, Group-Object uses the following rules:</source>
          <target state="translated">对不同 .NET Framework 类型的对象进行分组时，Group-Object 将使用以下规则：</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Same Property Names and Types: If the objects have a property with the specified name, and the property values have the same .NET Framework type, the property values are grouped by using the same rules that would be used for objects of the same type.</source>
          <target state="translated">属性名称和类型相同︰ 如果对象具有一个属性与指定的名称，并且属性值具有相同的.NET Framework 类型，属性值进行分组所使用的相同规则将用于同类型的对象。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Same Property Names, Different Types: If the objects have a property with the specified name, but the property values have a different .NET Framework type in different objects, Group-Object uses the .NET Framework type of the first occurrence of the property as the .NET Framework type for that property group.</source>
          <target state="translated">相同的属性名称、 不同类型︰ 如果对象具有一个属性与指定的名称，但属性值具有不同的.NET Framework 类型位于不同的对象，组对象用作该属性的第一个匹配项的.NET Framework 类型的.NET Framework 类型用作该属性组。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>When an object has a property with a different type, the property value is converted to the type for that group.</source>
          <target state="translated">当对象具有不同类型的属性时，会将属性值转换为该组的类型。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>If the type conversion fails, the object is not included in the group.</source>
          <target state="translated">如果类型转换失败，则不会将该对象包含在组中。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Missing Properties: Objects that do not have a specified property are considered ungroupable.</source>
          <target state="translated">缺少属性︰ 不具有指定的属性的对象被视为不可分组。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Ungroupable objects appear in the final GroupInfo object output in a group named AutomationNull.Value.</source>
          <target state="translated">不可分组的对象会出现在名为 AutomationNull.Value 的组中的最后 GroupInfo 对象输出中。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>