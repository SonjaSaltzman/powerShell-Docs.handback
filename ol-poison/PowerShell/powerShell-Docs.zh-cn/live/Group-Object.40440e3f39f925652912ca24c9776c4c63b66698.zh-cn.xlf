<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">208f566c5b1ab7b3ac1e7aaa71e4933b85e4808d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Group-Object.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad3ce6572cde1feb8dc6a18198263aac25a59430</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">42db0386139a20e99a6ea881354d95d890d0d956</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Group-Object</source>
          <target state="translated">Group-Object</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Group-Object</source>
          <target state="translated">Group-Object</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Groups objects that contain the same value for specified properties.</source>
          <target state="translated">包含相同指定属性的值的组对象。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> cmdlet displays objects in groups based on the value of a specified property.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Group-object<ept id="p1">**</ept> cmdlet 显示根据指定的属性的值的组中的对象。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> returns a table with one row for each property value and a column that displays the number of items with that value.</source>
          <target state="translated"><bpt id="p1">**</bpt>组对象<ept id="p1">**</ept> 返回具有一行代表每个属性值，显示具有此值的项的数目的列的表。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you specify more than one property, <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> first groups them by the values of the first property, and then, within each property group, it groups by the value of the next property.</source>
          <target state="translated">如果指定多个属性 <bpt id="p1">**</bpt>Group-object<ept id="p1">**</ept> 先按第一个属性的值对其进行分组，然后，在每个属性组中，将一组由下一个属性的值。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Example 1: Group files by size</source>
          <target state="translated">示例 1︰ 按大小对文件进行分组</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This command gets the files in the current location that have a .doc extension and groups them by size.</source>
          <target state="translated">此命令将获取当前位置中扩展名为 .doc 的文件，并按大小对它们进行分组。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example 2: Group files by extension</source>
          <target state="translated">示例 2︰ 按扩展名对文件进行分组</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This command gets the files in the current location, sorts them by file name extension, and then groups them by file name extension.</source>
          <target state="translated">此命令将获取当前位置中的文件，并按文件扩展名对其进行排序、分组。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Note that the files are sorted before they are grouped.</source>
          <target state="translated">请注意，应先对文件进行排序，再对其进行分组。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Example 3: Group integers by remainder</source>
          <target state="translated">示例 3︰ 整数由其余部分进行分组</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This example shows how to use script blocks as the value of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter.</source>
          <target state="translated">此示例演示如何将脚本块的值用作 <bpt id="p1">*</bpt>属性<ept id="p1">*</ept> 参数。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This command displays the integers from 1 to 35, grouped by the remainder left when they are divided by 2 or 3.</source>
          <target state="translated">此命令将显示从 1 到 35 的整数，按除以 2 或 3 后的余数进行分组。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example 4: Group event log events by ID</source>
          <target state="translated">示例 4︰ 按 ID 对事件日志事件进行分组</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>These commands display the 1,000 most recent entries in the System event log, grouped by Event ID.</source>
          <target state="translated">这些命令将显示系统事件日志中的 1000 个最新条目，它们按事件 ID 进行分组。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-EventLog cmdlet to retrieve the events and the assignment operator (=) to save them in the $Events variable.</source>
          <target state="translated">第一个命令使用 Get-eventlog cmdlet 检索事件，并将它们保存在 $Events 变量赋值运算符 （=）。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The second command uses a pipeline operator (|) to send the events in the $Events variable to the <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">第二个命令使用管道运算符 (|) 将事件发送在 $Events 变量到 <bpt id="p1">**</bpt>Group-object<ept id="p1">**</ept> cmdlet。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter to specify that the events should be grouped according to the value of their EventID property.</source>
          <target state="translated">该命令使用 <bpt id="p1">*</bpt>属性<ept id="p1">*</ept> 参数来指定应根据其 EventID 属性的值分组事件。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In the output, the Count column represents the number of entries in each group, the Name column represents the EventID values that define a group, and the Group column represents the objects in each group.</source>
          <target state="translated">在输出中，Count 列表示每个组中的条目数、Name 列表示用于定义一个组的 EventID 值、Group 列表示每个组中的对象。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Example 5: Group processes by priority class</source>
          <target state="translated">示例 5︰ 组进程的优先级类</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This example demonstrates the effect of the <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> parameter.</source>
          <target state="translated">此示例演示的效果 <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> 参数。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>These commands group the processes on the computer by priority class.</source>
          <target state="translated">这些命令按优先级对计算机上的进程进行分组。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Process cmdlet to get the processes on the computer.</source>
          <target state="translated">第一个命令使用 Get-Process cmdlet 来获取计算机上的进程。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the results to <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept>, which groups the objects by the value of the PriorityClass property of the process.</source>
          <target state="translated">它使用管道运算符 (|) 将结果发送到 <bpt id="p1">**</bpt>Group-object<ept id="p1">**</ept>, ，其中这些对象进行分组的进程的 PriorityClass 属性的值。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The second command is identical to the first, except that it uses the <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> parameter to eliminate the members of the group from the output.</source>
          <target state="translated">第二个命令等同于第一，只不过它使用 <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> 参数，以消除从输出组的成员。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The result is a table with only the count and property value name.</source>
          <target state="translated">结果是一个仅具有计数和属性值名称的表。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">结果显示在下面的示例输出中。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Example 6: Group events by time</source>
          <target state="translated">示例 6︰ 按时间对事件进行分组</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This command demonstrates how to provide the value of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter as a script block.</source>
          <target state="translated">此命令演示如何提供的值 <bpt id="p1">*</bpt>属性<ept id="p1">*</ept> 参数作为一个脚本块。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This command displays the most recent 1,000 entries from the System event log, grouped according to the time between when they were generated and when they were written to the log.</source>
          <target state="translated">此命令显示从系统事件日志中，分组之间的时间生成时，当它们所写入到日志根据最新的 1000 个条目。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The command uses the Get-EventLog cmdlet to get the event log entries.</source>
          <target state="translated">该命令使用 Get-EventLog cmdlet 获取事件日志条目。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the entries to the <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">它使用管道运算符 (|) 将这些条目发送到 <bpt id="p1">**</bpt>Group-object<ept id="p1">**</ept> cmdlet。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter is specified as a script block (an expression in braces).</source>
          <target state="translated">值 <bpt id="p1">*</bpt>属性<ept id="p1">*</ept> 参数被指定为脚本块 （大括号中的表达式）。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The result of evaluating the script block is the time between when the log entry was generated and when it was written to the log.</source>
          <target state="translated">评估脚本块的结果是日志条目从生成到写入日志之间的时间。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>That value is used to group the 1,000 most recent events.</source>
          <target state="translated">该值用于对 1000 个最新事件进行分组。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example 7: Group items by file name extension</source>
          <target state="translated">示例 7︰ 将项目分组依据文件扩展名</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This command groups the items in the current directory by file name extension.</source>
          <target state="translated">此命令将按文件扩展名对当前目录中的项进行分组。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> parameter to omit the members of the group.</source>
          <target state="translated">它使用 <bpt id="p1">*</bpt>NoElement<ept id="p1">*</ept> 参数来省略该组的成员。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">结果显示在下面的示例输出中。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Example 8: Group objects by value</source>
          <target state="translated">示例 8︰ 按值进行分组的对象</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This example shows how to find the unique and non-unique (repeated) property values in a collection.</source>
          <target state="translated">此示例显示了如何在集合中查找唯一和非唯一（重复）属性值。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The first command gets the unique elements of an array by piping the array to the Get-Unique cmdlet.</source>
          <target state="translated">第一个命令通过管道将某个数组传递给 Get-Unique cmdlet，以获取该数组的唯一元素。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The second command gets the non-unique elements of an array.</source>
          <target state="translated">第二个命令将获取数组中的非唯一元素。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It pipes the array to the <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> cmdlet, which groups the objects by value.</source>
          <target state="translated">它通过管道传递到的数组 <bpt id="p1">**</bpt>Group-object<ept id="p1">**</ept> cmdlet，后者将这些对象按值进行分组。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The resulting groups are piped to the Where-Object cmdlet, which selects objects with groups with more than one member.</source>
          <target state="translated">通过管道将生成的组传递给 Where-Object cmdlet，后者将选择具有多个成员的组的对象。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The third command shows a practical use for this technique.</source>
          <target state="translated">第三个命令显示了此技术的实际用途。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>It uses the same method to find processes on the computer that have the same process name.</source>
          <target state="translated">它将使用相同的方法来查找计算机上具有相同进程名称的进程。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The results are shown in the following sample output.</source>
          <target state="translated">结果显示在下面的示例输出中。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Example 9: Group objects in a hash table</source>
          <target state="translated">示例 9︰ 组哈希表中的对象</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This example uses the <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> and <bpt id="p2">*</bpt>AsString<ept id="p2">*</ept> parameters to return the groups in a hash table, that is, as a collection of key-value pairs.</source>
          <target state="translated">此示例使用 <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> 和 <bpt id="p2">*</bpt>AsString<ept id="p2">*</ept> 参数以键 / 值对的集合形式返回哈希表中，即中的组。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the resulting hash table, each property value is a key, and the group elements are the values.</source>
          <target state="translated">在生成的哈希表中，每个属性值都是一个键，组元素是值。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Because each key is a property of the hash table object, you can use dot notation to display the values.</source>
          <target state="translated">因为每个键都是哈希表对象的一个属性，所以你可以使用点表示法来显示这些值。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The first command gets the Get and Set cmdlets in the session, groups them by verb, returns the groups as a hash table, and saves the hash table in the $A variable.</source>
          <target state="translated">第一个命令获取会话中的 Get 和 Set cmdlet、 按谓词对其进行分组、 作为哈希表，将返回的组和将该哈希表保存在 $A 变量。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The second command displays the hash table in $A.</source>
          <target state="translated">第二个命令显示哈希表中 $A.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>There are two key-value pairs, one for the Get cmdlets and one for the Set cmdlets.</source>
          <target state="translated">有两个键 / 值对，一个对应 Get cmdlet，一个对应 Set cmdlet。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The third command uses dot notation to display the values of the Get key in $A.</source>
          <target state="translated">第三个命令使用点表示法在 $A.中显示的 Get 键的值</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The values are CmdletInfo object.</source>
          <target state="translated">值是 CmdletInfo 对象。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>AsString<ept id="p1">*</ept> parameter does not convert the objects in the groups to strings.</source>
          <target state="translated"> <bpt id="p1">*</bpt>AsString<ept id="p1">*</ept> 参数不转换为字符串的组中的对象。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-AsHashTable</source>
          <target state="translated">-AsHashTable</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet returns the group as a hash table.</source>
          <target state="translated">指示此 cmdlet 返回作为哈希表的组。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The keys of the hash table are the property values by which the objects are grouped.</source>
          <target state="translated">哈希表的键是作为对象分组依据的属性值。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The values of the hash table are the objects that have that property value.</source>
          <target state="translated">哈希表的值是具有该属性值的对象。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>By itself, the <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> parameter returns each hash table in which each key is an instance of the grouped object.</source>
          <target state="translated">其本身而言， <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> 参数，它返回每个键是分组对象的实例的每个哈希表。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>When used with the <bpt id="p1">*</bpt>AsString<ept id="p1">*</ept> parameter, the keys in the hash table are strings.</source>
          <target state="translated">如果用于 <bpt id="p1">*</bpt>AsString<ept id="p1">*</ept> 参数，哈希表中的键的字符串。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-AsString</source>
          <target state="translated">-AsString</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet converts the hash table keys to strings.</source>
          <target state="translated">指示此 cmdlet 将哈希表键转换为字符串。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>By default, the hash table keys are instances of the grouped object.</source>
          <target state="translated">默认情况下，哈希表键是分组对象的实例。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when used with the <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> parameter.</source>
          <target state="translated">此参数才有效，仅当与一起使用时 <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> 参数。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-CaseSensitive</source>
          <target state="translated">-CaseSensitive</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet makes the grouping case-sensitive.</source>
          <target state="translated">指示此 cmdlet 使分组区分大小写。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Without this parameter, the property values of objects in a group might have different cases.</source>
          <target state="translated">在没有此参数的情况下，组中对象的属性值可能有不同的大小写。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>-Culture</source>
          <target state="translated">区域性</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Specifies the culture to use when comparing strings.</source>
          <target state="translated">指定要在比较字符串时使用的区域性。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Specifies the objects to group.</source>
          <target state="translated">指定要分组的对象。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the objects, or type a command or expression that gets the objects.</source>
          <target state="translated">输入一个包含对象的变量，或键入可获取对象的命令或表达式。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to submit a collection of objects to <bpt id="p2">**</bpt>Group-Object<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Group-Object<ept id="p3">**</ept> receives one object that represents the collection.</source>
          <target state="translated">当您使用 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 参数来提交到的对象的集合， <bpt id="p2">**</bpt>组对象<ept id="p2">**</ept>, ，<bpt id="p3">**</bpt>Group-object<ept id="p3">**</ept> 会收到一个表示集合的对象。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>As a result, it creates a single group with that object as its member.</source>
          <target state="translated">因此，它将创建一个组并将该对象用作其成员。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To group the objects in a collection, pipe the objects to <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept>.</source>
          <target state="translated">对对象进行分组的集合中，将对象输送到 <bpt id="p1">**</bpt>Group-object<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-NoElement</source>
          <target state="translated">-NoElement</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Indicates that this cmdlet omits the members of a group from the results.</source>
          <target state="translated">指示此 cmdlet 会忽略在结果中组的成员。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-Property</source>
          <target state="translated">属性</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Specifies the properties for grouping.</source>
          <target state="translated">指定用于分组的属性。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The objects are arranged into groups based on the value of the specified property.</source>
          <target state="translated">根据指定属性的值将对象排列成组。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">*</bpt>Property<ept id="p1">*</ept> parameter can be a new calculated property.</source>
          <target state="translated">值 <bpt id="p1">*</bpt>属性<ept id="p1">*</ept> 参数可以为新的计算的属性。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To create a calculated, property, create a hash table with an Expression key that specifies a string or script block value.</source>
          <target state="translated">若要创建计算属性，请创建一个具有 Expression 键的哈希表，该键可指定字符串或脚本块值。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You can pipe any object to <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept>.</source>
          <target state="translated">您可以通过管道传递任何对象传递给 <bpt id="p1">**</bpt>Group-object<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Microsoft.PowerShell.Commands.GroupInfo or System.Collections.Hashtable</source>
          <target state="translated">Microsoft.PowerShell.Commands.GroupInfo 或 System.Collections.Hashtable</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> parameter, <bpt id="p2">**</bpt>Group-Object<ept id="p2">**</ept> returns a hash table.</source>
          <target state="translated">当您使用 <bpt id="p1">*</bpt>AsHashTable<ept id="p1">*</ept> 参数， <bpt id="p2">**</bpt>Group-object<ept id="p2">**</ept> 返回哈希表。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns a <bpt id="p1">**</bpt>GroupInfo<ept id="p1">**</ept> object.</source>
          <target state="translated">否则，它将返回 <bpt id="p1">**</bpt>GroupInfo<ept id="p1">**</ept> 对象。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">*</bpt>GroupBy<ept id="p1">*</ept> parameter of the formatting cmdlets (such as Format-Table <ph id="ph1">\[</ph>m2<ph id="ph2">\]</ph> and Format-List <ph id="ph3">\[</ph>m2<ph id="ph4">\]</ph>) to group objects.</source>
          <target state="translated">您还可以使用 <bpt id="p1">*</bpt>GroupBy<ept id="p1">*</ept> 格式设置 cmdlet 的参数 (如 Format-table <ph id="ph1">\[</ph>m2<ph id="ph2">\]</ph> 和 Format-list <ph id="ph3">\[</ph>m2<ph id="ph4">\]</ph>) 对组对象。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept>, which creates a single table with a row for each property value, the <bpt id="p2">*</bpt>GroupBy<ept id="p2">*</ept> parameters create a table for each property value with a row for each item that has the property value.</source>
          <target state="translated">与不同 <bpt id="p1">**</bpt>Group-object<ept id="p1">**</ept>, ，从而创建一个表与每个属性值，行 <bpt id="p2">*</bpt>GroupBy<ept id="p2">*</ept> 参数使用个具有该属性值的每个项的行创建一个表为每个属性值。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> does not require that the objects being grouped be of the same Microsoft .NET Framework type.</source>
          <target state="translated"><bpt id="p1">**</bpt>组对象<ept id="p1">**</ept> 不要求要分组的对象是相同的 Microsoft.NET Framework 类型。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>When grouping objects of different .NET Framework types, <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> uses the following rules:</source>
          <target state="translated">对不同的.NET Framework 类型的对象进行分组时 <bpt id="p1">**</bpt>Group-object<ept id="p1">**</ept> 使用以下规则︰</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Same Property Names and Types.</source>
          <target state="translated">相同的属性名称和类型。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If the objects have a property with the specified name, and the property values have the same .NET Framework type, the property values are grouped by using the same rules that would be used for objects of the same type.</source>
          <target state="translated">如果对象具有带指定名称的属性，并且属性值具有相同的 .NET Framework 类型，则通过使用相同类型的对象适用的规则对属性值进行分组。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Same Property Names, Different Types.</source>
          <target state="translated">属性名称相同，不同的类型。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>If the objects have a property with the specified name, but the property values have a different .NET Framework type in different objects, <bpt id="p1">**</bpt>Group-Object<ept id="p1">**</ept> uses the .NET Framework type of the first occurrence of the property as the .NET Framework type for that property group.</source>
          <target state="translated">如果对象具有一个属性与指定的名称，但属性值在不同的对象，具有不同的.NET Framework 类型 <bpt id="p1">**</bpt>Group-object<ept id="p1">**</ept> 使用作为.NET Framework 类型的属性的第一个匹配项的.NET Framework 类型用作该属性组。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>When an object has a property with a different type, the property value is converted to the type for that group.</source>
          <target state="translated">当对象具有不同类型的属性时，会将属性值转换为该组的类型。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If the type conversion fails, the object is not included in the group.</source>
          <target state="translated">如果类型转换失败，则不会将该对象包含在组中。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Missing Properties.</source>
          <target state="translated">缺少的属性。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Objects that do not have a specified property are considered ungroupable.</source>
          <target state="translated">将不具有指定属性的对象视为不可分组。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Ungroupable objects appear in the final <bpt id="p1">**</bpt>GroupInfo<ept id="p1">**</ept> object output in a group named AutomationNull.Value.</source>
          <target state="translated">不可分组的对象出现在最后 <bpt id="p1">**</bpt>GroupInfo<ept id="p1">**</ept> 对象名为 AutomationNull.Value 的组中的输出。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Compare-Object</source>
          <target state="translated">Compare-Object</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>ForEach-Object</source>
          <target state="translated">ForEach-Object</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Where-Object</source>
          <target state="translated">Where-Object</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Measure-Object</source>
          <target state="translated">Measure-Object</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>New-Object</source>
          <target state="translated">新对象</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Select-Object</source>
          <target state="translated">Select-Object</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Sort-Object</source>
          <target state="translated">Sort-Object</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Tee-Object</source>
          <target state="translated">Tee-object 将对象</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>