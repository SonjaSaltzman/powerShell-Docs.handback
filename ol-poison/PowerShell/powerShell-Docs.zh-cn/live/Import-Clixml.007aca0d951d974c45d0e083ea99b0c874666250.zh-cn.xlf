<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ff7448deee9ed3ca146ab33c78736cf40693535</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\Import-Clixml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d35fb31a5eca6720027e4c61404e3bbc177ef3e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cdba758bf53c11a3af8c1b3e972df3c22131f02c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Import-Clixml</source>
          <target state="translated">导入 Clixml</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Import-Clixml</source>
          <target state="translated">导入 Clixml</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Imports a CLIXML file and creates corresponding objects within Windows PowerShell.</source>
          <target state="translated">导入 CLIXML 文件并在 Windows PowerShell 中创建相应对象。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ByPath (Default)</source>
          <target state="translated">ByPath （默认值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>ByLiteralPath</source>
          <target state="translated">ByLiteralPath</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Import-Clixml cmdlet imports a CLIXML file with data that represents Microsoft .NET Framework objects and creates the objects in Windows PowerShell.</source>
          <target state="translated">Import-Clixml cmdlet 可导入一个具有表示 Microsoft.NET Framework 对象的数据的 CLIXML 文件，并在 Windows PowerShell 中创建这些对象。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A valuable use of Import-CliXml is to import credentials and secure strings that have been exported as secure XML by running the Export-CliXml cmdlet.</source>
          <target state="translated">使用有价值的导入 CliXml 是导入凭据和通过运行 Export-clixml cmdlet 导出为安全的 XML 的安全字符串。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For an example of how to do this, see Example 2 in this topic.</source>
          <target state="translated">有关如何执行此操作的示例，请参阅本主题中的示例 2。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 示例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This command uses the Export-Clixml cmdlet to save a serialized copy of the process information returned by Get-Process.</source>
          <target state="translated">此命令使用 Export-Clixml cmdlet 来保存 Get-Process 返回的进程信息的序列化副本。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It then uses Import-Clixml to retrieve the contents of the serialized file and re-create an object that is stored in the $processes variable.</source>
          <target state="translated">然后，它使用 Import-Clixml 检索序列化文件的内容，并重新创建存储在 $processes 变量中的对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The Export-CliXml cmdlet encrypts credential objects by using the Windows Data Protection APIhttp://msdn.microsoft.com/library/windows/apps/xaml/hh464970.aspx.</source>
          <target state="translated">Export-clixml cmdlet 通过使用 Windows 数据保护 APIhttp://msdn.microsoft.com/library/windows/apps/xaml/hh464970.aspx 加密凭据对象。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This ensures that only your user account can decrypt the contents of the credential object.</source>
          <target state="translated">这可确保您的用户帐户可以解密凭据对象的内容。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In this example, given a credential that you've stored in the $credential variable by running the Get-Credential cmdlet, you can run the Export-CliXml cmdlet to save the credential to disk.In the example, the file in which the credential is stored is represented by TestScript.ps1.credential.</source>
          <target state="translated">在此示例中，指定您已通过运行 Get-credential cmdlet 在 $credential 变量中存储的凭据可以运行 Export-clixml cmdlet 将凭据保存到磁盘。在示例中，由 TestScript.ps1.credential 表示在其中存储凭据的文件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Replace TestScript with the name of the script with which you are loading the credential.</source>
          <target state="translated">TestScript 替换的脚本与其加载凭据的名称。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In the second command, you pipe the credential object to Export-CliXml, and save it to the path, $credxmlpath, that you specified in the first command.</source>
          <target state="translated">在第二个命令中，通过管道传递给 Export-clixml，该凭据对象，并将其保存到的路径，$credxmlpath，您在第一个命令中指定。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To import the credential automatically into your script, run the final two commands.</source>
          <target state="translated">若要将凭据自动导入您的脚本，运行在最终的两个命令。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This time, you are running Import-CliXml to import the secured credential object into your script.</source>
          <target state="translated">此时，您正在运行 Import-clixml 导入您的脚本的安全的凭据对象。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This eliminates the risk of exposing plain-text passwords in your script.</source>
          <target state="translated">这消除了泄露您的脚本中使用纯文本密码的风险。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Specifies the XML files.</source>
          <target state="translated">指定 XML 文件。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Specifies the XML files.</source>
          <target state="translated">指定 XML 文件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">**</bpt>Path<ept id="p1">**</ept>, the value of the <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> parameter is used exactly as it is typed.</source>
          <target state="translated">与不同 <bpt id="p1">**</bpt>路径<ept id="p1">**</ept>, ，值 <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> 完全按照其键入使用参数。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">不会将任何字符解释为通配符。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">如果路径包括转义符，请将其括在单引号中。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">单引号会告知 Windows PowerShell 不要将所有字符都解释为转义序列。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-First</source>
          <target state="translated">优先</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets only the specified number of objects.</source>
          <target state="translated">只获取指定数量的对象。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Enter the number of objects to get.</source>
          <target state="translated">输入要获取的对象数量。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>-Skip</source>
          <target state="translated">-跳过</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Ignores the specified number of objects and then gets the remaining objects.</source>
          <target state="translated">忽略指定数量的对象，然后获取其余对象。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Enter the number of objects to skip.</source>
          <target state="translated">输入要跳过的对象数量。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>-IncludeTotalCount</source>
          <target state="translated">-IncludeTotalCount</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Reports the total number of objects in the data set (an integer) followed by the selected objects.</source>
          <target state="translated">报告数据集中的对象总数目（整数）和选择的对象。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If the cmdlet cannot determine the total count, it displays "Unknown total count."</source>
          <target state="translated">如果 cmdlet 无法确定总计数，它会显示“总计数未知”。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The integer has an Accuracy property that indicates the reliability of the total count value.</source>
          <target state="translated">整数具有“准确性”属性，表示总计数值的可靠性。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The value of Accuracy ranges from 0.0 to 1.0 where 0.0 means that the cmdlet could not count the objects, 1.0 means that the count is exact, and a value between 0.0 and 1.0 indicates an increasingly reliable estimate.</source>
          <target state="translated">“准确性”值范围从 0.0 到 1.0，其中 0.0 表示 cmdlet 无法计算对象，1.0 表示计数是准确的，介于 0.0 和 1.0 之间的值表示越来越可靠的估值。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>System.String</source>
          <target state="translated">System.String</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can pipe a string that contains a path to Import-Clixml.</source>
          <target state="translated">可以通过管道将包含路径的字符串传递给 Import-Clixml。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>PSObject</source>
          <target state="translated">PSObject</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Import-Clixml returns objects that have been deserialized from the stored XML files.</source>
          <target state="translated">Import-Clixml 返回已从存储的 XML 文件进行反序列化的对象。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>When specifying multiple values for a parameter, use commas to separate the values.</source>
          <target state="translated">为一个参数指定多个值时，请使用逗号分隔这些值。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example, "<ph id="ph1">\&lt;</ph>parameter-name<ph id="ph2">\&gt;</ph> <ph id="ph3">\&lt;</ph>value1<ph id="ph4">\&gt;</ph>, <ph id="ph5">\&lt;</ph>value2<ph id="ph6">\&gt;</ph>".</source>
          <target state="translated">例如，"<ph id="ph1">\&lt;</ph>参数名称<ph id="ph2">\&gt;</ph> <ph id="ph3">\&lt;</ph>value1<ph id="ph4">\&gt;</ph>, ，<ph id="ph5">\&lt;</ph>value2<ph id="ph6">\&gt;</ph>"。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Use PowerShell to Pass Credentials to Legacy Systems</source>
          <target state="translated">使用 PowerShell 将凭据传递到原来的系统</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Securely Store Credentials on Disk</source>
          <target state="translated">在磁盘上安全地存储凭据</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Export-Clixml</source>
          <target state="translated">Export-clixml</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>