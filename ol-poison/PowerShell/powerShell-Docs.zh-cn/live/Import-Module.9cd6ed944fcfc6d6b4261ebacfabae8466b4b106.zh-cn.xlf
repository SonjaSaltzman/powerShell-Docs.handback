<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">026c25702cd028b18ee1401aa9c7e5ab61e91f6e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\Import-Module.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a76ce622ee56cafd6fde99a6e0d9414840e4707c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b277912ce6e02d7cdbf25e47a958b6e8e456d2df</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Import-Module</source>
          <target state="translated">Import-Module</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Import-Module</source>
          <target state="translated">Import-Module</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Adds modules to the current session.</source>
          <target state="translated">将模块添加到当前会话。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name (Default)</source>
          <target state="translated">名称 （默认值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>CimSession</source>
          <target state="translated">CimSession</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>PSSession</source>
          <target state="translated">PSSession</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Assembly</source>
          <target state="translated">汇编</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>ModuleInfo</source>
          <target state="translated">ModuleInfo</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet adds one or more modules to the current session.</source>
          <target state="translated"> <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> cmdlet 将一个或多个模块添加到当前会话。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The modules that you import must be installed on the local computer or a remote computer.</source>
          <target state="translated">你导入的模块必须安装在本地计算机或远程计算机上。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, installed modules are automatically imported to the session when you use any commands or providers in the module.</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，当你使用模块中的任何命令或提供程序时，已安装的模块将自动导入到会话中。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, you can still use the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> command to import a module and you can enable and disable automatic module importing by using the <bpt id="p2">**</bpt>$PSModuleAutoloadingPreference<ept id="p2">**</ept> preference variable.</source>
          <target state="translated">但是，您仍然可以使用 <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> 命令以导入的模块，您可以启用和禁用自动模块导入使用 <bpt id="p2">**</bpt>$PSModuleAutoloadingPreference<ept id="p2">**</ept> 首选项变量。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information about modules, see about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311).</source>
          <target state="translated">有关模块的详细信息，请参阅 about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311)。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information about the <bpt id="p1">**</bpt>$PSModuleAutoloadingPreference<ept id="p1">**</ept> variable, see about_Preference_Variables (http://go.microsoft.com/fwlink/?LinkID=113248).</source>
          <target state="translated">有关详细信息 <bpt id="p1">**</bpt>$PSModuleAutoloadingPreference<ept id="p1">**</ept> 变量，请参阅 about_Preference_Variables (http://go.microsoft.com/fwlink/?LinkID=113248)。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A module is a package that contains members (such as cmdlets, providers, scripts, functions, variables, and other tools and files) that can be used in Windows PowerShell.</source>
          <target state="translated">模块是包含可以在 Windows PowerShell 中使用的成员 （如 cmdlet、 提供程序、 脚本、 函数、 变量和其他工具和文件） 的包。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>After a module is imported, you can use the module members in your session.</source>
          <target state="translated">导入模块后，你可以在会话中使用模块成员。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To import a module, use the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Assembly<ept id="p2">**</ept>,  <bpt id="p3">**</bpt>ModuleInfo<ept id="p3">**</ept>, <bpt id="p4">**</bpt>MinimumVersion<ept id="p4">**</ept> and <bpt id="p5">**</bpt>RequiredVersion<ept id="p5">**</ept> parameters to identify the module to import.</source>
          <target state="translated">若要导入模块，使用 <bpt id="p1">**</bpt>名称<ept id="p1">**</ept>, ，<bpt id="p2">**</bpt>程序集<ept id="p2">**</ept>,  ，<bpt id="p3">**</bpt>ModuleInfo<ept id="p3">**</ept>, ，<bpt id="p4">**</bpt>MinimumVersion<ept id="p4">**</ept> 和 <bpt id="p5">**</bpt>RequiredVersion<ept id="p5">**</ept> 参数来标识要导入的模块。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> imports all members that the module exports, but you can use the <bpt id="p2">**</bpt>Alias<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Function<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Cmdlet<ept id="p4">**</ept>, and <bpt id="p5">**</bpt>Variable<ept id="p5">**</ept> parameters to restrict the members that are imported.</source>
          <target state="translated">默认情况下， <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> 导入所有成员模块导出，但您可以使用 <bpt id="p2">**</bpt>别名<ept id="p2">**</ept>, ，<bpt id="p3">**</bpt>函数<ept id="p3">**</ept>, ，<bpt id="p4">**</bpt>Cmdlet<ept id="p4">**</ept>, ，和 <bpt id="p5">**</bpt>变量<ept id="p5">**</ept> 参数来限制导入的成员。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">**</bpt>NoClobber<ept id="p1">**</ept> parameter to prevent <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> from importing members that have the same names as members in the current session.</source>
          <target state="translated">您还可以使用 <bpt id="p1">**</bpt>NoClobber<ept id="p1">**</ept> 参数以防止 <bpt id="p2">**</bpt>导入模块<ept id="p2">**</ept> 从导入当前会话中具有相同名称的成员的成员。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> imports a module only into the current session.</source>
          <target state="translated"><bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> 仅导入模块到当前会话。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To import the module into all sessions, add an <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> command to your Windows PowerShell profile.</source>
          <target state="translated">若要将模块导入所有会话中，添加 <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> 命令到你的 Windows PowerShell 配置文件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For more information about profiles, see about_Profiles (http://go.microsoft.com/fwlink/?LinkID=113729).</source>
          <target state="translated">有关配置文件的详细信息，请参阅 about_Profiles (http://go.microsoft.com/fwlink/?LinkID=113729)。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Also, beginning in Windows PowerShell 3.0, you can use <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> to import Common Information Model (CIM) modules, in which the cmdlets are defined in Cmdlet Definition XML (CDXML) files.</source>
          <target state="translated">此外，从 Windows PowerShell 3.0 开始，您可以使用 <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> 导入通用信息模型 (CIM) 模块，这些 cmdlet 在 Cmdlet 定义 XML (CDXML) 文件中在其中的定义。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This feature allows you to use cmdlets that are implemented in non-managed code assemblies, such as those written in C++.</source>
          <target state="translated">此功能允许你使用在非托管代码程序集（例如采用 C++ 编写的程序集）中实现的 cmdlet。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>With these new features, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet becomes a primary tool for managing heterogeneous enterprises that include Windows computers and computers that are running other operating systems.</source>
          <target state="translated">借助这些新功能， <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> cmdlet 成为用于管理包括 Windows 计算机和正在运行其他操作系统的计算机的异类企业的主要工具。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To manage remote Windows computers that have Windows PowerShell and Windows PowerShell remoting enabled, create a PSSession on the remote computer and then use the <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Get-Module<ept id="p2">**</ept> to get the Windows PowerShell modules in the PSSession.</source>
          <target state="translated">要管理远程了 Windows PowerShell 和启用 Windows PowerShell 远程处理的 Windows 计算机，请在远程计算机上创建 PSSession，然后使用 <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> 参数 <bpt id="p2">**</bpt>Get-module<ept id="p2">**</ept> 获取 PSSession 中的 Windows PowerShell 模块。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When you import the modules, and then use the imported commands in the current session, the commands run implicitly in the PSSession on the remote computer.</source>
          <target state="translated">如果你导入模块，然后在当前会话中使用导入的模块，这些命令将在远程计算机上的 PSSession 中隐式运行。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You can use this strategy to manage the remote computer.</source>
          <target state="translated">你可以将此策略用于管理远程计算机。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can use a similar strategy to manage computers that do not have Windows PowerShell remoting enabled, including computers that are not running a Windows operating system, and Windows computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">可以使用类似的策略来管理未启用 Windows PowerShell 远程处理的计算机，包括未运行 Windows 操作系统的计算机以及虽然具有 Windows PowerShell 但未启用 Windows PowerShell 远程处理的 Windows 计算机。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Begin by creating a "CIM session" on the remote computer; a connection to Windows Management Instrumentation (WMI) on the remote computer.</source>
          <target state="translated">首先，在远程计算机; 上创建"CIM 会话"一种连接到 Windows Management Instrumentation (WMI) 远程计算机上。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Then use the <bpt id="p1">**</bpt>CIMSession<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> to import CIM modules from the remote computer.</source>
          <target state="translated">然后，使用 <bpt id="p1">**</bpt>CIMSession<ept id="p1">**</ept> 参数 <bpt id="p2">**</bpt>导入模块<ept id="p2">**</ept> 从远程计算机导入 CIM 模块。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When you import a CIM module and then run the imported commands, the commands run implicitly on the remote computer.</source>
          <target state="translated">如果你导入 CIM 模块，然后运行导入的命令，命令将在远程计算机上隐式运行。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You can use this WMI and CIM strategy to manage the remote computer.</source>
          <target state="translated">你可以将此 WMI 和 CIM 策略用于管理远程计算机。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 示例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This command imports the members of the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> module into the current session.</source>
          <target state="translated">此命令导入的成员 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> 到当前会话的模块。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> parameter name (-Name) is optional and can be omitted.</source>
          <target state="translated"> <bpt id="p1">**</bpt>名称<ept id="p1">**</ept> 参数名称 (-名称) 是可选的则可以省略。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> does not generate any output when it imports a module.</source>
          <target state="translated">默认情况下， <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> 导入模块时不生成任何输出。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To request output, use the <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> or <bpt id="p2">**</bpt>AsCustomObject<ept id="p2">**</ept> parameter, or the <bpt id="p3">**</bpt>Verbose<ept id="p3">**</ept> common parameter.</source>
          <target state="translated">若要请求输出，请使用 <bpt id="p1">**</bpt>PassThru<ept id="p1">**</ept> 或 <bpt id="p2">**</bpt>AsCustomObject<ept id="p2">**</ept> 参数，或 <bpt id="p3">**</bpt>Verbose<ept id="p3">**</ept> 通用参数。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This command imports all available modules in the path specified by the PSModulePath environment variable ($env:PSModulePath) into the current session.</source>
          <target state="translated">此命令将 PSModulePath 环境变量 ($env:PSModulePath) 指定的路径中的所有可用模块导入到当前会话中。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>These commands import the members of the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ServerManager<ept id="p2">**</ept> modules into the current session.</source>
          <target state="translated">这些命令导入的成员 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>ServerManager<ept id="p2">**</ept> 到当前会话的模块。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Module-Module cmdlet to get the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ServerManager<ept id="p2">**</ept> modules.</source>
          <target state="translated">第一个命令使用 Get 模块 cmdlet 来获取 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>ServerManager<ept id="p2">**</ept> 模块。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>It saves the objects in the $m variable.</source>
          <target state="translated">它将对象保存在 $m 变量中。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> parameter is required when you are getting modules that are not yet imported into the session.</source>
          <target state="translated"> <bpt id="p1">**</bpt>ListAvailable<ept id="p1">**</ept> 参数是必需的当您听到的尚未导入到会话的模块。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>ModuleInfo<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> to import the modules into the current session.</source>
          <target state="translated">第二个命令使用 <bpt id="p1">**</bpt>ModuleInfo<ept id="p1">**</ept> 参数 <bpt id="p2">**</bpt>导入模块<ept id="p2">**</ept> 将模块导入到当前会话。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>These commands are equivalent to using a pipeline operator (|) to send the output of a <bpt id="p1">**</bpt>Get-Module<ept id="p1">**</ept> command to <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept>.</source>
          <target state="translated">这些命令是等效于使用管道运算符 (|) 的输出发送 <bpt id="p1">**</bpt>Get-module<ept id="p1">**</ept> 命令 <bpt id="p2">**</bpt>导入模块<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This command uses an explicit path to identify the module to import.</source>
          <target state="translated">此命令使用一个显式路径来标识要导入的模块。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>It also uses the <bpt id="p1">**</bpt>Verbose<ept id="p1">**</ept> common parameter to get a list of the items imported from the module.</source>
          <target state="translated">它还使用 <bpt id="p1">**</bpt>Verbose<ept id="p1">**</ept> 通用参数来获取从模块导入的项的列表。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Without the <bpt id="p1">**</bpt>Verbose<ept id="p1">**</ept>, <bpt id="p2">**</bpt>PassThru<ept id="p2">**</ept>, or <bpt id="p3">**</bpt>AsCustomObject<ept id="p3">**</ept> parameter, <bpt id="p4">**</bpt>Import-Module<ept id="p4">**</ept> does not generate any output when it imports a module.</source>
          <target state="translated">而无需 <bpt id="p1">**</bpt>Verbose<ept id="p1">**</ept>, ，<bpt id="p2">**</bpt>PassThru<ept id="p2">**</ept>, ，或 <bpt id="p3">**</bpt>AsCustomObject<ept id="p3">**</ept> 参数， <bpt id="p4">**</bpt>导入模块<ept id="p4">**</ept> 导入模块时不生成任何输出。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This example shows how to restrict the module members that are imported into the session and the effect of this command on the session.</source>
          <target state="translated">此示例显示了如何限制导入到会话中的模块成员以及此命令对会话的影响。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The first command imports only the <bpt id="p1">**</bpt>Add-BitsTransfer<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Get-BitsTransfer<ept id="p2">**</ept> cmdlets from the <bpt id="p3">**</bpt>BitsTransfer<ept id="p3">**</ept> module.</source>
          <target state="translated">第一个命令将仅导入 <bpt id="p1">**</bpt>Add-bitstransfer<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>Get-bitstransfer<ept id="p2">**</ept> cmdlet 从 <bpt id="p3">**</bpt>BitsTransfer<ept id="p3">**</ept> 模块。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>Cmdlet<ept id="p1">**</ept> parameter to restrict the cmdlets that the module imports.</source>
          <target state="translated">该命令使用 <bpt id="p1">**</bpt>Cmdlet<ept id="p1">**</ept> 参数限制模块导入的 cmdlet。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">**</bpt>Alias<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Variable<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Function<ept id="p3">**</ept> parameters to restrict other members that a module imports.</source>
          <target state="translated">您还可以使用 <bpt id="p1">**</bpt>别名<ept id="p1">**</ept>, ，<bpt id="p2">**</bpt>变量<ept id="p2">**</ept>, ，和 <bpt id="p3">**</bpt>函数<ept id="p3">**</ept> 参数限制模块导入其他成员。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The second command uses the Get-Module cmdlet to get the object that represents the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> module.</source>
          <target state="translated">第二个命令使用 Get-module cmdlet 来获取该对象表示 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> 模块。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ExportedCmdlets<ept id="p1">**</ept> property lists all of the cmdlets that the module exports, even when they were not all imported.</source>
          <target state="translated"> <bpt id="p1">**</bpt>ExportedCmdlets<ept id="p1">**</ept> 属性列出了所有模块导出，即使不是所有导入的 cmdlet。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>Module<ept id="p1">**</ept> parameter of the Get-Command cmdlet to get the commands that were imported from the <bpt id="p2">**</bpt>BitsTransfer<ept id="p2">**</ept> module.</source>
          <target state="translated">第三个命令使用 <bpt id="p1">**</bpt>模块<ept id="p1">**</ept> Get-command cmdlet 来获取已从导入的命令参数 <bpt id="p2">**</bpt>BitsTransfer<ept id="p2">**</ept> 模块。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The results confirm that only the <bpt id="p1">**</bpt>Add-BitsTransfer<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Get-BitsTransfer<ept id="p2">**</ept> cmdlets were imported.</source>
          <target state="translated">结果确认仅 <bpt id="p1">**</bpt>Add-bitstransfer<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>Get-bitstransfer<ept id="p2">**</ept> cmdlet 已导入。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>These commands import the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> module into the current session, add a prefix to the member names, and then display the prefixed member names.</source>
          <target state="translated">这些命令导入 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> 到当前会话中，模块将前缀添加到成员名称，然后显示带前缀的成员名称。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The first command uses the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet to import the <bpt id="p2">**</bpt>BitsTransfer<ept id="p2">**</ept> module.</source>
          <target state="translated">第一个命令使用 <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> cmdlet 导入 <bpt id="p2">**</bpt>BitsTransfer<ept id="p2">**</ept> 模块。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>Prefix<ept id="p1">**</ept> parameter to add the PS prefix to all members that are imported from the module and the <bpt id="p2">**</bpt>PassThru<ept id="p2">**</ept> parameter to return a module object that represents the imported module.</source>
          <target state="translated">它使用 <bpt id="p1">**</bpt>前缀<ept id="p1">**</ept> 参数将 PS 前缀添加到从模块导入的所有成员和 <bpt id="p2">**</bpt>PassThru<ept id="p2">**</ept> 参数返回表示导入的模块的模块对象。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Get-Command<ept id="p1">**</ept> cmdlet to get the members that have been imported from the module.</source>
          <target state="translated">第二个命令使用 <bpt id="p1">**</bpt>Get-command<ept id="p1">**</ept> cmdlet 来获取已导入模块中的成员。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>Module<ept id="p1">**</ept> parameter to specify the module.</source>
          <target state="translated">它使用 <bpt id="p1">**</bpt>模块<ept id="p1">**</ept> 参数来指定该模块。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The output shows that the module members were correctly prefixed.</source>
          <target state="translated">该输出显示模块成员已正确地添加了前缀。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The prefix that you use applies only to the members in the current session.</source>
          <target state="translated">你使用的前缀将仅应用到当前会话中的成员。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>It does not change the module.</source>
          <target state="translated">它不会更改模块。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>These commands demonstrate how to get and use the custom object that <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> returns.</source>
          <target state="translated">这些命令演示如何获取和使用自定义对象的 <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> 返回。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Custom objects include synthetic members that represent each of the imported module members.</source>
          <target state="translated">自定义对象包括表示每个导入的模块成员的合成成员。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For example, the cmdlets and functions in a module are converted to script methods of the custom object.</source>
          <target state="translated">例如，模块中的 cmdlet 和函数将转换为自定义对象的脚本方法。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Custom objects are very useful in scripting.</source>
          <target state="translated">自定义对象在脚本编写中非常有用。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>They are also useful when several imported objects have the same names.</source>
          <target state="translated">此外，当多个导入的对象具有相同的名称时，它们也非常有用。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Using the script method of an object is equivalent to specifying the fully qualified name of an imported member, including its module name.</source>
          <target state="translated">使用对象的脚本方法等效于指定已导入成员的完全限定名称（包括其模块名称）。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>AsCustomObject<ept id="p1">**</ept> parameter can be used only when importing a script module, so the first task is to determine which of the available modules is a script module.</source>
          <target state="translated"> <bpt id="p1">**</bpt>AsCustomObject<ept id="p1">**</ept> 仅在导入脚本模块，因此第一项任务是确定哪个可用模块是脚本模块时，可以使用参数。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Module cmdlet to get the available modules.</source>
          <target state="translated">第一个命令使用 Get-module cmdlet 来获取可用模块。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator (|) to pass the module objects to the Format-Tablee cmdlet, which lists the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ModuleType<ept id="p2">**</ept> of each module in a table.</source>
          <target state="translated">该命令使用管道运算符 (|) 将模块对象传递给格式 Tablee cmdlet，其中列出了 <bpt id="p1">**</bpt>名称<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>ModuleType<ept id="p2">**</ept> 的表中每个模块。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet to import the <bpt id="p2">**</bpt>PSDiagnostics<ept id="p2">**</ept> script module.</source>
          <target state="translated">第二个命令使用 <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> cmdlet 导入 <bpt id="p2">**</bpt>PSDiagnostics<ept id="p2">**</ept> 脚本模块。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>AsCustomObject<ept id="p1">**</ept> parameter to request a custom object and the <bpt id="p2">**</bpt>PassThru<ept id="p2">**</ept> parameter to return the  object.</source>
          <target state="translated">该命令使用 <bpt id="p1">**</bpt>AsCustomObject<ept id="p1">**</ept> 参数来请求自定义对象和 <bpt id="p2">**</bpt>PassThru<ept id="p2">**</ept> 参数返回的对象。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The command saves the resulting custom object in the $a variable.</source>
          <target state="translated">该命令将生成的自定义对象保存在 $a 变量中。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The third command uses a pipeline operator to send the $a variable to the Get-Member cmdlet, which gets the properties and methods of the PSCustomObject in $a.</source>
          <target state="translated">第三个命令使用管道运算符将 $a 变量发送到 Get-member cmdlet，后者将获取 $ 中的属性和方法的 PSCustomObject。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The output shows a <bpt id="p1">**</bpt>Show-Calendar<ept id="p1">**</ept> script method.</source>
          <target state="translated">该输出显示 <bpt id="p1">**</bpt>Show-calendar<ept id="p1">**</ept> 脚本方法。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The last command uses the <bpt id="p1">**</bpt>Show-Calendar<ept id="p1">**</ept> script method.</source>
          <target state="translated">最后一个命令使用 <bpt id="p1">**</bpt>Show-calendar<ept id="p1">**</ept> 脚本方法。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The method name must be enclosed in quotation marks, because it includes a hyphen.</source>
          <target state="translated">方法名称必须用引号括起来，因为它包含一个连字符。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 8 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 8 --------------------------</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> when you are re-importing a module into the same session.</source>
          <target state="translated">此示例演示如何使用 <bpt id="p1">**</bpt>强制<ept id="p1">**</ept> 参数 <bpt id="p2">**</bpt>导入模块<ept id="p2">**</ept> 时您正在重新导入到同一会话的模块。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The first command imports the <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> module.</source>
          <target state="translated">第一个命令将导入 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> 模块。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The second command imports the module again, this time using the <bpt id="p1">**</bpt>Prefix<ept id="p1">**</ept> parameter.</source>
          <target state="translated">第二个命令导入的模块再次重申，这一次使用 <bpt id="p1">**</bpt>前缀<ept id="p1">**</ept> 参数。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The second command also includes the <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> parameter, which removes the module and then imports it again.</source>
          <target state="translated">第二个命令中还包含 <bpt id="p1">**</bpt>强制<ept id="p1">**</ept> 参数，它将删除该模块，然后再次导入它。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Without this parameter, the session would include two copies of each <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> cmdlet, one with the standard name and one with the prefixed name.</source>
          <target state="translated">如果没有此参数，该会话将包括两个副本的每个 <bpt id="p1">**</bpt>BitsTransfer<ept id="p1">**</ept> cmdlet，一个使用标准名称，一个使用带前缀的名称。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 9 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 9 --------------------------</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This example shows how to run commands that have been hidden by imported commands.</source>
          <target state="translated">此示例显示了如何运行由导入的命令隐藏的命令。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The first command run the Get-Date cmdlet.</source>
          <target state="translated">第一个命令运行 Get-date cmdlet。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>It returns a <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> object with the current date.</source>
          <target state="translated">它将返回 <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> 对象与当前日期。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The second command imports the <bpt id="p1">**</bpt>TestModule<ept id="p1">**</ept> module.</source>
          <target state="translated">第二个命令将导入 <bpt id="p1">**</bpt>TestModule<ept id="p1">**</ept> 模块。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>This module includes a function named <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> that returns the year and day of the year.</source>
          <target state="translated">此模块包含一个名为函数 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> ，它返回的年和每年的日期。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The third command runs the <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> command again.</source>
          <target state="translated">第三个命令将运行 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 再次命令。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Because functions take precedence over cmdlets, the <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> function from the <bpt id="p2">**</bpt>TestModule<ept id="p2">**</ept> module runs, instead of the <bpt id="p3">**</bpt>Get-Date<ept id="p3">**</ept> cmdlet.</source>
          <target state="translated">由于函数优先于 cmdlet， <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 函数从 <bpt id="p2">**</bpt>TestModule<ept id="p2">**</ept> 模块仍可运行，而不是 <bpt id="p3">**</bpt>Get-date<ept id="p3">**</ept> cmdlet。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The fourth command uses the <bpt id="p1">**</bpt>All<ept id="p1">**</ept> parameter of the <bpt id="p2">**</bpt>Get-Command<ept id="p2">**</ept> to get all of the Get-Date commands in the session.</source>
          <target state="translated">第四个命令使用 <bpt id="p1">**</bpt>所有<ept id="p1">**</ept> 参数 <bpt id="p2">**</bpt>Get-command<ept id="p2">**</ept> 来获取会话中的所有 Get-date 命令。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The results show that there are two <bpt id="p1">**</bpt>Get-Date<ept id="p1">**</ept> commands in the session, a function from the <bpt id="p2">**</bpt>TestModule<ept id="p2">**</ept> module and a cmdlet from the <bpt id="p3">**</bpt>Microsoft.PowerShell.Utility<ept id="p3">**</ept> module.</source>
          <target state="translated">结果显示有两个 <bpt id="p1">**</bpt>Get-date<ept id="p1">**</ept> 会话中的某个函数中的命令 <bpt id="p2">**</bpt>TestModule<ept id="p2">**</ept> 模块，并从 cmdlet <bpt id="p3">**</bpt>Microsoft.PowerShell.Utility<ept id="p3">**</ept> 模块。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The fifth command runs the hidden cmdlet by qualifying the command name with the module name.</source>
          <target state="translated">第五个命令通过使用模块名称限定命令名称，以便运行隐藏的 cmdlet。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>For more information about command precedence in Windows PowerShell, see about_Command_Precedence (http://go.microsoft.com/fwlink/?LinkID=113214).</source>
          <target state="translated">有关 Windows PowerShell 中命令优先级的详细信息，请参阅 about_Command_Precedence (http://go.microsoft.com/fwlink/?LinkID=113214)。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 10 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 10 --------------------------</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This command imports the PSWorkflow module.</source>
          <target state="translated">此命令导入 PSWorkflow 模块。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>MinimumVersion<ept id="p1">**</ept> (alias=Version) parameter of <bpt id="p2">**</bpt>Import-Module<ept id="p2">**</ept> to import only version 3.0.0.0 or greater of the module.</source>
          <target state="translated">它使用 <bpt id="p1">**</bpt>MinimumVersion<ept id="p1">**</ept> （别名等于版本） 参数 <bpt id="p2">**</bpt>导入模块<ept id="p2">**</ept> 来仅导入版本 3.0.0.0 或更高版本的模块。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">**</bpt>RequiredVersion<ept id="p1">**</ept> parameter to import a particular version of a module, or use the <bpt id="p2">**</bpt>Module<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Version<ept id="p3">**</ept> parameters of the <bpt id="p4">**</bpt>#Requires<ept id="p4">**</ept> keyword to require a particular version of a module in a script.</source>
          <target state="translated">您还可以使用 <bpt id="p1">**</bpt>RequiredVersion<ept id="p1">**</ept> 参数来导入特定版本的模块，或使用 <bpt id="p2">**</bpt>模块<ept id="p2">**</ept> 和 <bpt id="p3">**</bpt>版本<ept id="p3">**</ept> 参数 <bpt id="p4">**</bpt>#Requires<ept id="p4">**</ept> 关键字为需要在脚本中模块的特定版本。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 10 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 10 --------------------------</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cmdlet to import a module from a remote computer.</source>
          <target state="translated">此示例演示如何使用 <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> cmdlet 从远程计算机导入模块。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>This command uses the Implicit Remoting feature of Windows PowerShell.</source>
          <target state="translated">此命令使用 Windows PowerShell 的隐式远程处理功能。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>When you import modules from another session, you can use the cmdlets in the current session.</source>
          <target state="translated">从另一个会话导入模块时，你可以使用当前会话中的 cmdlet。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>However, commands that use the cmdlets actually run in the remote session.</source>
          <target state="translated">但是，使用这些 cmdlet 的命令实际上在远程会话中运行。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 11 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 11 --------------------------</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The commands in this example enable you to manage the storage systems of a remote computer that is not running a Windows operating system.</source>
          <target state="translated">此示例中的命令使你能够管理未运行 Windows 操作系统的远程计算机的存储系统。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>In this example, because the administrator of the computer has installed the Module Discovery WMI provider, the CIM commands can use the default values, which are designed for the provider.</source>
          <target state="translated">在此示例中，由于计算机的管理员已安装模块发现 WMI 提供程序，因此 CIM 命令可以使用专门用于该提供程序的默认值。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>-Alias</source>
          <target state="translated">别名</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Imports only the specified aliases from the module into the current session.</source>
          <target state="translated">仅从模块将指定的别名导入到当前会话。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Enter a comma-separated list of aliases.</source>
          <target state="translated">输入以逗号分隔的别名列表。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Some modules automatically export selected aliases into your session when you import the module.</source>
          <target state="translated">在导入模块时，某些模块会自动将选定的别名导出到你的会话中。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>This parameter lets you select from among the exported aliases.</source>
          <target state="translated">此参数允许你在导出的别名中进行选择。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>-ArgumentList</source>
          <target state="translated">-ArgumentList</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Specifies arguments (parameter values) that are passed to a script module during the Import-Module command.</source>
          <target state="translated">指定在 Import-Module 命令期间传递给脚本模块的参数（参数值）。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>This parameter is valid only when you are importing a script module.</source>
          <target state="translated">仅当你导入脚本模块时，此参数才有效。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>You can also refer to ArgumentList by its alias, "args".</source>
          <target state="translated">你还可以通过 ArgumentList 的别名“args”对它进行引用。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>For more information, see about_Aliases.</source>
          <target state="translated">有关详细信息，请参阅 about_Aliases。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>-AsCustomObject</source>
          <target state="translated">-AsCustomObject</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Returns a custom object with members that represent the imported module members.</source>
          <target state="translated">返回其成员表示导入的模块成员的自定义对象。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This parameter is valid only for script modules.</source>
          <target state="translated">此参数仅对脚本模块有效。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>When you use the AsCustomObject parameter, Import-Module imports the module members into the session and then returns a PSCustomObject object instead of a PSModuleInfo object.</source>
          <target state="translated">使用 AsCustomObject 参数时，Import-Module 会将模块成员导入到会话中，然后返回一个 PSCustomObject 对象，而不是 PSModuleInfo 对象。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>You can save the custom object in a variable and use dot notation to invoke the members.</source>
          <target state="translated">可以在变量中保存自定义对象，并使用点表示法来调用成员。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>-Assembly</source>
          <target state="translated">程序集</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Imports the cmdlets and providers implemented in the specified assembly objects.</source>
          <target state="translated">导入指定程序集对象中实现的 cmdlet 和提供程序。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains assembly objects or a command that creates assembly objects.</source>
          <target state="translated">输入包含程序集对象的变量或可创建程序集对象的命令。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>You can also pipe an assembly object to Import-Module.</source>
          <target state="translated">也可以通过管道将程序集对象传递给 Import-Module。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>When you use this parameter, only the cmdlets and providers implemented by the specified assemblies are imported.</source>
          <target state="translated">使用此参数时，将仅导入由指定的程序集实现的 cmdlet 和提供程序。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>If the module contains other files, they are not imported, and you might be missing important members of the module.</source>
          <target state="translated">如果模块包含其他文件，则不会导入它们，并且你可能会丢失模块的重要成员。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Use this parameter for debugging and testing the module, or when you are instructed to use it by the module author.</source>
          <target state="translated">将此参数用于调试和测试模块，或者在你收到模块作者的指示时使用它。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>-CimNamespace</source>
          <target state="translated">-CimNamespace</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Specifies the namespace of an alternate CIM provider that exposes CIM modules.</source>
          <target state="translated">指定可公开 CIM 模块的备用 CIM 提供程序的命名空间。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The default value is the namespace of the Module Discovery WMI provider.</source>
          <target state="translated">默认值是模块发现 WMI 提供程序的命名空间。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Use this parameter to import CIM modules from computers and devices that are not running a Windows operating system.</source>
          <target state="translated">使用此参数从未运行 Windows 操作系统的计算机和设备导入 CIM 模块。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此参数是在 Windows PowerShell 3.0 中引入的。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>-CimResourceUri</source>
          <target state="translated">-CimResourceUri</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Specifies an alternate location for CIM modules.</source>
          <target state="translated">指定 CIM 模块的备用位置。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The default value is the  resource URI of the Module Discovery WMI provider on the remote computer.</source>
          <target state="translated">默认值是远程计算机上模块发现 WMI 提供程序的资源 URI。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Use this parameter to import CIM modules from computers and devices that are not running a Windows operating system.</source>
          <target state="translated">使用此参数从未运行 Windows 操作系统的计算机和设备导入 CIM 模块。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此参数是在 Windows PowerShell 3.0 中引入的。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>-Cmdlet</source>
          <target state="translated">-Cmdlet</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Imports only the specified cmdlets from the module into the current session.</source>
          <target state="translated">仅从模块将指定的 cmdlet 导入到当前会话。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Enter a list of cmdlets.</source>
          <target state="translated">输入 cmdlet 的列表。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Some modules automatically export selected cmdlets into your session when you import the module.</source>
          <target state="translated">在导入模块时，某些模块会自动将选定的 cmdlet 导出到你的会话中。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>This parameter lets you select from among the exported cmdlets.</source>
          <target state="translated">此参数允许你在导出的 cmdlet 中进行选择。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>-DisableNameChecking</source>
          <target state="translated">-DisableNameChecking</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Suppresses the message that warns you when you import a cmdlet or function whose name includes an unapproved verb or a prohibited character.</source>
          <target state="translated">禁用在你导入的 cmdlet 或函数名称包括未经批准的动词或禁止的字符时出现的警告消息。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>By default,  when a module that you import exports cmdlets or functions that have unapproved verbs in their names, the Windows PowerShell displays the following warning message:</source>
          <target state="translated">默认情况下，当导入的模块导出名称中包含未经批准的动词的 cmdlet 或函数时，Windows PowerShell 将显示以下警告消息：</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>"WARNING: Some imported command names include unapproved verbs which might make them less discoverable.</source>
          <target state="translated">"警告︰ 某些导入的命令名称包含未经批准的谓词，这可能会使它们得难于发现。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Use the Verbose parameter for more detail or type Get-Verb to see the list of approved verbs."</source>
          <target state="translated">请使用 Verbose 参数获取详细信息或者键入 Get-Verb 以查看批准的动词列表。”</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>This message is only a warning.</source>
          <target state="translated">此消息只是一个警告。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The complete module is still imported, including the non-conforming commands.</source>
          <target state="translated">仍将导入完整的模块，其中包括非一致性的命令。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Although the message is displayed to module users, the naming problem should be fixed by the module author.</source>
          <target state="translated">尽管会向模块用户显示消息，但是模块作者应修复命名问题。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>-Force</source>
          <target state="translated">-Force</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Re-imports a module and its members, even if the module or its members have an access mode of read-only.</source>
          <target state="translated">重新导入模块及其成员，即使该模块或成员采用的是只读访问模式。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>-Function</source>
          <target state="translated">函数指针</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Imports only the specified functions from the module into the current session.</source>
          <target state="translated">仅从模块将指定的函数导入到当前会话。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Enter a list of functions.</source>
          <target state="translated">输入函数的列表。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Some modules automatically export selected functions into your session when you import the module.</source>
          <target state="translated">在导入模块时，某些模块会自动将选定的函数导出到你的会话中。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>This parameter lets you select from among the exported functions.</source>
          <target state="translated">此参数允许你在导出的函数中进行选择。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>-Global</source>
          <target state="translated">-全局</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Imports modules into the global session state so they are available to all commands in the session.</source>
          <target state="translated">将模块导入全局会话状态，以便它们可供会话中所有的命令使用。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>By default, the commands in a module, including commands from nested modules, are imported into the caller's session state.</source>
          <target state="translated">默认情况下，模块中的命令（包括来自嵌套模块的命令）将导入到调用方的会话状态。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>To restrict the commands that a module exports, use an Export-ModuleMember command in the script module.</source>
          <target state="translated">若要限制模块可导出的命令，请在脚本模块中使用 Export-modulemember 命令。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Global<ept id="p1">**</ept> parameter is equivalent to the <bpt id="p2">**</bpt>Scope<ept id="p2">**</ept> parameter with a value of <bpt id="p3">**</bpt>Global<ept id="p3">**</ept>.</source>
          <target state="translated"> <bpt id="p1">**</bpt>全局<ept id="p1">**</ept> 参数等效于 <bpt id="p2">**</bpt>范围<ept id="p2">**</ept> 参数值为 <bpt id="p3">**</bpt>全局<ept id="p3">**</ept>。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>-ModuleInfo</source>
          <target state="translated">-ModuleInfo</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Specifies module objects to import.</source>
          <target state="translated">指定要导入的模块对象。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the module objects, or a command that gets the module objects, such as a "Get-Module -ListAvailable" command.</source>
          <target state="translated">输入包含模块对象的变量，或获取模块对象的命令（例如，“Get-Module -ListAvailable”命令。）</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>You can also pipe module objects to Import-Module.</source>
          <target state="translated">你还可以通过管道将模块对象导入到 Import-Module。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>-Name</source>
          <target state="translated">-Name</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Specifies the names of the modules to import.</source>
          <target state="translated">指定要导入的模块的名称。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Enter the name of the module or the name of a file in the module, such as a .psd1, .psm1, .dll, or ps1 file.</source>
          <target state="translated">在模块中输入模块的名称或文件的名称，例如 .psd1、.psm1、.dll 或 ps1 文件。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>File paths are optional.</source>
          <target state="translated">文件路径是可选的。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Wildcards are not permitted.</source>
          <target state="translated">不允许使用通配符。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>You can also pipe module names and file names to Import-Module.</source>
          <target state="translated">还可以通过管道将模块名称和文件名传递给 Import-Module。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>If you omit a path, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> looks for the module in the paths saved in the PSModulePath environment variable ($env:PSModulePath).</source>
          <target state="translated">如果省略路径， <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> 会查找该模块保存在 PSModulePath 环境变量的路径中 ($env: PSModulePath)。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Specify only the module name whenever possible.</source>
          <target state="translated">在可能的情况下，仅指定模块名称。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>When you specify a file name, only the members that are implemented in that file are imported.</source>
          <target state="translated">指定文件名时，将仅导入在该文件中实现的成员。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>If the module contains other files, they are not imported, and you might be missing important members of the module.</source>
          <target state="translated">如果模块包含其他文件，则不会导入它们，并且你可能会丢失模块的重要成员。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>-NoClobber</source>
          <target state="translated">-NoClobber</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Does not import commands that have the same names as existing commands in the current session.</source>
          <target state="translated">不要导入与当前会话中的现有命令名称相同的命令。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> imports all exported module commands.</source>
          <target state="translated">默认情况下， <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> 导入所有导出的模块命令。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Commands with the same names can hide or replace commands in the session.</source>
          <target state="translated">具有相同名称的命令可以隐藏或替换会话中的命令。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>To avoid command name conflicts in a session, use the <bpt id="p1">**</bpt>Prefix<ept id="p1">**</ept> or <bpt id="p2">**</bpt>NoClobber<ept id="p2">**</ept> parameters.</source>
          <target state="translated">若要避免在会话中的命令名发生冲突，请使用 <bpt id="p1">**</bpt>前缀<ept id="p1">**</ept> 或 <bpt id="p2">**</bpt>NoClobber<ept id="p2">**</ept> 参数。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>For more information about name conflicts and command precedence, see "Modules and Name Conflicts" in about_Modules and about_Command_Precedence.</source>
          <target state="translated">名称冲突和命令优先顺序有关的详细信息，请参阅 about_Modules 和 about_Command_Precedence 中的"模块和名称冲突"。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>This parameter was added in Windows PowerShell 3.0.</source>
          <target state="translated">此参数是在 Windows PowerShell 3.0 中添加的。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>-PassThru</source>
          <target state="translated">-PassThru</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Returns objects that represent the modules that were imported.</source>
          <target state="translated">返回表示已导入的模块的对象。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>By default, this cmdlet does not generate any output.</source>
          <target state="translated">默认情况下，此 cmdlet 将不产生任何输出。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>-Prefix</source>
          <target state="translated">前缀</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Adds the specified prefix to the nouns in the names of imported module members.</source>
          <target state="translated">将指定的前缀添加到导入的模块成员的名称中的名词。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Use this parameter to avoid name conflicts that might occur when different members in the session have the same name.</source>
          <target state="translated">使用此参数避免当会话中不同的成员具有相同的名称时，可能出现的名称冲突。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>This parameter does not change the module, and it does not affect files that the module imports for its own use (known as "nested modules").</source>
          <target state="translated">此参数不会更改模块，并且不会影响模块导入的、供自己使用的文件（称为“嵌套模块”）。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>It affects only the names of members in the current session.</source>
          <target state="translated">它仅影响当前会话中成员的名称。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>For example, if you specify the prefix "UTC" and then import a Get-Date cmdlet, the cmdlet is known in the session as Get-UTCDate, and it is not confused with the original Get-Date cmdlet.</source>
          <target state="translated">例如，如果你指定前缀“UTC”，然后导入 Get-date cmdlet，则该 cmdlet 将作为 Get-UTCDate 显示在会话中，并且与原始的 Get-date cmdlet 不相混淆。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The value of this parameter takes precedence over the <bpt id="p1">**</bpt>DefaultCommandPrefix<ept id="p1">**</ept> property of the module, which specifies the default prefix.</source>
          <target state="translated">此参数的值将优先于 <bpt id="p1">**</bpt>DefaultCommandPrefix<ept id="p1">**</ept> 的模块，它指定默认的前缀的属性。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>-Variable</source>
          <target state="translated">单变量</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Imports only the specified variables from the module into the current session.</source>
          <target state="translated">仅从模块将指定的变量导入当前会话。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Enter a list of variables.</source>
          <target state="translated">输入变量的列表。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Wildcard characters are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Some modules automatically export selected variables into your session when you import the module.</source>
          <target state="translated">在导入模块时，某些变量会自动将选定的变量导出到你的会话中。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>This parameter lets you select from among the exported variables.</source>
          <target state="translated">此参数允许你在导出的变量中进行选择。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>-CimSession</source>
          <target state="translated">-CimSession</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Specifies a CIM session on the remote computer.</source>
          <target state="translated">指定远程计算机上的 CIM 会话。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the CIM session or a command that gets the CIM session, such as a Get-CIMSessionhttp://go.microsoft.com/fwlink/?LinkId=227966 command.</source>
          <target state="translated">输入包含 CIM 会话或可获取 CIM 会话，如 Get CIMSessionhttp://go.microsoft.com/fwlink/?LinkId=227966 命令的命令的变量。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> uses the CIM session connection to import modules from the remote computer into the current session.</source>
          <target state="translated"><bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> 使用 CIM 会话连接从远程计算机到当前会话中导入的模块。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>When you use the commands from the imported module in the current session, the commands actually run on the remote computer.</source>
          <target state="translated">在当前会话中使用导入模块中的命令时，命令实际上在远程计算机上运行。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>You can use this parameter to import modules from computers and devices that are not running a Windows operating system, and Windows computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">你可以使用此参数从未运行 Windows 操作系统的计算机和设备，以及具有 Windows PowerShell，但未启用 Windows PowerShell 远程处理的 Windows 计算机导入模块。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此参数是在 Windows PowerShell 3.0 中引入的。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>-MinimumVersion</source>
          <target state="translated">-MinimumVersion</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Imports only a version of the module that is greater than or equal to the specified value.</source>
          <target state="translated">仅导入大于或等于指定值的模块版本。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>If no version qualifies, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> generates an error.</source>
          <target state="translated">如果没有合格的版本， <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> 将生成错误。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> imports the module without checking the version number.</source>
          <target state="translated">默认情况下， <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> 导入的模块，而不会检查版本号。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>MinimumVersion<ept id="p1">**</ept> parameter name or its alias, <bpt id="p2">**</bpt>Version<ept id="p2">**</ept>.</source>
          <target state="translated">使用 <bpt id="p1">**</bpt>MinimumVersion<ept id="p1">**</ept> 参数名或其别名 <bpt id="p2">**</bpt>版本<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>To specify an exact version, use the <bpt id="p1">**</bpt>RequiredVersion<ept id="p1">**</ept> parameter.</source>
          <target state="translated">若要指定确切的版本，使用 <bpt id="p1">**</bpt>RequiredVersion<ept id="p1">**</ept> 参数。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">**</bpt>Module<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Version<ept id="p2">**</ept> parameters of the #Requires keyword to require a specific version of a module in a script.</source>
          <target state="translated">您还可以使用 <bpt id="p1">**</bpt>模块<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>版本<ept id="p2">**</ept> 参数 #Requires 关键字为需要在脚本中模块的特定版本。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此参数是在 Windows PowerShell 3.0 中引入的。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>-PSSession</source>
          <target state="translated">-PSSession</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Imports modules from the specified Windows PowerShell user-managed session ("PSSession") into the current session.</source>
          <target state="translated">从指定的 Windows PowerShell 用户管理会话 ("PSSession") 将模块导入到当前会话中。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains a PSSession or a command that gets a PSSession, such as a Get-PSSession command.</source>
          <target state="translated">输入包含 PSSession 或可获取 PSSession，例如 Get-pssession 命令的命令的变量。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>When you import a module from a different session into the current session, you can use the cmdlets from the module in the current session, just as you would use cmdlets from a local module.</source>
          <target state="translated">将其他会话中的模块导入当前会话中时，你可以在当前会话中使用来自模块的 cmdlet，就像你使用来自本地模块的 cmdlet 一样。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Commands that use the remote cmdlets actually run in the remote session, but the remoting details are managed in the background by Windows PowerShell.</source>
          <target state="translated">使用远程 cmdlet 的命令实际上在远程会话中运行，但是远程处理详细信息由 Windows PowerShell 在后台管理。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>This parameter uses the Implicit Remoting feature of Windows PowerShell.</source>
          <target state="translated">此参数使用 Windows PowerShell 的隐式远程处理功能。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>It is equivalent to using the Import-PSSession cmdlet to import particular modules from a session.</source>
          <target state="translated">它相当于使用 Import-pssession cmdlet 从会话中导入特定的模块。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cannot import Windows PowerShell Core modules from another session.</source>
          <target state="translated"><bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> 无法从另一个会话导入 Windows PowerShell 核心模块。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell Core modules have names that begin with Microsoft.PowerShell.</source>
          <target state="translated">Windows PowerShell 核心模块具有以 Microsoft.PowerShell 开头的名称。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此参数是在 Windows PowerShell 3.0 中引入的。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>-RequiredVersion</source>
          <target state="translated">-RequiredVersion</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Imports only the specified version of the module.</source>
          <target state="translated">仅导入模块的指定版本。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>If the version is not installed, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> generates an error.</source>
          <target state="translated">如果未安装的版本， <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> 将生成错误。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> imports the module without checking the version number.</source>
          <target state="translated">默认情况下， <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> 导入的模块，而不会检查版本号。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>To specify a minimum version, use the <bpt id="p1">**</bpt>MinimumVersion<ept id="p1">**</ept> parameter.</source>
          <target state="translated">若要指定最小版本，请使用 <bpt id="p1">**</bpt>MinimumVersion<ept id="p1">**</ept> 参数。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">**</bpt>Module<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Version<ept id="p2">**</ept> parameters of the #Requires keyword to require a specific version of a module in a script.</source>
          <target state="translated">您还可以使用 <bpt id="p1">**</bpt>模块<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>版本<ept id="p2">**</ept> 参数 #Requires 关键字为需要在脚本中模块的特定版本。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Scripts that use the <bpt id="p1">**</bpt>RequiredVersion<ept id="p1">**</ept> parameter to import modules that are included with existing releases of the Windows operating system do not automatically run in future releases of the Windows operating system.</source>
          <target state="translated">使用的脚本 <bpt id="p1">**</bpt>RequiredVersion<ept id="p1">**</ept> 参数来导入的 Windows 操作系统现有版本附带的模块不会自动运行在未来版本的 Windows 操作系统。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>This is because Windows PowerShell module version numbers in future releases of the Windows operating system are higher than module version numbers in existing releases of the Windows operating system.</source>
          <target state="translated">这是因为 Windows 操作系统未来版本中的 Windows PowerShell 模板版本号高于 Windows 操作系统现有版本中的模块版本号。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此参数是在 Windows PowerShell 3.0 中引入的。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>-Scope</source>
          <target state="translated">作用域</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Imports the module only into the specified scope.</source>
          <target state="translated">仅将模块导入到指定的作用域。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Valid values are:</source>
          <target state="translated">有效值包括：</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Global<ept id="p1">**</ept>: Available to all commands in the session.</source>
          <target state="translated"><bpt id="p1">**</bpt>全局<ept id="p1">**</ept>︰ 可供会话中的所有命令。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Equivalent to the <bpt id="p1">**</bpt>Global<ept id="p1">**</ept> parameter.</source>
          <target state="translated">等效于 <bpt id="p1">**</bpt>全局<ept id="p1">**</ept> 参数。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Local<ept id="p1">**</ept>: Available only in the current scope.</source>
          <target state="translated"><bpt id="p1">**</bpt>本地<ept id="p1">**</ept>︰ 仅在当前作用域中可用。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>By default, the module is imported into the current scope, which could be a script or module.</source>
          <target state="translated">默认情况下，模块将导入到当前作用域（可以是脚本或模块）中。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此参数是在 Windows PowerShell 3.0 中引入的。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>System.String, System.Management.Automation.PSModuleInfo, System.Reflection.Assembly</source>
          <target state="translated">System.String，System.Management.Automation.PSModuleInfo，不过 System.Reflection.Assembly</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>You can pipe a module name, module object, or assembly object to Import-Module.</source>
          <target state="translated">可以通过管道将模块名称、模块对象或程序集对象传递给 Import-Module。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>None, System.Management.Automation.PSModuleInfo, or System.Management.Automation.PSCustomObject</source>
          <target state="translated">None、 System.Management.Automation.PSModuleInfo 或 System.Management.Automation.PSCustomObject</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>By default, Import-Module does not generate any output.</source>
          <target state="translated">默认情况下，Import-Module 不会生成任何输出。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>If you use the PassThru parameter, it generates a System.Management.Automation.PSModuleInfo object that represents the module.</source>
          <target state="translated">如果使用 PassThru 参数，它将生成表示模块的 System.Management.Automation.PSModuleInfo 对象。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>If you use the AsCustomObject parameter, it generates a PSCustomObject object.</source>
          <target state="translated">如果使用 AsCustomObject 参数，则它会生成一个 PSCustomObject 对象。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Before you can import a module, the module must be installed on the local computer, that is, the module directory must be copied to a directory that is accessible to your local computer.</source>
          <target state="translated">在你可以导入模块之前，必须在本地计算机上安装该模块，也就是说，必须将模块目录复制到本地计算机可以访问的目录。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>For more information, see about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311).</source>
          <target state="translated">有关详细信息，请参阅 about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311)。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> and <bpt id="p2">**</bpt>CIMSession<ept id="p2">**</ept> parameters to import modules that are installed on remote computers.</source>
          <target state="translated">您还可以使用 <bpt id="p1">**</bpt>PSSession<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>CIMSession<ept id="p2">**</ept> 参数将远程计算机安装的模块导入。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>However, commands that use the cmdlets in these modules actually run in the remote session on the remote computer.</source>
          <target state="translated">但是，在这些模块中使用这些 cmdlet 的命令实际上在远程计算机上的远程会话中运行。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>If you import members with the same name and the same type into your session, Windows PowerShell uses the member imported last by default.</source>
          <target state="translated">如果你将具有相同名称和类型的成员导入到你的会话中，Windows PowerShell 会默认使用最后一个导入的成员。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Variables and aliases are replaced, and the originals are not accessible.</source>
          <target state="translated">将替换变量和别名，并且原始文件不可访问。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Functions, cmdlets and providers are merely "shadowed" by the new members, and they can be accessed by qualifying the command name with the name of its snap-in, module, or function path.</source>
          <target state="translated">函数、cmdlet 和提供程序仅由新成员“灰显”，并且可通过使用管理单元、模块或函数路径的名称限定命令名称来访问它们。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>To update the formatting data for commands that have been imported from a module, use the Update-FormatData cmdlet.</source>
          <target state="translated">若要更新的已从模块导入的命令的格式设置数据，请使用 Update-formatdata cmdlet。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Update-FormatData<ept id="p1">**</ept> also updates the formatting data for commands in the session that were imported from modules.</source>
          <target state="translated"><bpt id="p1">**</bpt>Update-formatdata<ept id="p1">**</ept> 还会更新会话中通过模块导入的命令的格式设置数据。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>If the formatting file for a module changes, you can run an <bpt id="p1">**</bpt>Update-FormatData<ept id="p1">**</ept> command to update the formatting data for imported commands.</source>
          <target state="translated">如果某个模块的格式设置文件发生更改，则可以运行 <bpt id="p1">**</bpt>Update-formatdata<ept id="p1">**</ept> 命令以导入的更新的格式设置数据的命令。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>You do not need to import the module again.</source>
          <target state="translated">不需要再次导入该模块。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, the core commands that are installed with Windows PowerShell are packaged in modules.</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，将与 Windows PowerShell 一起安装的核心命令打包在模块中。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 2.0, and in host programs that create older-style sessions in later versions of Windows PowerShell, the core commands are packaged in snap-ins ("PSSnapins").</source>
          <target state="translated">在 Windows PowerShell 2.0 中，以及在更高版本的 Windows PowerShell 中创建旧样式会话的托管程序中，将核心命令打包到管理单元中 ("PSSnapins")。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>The exception is <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, which is always a snap-in.</source>
          <target state="translated">例外情况是 <bpt id="p1">**</bpt>Microsoft.PowerShell.Core<ept id="p1">**</ept>, ，这始终是管理单元。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Also, remote sessions, such as those started by the New-PSSession cmdlet, are older-style sessions that include core snap-ins.</source>
          <target state="translated">此外，远程会话，例如 New-pssession cmdlet 启动是包括核心管理单元的旧样式会话。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>For information about the <bpt id="p1">**</bpt>CreateDefault2<ept id="p1">**</ept> method that creates newer-style sessions with core modules, see "CreateDefault2 Method" in MSDN at http://msdn.microsoft.com/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2(v=VS.85).aspxhttp://msdn.microsoft.com/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2(v=VS.85).aspx.</source>
          <target state="translated">璝惠 <bpt id="p1">**</bpt>CreateDefault2<ept id="p1">**</ept> 方法，可使用核心模块创建较新样式会话查看"CreateDefault2 方法"在 MSDN 中 http://msdn.microsoft.com/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2 (v = vs.85).aspxhttp://msdn.microsoft.com/library/windows/desktop/system.management.automation.runspaces.initialsessionstate.createdefault2 (v=VS.85).aspx。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> cannot import Windows PowerShell Core modules from another session.</source>
          <target state="translated"><bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> 无法从另一个会话导入 Windows PowerShell 核心模块。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell Core modules have names that begin with Microsoft.PowerShell.</source>
          <target state="translated">Windows PowerShell 核心模块具有以 Microsoft.PowerShell 开头的名称。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 2.0, some of the property values of the module object, such as the <bpt id="p1">**</bpt>ExportedCmdlets<ept id="p1">**</ept> and <bpt id="p2">**</bpt>NestedModules<ept id="p2">**</ept> property values, were not populated until the module was imported and were not available on the module object that the <bpt id="p3">**</bpt>PassThru<ept id="p3">**</ept> parameter returns.</source>
          <target state="translated">在 Windows PowerShell 2.0 中，该模块的属性值的某些对象，如 <bpt id="p1">**</bpt>ExportedCmdlets<ept id="p1">**</ept> 和 <bpt id="p2">**</bpt>NestedModules<ept id="p2">**</ept> 直到模块已导入但未提供对该模块对象的属性值，不会填充， <bpt id="p3">**</bpt>PassThru<ept id="p3">**</ept> 参数返回。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell 3.0, all module property values are populated.</source>
          <target state="translated">在 Windows PowerShell 3.0 中，所有的模块属性值进行填充。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>If you attempt to import a module that contains mixed-mode assemblies that are not compatible with Windows PowerShell 3.0, <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> returns an error message like the following one.</source>
          <target state="translated">如果你尝试导入模块，其中包含与 Windows PowerShell 3.0 不兼容的混合模式程序集 <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> 返回与以下类似的错误消息。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>This error occurs when a module that is designed for Windows PowerShell 2.0 contains at least one mixed-module assembly, that is, an assembly that includes both managed and non-managed code, such as C++ and C#.</source>
          <target state="translated">专为 Windows PowerShell 2.0 中的模块包含至少一个混合模块程序集，即，包含托管和非托管代码，如 c + + 和 C# 程序集时发生该错误。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>To import a module that contains mixed-mode assemblies, start Windows PowerShell 2.0 by using the following command, and then try the <bpt id="p1">**</bpt>Import-Module<ept id="p1">**</ept> command again.</source>
          <target state="translated">要导入包含混合模式程序集的模块，请使用以下命令启动 Windows PowerShell 2.0，然后再尝试 <bpt id="p1">**</bpt>导入模块<ept id="p1">**</ept> 再次命令。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>To use the CIM session feature, the remote computer must have WS-Management remoting and Windows Management Instrumentation (WMI), which is the Microsoft implementation of the Common Information Model (CIM) standard.</source>
          <target state="translated">若要使用 CIM 会话功能，远程计算机必须具有 WS-Management 远程处理和 Windows Management Instrumentation (WMI)，后者是通用信息模型 (CIM) 标准的 Microsoft 实现。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The computer must also have the Module Discovery WMI provider or an alternate CIM provider that has the same basic features.</source>
          <target state="translated">计算机还必须具有具有相同基本功能的模拟发现 WMI 提供程序和备用 CIM 提供程序。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>You can use the CIM session feature on computers that are not running a Windows operating system and on Windows computers that have Windows PowerShell, but do not have Windows PowerShell remoting enabled.</source>
          <target state="translated">你可以在未运行 Windows 操作系统的计算机上，以及具有 Windows PowerShell，但未启用 Windows PowerShell 远程处理的 Windows 计算机上使用 CIM 会话功能。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>You can also use the CIM parameters to get CIM modules from computers that have Windows PowerShell remoting enabled, including the local computer.</source>
          <target state="translated">你还可以使用 CIM 参数从已启用 Windows PowerShell 远程处理的计算机（包括本地计算机）中获取 CIM 模块。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>When you create a CIM session on the local computer, Windows PowerShell uses DCOM, instead of WMI, to create the session.</source>
          <target state="translated">在本地计算机上创建 CIM 会话时，Windows PowerShell 使用 DCOM，而不是 WMI 来创建会话。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Export-ModuleMember</source>
          <target state="translated">Export-ModuleMember</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Get-Module</source>
          <target state="translated">Get-Module</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>New-Module</source>
          <target state="translated">New-Module</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Remove-Module</source>
          <target state="translated">Remove-Module</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Get-Verb</source>
          <target state="translated">Get-Verb</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>