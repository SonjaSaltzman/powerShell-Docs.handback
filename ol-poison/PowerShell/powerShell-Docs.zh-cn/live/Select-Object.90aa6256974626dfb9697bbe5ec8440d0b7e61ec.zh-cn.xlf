<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f87bbeee98c78e4885a1342f6cb4d51e613dc6e0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Utility\Select-Object.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c74ce9be0cc7bdc802ed412ef79b49eaf6693f18</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ddae2106b7934c2d58413c6bc9e489815a133a82</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Select-Object</source>
          <target state="translated">Select-Object</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Select-Object</source>
          <target state="translated">Select-Object</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Selects objects or object properties.</source>
          <target state="translated">选择对象或对象属性。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DefaultParameter (Default)</source>
          <target state="translated">DefaultParameter （默认值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>IndexParameter</source>
          <target state="translated">IndexParameter</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Select-Object<ept id="p1">**</ept> cmdlet selects specified properties of an object or set of objects.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Select-object<ept id="p1">**</ept> cmdlet 选择的对象的指定的属性或对象集。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It can also select unique objects, a specified number of objects, or objects in a specified position in an array.</source>
          <target state="translated">它还可以从数组中选择唯一对象、指定数目的对象或指定位置中的对象。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To select objects from a collection, use the <bpt id="p1">**</bpt>First<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Last<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Unique<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Skip<ept id="p4">**</ept>, and <bpt id="p5">**</bpt>Index<ept id="p5">**</ept> parameters.</source>
          <target state="translated">若要从集合中选择对象，请使用 <bpt id="p1">**</bpt>第一个<ept id="p1">**</ept>, ，<bpt id="p2">**</bpt>最后一个<ept id="p2">**</ept>, ，<bpt id="p3">**</bpt>Unique<ept id="p3">**</ept>, ，<bpt id="p4">**</bpt>跳过<ept id="p4">**</ept>, ，和 <bpt id="p5">**</bpt>索引<ept id="p5">**</ept> 参数。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To select object properties, use the <bpt id="p1">**</bpt>Property<ept id="p1">**</ept> parameter.</source>
          <target state="translated">若要选择的对象属性，使用 <bpt id="p1">**</bpt>属性<ept id="p1">**</ept> 参数。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When you select properties, Select-Object returns new objects that have only the specified properties.</source>
          <target state="translated">当你选择属性时，Select-Object 将返回只具有指定属性的新对象。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, Select-Object includes an optimization feature that prevents commands from creating and processing objects that are not used.</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，Select-Object 包含了一种优化功能，可防止命令创建和处理未使用的对象。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When you include a <bpt id="p1">**</bpt>Select-Object<ept id="p1">**</ept> command with the <bpt id="p2">**</bpt>First<ept id="p2">**</ept> or <bpt id="p3">**</bpt>Index<ept id="p3">**</ept> parameters in a command pipeline, Windows PowerShell stops the command that generates the objects as soon as the selected number of objects is generated, even when the command that generates the objects appears before the <bpt id="p4">**</bpt>Select-Object<ept id="p4">**</ept> command in the pipeline.</source>
          <target state="translated">当您包含 <bpt id="p1">**</bpt>Select-object<ept id="p1">**</ept> 命令 <bpt id="p2">**</bpt>第一个<ept id="p2">**</ept> 或 <bpt id="p3">**</bpt>索引<ept id="p3">**</ept> 参数在命令管道中，Windows PowerShell 将停止生成对象，就立即生成所选的数量的对象，即使生成的对象的命令显示在该命令 <bpt id="p4">**</bpt>Select-object<ept id="p4">**</ept> 命令管道中。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To turn off this optimizing behavior, use the <bpt id="p1">**</bpt>Wait<ept id="p1">**</ept> parameter.</source>
          <target state="translated">若要关闭此优化行为，请使用 <bpt id="p1">**</bpt>等待<ept id="p1">**</ept> 参数。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 示例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This command creates objects that have the Name, ID, and working set (WS) properties of process objects.</source>
          <target state="translated">此命令将创建具有进程对象的 Name、ID 和工作集 (WS) 属性的对象。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This command gets information about the modules used by the processes on the computer.</source>
          <target state="translated">此命令将获取计算机上的进程所使用模块的相关信息。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It uses Get-Process cmdlet to get the process on the computer.</source>
          <target state="translated">它使用 Get-process cmdlet 来获取计算机上的进程。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>Select-Object<ept id="p1">**</ept> cmdlet to create new objects with only the selected properties.</source>
          <target state="translated">它使用 <bpt id="p1">**</bpt>Select-object<ept id="p1">**</ept> cmdlet 来创建仅具有选定属性的新对象。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>Property<ept id="p1">**</ept> parameter of the <bpt id="p2">**</bpt>Select-Object<ept id="p2">**</ept> cmdlet to select the process names.</source>
          <target state="translated">该命令使用 <bpt id="p1">**</bpt>属性<ept id="p1">**</ept> 参数 <bpt id="p2">**</bpt>Select-object<ept id="p2">**</ept> cmdlet 来选择进程名称。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Because the <bpt id="p1">**</bpt>Modules<ept id="p1">**</ept> property contains an <bpt id="p2">**</bpt>ModuleProcess<ept id="p2">**</ept> object that has many properties, the command uses the <bpt id="p3">**</bpt>ExpandProperty<ept id="p3">**</ept> parameter to get the properties of the objects in the <bpt id="p4">**</bpt>Modules<ept id="p4">**</ept> property of each process.</source>
          <target state="translated">因为 <bpt id="p1">**</bpt>模块<ept id="p1">**</ept> 属性包含 <bpt id="p2">**</bpt>ModuleProcess<ept id="p2">**</ept> 对象，它具有多个属性，该命令使用 <bpt id="p3">**</bpt>ExpandProperty<ept id="p3">**</ept> 参数，以获取的属性中的对象 <bpt id="p4">**</bpt>模块<ept id="p4">**</ept> 每个进程的属性。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The command uses the Format-List parameter to display the name and modules in of each process in a list.</source>
          <target state="translated">该命令使用 Format-list 参数在列表中显示的名称和每个进程中的模块。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This command gets the five processes that are using the most memory.</source>
          <target state="translated">此命令显示占用内存最多的五个进程。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The Get-Process cmdlet gets the processes on the computer.</source>
          <target state="translated">Get-process cmdlet 获取计算机上的进程。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The Sort-Object cmdlet sorts the processes according to memory (working set) usage, and the Select-Object cmdlet selects only the last five members of the resulting array of objects.</source>
          <target state="translated">Sort-object cmdlet 进行排序的进程内存 （工作集） 使用量根据和 Select-object cmdlet 选择仅生成的对象数组的最后五个成员。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Wait<ept id="p1">**</ept> parameter is not required in commands that include the <bpt id="p2">**</bpt>Sort-Object<ept id="p2">**</ept> cmdlet because <bpt id="p3">**</bpt>Sort-Object<ept id="p3">**</ept> processes all objects and then returns a collection.</source>
          <target state="translated"> <bpt id="p1">**</bpt>等待<ept id="p1">**</ept> 中包含的命令不需要参数 <bpt id="p2">**</bpt>Sort-object<ept id="p2">**</ept> cmdlet 因为 <bpt id="p3">**</bpt>Sort-object<ept id="p3">**</ept> 处理所有对象并返回一个集合。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Select-Object<ept id="p1">**</ept> optimization is available only for commands that return objects individually as they are processed.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Select-object<ept id="p1">**</ept> 优化为仅可用于在处理后分别返回对象的命令。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This command gets the name and start day of the processes running on a computer.</source>
          <target state="translated">此命令将获取计算机上正在运行的进程的名称和启动日期。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The command uses the Get-Process cmdlet to get the processes on the computer.</source>
          <target state="translated">该命令使用 Get-process cmdlet 来获取计算机上的进程。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>It passes the processes to the <bpt id="p1">**</bpt>Select-Object<ept id="p1">**</ept> cmdlet, which creates objects that have only the <bpt id="p2">**</bpt>ProcessName<ept id="p2">**</ept> parameter and a calculated property named "Start Day."</source>
          <target state="translated">它将传递到进程 <bpt id="p1">**</bpt>Select-object<ept id="p1">**</ept> cmdlet，后者会创建对象只具有 <bpt id="p2">**</bpt>ProcessName<ept id="p2">**</ept> 参数和计算的属性名为"Start Day"。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The "Start Day" property is added by using a hash table with Name and Expression keys.</source>
          <target state="translated">通过使用具有 Name 和 Expression 键的哈希表来添加“Start Day”属性。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The value of the Expression key is a script blocks that gets the StartTime property of each process and the DayofWeek property of the StartTime.</source>
          <target state="translated">Expression 键的值是获取每个进程的 StartTime 属性和 StartTime 的 DayofWeek 属性的脚本块。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This command uses the Unique parameter of Select-Object to get unique characters from an array of characters.</source>
          <target state="translated">此命令使用 Select-Object 的 Unique 参数从字符数组中获取唯一字符。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 6 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 6 --------------------------</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>These commands gets the first (newest) and last (oldest) events in the Windows Powershell event log.</source>
          <target state="translated">这些命令获取 Windows Powershell 事件日志中的第一个（最新）和最后一个（最旧）事件。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The command uses the Get-EventLog cmdlet to get all events in the Windows PowerShell log.</source>
          <target state="translated">该命令使用 Get-eventlog cmdlet 获取 Windows PowerShell 日志中所有事件。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>It saves them in the $a variable.</source>
          <target state="translated">它将事件保存在 $a 变量中。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The second command uses a pipeline operator (|) to send the events in $a to the <bpt id="p1">**</bpt>Select-Object<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">第二个命令使用管道运算符 (|) 将 $ 中的事件发送到 <bpt id="p1">**</bpt>Select-object<ept id="p1">**</ept> cmdlet。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Select-Object<ept id="p1">**</ept> command uses the <bpt id="p2">**</bpt>Index<ept id="p2">**</ept> parameter to select events from the array of events in the $a variable.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Select-object<ept id="p1">**</ept> 命令使用 <bpt id="p2">**</bpt>索引<ept id="p2">**</ept> 参数从 $a 变量中的事件数组中选择事件。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The index of the first event is 0.</source>
          <target state="translated">第一个事件的索引为 0。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The index of the last event is the number of items in $a minus 1.</source>
          <target state="translated">最后一个事件的索引为 $a 中的项数减 1。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 7 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 7 --------------------------</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This command creates a new PSSession on each of the computers listed in the Servers.txt files, except for the first one.</source>
          <target state="translated">此命令将在 Servers.txt 文件中列出的每台计算机上创建一个新的 PSSession，第一台计算机除外。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This command uses the <bpt id="p1">**</bpt>Select-Object<ept id="p1">**</ept> cmdlet to select all but the first computer in a list of computer names.</source>
          <target state="translated">此命令使用 <bpt id="p1">**</bpt>Select-object<ept id="p1">**</ept> cmdlet 传递到选择的所有但的计算机名称列表中第一台计算机。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The resulting list of computers is set as the value of the <bpt id="p1">**</bpt>ComputerName<ept id="p1">**</ept> parameter of the New-PSSession cmdlet.</source>
          <target state="translated">生成的计算机列表设置为的值 <bpt id="p1">**</bpt>ComputerName<ept id="p1">**</ept> New-pssession cmdlet 参数。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 8 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 8 --------------------------</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This command adds a "-ro" suffix to the base names of text files that have the read-only attribute and then displays the first five files so the user can see a sample of the effect.</source>
          <target state="translated">此命令将“-ro”后缀添加到具有只读属性的文本文件的基名称中，然后显示前五个文件以便用户可以看到此效果的示例。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>ReadOnly<ept id="p1">**</ept> dynamic parameter of the Get-ChildItem for FileSystem cmdlet to get read-only files.</source>
          <target state="translated">该命令使用 <bpt id="p1">**</bpt>ReadOnly<ept id="p1">**</ept> Get-childitem for FileSystem cmdlet 来获取只读文件的动态参数。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>It uses a pipeline operator (|) to send the files to the Rename-Item cmdlet, which renames the file.</source>
          <target state="translated">它使用管道运算符 (|) 将文件发送给 Rename-item cmdlet，后者重命名该文件。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>Passthru<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Rename-Item<ept id="p2">**</ept> to send the renamed files to the <bpt id="p3">**</bpt>Select-Object<ept id="p3">**</ept> cmdlet, which selects the first 5 for display.</source>
          <target state="translated">它使用 <bpt id="p1">**</bpt>Passthru<ept id="p1">**</ept> 参数 <bpt id="p2">**</bpt>Rename-item<ept id="p2">**</ept> 重命名后将文件发送到 <bpt id="p3">**</bpt>Select-object<ept id="p3">**</ept> cmdlet，后者选择显示了前的 5。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Wait<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Select-Object<ept id="p2">**</ept> prevents Windows PowerShell from stopping the <bpt id="p3">**</bpt>Get-ChildItem<ept id="p3">**</ept> cmdlet after it gets the first five read-only text files.</source>
          <target state="translated"> <bpt id="p1">**</bpt>等待<ept id="p1">**</ept> 参数 <bpt id="p2">**</bpt>Select-object<ept id="p2">**</ept> 防止停止的 Windows PowerShell <bpt id="p3">**</bpt>Get-childitem<ept id="p3">**</ept> cmdlet 获取前五个只读文本文件后。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Without this parameter, only the first five read-only files would be renamed.</source>
          <target state="translated">如果不使用此参数，则只有前五个只读文件会被重命名。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-ExcludeProperty</source>
          <target state="translated">-ExcludeProperty</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Removes the specifies properties from the selection.</source>
          <target state="translated">删除所选的指定属性。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This parameter is effective only when the command also includes the <bpt id="p1">**</bpt>Property<ept id="p1">**</ept> parameter.</source>
          <target state="translated">仅当命令中还包含时，此参数才有效 <bpt id="p1">**</bpt>属性<ept id="p1">**</ept> 参数。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The value of the property parameter can be a calculated property, which is a hash table that specifies a name and calculates a value for the property display.</source>
          <target state="translated">该属性参数的值可以是计算属性，它是一个用于指定名称并计算值以显示属性的哈希表。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Valid keys are:</source>
          <target state="translated">有效键包括：</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Name or Label <ph id="ph1">\&lt;</ph>string</source>
          <target state="translated">名称或标签 <ph id="ph1">\&lt;</ph>字符串</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Expression <ph id="ph1">\&lt;</ph>string<ph id="ph2">\&gt;</ph> or <ph id="ph3">\&lt;</ph>scriptblock</source>
          <target state="translated">表达式 <ph id="ph1">\&lt;</ph>字符串<ph id="ph2">\&gt;</ph> 或 <ph id="ph3">\&lt;</ph>scriptblock</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For more information, see the examples.</source>
          <target state="translated">有关详细信息，请参阅示例。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>-ExpandProperty</source>
          <target state="translated">-ExpandProperty</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Specifies a property to select, and indicates that an attempt should be made to expand that property.</source>
          <target state="translated">指定要选择的属性，并指示应当尝试展开该属性。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted in the property name.</source>
          <target state="translated">允许在属性名称中使用通配符。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For example, if the specified property is an array, each value of the array is included in the output.</source>
          <target state="translated">例如，如果指定的属性是数组，则应当在输出中包括该数组的每个值。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If the property contains an object, the properties of that object are displayed in the output.</source>
          <target state="translated">如果属性包含对象，则该对象的属性会显示在输出中。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-First</source>
          <target state="translated">优先</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Specifies the number of objects to select from the beginning of an array of input objects.</source>
          <target state="translated">指定要从输入对象的数组的开头选择的对象数。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>-Index</source>
          <target state="translated">索引</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Selects objects from an array based on their index values.</source>
          <target state="translated">基于对象的索引值从数组中选择对象。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Enter the indexes in a comma-separated list.</source>
          <target state="translated">以逗号分隔的列表形式输入索引。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Indexes in an array begin with 0, where 0 represents the first value and (n-1) represents the last value.</source>
          <target state="translated">数组中的索引从 0 开始，0 表示第一个值，(n-1) 表示最后一个值。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Specifies objects to send to the cmdlet through the pipeline.</source>
          <target state="translated">指定要通过管道发送到 cmdlet 的对象。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This parameter enables you to pipe objects to Select-Object.</source>
          <target state="translated">使用此参数可以通过管道将对象传递给 Select-Object。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>When you use the InputObject parameter with Select-Object, instead of piping command results to Select-Object, the InputObject value-even if the value is a collection that is the result of a command, such as -InputObject (Get-Process)-is treated as a single object.</source>
          <target state="translated">当使用 InputObject 参数与 Select-object，而不是给 Select-object 管道命令结果时，InputObject 值-甚至是如果值为一个集合，其中结果的命令，例如-InputObject (Get-process)-将被视为单个对象。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Because InputObject cannot return individual properties from an array or collection of objects, it is recommended that if you use Select-Object to filter a collection of objects for those objects that have specific values in defined properties, you use Select-Object in the pipeline, as shown in the examples in this topic.</source>
          <target state="translated">由于 InputObject 无法返回来自数组或对象集合的单个属性，因此如果你使用 Select-Object 为在定义的属性中具有特定值的对象筛选对象集合，则建议你在管道中使用 Select-Object，如本主题的示例中所示。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-Last</source>
          <target state="translated">-最后一个</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Specifies the number of objects to select from the end of an array of input objects.</source>
          <target state="translated">指定要从输入对象的数组的末尾选择的对象数。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-Property</source>
          <target state="translated">属性</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Specifies the properties to select.</source>
          <target state="translated">指定要选择的属性。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The value of the Property parameter can be a new calculated property.</source>
          <target state="translated">Property 参数的值可以是新的计算属性。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To create a calculated, property, use a hash table.</source>
          <target state="translated">若要创建计算属性，请使用哈希表。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Valid keys are:</source>
          <target state="translated">有效键包括：</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Name (or Label) <ph id="ph1">\&lt;</ph>string</source>
          <target state="translated">名称 （或标签） <ph id="ph1">\&lt;</ph>字符串</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Expression <ph id="ph1">\&lt;</ph>string<ph id="ph2">\&gt;</ph> or <ph id="ph3">\&lt;</ph>script block</source>
          <target state="translated">表达式 <ph id="ph1">\&lt;</ph>字符串<ph id="ph2">\&gt;</ph> 或 <ph id="ph3">\&lt;</ph>脚本块</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>-Skip</source>
          <target state="translated">-跳过</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Skips (does not select) the specified number of items.</source>
          <target state="translated">跳过（不选择）指定数目的项目。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>By default, the Skip parameter counts from the beginning of the array or list of objects, but if the command uses the Last parameter, it counts from the end of the list or array.</source>
          <target state="translated">默认情况下，Skip 参数会从数组或对象列表的开头开始计数，但如果命令使用 Last 参数，它会从列表或数组的末尾开始计数。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Unlike the <bpt id="p1">**</bpt>Index<ept id="p1">**</ept> parameter, which starts counting at 0, the <bpt id="p2">**</bpt>Skip<ept id="p2">**</ept> parameter begins at 1.</source>
          <target state="translated">与不同 <bpt id="p1">**</bpt>索引<ept id="p1">**</ept> 参数，从 0 开始计数， <bpt id="p2">**</bpt>跳过<ept id="p2">**</ept> 参数从 1 开始。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>-Unique</source>
          <target state="translated">唯一</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Specifies that if a subset of the input objects has identical properties and values, only a single member of the subset will be selected.</source>
          <target state="translated">指定如果输入对象的子集有相同的属性和值，则只选择该子集的一个成员。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>This parameter is case-sensitive.</source>
          <target state="translated">此参数区分大小写。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>As a result, strings that differ only in character casing are considered to be unique.</source>
          <target state="translated">因此，会将仅大小写不同的字符串视为唯一项。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>-Wait</source>
          <target state="translated">-Wait</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Turns off optimization.</source>
          <target state="translated">禁用优化。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Windows PowerShell runs commands in the order that they appear in the command pipeline and lets them generate all objects.</source>
          <target state="translated">Windows PowerShell 将按照命令在命令管道中出现的顺序运行命令，并允许它们生成所有对象。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>By default, if you include a <bpt id="p1">**</bpt>Select-Object<ept id="p1">**</ept> command with the <bpt id="p2">**</bpt>First<ept id="p2">**</ept> or <bpt id="p3">**</bpt>Index<ept id="p3">**</ept> parameters in a command pipeline, Windows PowerShell stops the command that generates the objects as soon as the selected number of objects is generated.</source>
          <target state="translated">默认情况下，如果包括 <bpt id="p1">**</bpt>Select-object<ept id="p1">**</ept> 命令 <bpt id="p2">**</bpt>第一个<ept id="p2">**</ept> 或 <bpt id="p3">**</bpt>索引<ept id="p3">**</ept> 命令管道中的参数，Windows PowerShell 将停止生成对象，就立即生成所选的数量的对象的命令。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>This parameter is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">此参数是在 Windows PowerShell 3.0 中引入的。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>You can pipe any object to Select-Object.</source>
          <target state="translated">可以通过管道将任何对象传递给 Select-Object。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>You can also refer to the <bpt id="p1">**</bpt>Select-Object<ept id="p1">**</ept> cmdlet by its built-in alias, "select".</source>
          <target state="translated">此外可以指 <bpt id="p1">**</bpt>Select-object<ept id="p1">**</ept> cmdlet 通过其内置别名"select"。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>For more information, see about_Aliases.</source>
          <target state="translated">有关详细信息，请参阅 about_Aliases。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The optimization feature of <bpt id="p1">**</bpt>Select-Object<ept id="p1">**</ept> is available only for commands that write objects to the pipeline as they are processed.</source>
          <target state="translated">优化功能 <bpt id="p1">**</bpt>Select-object<ept id="p1">**</ept> 仅可用于在处理对象写入管道的命令。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>It has no effect on commands that buffer processed objects and write them as a collection.</source>
          <target state="translated">它对用于缓冲处理的对象并将其作为集合写入的命令不起作用。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Writing objects immediately is a cmdlet design best practice.</source>
          <target state="translated">立即写入对象是 cmdlet 设计的最佳做法。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>For more information, see "Write Single Records to the Pipeline" in "Strongly Encouraged Development Guidelines" at http://go.microsoft.com/fwlink/?LinkId=223385http://go.microsoft.com/fwlink/?LinkId=223385</source>
          <target state="translated">有关详细信息，查看"编写单个记录管道中"强烈鼓励开发指南"http://go.microsoft.com/fwlink/?LinkId=223385http://go.microsoft.com/fwlink/?LinkId=223385</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Group-Object</source>
          <target state="translated">Group-Object</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Sort-Object</source>
          <target state="translated">Sort-Object</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Where-Object</source>
          <target state="translated">Where-Object</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>