<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c3c5b7bdd0e478e8ab19cf67260f8f8c174085a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Utility\Select-String.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c358da2d9d9b8479467113a2de169f81a829340f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12fc95fed3a6aee8b0a46b7605518170fe283e9b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Select-String</source>
          <target state="translated">选择字符串</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Select-String</source>
          <target state="translated">选择字符串</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Finds text in strings and files.</source>
          <target state="translated">在字符串和文件中查找文本。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>File (Default)</source>
          <target state="translated">File （默认值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">对象</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LiteralFile</source>
          <target state="translated">LiteralFile</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> cmdlet searches for text and text patterns in input strings and files.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> cmdlet 搜索文本和文本模式，在输入的字符串和文件。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can use it like Grep in UNIX and Findstr in Windows.</source>
          <target state="translated">你可以像使用 UNIX 中的 Grep 和 Windows 中的 Findstr 一样来使用它。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can type <ph id="ph1">`Select-String`</ph> or its alias, <ph id="ph2">`sls`</ph>.</source>
          <target state="translated">您可以键入 <ph id="ph1">`Select-String`</ph> 或其别名 <ph id="ph2">`sls`</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> is based on lines of text.</source>
          <target state="translated"><bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 基于文本的行。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> finds the first match in each line and, for each match, it displays the file name, line number, and all text in the line containing the match.</source>
          <target state="translated">默认情况下， <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 发现每个中的第一个匹配行，并为每个匹配，它包含匹配的行中显示的文件名、 行号和所有文本。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, you can direct it to detect multiple matches per line, display text before and after the match, or display only a Boolean value (True or False) that indicates whether a match is found.</source>
          <target state="translated">但是，您可以直接将它检测每行的多个匹配项，显示的文本之前和之后了匹配项，或者显示只有一个布尔值 （True 或 False），该值指示是否找到匹配项。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> uses regular expression matching, but it can also perform a simple match that searches the input for the text that you specify.</source>
          <target state="translated"><bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 使用正则表达式匹配，但它还可以执行简单匹配，以您指定的文本，在输入中搜索。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> can display all of the text matches or stop after the first match in each input file.</source>
          <target state="translated"><bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 可以显示所有文本匹配项，或在每个输入文件中的第一个匹配项后停止。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It can also display all text that does not match the specified pattern.</source>
          <target state="translated">它还可以显示与指定的模式不匹配的所有文本。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can also specify that <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> should expect a particular character encoding, such as when you are searching files of Unicode text.</source>
          <target state="translated">您还可以指定 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 预见，特定字符编码，例如当您搜索 Unicode 文本的文件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example 1: Find a case-sensitive match</source>
          <target state="translated">示例 1︰ 查找匹配区分大小写</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This command performs a case-sensitive match of the text that was piped to the <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> command.</source>
          <target state="translated">此命令来执行区分大小写的匹配项的文本的已通过管道传递给 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 命令。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>As a result, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> finds only "HELLO", because "Hello" does not match.</source>
          <target state="translated">因此， <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 查找仅"HELLO"，因为"Hello"不匹配。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Because each of the quoted strings is treated as a line, without the <bpt id="p1">*</bpt>CaseSensitive<ept id="p1">*</ept> parameter, <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> would recognize both of the strings as matches.</source>
          <target state="translated">因为每个带引号的字符串视为一个行，而不 <bpt id="p1">*</bpt>CaseSensitive<ept id="p1">*</ept> 参数， <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> 会将这两个字符串识别为匹配项。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Example 2: Find matches in XML files only</source>
          <target state="translated">示例 2︰ 在仅 XML 文件中查找匹配项</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This command searches through all files with the .xml file name extension in the current directory and displays the lines in those files that include the string "the the".</source>
          <target state="translated">此命令将在当前目录中搜索所有扩展名为 .xml 的文件，并显示这些文件中包含字符串“the the”的行。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Example 3: Find a pattern match</source>
          <target state="translated">示例 3︰ 查找模式匹配</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This command searches the Windows PowerShell conceptual Help files (about_*.txt) for information about the use of the at sign (@).</source>
          <target state="translated">此命令在 Windows PowerShell 概念性帮助文件 (about_*.txt) 中搜索有关 at 符号 (@) 用法的信息。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To indicate the path, this command uses the value of the $pshome automatic variable, which stores the path to the Windows PowerShell installation directory.</source>
          <target state="translated">为了指示路径，此命令将使用 $pshome 自动变量的值，其中存储了 Windows PowerShell 安装目录的路径。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In this example, the command searches the en-US subdirectory, which contains the English (US) language Help files for Windows PowerShell.</source>
          <target state="translated">在此示例中，该命令将搜索 en-US 子目录，其中包含适用于 Windows PowerShell 的英语（美国）语言帮助文件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Example 4: Use Select-String in a function</source>
          <target state="translated">示例 4︰ 使用 Select-string 在函数中</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This simple function uses the <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> cmdlet to search the Windows PowerShell Help files for a particular string.</source>
          <target state="translated">此简单函数使用 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> cmdlet 来搜索特定字符串的 Windows PowerShell 帮助文件。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In this example, the function searches the "en-US" subdirectory for English-United States language files.</source>
          <target state="translated">在此示例中，该函数在“en-US”子目录中搜索美国英语语言文件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To use the function to find a string, such as "psdrive", type <ph id="ph1">`search-help psdrive`</ph>.</source>
          <target state="translated">若要使用该函数要查找的字符串，如"psdrive"，键入 <ph id="ph1">`search-help psdrive`</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To use this function in any Windows PowerShell console, change the path to point to the Windows PowerShell Help files on your system, and then paste the function in your Windows PowerShell profile.</source>
          <target state="translated">若要在任一 Windows PowerShell 控制台中使用此函数，请将路径更改为指向系统上的 Windows PowerShell 帮助文件，然后将该函数粘贴到你的 Windows PowerShell 配置文件中。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Example 5: Search for a string in the Application log</source>
          <target state="translated">示例 5︰ 搜索应用程序日志中的字符串</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This example searches for the string "failed" in the 100 newest events in the Application log in Event Viewer.</source>
          <target state="translated">此示例在事件查看器的应用程序日志的 100 个最新事件中搜索字符串“failed”。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-EventLog cmdlet to get the 100 most recent events from the Application event log.</source>
          <target state="translated">第一个命令使用 Get-EventLog cmdlet 从应用程序事件日志中获取 100 个最新事件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Then it stores the events in the $Events variable.</source>
          <target state="translated">然后它将事件存储在 $Events 变量。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The second command uses a pipeline operator (|) to send the objects in the $Events variable to <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept>.</source>
          <target state="translated">第二个命令使用管道运算符 (|) 将对象发送在 $Events 变量到 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to represent the input from the $Events variable.</source>
          <target state="translated">它使用 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 参数代表 $Events 变量中的输入。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter is the Message property of each object as it travels through the pipeline.</source>
          <target state="translated">值 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 参数通过管道传送的每个对象的 Message 属性。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The current object is represented by the $_ symbol.</source>
          <target state="translated">当前对象由 $_ 符号表示。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>As each event arrives in the pipeline, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> searches the value of its Message property for the "failed" string, and then displays any lines that include a match.</source>
          <target state="translated">在每个事件到达时在管道中， <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 搜索"failed"字符串，其消息属性的值，然后显示包含匹配项的所有行。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Example 6: Find a string in subdirectories</source>
          <target state="translated">示例 6︰ 在子目录中查找字符串</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This command examines all files in the subdirectories of C:\Windows\System32 with the .txt file name extension and searches for the string "Microsoft".</source>
          <target state="translated">此命令将检查 C:\Windows\System32 的子目录中所有扩展名为 .txt 的文件，并搜索字符串“Microsoft”。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>CaseSensitive<ept id="p1">*</ept> parameter indicates that the "M" in "Microsoft" must be capitalized and that the rest of the characters must be lowercase for <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> to find a match.</source>
          <target state="translated"> <bpt id="p1">*</bpt>CaseSensitive<ept id="p1">*</ept> 参数指示必须大写"M"中"Microsoft"和其余的字符必须为小写的 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> 查找匹配项。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Example 7: Find strings that do not match a pattern</source>
          <target state="translated">示例 7︰ 查找与模式不匹配的字符串</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This command finds lines of text in the Process.txt file that do not include the words "idle" or "svchost".</source>
          <target state="translated">此命令将查找 Process.txt 文件中不包含字词“idle”或“svchost”的文本行。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Example 8: Find lines before and after a match</source>
          <target state="translated">示例 8︰ 在匹配项前后查找行</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The first command searches the Audit.Log file for the phrase "logon failed."</source>
          <target state="translated">第一个命令将在 Audit.Log 文件中搜索短语“logon failed”。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">*</bpt>Context<ept id="p1">*</ept> parameter to capture 2 lines before the match and 3 lines after the match.</source>
          <target state="translated">它使用 <bpt id="p1">*</bpt>上下文<ept id="p1">*</ept> 参数的匹配项后捕获的匹配项前 2 行和 3 行。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The second command uses the Count property of object arrays to display the number of matches found, in this case, 2.</source>
          <target state="translated">第二个命令使用对象数组的 Count 属性来显示找到的匹配项数，在本例中为 2。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The third command displays the lines stored in the Context property of the first <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> object.</source>
          <target state="translated">第三个命令显示存储在第一个上下文属性中的行 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 对象。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>It uses array notation to indicate the first match (match 0 in a zero-based array), and it uses the Format-List cmdlet to display the value of the Context property as a list.</source>
          <target state="translated">它使用数组表示法来指示第一个匹配项 （匹配 0 中从零开始的数组），并使用 Format-list cmdlet 以列表形式显示的上下文属性的值。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The output consists of two MatchInfo objects, one for each match detected.</source>
          <target state="translated">该输出包含两个 MatchInfo 对象，每个对象对应于一个检测到的匹配项。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The context lines are stored in the Context property of the <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> object.</source>
          <target state="translated">上下文行存储在该上下文属性的 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 对象。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Example 9: Find all pattern matches</source>
          <target state="translated">示例 9︰ 查找所有模式匹配</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This example demonstrates the effect of the <bpt id="p1">*</bpt>AllMatches<ept id="p1">*</ept> parameter of <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept>.</source>
          <target state="translated">此示例演示的效果 <bpt id="p1">*</bpt>AllMatches<ept id="p1">*</ept> 参数 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>AllMatches<ept id="p1">*</ept> finds all pattern matches in a line, instead of just finding the first match in each line.</source>
          <target state="translated"><bpt id="p1">*</bpt>AllMatches<ept id="p1">*</ept> 的行，而不是只需在每行中查找第一个匹配项中找到所有模式匹配项。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The first command in the example searches the Windows PowerShell conceptual Help files ("about" Help) for instances of the word "transcript".</source>
          <target state="translated">该示例中的第一个命令将在 Windows PowerShell 概念性帮助文件（“about”帮助）中搜索字词“transcript”。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The output of the first command is saved in the $A variable.</source>
          <target state="translated">第一个命令的输出将保存在 $A 变量中。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The second command is identical, except that it uses the <bpt id="p1">*</bpt>AllMatches<ept id="p1">*</ept> parameter.</source>
          <target state="translated">第二个命令是相同的只不过它使用 <bpt id="p1">*</bpt>AllMatches<ept id="p1">*</ept> 参数。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The output of the second command is saved in the $B variable.</source>
          <target state="translated">第二个命令的输出保存在 $B 变量中。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When you display the value of the variables, the default display is identical, as shown in the example output.</source>
          <target state="translated">当你显示这些变量的值时，默认显示是完全相同的，如示例输出中所示。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>However, the fifth and sixth commands display the value of the Matches property of each object.</source>
          <target state="translated">但是，第五个和第六个命令将显示每个对象的 Matches 属性的值。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The Matches property of the first command contains just one match (that is, one <bpt id="p1">**</bpt>System.Text.RegularExpressions.Match<ept id="p1">**</ept> object), whereas the Matches property of the second command contains objects for both of the matches in the line.</source>
          <target state="translated">第一个命令的 Matches 属性包含只是一个匹配项 (即， <bpt id="p1">**</bpt>System.Text.RegularExpressions.Match<ept id="p1">**</ept> 对象)，而第二个命令的 Matches 属性包含这两个行中的匹配项的对象。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>-AllMatches</source>
          <target state="translated">-AllMatches</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet searches for more than one match in each line of text.</source>
          <target state="translated">指示该 cmdlet 搜索对于每个文本行中的多个匹配项。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Without this parameter, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> finds only the first match in each line of text.</source>
          <target state="translated">如果没有此参数， <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 在每个文本行中查找仅第一个匹配项。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> finds more than one match in a line of text, it still emits only one <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> object for the line, but the Matches property of the object contains all of the matches.</source>
          <target state="translated">当 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 找到了多个一个匹配文本的行中，它仍会发出只有一个 <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> 对象的行，但该对象的 Matches 属性包含所有匹配项。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>-CaseSensitive</source>
          <target state="translated">-CaseSensitive</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet makes matches case-sensitive.</source>
          <target state="translated">指示该 cmdlet 使匹配项区分大小写。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>By default, matches are not case-sensitive.</source>
          <target state="translated">默认情况下，匹配项不区分大小写。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>-Context</source>
          <target state="translated">上下文</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Captures the specified number of lines before and after the line with the match.</source>
          <target state="translated">捕获具有匹配项的行前后的指定行数。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This allows you to view the match in context.</source>
          <target state="translated">这使你能够在上下文中查看该匹配项。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If you enter one number as the value of this parameter, that number determines the number of lines captured before and after the match.</source>
          <target state="translated">如果你输入一个数字作为此参数的值，则该数字将确定捕获的匹配项前后的行数。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If you enter two numbers as the value, the first number determines the number of lines before the match and the second number determines the number of lines after the match.</source>
          <target state="translated">如果你输入两个数字作为此参数的值，则第一个数字将确定该匹配项前面的行数，第二个数字将确定该匹配项后面的行数。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>In the default display, lines with a match are indicated by a right angle bracket (ASCII 62) in the first column of the display.</source>
          <target state="translated">在默认显示中，由该显示内容第一列中的右尖括号 (ASCII 62) 指示具有匹配项的行。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Unmarked lines are the context.</source>
          <target state="translated">无标记行是上下文。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This parameter does not change the number of objects generated by <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept>.</source>
          <target state="translated">此参数不会更改生成的对象的数目 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> generates one <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> (<bpt id="p3">**</bpt>Microsoft.PowerShell.Commands.MatchInfo<ept id="p3">**</ept>) object for each match.</source>
          <target state="translated"><bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 会生成一个 <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> (<bpt id="p3">**</bpt>Microsoft.PowerShell.Commands.MatchInfo<ept id="p3">**</ept>) 每个匹配项的对象。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The context is stored as an array of strings in the Context property of the object.</source>
          <target state="translated">上下文将作为一个字符串数组存储在对象的 Context 属性中。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>When you pipe the output of a <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> command to another <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> command, the receiving command searches only the text in the matched line (the value of the Line property of the <bpt id="p3">**</bpt>MatchInfo<ept id="p3">**</ept> object), not the text in the context lines.</source>
          <target state="translated">当通过管道传递的输出 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 到另一个命令 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> 命令时，接收命令文本中搜索仅匹配行中 (行属性的值 <bpt id="p3">**</bpt>MatchInfo<ept id="p3">**</ept> 对象)，而非上下文行中的文字。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>As a result, the <bpt id="p1">*</bpt>Context<ept id="p1">*</ept> parameter is not valid on the receiving <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> command.</source>
          <target state="translated">因此， <bpt id="p1">*</bpt>上下文<ept id="p1">*</ept> 参数不是在接收时有效 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> 命令。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>When the context includes a match, the <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> object for each match includes all of the context lines, but the overlapping lines appear only once in the display.</source>
          <target state="translated">当上下文包含匹配项， <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 对象的每个匹配项都包括所有的上下文行，但重叠的行只能出现一次在显示中。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>-Encoding</source>
          <target state="translated">编码</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Specifies the character encoding that <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> should assume when searching the file.</source>
          <target state="translated">指定的字符编码 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 搜索文件时应采用。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The default is UTF8.</source>
          <target state="translated">默认编码为 UTF8。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The acceptable values for this parameter are:</source>
          <target state="translated">此参数的可接受的值是：</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Unicode</source>
          <target state="translated">Unicode</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>UTF7</source>
          <target state="translated">UTF7</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>UTF8</source>
          <target state="translated">UTF8</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>UTF32</source>
          <target state="translated">UTF32</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>ASCII</source>
          <target state="translated">ASCII</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>BigEndianUnicode</source>
          <target state="translated">BigEndianUnicode</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">默认值</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>OEM</source>
          <target state="translated">OEM</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Default is the encoding of the system's current ANSI code page.</source>
          <target state="translated">默认值为系统的当前 ANSI 代码页的编码。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>OEM is the current original equipment manufacturer code page identifier for the operating system.</source>
          <target state="translated">OEM 是操作系统的当前原始设备制造商代码页标识符。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>-Exclude</source>
          <target state="translated">-排除</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Specifies an array of items that the cmdlet excludes from the operation.</source>
          <target state="translated">指定该 cmdlet 将从该操作中排除的项的数组。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The value of this parameter qualifies the <bpt id="p1">*</bpt>Path<ept id="p1">*</ept> parameter.</source>
          <target state="translated">此参数的值限定 <bpt id="p1">*</bpt>路径<ept id="p1">*</ept> 参数。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Enter a path element or pattern, such as *.txt.</source>
          <target state="translated">输入路径元素或模式，例如 *.txt。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>-Include</source>
          <target state="translated">-Include</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Specifies an array of items that the cmdlet uses in the operation.</source>
          <target state="translated">在操作中指定此 cmdlet 将使用的项的数组。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The value of this parameter qualifies the <bpt id="p1">*</bpt>Path<ept id="p1">*</ept> parameter.</source>
          <target state="translated">此参数的值限定 <bpt id="p1">*</bpt>路径<ept id="p1">*</ept> 参数。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Enter a path element or pattern, such as *.txt.</source>
          <target state="translated">输入路径元素或模式，例如 *.txt。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>-InputObject</source>
          <target state="translated">-InputObject</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Specifies the text to be searched.</source>
          <target state="translated">指定要搜索的文本。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Enter a variable that contains the text, or type a command or expression that gets the text.</source>
          <target state="translated">输入一个包含该文本的变量，或键入可获取该文本的命令或表达式。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Using the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter is not the same as piping strings to <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept>.</source>
          <target state="translated">使用 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 参数不是管道字符串转换为相同 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The differences are as follows:</source>
          <target state="translated">不同之处如下：</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>When you pipe more than one string (a collection) to <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> searches for the specified text in each string and returns each string that contains the search text.</source>
          <target state="translated">当通过管道传递多个字符串 （集合） 到 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept>, ，<bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> 搜索每个字符串中指定的文本并返回每个字符串，其中包含搜索文本。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>When you use the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter to submit a collection of strings, <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> treats the collection as a single combined string and returns the strings as a unit if it finds the search text in any string.</source>
          <target state="translated">当您使用 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 参数来提交一个字符串，集合 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> 将集合视为单个组合字符串并作为一个单元返回的字符串，如果它找到的任何字符串的搜索文本。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>-List</source>
          <target state="translated">列表</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet returns only the first match in each input file.</source>
          <target state="translated">指示该 cmdlet 在每个输入文件中返回仅第一个匹配项。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> returns a <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> object for each match it finds.</source>
          <target state="translated">默认情况下， <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 返回 <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> 为每个对象与之匹配查找。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Specifies the path to the files to be searched.</source>
          <target state="translated">指定要搜索的文件的路径。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">**</bpt>Path<ept id="p1">**</ept>, the value of the <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> parameter is used exactly as it is typed.</source>
          <target state="translated">与不同 <bpt id="p1">**</bpt>路径<ept id="p1">**</ept>, ，值 <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> 完全按照其键入使用参数。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">不会将任何字符解释为通配符。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">如果路径包括转义符，请将其括在单引号中。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">单引号会告知 Windows PowerShell 不要将所有字符都解释为转义序列。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>-NotMatch</source>
          <target state="translated">-Notmatch 将</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet finds text that does not match the specified pattern.</source>
          <target state="translated">指示该 cmdlet 查找与指定的模式不匹配的文本。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Specifies the path to the files to search.</source>
          <target state="translated">指定要搜索的文件的路径。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The default location is the local directory.</source>
          <target state="translated">默认位置为本地目录。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Specify files in the directory, such as log1.txt, <bpt id="p1">*</bpt>.doc, or <ept id="p1">*</ept>.*.</source>
          <target state="translated">在目录中，如 log1.txt，指定文件 <bpt id="p1">*</bpt>.doc 或 <ept id="p1">*</ept>。 *。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>If you specify only a directory, the command fails.</source>
          <target state="translated">如果仅指定一个目录，则该命令将失败。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>-Pattern</source>
          <target state="translated">模式</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Specifies the text to find.</source>
          <target state="translated">指定要查找的文本。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Type a string or regular expression.</source>
          <target state="translated">键入一个字符串或正则表达式。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>If you type a string, use the <bpt id="p1">*</bpt>SimpleMatch<ept id="p1">*</ept> parameter.</source>
          <target state="translated">如果您键入一个字符串，使用 <bpt id="p1">*</bpt>SimpleMatch<ept id="p1">*</ept> 参数。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>To learn about regular expressions, see about_Regular_Expressions.</source>
          <target state="translated">若要了解正则表达式，请参阅 about_Regular_Expressions。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>-Quiet</source>
          <target state="translated">-安静</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet returns a Boolean value (True or False), instead of a <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> object.</source>
          <target state="translated">指示该 cmdlet 返回一个布尔值 （真或假），而不是 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 对象。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The value is True if the pattern is found; otherwise, the value is False.</source>
          <target state="translated">值为 True，如果找到该模式;否则，值为 False。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>-SimpleMatch</source>
          <target state="translated">-SimpleMatch</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Indicates that the cmdlet uses a simple match rather than a regular expression match.</source>
          <target state="translated">指示该 cmdlet 使用简单匹配，而不是正则表达式匹配。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>In a simple match, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> searches the input for the text in the <bpt id="p2">*</bpt>Pattern<ept id="p2">*</ept> parameter.</source>
          <target state="translated">在简单匹配 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 中文本的输入中搜索 <bpt id="p2">*</bpt>模式<ept id="p2">*</ept> 参数。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>It does not interpret the value of the <bpt id="p1">*</bpt>Pattern<ept id="p1">*</ept> parameter as a regular expression statement.</source>
          <target state="translated">它不解释的值 <bpt id="p1">*</bpt>模式<ept id="p1">*</ept> 作为正则表达式语句的参数。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>System.Management.Automation.PSObject</source>
          <target state="translated">System.Management.Automation.PSObject</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>You can pipe any object that has a ToString method to <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept>.</source>
          <target state="translated">您可以通过管道传递具有 ToString 方法对任何对象 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Microsoft.PowerShell.Commands.MatchInfo or System.Boolean</source>
          <target state="translated">Microsoft.PowerShell.Commands.MatchInfo 或 System.Boolean</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>By default, the output is a set of <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> objects, one for each match found.</source>
          <target state="translated">默认情况下，输出是一套 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 对象，一个找到的每个匹配项。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>If you use the <bpt id="p1">*</bpt>Quiet<ept id="p1">*</ept> parameter, the output is a Boolean value indicating whether the pattern was found.</source>
          <target state="translated">如果您使用 <bpt id="p1">*</bpt>安静<ept id="p1">*</ept> 参数，输出是一个布尔值，该值指示是否找到该模式。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> is like the Grep command in UNIX and the FindStr command in Windows.</source>
          <target state="translated"><bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 类似 UNIX 中的 Grep 命令和 Windows 中的 FindStr 命令。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>sst<ept id="p1">**</ept> alias for the <bpt id="p2">**</bpt>Select-String<ept id="p2">**</ept> cmdlet was introduced in Windows PowerShell 3.0.</source>
          <target state="translated"> <bpt id="p1">**</bpt>Sst<ept id="p1">**</ept> 别名 <bpt id="p2">**</bpt>Select-string<ept id="p2">**</ept> cmdlet 在 Windows PowerShell 3.0 中引入。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>To use <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept>, type the text that you want to find as the value of the <bpt id="p2">*</bpt>Pattern<ept id="p2">*</ept> parameter.</source>
          <target state="translated">若要使用 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept>, ，键入想要查找的值的文本 <bpt id="p2">*</bpt>模式<ept id="p2">*</ept> 参数。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>To specify the text to be searched, do the following:</source>
          <target state="translated">若要指定要搜索的文本，请执行以下操作：</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Type the text in a quoted string, and then pipe it to <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept>.</source>
          <target state="translated">键入的文本中带引号的字符串，并通过管道将到 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Store a text string in a variable, and then specify the variable as the value of the <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> parameter.</source>
          <target state="translated">将文本字符串存储在变量中，，然后将该变量指定的值为 <bpt id="p1">*</bpt>InputObject<ept id="p1">*</ept> 参数。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>If the text is stored in files, use the <bpt id="p1">*</bpt>Path<ept id="p1">*</ept> parameter to specify the path to the files.</source>
          <target state="translated">如果文本存储在文件中，使用 <bpt id="p1">*</bpt>路径<ept id="p1">*</ept> 参数来指定文件的路径。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>By default, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> interprets the value of the <bpt id="p2">*</bpt>Pattern<ept id="p2">*</ept> parameter as a regular expression.</source>
          <target state="translated">默认情况下， <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 将的值解释 <bpt id="p2">*</bpt>模式<ept id="p2">*</ept> 于正则表达式的参数。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>(For more information, see about_Regular_Expressions.) However, you can use the <bpt id="p1">*</bpt>SimpleMatch<ept id="p1">*</ept> parameter to override the regular expression matching.</source>
          <target state="translated">（有关详细信息，请参阅 about_Regular_Expressions。）但是，您可以使用 <bpt id="p1">*</bpt>SimpleMatch<ept id="p1">*</ept> 参数来重写正则表达式匹配。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>SimpleMatch<ept id="p1">*</ept> parameter finds instances of the value of the <bpt id="p2">*</bpt>Pattern<ept id="p2">*</ept> parameter in the input.</source>
          <target state="translated"> <bpt id="p1">*</bpt>SimpleMatch<ept id="p1">*</ept> 参数查找实例的值的 <bpt id="p2">*</bpt>模式<ept id="p2">*</ept> 输入中的参数。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The default output of <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> is a <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> object, which includes detailed information about the matches.</source>
          <target state="translated">默认输出 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 是 <bpt id="p2">**</bpt>MatchInfo<ept id="p2">**</ept> 对象，其中包括有关匹配项的详细的信息。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The information in the object is useful when you are searching for text in files, because <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> objects have properties such as Filename and Line.</source>
          <target state="translated">对象中的信息时才有用所搜索的文本中的文件，因为 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 对象具有 Filename 和 Line 等属性。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>When the input is not from the file, the value of these parameters is InputStream.</source>
          <target state="translated">输入不从文件中，这些参数的值时，InputStream。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>If you do not need the information in the <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> object, use the <bpt id="p2">*</bpt>Quiet<ept id="p2">*</ept> parameter, which returns a Boolean value (True or False) to indicate whether it found a match, instead of a <bpt id="p3">**</bpt>MatchInfo<ept id="p3">**</ept> object.</source>
          <target state="translated">如果不需要中的信息 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 对象，请使用 <bpt id="p2">*</bpt>安静<ept id="p2">*</ept> 参数，它返回一个布尔值 （True 或 False），以指示它是否找到了匹配项，而不是 <bpt id="p3">**</bpt>MatchInfo<ept id="p3">**</ept> 对象。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>When matching phrases, <bpt id="p1">**</bpt>Select-String<ept id="p1">**</ept> uses the current culture that is set for the system.</source>
          <target state="translated">当与短语，匹配 <bpt id="p1">**</bpt>Select-string<ept id="p1">**</ept> 使用为系统设置的当前区域性。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>To find the current culture, use the Get-Culture cmdlet.</source>
          <target state="translated">若要查找当前区域性，请使用 Get-culture cmdlet。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>To find the properties of a <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> object, type the following:</source>
          <target state="translated">若要查找的属性 <bpt id="p1">**</bpt>MatchInfo<ept id="p1">**</ept> 对象，请键入以下命令︰</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>about_Comparison_Operators</source>
          <target state="translated">about_Comparison_Operators</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>about_Regular_Expressions</source>
          <target state="translated">about_Regular_Expressions</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>