<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">45195e741f7d5b2bc605ee546a80129a2c4c6d2d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Utility\Select-Xml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d408d67cd927a6dadb18e3950cd69eccb1f4ca03</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">95423f77daaaf79de15e3e5dd4ce899f25399e37</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Select-Xml</source>
          <target state="translated">选择 Xml</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Select-Xml</source>
          <target state="translated">选择 Xml</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">简述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Finds text in an XML string or document.</source>
          <target state="translated">在 XML 字符串或文档中查找文本。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Xml (Default)</source>
          <target state="translated">Xml （默认值）</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Path</source>
          <target state="translated">路径</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LiteralPath</source>
          <target state="translated">LiteralPath</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Content</source>
          <target state="translated">内容</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The Select-Xml cmdlet lets you use XPath queries to search for text in XML strings and documents.</source>
          <target state="translated">Select-Xml cmdlet 允许你使用 XPath 查询来搜索 XML 字符串和文档中的文本。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Enter an XPath query, and use the Content, Path, or Xml parameter to specify the XML to be searched.</source>
          <target state="translated">输入 XPath 查询，并使用 Content、Path 或 Xml 参数来指定要搜索的 XML。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 1 --------------------------</source>
          <target state="translated">-------------------------- 示例 1 --------------------------</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This example gets the alias properties in the Types.ps1xml.</source>
          <target state="translated">此示例在 Types.ps1xml 中获取别名属性。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>(For information about this file, see about_Types.ps1xml.)</source>
          <target state="translated">（有关此文件的信息，请参阅 about_Types.ps1xml。）</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The first command saves the path to the Types.ps1xml file in the $Path variable.</source>
          <target state="translated">第一个命令将路径保存到 $Path 变量中的 Types.ps1xml 文件。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The second command saves the XML path to the AliasProperty node in the $XPath variable.</source>
          <target state="translated">第二个命令将 XML 路径保存到 $XPath 变量中的 AliasProperty 节点。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The third command uses the <bpt id="p1">**</bpt>Select-Xml<ept id="p1">**</ept> cmdlet to get the AliasProperty nodes that are identified by the XPath statement from the Types.ps1xml file.</source>
          <target state="translated">第三个命令使用 <bpt id="p1">**</bpt>Select-xml<ept id="p1">**</ept> cmdlet 来获取由 Types.ps1xml 文件中的 XPath 语句标识的 AliasProperty 节点。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The command uses a pipeline operator to send the AliasProperty nodes to the Select-Object cmdlet.</source>
          <target state="translated">该命令使用管道运算符将 AliasProperty 节点发送到 Select-object cmdlet。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ExpandProperty<ept id="p1">**</ept> parameter expands the Node object and returns its Name and ReferencedMemberName properties.</source>
          <target state="translated"> <bpt id="p1">**</bpt>ExpandProperty<ept id="p1">**</ept> 参数扩展节点对象并返回其名称和 ReferencedMemberName 属性。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The result shows the Name and ReferencedMemberName of each alias property in the Types.ps1xml file.</source>
          <target state="translated">结果显示 Types.ps1xml 文件中每个别名属性的名称和 ReferencedMemberName。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example, there is a Count property that is an alias of the Length property.</source>
          <target state="translated">例如，存在 Count 属性，它是 Length 属性的别名。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 2 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 2 --------------------------</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This example shows how to use the XML parameter to provide an XML document to the <bpt id="p1">**</bpt>Select-Xml<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated">此示例演示如何使用 XML 参数来提供 XML 文档 <bpt id="p1">**</bpt>Select-xml<ept id="p1">**</ept> cmdlet。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The first command uses the Get-Content cmdlet to get the content of the Types.ps1xml file and save it in the $Types variable.</source>
          <target state="translated">第一个命令使用 Get-content cmdlet 来获取 Types.ps1xml 文件的内容并将其保存在 $Types 变量。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The "<ph id="ph1">\[</ph>xml<ph id="ph2">\]</ph>" casts the variable as an XML object.</source>
          <target state="translated">"<ph id="ph1">\[</ph>Xml<ph id="ph2">\]</ph>"将强制转换为 XML 对象的变量。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The second command uses the <bpt id="p1">**</bpt>Select-Xml<ept id="p1">**</ept> cmdlet to get the MethodName nodes in the Types.ps1xml file.</source>
          <target state="translated">第二个命令使用 <bpt id="p1">**</bpt>Select-xml<ept id="p1">**</ept> cmdlet 来获取 Types.ps1xml 文件中的 MethodName 节点。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command uses the <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> parameter to specify the XML content in the $Types variable and the <bpt id="p2">**</bpt>XPath<ept id="p2">**</ept> parameter to specify the path to the MethodName node.</source>
          <target state="translated">该命令使用 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> 参数来指定的 XML 内容中 $Types 变量和 <bpt id="p2">**</bpt>XPath<ept id="p2">**</ept> 参数来指定到 MethodName 节点的路径。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 3 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 3 --------------------------</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This example shows how to use the Select-Xml cmdlet to search the Windows PowerShell XML-based cmdlet help files.</source>
          <target state="translated">此示例演示如何使用 Select-Xml cmdlet 来搜索 Windows PowerShell 基于 XML 的 cmdlet 帮助文件。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In this example, we'll search for the cmdlet name that serves as a title for each help file and the path to the help file.</source>
          <target state="translated">在此示例中，我们将搜索 cmdlet 名称，它用作每个帮助文件的标题以及指向该帮助文件的路径。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 4 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 4 --------------------------</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This example shows two different ways to send XML to the Select-Xml cmdlet.</source>
          <target state="translated">此示例演示两种将 XML 发送到 Select-Xml cmdlet 的不同方式。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>-------------------------- EXAMPLE 5 --------------------------</source>
          <target state="translated">-------------------------- EXAMPLE 5 --------------------------</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This example shows how to use the <bpt id="p1">**</bpt>Select-Xml<ept id="p1">**</ept> cmdlet with XML documents that use the default "xmlns" namespace.</source>
          <target state="translated">此示例演示如何使用 <bpt id="p1">**</bpt>Select-xml<ept id="p1">**</ept> cmdlet 与使用默认值"为 xmlns"命名空间的 XML 文档。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The example gets the titles of Windows PowerShell ISE user-created snippet files.</source>
          <target state="translated">此示例获取 Windows PowerShell ISE 用户创建的代码段文件的标题。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For information about snippets, see <bpt id="p1">**</bpt>New-IseSnippet<ept id="p1">**</ept>.</source>
          <target state="translated">有关代码段的信息，请参阅 <bpt id="p1">**</bpt>New-isesnippet<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>PARAMETERS</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>-Content</source>
          <target state="translated">内容</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Specifies a string that contains the XML to search.</source>
          <target state="translated">指定包含要搜索的 XML 的字符串。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can also pipe strings to Select-Xml.</source>
          <target state="translated">你还可以通过管道将字符串传递给 Select-Xml。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-Namespace</source>
          <target state="translated">-Namespace</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Specifies a hash table of the namespaces used in the XML.</source>
          <target state="translated">指定在 XML 中使用的命名空间的哈希表。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Use the format @{<ph id="ph1">\&lt;</ph>namespaceName<ph id="ph2">\&gt; = \&lt;</ph>namespaceValue<ph id="ph3">\&gt;</ph>}.</source>
          <target state="translated">使用格式 @{<ph id="ph1">\&lt;</ph>命名空间名称<ph id="ph2">\&gt; = \&lt;</ph>namespaceValue<ph id="ph3">\&gt;</ph>}。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When the XML uses the default namespace, which begins with "xmlns", use an arbitrary key for the namespace name.</source>
          <target state="translated">当 XML 使用以“xmlns”开头的默认命名空间时，使用命名空间名称的任意键。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You cannot use "xmlns".</source>
          <target state="translated">不能使用“xmlns”。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In the XPath statement, prefix each node name with the namespace name and a colon, such as "//namespaceName:Node".</source>
          <target state="translated">在 XPath 语句中，使用命名空间名称和一个冒号（如 "//namespaceName:Node"）在每个节点名称前加上前缀。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>-Path</source>
          <target state="translated">-Path</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Specifies the path and file names of the XML files to search.</source>
          <target state="translated">指定要搜索的 XML 文件的路径和文件名。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Wildcards are permitted.</source>
          <target state="translated">允许使用通配符。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-XPath</source>
          <target state="translated">XPath</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Specifies an XPath search query.</source>
          <target state="translated">指定 XPath 搜索查询。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The query language is case-sensitive.</source>
          <target state="translated">查询语言区分大小写。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This parameter is required.</source>
          <target state="translated">此参数是必需的。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>-Xml</source>
          <target state="translated">Xml</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Specifies one or more XML nodes.</source>
          <target state="translated">指定一个或多个 XML 节点。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An XML document will be processed as a collection of XML nodes.</source>
          <target state="translated">将作为 XML 节点的集合处理 XML 文档。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you pipe an XML document to Select-Xml, each document node will be searched separately as it comes through the pipeline.</source>
          <target state="translated">如果你通过管道将 XML 文档传递到 Select-Xml，则在它通过管道传入时，将单独搜索每个文档节点。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>-LiteralPath</source>
          <target state="translated">-LiteralPath</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Specifies the paths and file names of the XML files to search.</source>
          <target state="translated">指定要搜索的 XML 文件的路径和文件名。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Unlike <bpt id="p1">**</bpt>Path<ept id="p1">**</ept>, the value of the <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> parameter is used exactly as it is typed.</source>
          <target state="translated">与不同 <bpt id="p1">**</bpt>路径<ept id="p1">**</ept>, ，值 <bpt id="p2">**</bpt>LiteralPath<ept id="p2">**</ept> 完全按照其键入使用参数。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>No characters are interpreted as wildcards.</source>
          <target state="translated">不会将任何字符解释为通配符。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If the path includes escape characters, enclose it in single quotation marks.</source>
          <target state="translated">如果路径包括转义符，请将其括在单引号中。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</source>
          <target state="translated">单引号会告知 Windows PowerShell 不要将所有字符都解释为转义序列。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>CommonParameters</source>
          <target state="translated">CommonParameters</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable.</source>
          <target state="translated">此 cmdlet 支持以下常见参数:-调试-ErrorAction、-ErrorVariable、-InformationAction、-InformationVariable、-OutVariable、-OutBuffer、-PipelineVariable、-Verbose、-WarningAction 和-WarningVariable。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>INPUTS</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>System.String or System.Xml.XmlNode</source>
          <target state="translated">System.String 或 System.Xml.XmlNode</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can pipe a path or XML node to Select-Xml.</source>
          <target state="translated">可以通过管道将路径或 XML 节点传递到 Select-Xml。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>OUTPUTS</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Microsoft.PowerShell.Commands.SelectXmlInfo</source>
          <target state="translated">Microsoft.PowerShell.Commands.SelectXmlInfo</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>XPath is a standard language that is designed to identify parts of an XML document.</source>
          <target state="translated">XPath 是一种标准语言，它可以识别 XML 文档的各个部分。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For more information about the XPath language, see the "Selection Filters" section of the "Event Selection" topic in the MSDN (Microsoft Developer Network) library at http://go.microsoft.com/fwlink/?LinkId=143608.</source>
          <target state="translated">有关 XPath 语言的详细信息，请参阅 MSDN (Microsoft Developer Network) 库中的“事件选择”主题的“所选内容筛选器”部分，网址为 http://go.microsoft.com/fwlink/?LinkId=143608。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>And, see "XPath Reference" in the MSDN library at http://go.microsoft.com/fwlink/?LinkId=143609.</source>
          <target state="translated">还可参阅 MSDN 库中的“XPath 参考”，网址为 http://go.microsoft.com/fwlink/?LinkId=143609。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>RELATED LINKS</source>
          <target state="translated">相关的链接</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>ConvertTo-Xml</source>
          <target state="translated">ConvertTo-Xml</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>