<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">53a4bed95418e1ca96a83be44848c160b6a2e556</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\Providers\Variable-Provider.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5176e6823e3e907835b07cbf27f9de872ebcbb14</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2eab9379cf9017b4154fb09d1149164d72b5f5ec</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Variable Provider</source>
          <target state="translated">Variable 提供程序</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Variable Provider</source>
          <target state="translated">Variable 提供程序</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>PROVIDER NAME</source>
          <target state="translated">提供程序名称</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">变量</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>DRIVES</source>
          <target state="translated">驱动器</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Variable:</source>
          <target state="translated">Variable:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">简短说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Provides access to the Windows PowerShell variables and to their values.</source>
          <target state="translated">提供对 Windows PowerShell 变量及其值的访问权限。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DETAILED DESCRIPTION</source>
          <target state="translated">详细说明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell Variable provider lets you get, add, change, clear, and delete Windows PowerShell variables in the current console.</source>
          <target state="translated">通过 Windows PowerShell Variable 提供程序，你可以获取、添加、更改、清除和删除当前控制台中的 Windows PowerShell 变量。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell Variable provider supports the variables that Windows PowerShell creates, including the automatic variables, the preference variables, and the variables that you create.</source>
          <target state="translated">Windows PowerShell Variable 提供程序支持 Windows PowerShell 创建的变量，包括自动变量、首选项变量以及你创建的变量。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The Variable provider is a flat namespace that contains only the variable objects.</source>
          <target state="translated">Variable 提供程序是一个仅包含变量对象的平面命名空间。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The variables have no child items.</source>
          <target state="translated">这些变量没有子项。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Most of the variables are instances of the System.Management.Automation.PSVariable class.</source>
          <target state="translated">大多数变量都是 System.Management.Automation.PSVariable 类的实例。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>However, there are some variations.</source>
          <target state="translated">但是，也存在一些变体。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, the "?" variable is a member of the QuestionMarkVariable class, and the "MaximumVariableCount" variable is a member of the SessionStateCapacityVariable class.</source>
          <target state="translated">例如，“?”变量是 QuestionMarkVariable 类的成员，而“MaximumVariableCount”变量是 SessionStateCapacityVariable 类的成员。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The Variable provider exposes its data store in the Variable: drive.</source>
          <target state="translated">Variable 提供程序在 Variable: 驱动器中公开其数据存储。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To work with variables, you can change your location to the Variable: drive <ph id="ph1">\(</ph>"set<ph id="ph2">\-</ph>location variable:"<ph id="ph3">\)</ph>, or you can work from any other Windows PowerShell drive.</source>
          <target state="translated">若要使用变量，可以更改您的位置给该变量︰ 驱动器 <ph id="ph1">\(</ph>"设置<ph id="ph2">\-</ph>位置变量:"<ph id="ph3">\)</ph>, ，或者可以从任何其他 Windows PowerShell 驱动器。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To reference a variable from another location, use the drive name <ph id="ph1">\(</ph>Variable:<ph id="ph2">\)</ph> in the path.</source>
          <target state="translated">若要从另一个位置引用某一变量，使用驱动器名称 <ph id="ph1">\(</ph>变量︰<ph id="ph2">\)</ph> 路径中。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Windows PowerShell includes a set of cmdlets designed especially to view and to change variables:</source>
          <target state="translated">Windows PowerShell 包括一组专门用于查看和更改变量的 cmdlet：</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Get<ph id="ph1">\-</ph>Variable</source>
          <target state="translated">获取<ph id="ph1">\-</ph>变量</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>New<ph id="ph1">\-</ph>Variable</source>
          <target state="translated">新<ph id="ph1">\-</ph>变量</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Set<ph id="ph1">\-</ph>Variable</source>
          <target state="translated">设置<ph id="ph1">\-</ph>变量</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Remove<ph id="ph1">\-</ph>Variable</source>
          <target state="translated">删除<ph id="ph1">\-</ph>变量</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Clear<ph id="ph1">\-</ph>Variable</source>
          <target state="translated">清除<ph id="ph1">\-</ph>变量</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When you use these cmdlets, you do not need to specify the Variable: drive in the name.</source>
          <target state="translated">使用这些 cmdlet 时，不需要在名称中指定 Variable: 驱动器。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The Variable provider supports all of the cmdlets whose names contain the Item noun <ph id="ph1">\(</ph>the Item cmdlets<ph id="ph2">\)</ph>, except for <bpt id="p1">[</bpt>Invoke<ph id="ph3">\-</ph>Item &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///38a9887b-ce1a-4bde-be4e-98012efae204)</ept>.</source>
          <target state="translated">Variable 提供程序支持的所有名称中包含 Item 名词的 cmdlet <ph id="ph1">\(</ph>Item cmdlet<ph id="ph2">\)</ph>, ，除 <bpt id="p1">[</bpt>Invoke<ph id="ph3">\-</ph>项和 #91; m2 &amp;#93;<ept id="p1">](assetId:///38a9887b-ce1a-4bde-be4e-98012efae204)</ept>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The Variable provider supports the <bpt id="p1">[</bpt>Get<ph id="ph1">\-</ph>Content &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///86d8b4af-af2c-4a27-9519-2c9fd420be3d)</ept> and <bpt id="p2">[</bpt>Set<ph id="ph2">\-</ph>Content &amp;#91;m2&amp;#93;<ept id="p2">](assetId:///6fff9b86-86df-4440-b7b7-8124b22088fc)</ept> cmdlets.</source>
          <target state="translated">Variable 提供程序支持 <bpt id="p1">[</bpt>获取<ph id="ph1">\-</ph>内容 #91; m2 &amp;#93;<ept id="p1">](assetId:///86d8b4af-af2c-4a27-9519-2c9fd420be3d)</ept> 和 <bpt id="p2">[</bpt>设置<ph id="ph2">\-</ph>内容 #91; m2 &amp;#93;<ept id="p2">](assetId:///6fff9b86-86df-4440-b7b7-8124b22088fc)</ept> cmdlet。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>However, it does not support the cmdlets whose names contain the ItemProperty noun <ph id="ph1">\(</ph>the ItemProperty cmdlets<ph id="ph2">\)</ph>, and it does not support the Filter parameter in any cmdlet.</source>
          <target state="translated">但是，不支持名称中包含 ItemProperty 名词的 cmdlet <ph id="ph1">\(</ph>ItemProperty cmdlet<ph id="ph2">\)</ph>, ，并且它不支持任何 cmdlet 中的筛选器参数。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can also use the Windows PowerShell expression parser to create, view, and change the values of variables without using the cmdlets.</source>
          <target state="translated">还可以使用 Windows PowerShell 表达式分析程序来创建、查看和更改变量的值，而无需使用上述 cmdlet。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When working with variables directly, use a dollar sign <ph id="ph1">\($\)</ph> to identify the name as a variable and the assignment operator <ph id="ph2">\(\=\)</ph> to establish and change its value.</source>
          <target state="translated">当直接使用变量，使用美元符号 <ph id="ph1">\($\)</ph> 以标识的名称为变量，并使用赋值运算符 <ph id="ph2">\(\=\)</ph> 建立并更改它的值。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For example, "$p <ph id="ph1">\=</ph> <bpt id="p1">[</bpt>Get<ph id="ph2">\-</ph>Process &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///27a05dbd-4b69-48a3-8d55-b295f6225f15)</ept>" creates the "p" variable and stores the results of a "<bpt id="p2">[</bpt>Get<ph id="ph3">\-</ph>Process &amp;#91;m2&amp;#93;<ept id="p2">](assetId:///27a05dbd-4b69-48a3-8d55-b295f6225f15)</ept>" command in it.</source>
          <target state="translated">例如，"$p <ph id="ph1">\=</ph> <bpt id="p1">[</bpt>获取<ph id="ph2">\-</ph>流程与 #91; m2 &amp;#93;<ept id="p1">](assetId:///27a05dbd-4b69-48a3-8d55-b295f6225f15)</ept>"创建"p"变量，并将结果存储在"<bpt id="p2">[</bpt>获取<ph id="ph3">\-</ph>流程与 #91; m2 &amp;#93;<ept id="p2">](assetId:///27a05dbd-4b69-48a3-8d55-b295f6225f15)</ept>"命令将以它。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>All changes to the variables affect the current session only.</source>
          <target state="translated">对变量所做的所有更改只会影响当前会话。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To save the changes, add the changes to the Windows PowerShell profile, or use <bpt id="p1">[</bpt>Export<ph id="ph1">\-</ph>Console &amp;#91;m2&amp;#93;<ept id="p1">](assetId:///0858eece-ddcb-4525-89d1-4732c5f54c48)</ept> to save the current console.</source>
          <target state="translated">若要保存所做的更改，将所做的更改添加到 Windows PowerShell 配置文件，或使用 <bpt id="p1">[</bpt>导出<ph id="ph1">\-</ph>控制台 #91; m2 &amp;#93;<ept id="p1">](assetId:///0858eece-ddcb-4525-89d1-4732c5f54c48)</ept> 要保存当前控制台。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>CAPABILITIES</source>
          <target state="translated">功能</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>ShouldProcess</source>
          <target state="translated">ShouldProcess</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Getting to the Variable: Drive</source>
          <target state="translated">访问 Variable︰ 驱动器</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This command changes the current location to the Variable: drive.</source>
          <target state="translated">此命令将当前位置更改为 Variable: 驱动器。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can use this command from any drive in Windows PowerShell.</source>
          <target state="translated">你可以从 Windows PowerShell 中的任何驱动器使用此命令。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To return to a file system drive, type the drive name.</source>
          <target state="translated">若要返回到文件系统驱动器，请键入驱动器名称。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For example, type "set<ph id="ph1">\-</ph>location c:".</source>
          <target state="translated">例如，键入"设置<ph id="ph1">\-</ph>位置 c:"。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Displaying the Value of Variables</source>
          <target state="translated">显示变量的值</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This command gets the list of all the variables and their values in the current session.</source>
          <target state="translated">此命令将获取当前会话中所有变量及其值的列表。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You can use this command from any Windows PowerShell drive.</source>
          <target state="translated">你可以从任何 Windows PowerShell 驱动器使用此命令。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This command gets the variables with names that begin with "max".</source>
          <target state="translated">此命令将获取名称以“max”开头的变量。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can use this command from any Windows PowerShell drive.</source>
          <target state="translated">你可以从任何 Windows PowerShell 驱动器使用此命令。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If you are in the Variable: drive, you can omit the drive name from the path.</source>
          <target state="translated">如果你在 Variable: 驱动器中，则可以省略路径中的驱动器名称。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>EXAMPLE 3</source>
          <target state="translated">示例 3</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This command gets the value of the WhatIfPreference variable by typing it at the command line.</source>
          <target state="translated">此命令通过在命令行中键入 WhatIfPreference 变量来获取其值。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The name of the variable is preceded by a dollar sign <ph id="ph1">\($\)</ph> to indicate that it is a variable.</source>
          <target state="translated">变量的名称前面加一个美元符号 <ph id="ph1">\($\)</ph> 以指示它是一个变量。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The Variable: drive name is not specified.</source>
          <target state="translated">不指定 Variable: 驱动器名称。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>EXAMPLE 4</source>
          <target state="translated">示例 4</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This command uses the LiteralPath parameter of Get<ph id="ph1">\-</ph>ChildItem to get the value of the "?" variable from within the Variable: drive.</source>
          <target state="translated">此命令使用 Get LiteralPath 参数<ph id="ph1">\-</ph>ChildItem 若要获取的值"？"变量中的变量中︰ 驱动器。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Get<ph id="ph1">\-</ph>ChildItem does not attempt to resolve any wildcards in the values of the LiteralPath parameter.</source>
          <target state="translated">获取<ph id="ph1">\-</ph>ChildItem 不会尝试解析 LiteralPath 参数的值中的任何通配符。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To display the value of a variable with a special character name without a cmdlet, type a dollar sign <ph id="ph1">\($\)</ph> and the variable name.</source>
          <target state="translated">若要显示具有一个不含一个 cmdlet 的特殊字符名称的变量值，请键入一个美元符号 <ph id="ph1">\($\)</ph> 和变量的名称。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For example, to display the value of the "?" variable, type "$?".</source>
          <target state="translated">例如，若要显示变量“?”的值，请键入“$?”。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>EXAMPLE 5</source>
          <target state="translated">示例 5</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This command gets the variables that have the values of "ReadOnly" or "Constant" for their Options property.</source>
          <target state="translated">此命令将获取其 Options 属性值为“ReadOnly”或“Constant”的变量。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Creating a New Variable</source>
          <target state="translated">创建新变量</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This command creates the "services" variable and stores the results of a Get<ph id="ph1">\-</ph>Service command in it.</source>
          <target state="translated">此命令将创建"services"变量并将查询结果的 Get<ph id="ph1">\-</ph>服务中的命令。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Because the current location is in the Variable: drive, the value of the Path parameter is a dot <ph id="ph1">\(</ph>.<ph id="ph2">\)</ph>, which represents the current location.</source>
          <target state="translated">由于当前位置位于 Variable︰ 驱动器中，Path 参数的值是一个点 <ph id="ph1">\(</ph>。<ph id="ph2">\)</ph>, ，它表示当前的位置。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The parentheses around the Get<ph id="ph1">\-</ph>Service command ensure that the command is executed before the variable is created.</source>
          <target state="translated">Get 两边的括号<ph id="ph1">\-</ph>服务命令确保之前创建该变量执行此命令。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Without the parentheses, the value of the new variable is a "Get<ph id="ph1">\-</ph>Service" string.</source>
          <target state="translated">如果没有括号，新的变量的值是"Get<ph id="ph1">\-</ph>服务"的字符串。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If you are not in the variable: drive, include the Variable: drive name in the path.</source>
          <target state="translated">如果你不在 Variable: 驱动器中，请在路径中包括 Variable: 驱动器名称。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This command creates a "services" variable and stores the result of a Get<ph id="ph1">\-</ph>Service command in it.</source>
          <target state="translated">此命令将创建"services"变量值并存储结果的 Get<ph id="ph1">\-</ph>服务中的命令。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The command uses a dollar sign <ph id="ph1">\($\)</ph> to indicate a variable and the assignment operator <ph id="ph2">\(\=\)</ph> to assign the result of the Get<ph id="ph3">\-</ph>Service command to the newly created variable.</source>
          <target state="translated">该命令使用美元符号 <ph id="ph1">\($\)</ph> 来指示变量，并使用赋值运算符 <ph id="ph2">\(\=\)</ph> Get 的结果赋<ph id="ph3">\-</ph>服务到新创建的变量的命令。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To create a variable without a value, omit the assignment operator.</source>
          <target state="translated">若要创建不含值的变量，请省略赋值运算符。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Displaying the Properties and Methods of Variables</source>
          <target state="translated">显示变量的属性和方法</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This command uses the Get<ph id="ph1">\-</ph>Item cmdlet to get all variables.</source>
          <target state="translated">此命令使用 Get<ph id="ph1">\-</ph>项 cmdlet 来获取所有变量。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The pipeline operator <ph id="ph1">\(</ph>&amp;#124;<ph id="ph2">\)</ph> sends the results to the Get<ph id="ph3">\-</ph>Member cmdlet, which displays the methods and properties of the object.</source>
          <target state="translated">管道运算符 <ph id="ph1">\(</ph>&amp;#124;<ph id="ph2">\)</ph> 结果发送给 Get<ph id="ph3">\-</ph>成员 cmdlet，后者会显示的方法和属性的对象。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When you pipe a collection of objects <ph id="ph1">\(</ph>such as the collection of variables in the Variable: drive<ph id="ph2">\)</ph> to Get<ph id="ph3">\-</ph>Member, Get<ph id="ph4">\-</ph>Member evaluates each object in the collection separately and returns information about each of the object types that it finds.</source>
          <target state="translated">当通过管道传递对象的集合， <ph id="ph1">\(</ph>如的变量中的变量的集合︰ 驱动器<ph id="ph2">\)</ph> 到 Get<ph id="ph3">\-</ph>成员，获取<ph id="ph4">\-</ph>成员将分别评估该集合中的每个对象并返回有关每个找到的对象类型的信息。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To get information about the collection of objects in the Variable: drive, use the InputObject parameter of Get<ph id="ph1">\-</ph>Member.</source>
          <target state="translated">若要在变量中获取信息的对象的集合︰ 驱动器中，使用 InputObject 参数的 Get<ph id="ph1">\-</ph>成员。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For example, "get<ph id="ph1">\-</ph>member <ph id="ph2">\-</ph>inputobject <ph id="ph3">\(</ph>get<ph id="ph4">\-</ph>item variable:<ph id="ph5">\*\)</ph>".</source>
          <target state="translated">例如，"获取<ph id="ph1">\-</ph>成员 <ph id="ph2">\-</ph>inputobject <ph id="ph3">\(</ph>获取<ph id="ph4">\-</ph>中项目变量︰<ph id="ph5">\*\)</ph>"。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>When you use InputObject, Get<ph id="ph1">\-</ph>Member evaluates the collection, not the objects in the collection.</source>
          <target state="translated">当你使用 InputObject 时获取<ph id="ph1">\-</ph>成员将对集合进行评估不在集合中的对象。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This command lists the values of the properties of the "home" variable.</source>
          <target state="translated">此命令将列出“home”变量的属性值。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>It uses the Get<ph id="ph1">\-</ph>Item cmdlet to get an object that represents the "home" variable.</source>
          <target state="translated">使用 Get<ph id="ph1">\-</ph>项 cmdlet 来获取一个对象，表示"home"变量。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The pipeline operator <ph id="ph1">\(</ph>&amp;#124;<ph id="ph2">\)</ph> sends the results to the Format<ph id="ph3">\-</ph>List command.</source>
          <target state="translated">管道运算符 <ph id="ph1">\(</ph>&amp;#124;<ph id="ph2">\)</ph> 将结果发送到格式<ph id="ph3">\-</ph>List 命令。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The Format<ph id="ph1">\-</ph>List command uses the Property parameter with a wildcard character <ph id="ph2">\(\*\)</ph> to format and to display the values of all of the properties of the "home" variable.</source>
          <target state="translated">格式<ph id="ph1">\-</ph>列出命令使用带有通配符的 Property 参数 <ph id="ph2">\(\*\)</ph> 若要设置格式并显示所有的"home"变量属性的值。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Changing the Properties of a Variable</source>
          <target state="translated">更改变量的属性</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This command uses the Rename<ph id="ph1">\-</ph>Item cmdlet to change the name of the "a" variable to "processes".</source>
          <target state="translated">此命令使用重命名<ph id="ph1">\-</ph>项 cmdlet 来更改为"processes"变量"a"的名称。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This command uses the Set<ph id="ph1">\-</ph>Item cmdlet to change the value of the ErrorActionPreference variable to "Stop".</source>
          <target state="translated">此命令使用集<ph id="ph1">\-</ph>项 cmdlet 将 ErrorActionPreference 变量的值更改为"Stop"。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>EXAMPLE 3</source>
          <target state="translated">示例 3</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This command changes the value of the ErrorActionPreference variable to "Stop".</source>
          <target state="translated">此命令将 ErrorActionPreference 变量的值更改为“Stop”。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>It uses a dollar sign <ph id="ph1">\($\)</ph> to indicate a variable and the assignment operator <ph id="ph2">\(\=\)</ph> to assign the value.</source>
          <target state="translated">它使用美元符号 <ph id="ph1">\($\)</ph> 来指示变量，并使用赋值运算符 <ph id="ph2">\(\=\)</ph> 进行赋值。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Copying a Variable</source>
          <target state="translated">复制变量</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This command uses the Copy<ph id="ph1">\-</ph>Item cmdlet to copy the "processes" variable to "old<ph id="ph2">\_</ph>processes".</source>
          <target state="translated">此命令使用该副本<ph id="ph1">\-</ph>项 cmdlet 将复制到"processes"变量"旧<ph id="ph2">\_</ph>进程"。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This creates a new variable named "old<ph id="ph1">\_</ph>processes" that has the same value as the "processes" variable.</source>
          <target state="translated">这将创建一个名为的新变量"旧<ph id="ph1">\_</ph>进程"，其与"processes"变量的值相同。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If the command is issued from within the Variable: drive, you can omit the drive name from the value of the Path parameter.</source>
          <target state="translated">如果该命令从 Variable: 驱动器中发出，则可以省略 Path 参数值中的驱动器名称。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This command copies the "processes" variable to "old<ph id="ph1">\_</ph>processes" without using a cmdlet.</source>
          <target state="translated">此命令将复制到"processes"变量"旧<ph id="ph1">\_</ph>进程"而不使用 cmdlet。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>It uses the dollar sign <ph id="ph1">\($\)</ph> to indicate variables and the assignment operator to assign the value of $processes to old<ph id="ph2">\_</ph>processes.</source>
          <target state="translated">它使用美元符号 <ph id="ph1">\($\)</ph> 来指示变量，并赋值运算符将 $processes 的值分配给旧<ph id="ph2">\_</ph>进程。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Deleting a Variable</source>
          <target state="translated">删除变量</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This command deletes the "serv" variable from the current session.</source>
          <target state="translated">此命令将从当前会话中删除“serv”变量。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>You can use this command in any Windows PowerShell drive.</source>
          <target state="translated">在任何 Windows PowerShell 驱动器中都可以使用此命令。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This command deletes all variables from the current session except for the variables whose Options property has a value of Constant.</source>
          <target state="translated">此命令将从当前会话中删除所有变量，但其 Options 属性值为 Constant 的变量除外。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Without the Force parameter, the command does not delete variables whose Options property has a value of ReadOnly.</source>
          <target state="translated">在没有 Force 参数的情况下，该命令将不会删除 Options 属性值为 ReadOnly 的变量。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Setting the Value of a Variable to NULL</source>
          <target state="translated">将变量的值设置为 NULL</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">示例 1</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This command uses the Clear<ph id="ph1">\-</ph>Item cmdlet to change the value of the "processes" variable to NULL.</source>
          <target state="translated">此命令使用明文<ph id="ph1">\-</ph>项 cmdlet 可将"processes"变量的值更改为 NULL。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">示例 2</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This command clears the value of the "processes" variable by assigning a null value to it.</source>
          <target state="translated">此命令通过将 null 值赋给“processes”变量来清除该变量的值。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>It uses the $null automatic variable to represent the NULL value.</source>
          <target state="translated">它使用 $null 自动变量来表示 NULL 值。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>about<ph id="ph1">\_</ph>Variables</source>
          <target state="translated">有关<ph id="ph1">\_</ph>变量</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>about<ph id="ph1">\_</ph>Automatic<ph id="ph2">\_</ph>Variables &amp;#91;m2&amp;#93;</source>
          <target state="translated">有关<ph id="ph1">\_</ph>自动<ph id="ph2">\_</ph>变量 #91; m2 &amp;#93;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>about<ph id="ph1">\_</ph>Providers</source>
          <target state="translated">有关<ph id="ph1">\_</ph>提供程序</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>