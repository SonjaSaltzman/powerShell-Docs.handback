<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24035e735a7777e9b14ba02236bb4d25078cbd6b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Automatic_Variables.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a2bfea9dbc2122c75071b91be049cf56f5a5231c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac51d372fdcb5db1813c2b80569d01f27093e8cf</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables</source>
          <target state="translated">about_Automatic_Variables</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Automatic Variables</source>
          <target state="translated">有关自动变量</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables</source>
          <target state="translated">about_Automatic_Variables</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables</source>
          <target state="translated">about_Automatic_Variables</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">简短说明</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes variables that store state information for  Windows PowerShell�.</source>
          <target state="translated">介绍 Windows PowerShell 的状态信息存储的变量。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>These variables are created and maintained by  Windows PowerShell.</source>
          <target state="translated">这些变量是由创建和维护 Windows PowerShell。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">详细说明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Here is a list of the automatic variables in  Windows PowerShell:</source>
          <target state="translated">下面是在 Windows PowerShell 中的自动变量的列表︰</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Contains the last token in the last line received by the session.</source>
          <target state="translated">包含由会话接收到的最后一行中的最后一个标记。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>$?</source>
          <target state="translated">$?</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Contains the execution status of the last operation.</source>
          <target state="translated">包含最后一次操作的执行状态。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It contains TRUE if the last operation succeeded and FALSE if it failed.</source>
          <target state="translated">如果失败，它包含如果最后一次操作成功，则 TRUE 和 FALSE。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Contains the first token in the last line received by the session.</source>
          <target state="translated">包含由会话接收到的最后一行中的第一个标记。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>$_</source>
          <target state="translated">$_</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Same as $PSItem.</source>
          <target state="translated">$PSItem 相同。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Contains the current object in the pipeline object.</source>
          <target state="translated">包含当前管道对象中的对象。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can use this variable in commands that perform an action on every object or on selected objects in a pipeline.</source>
          <target state="translated">在执行操作，或在管道中的所选对象上的每个对象的命令中，可以使用此变量。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>$ARGS</source>
          <target state="translated">$ARGS</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Contains an array of the undeclared parameters and<ph id="ph1">\/</ph>or parameter values that are passed to a function, script, or script block.</source>
          <target state="translated">包含未声明的参数数组和<ph id="ph1">\/</ph>或传递给函数、 脚本或脚本块的参数值。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When you create a function, you can declare the parameters by using the param keyword or by adding a comma-separated list of parameters in parentheses after the function name.</source>
          <target state="translated">创建一个函数时，您可以通过使用 param 关键字或函数名之后添加在括号中的逗号分隔的参数列表声明参数。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In an event action, the $Args variable contains objects that represent the event arguments of the event that is being processed.</source>
          <target state="translated">中的事件的操作，$Args 变量包含对象，表示正在处理该事件的事件参数。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This variable is populated only within the Action block of an event registration command.</source>
          <target state="translated">只在操作块中的事件注册命令将填充此变量。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The value of this variable can also be found in the SourceArgs property of the PSEventArgs object (System.Management.Automation.PSEventArgs) that Get-Event returns.</source>
          <target state="translated">此外可以获得事件返回的 PSEventArgs 对象 (System.Management.Automation.PSEventArgs) SourceArgs 属性中找到该变量的值。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>$CONSOLEFILENAME</source>
          <target state="translated">$CONSOLEFILENAME</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Contains the path of the console file (.psc1) that was most recently used in the session.</source>
          <target state="translated">包含已在会话中最近使用的控制台文件 (.psc1) 的路径。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This variable is populated when you start  Windows PowerShell with the PSConsoleFile parameter or when you use the Export-Console cmdlet to export snap-in names to a console file.</source>
          <target state="translated">当使用 PSConsoleFile 参数，或当你使用 Export-console cmdlet 将管理单元名称导出到控制台文件启动 Windows PowerShell 时，将填充此变量。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When you use the Export-Console cmdlet without parameters, it automatically updates the console file that was most recently used in the session.</source>
          <target state="translated">当您使用不带参数 Export-console cmdlet 时，它将自动更新最近已在会话中使用该控制台文件。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can use this automatic variable to determine which file will be updated.</source>
          <target state="translated">This 自动变量可用于确定将更新的文件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>$ERROR</source>
          <target state="translated">$ERROR</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Contains an array of error objects that represent the most recent errors.</source>
          <target state="translated">包含表示最新的错误的错误对象的数组。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The most recent error is the first error object in the array ($Error[0]).</source>
          <target state="translated">最新错误是数组 ($Error[0]) 中第一个错误对象。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To prevent an error from being added to the $Error array, use the ErrorAction common parameter with a value of Ignore.</source>
          <target state="translated">若要防止错误添加到 $Error 数组，使用值为忽略的 ErrorAction 通用参数。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information, see about_CommonParameters (http:<ph id="ph1">\/\/</ph>go.microsoft.com<ph id="ph2">\/</ph>fwlink<ph id="ph3">\/</ph>?LinkID<ph id="ph4">\=</ph>113216).</source>
          <target state="translated">有关详细信息，请参阅 about_CommonParameters (http:<ph id="ph1">\/\/</ph>go.microsoft.com<ph id="ph2">\/</ph>fwlink<ph id="ph3">\/</ph>？LinkID<ph id="ph4">\=</ph>113216)。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>$EVENT</source>
          <target state="translated">$EVENT</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Contains a PSEventArgs object that represents the event that is being processed.</source>
          <target state="translated">包含一个 PSEventArgs 对象，表示正在处理的事件。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This variable is populated only within the Action block of an event registration command, such as Register-ObjectEvent.</source>
          <target state="translated">只在操作块中的事件注册命令，如 Register-objectevent 填充此变量。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The value of this variable is the same object that the Get-Event cmdlet returns.</source>
          <target state="translated">此变量的值是 Get-event cmdlet 将返回同一个对象。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Therefore, you can use the properties of the $Event variable, such as $Event.TimeGenerated , in an Action script block.</source>
          <target state="translated">因此，您可以在 Action 脚本块中使用 $Event 变量，如 $Event.TimeGenerated 的属性。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>$EVENTARGS</source>
          <target state="translated">$EVENTARGS</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Contains an object that represents the first event argument that derives from EventArgs of the event that is being processed.</source>
          <target state="translated">包含一个对象，表示第一个派生自 EventArgs 正在处理该事件的事件参数。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This variable is populated only within the Action block of an event registration command.</source>
          <target state="translated">只在操作块中的事件注册命令将填充此变量。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The value of this variable can also be found in the SourceEventArgs property  of the PSEventArgs (System.Management.Automation.PSEventArgs) object that Get-Event returns.</source>
          <target state="translated">此外可以 PSEventArgs (System.Management.Automation.PSEventArgs) 返回的对象的 Get 事件 SourceEventArgs 属性中找到该变量的值。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>$EVENTSUBSCRIBER</source>
          <target state="translated">$EVENTSUBSCRIBER</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Contains a PSEventSubscriber object that represents the event subscriber of the event that is being processed.</source>
          <target state="translated">包含一个 PSEventSubscriber 对象，表示正在处理该事件的事件订阅服务器。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This variable is populated only within the Action block of an event registration command.</source>
          <target state="translated">只在操作块中的事件注册命令将填充此变量。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The value of this variable is the same object that the Get-EventSubscriber cmdlet returns.</source>
          <target state="translated">此变量的值是 Get-eventsubscriber cmdlet 将返回同一个对象。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>$EXECUTIONCONTEXT</source>
          <target state="translated">$EXECUTIONCONTEXT</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Contains an EngineIntrinsics object that represents the execution context of the  Windows PowerShell host.</source>
          <target state="translated">包含一个 EngineIntrinsics 对象，表示 Windows PowerShell 主机的执行上下文。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can use this variable to find the execution objects that are available to cmdlets.</source>
          <target state="translated">此变量可用于查找供 cmdlet 的执行对象。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>$FALSE</source>
          <target state="translated">$FALSE</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Contains FALSE.</source>
          <target state="translated">包含 FALSE。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can use this variable to represent FALSE in commands and scripts instead of using the string "false".</source>
          <target state="translated">此变量可用于在命令和脚本而不是使用字符串"false"表示 FALSE。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The string can be interpreted as TRUE if it is converted to a non-empty string or to a non-zero integer.</source>
          <target state="translated">如果要将它转换为非空字符串或为非零的整数，则字符串可以解释为真。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>$FOREACH</source>
          <target state="translated">$FOREACH</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Contains the enumerator (not the resulting values) of a ForEach loop.</source>
          <target state="translated">包含 ForEach 循环的枚举器 （而不是生成值）。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can use the properties and methods of enumerators on the value of the $ForEach variable.</source>
          <target state="translated">可以在 $ForEach 变量的值上使用的属性和方法的枚举器。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This variable exists only while the ForEach loop is running; it is deleted after the loop is completed.</source>
          <target state="translated">只有在运行 ForEach 循环; 时，才存在此变量循环完成后，将删除它。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For detailed information, see about_ForEach.</source>
          <target state="translated">有关详细信息，请参阅 about_ForEach。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>$HOME</source>
          <target state="translated">$HOME</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Contains the full path of the user's home directory.</source>
          <target state="translated">包含用户的主目录的完整路径。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This variable is the equivalent of the %homedrive%%homepath% environment variables, typically C:\Users<ph id="ph1">\&lt;</ph>UserName&gt;.</source>
          <target state="translated">此变量是等价的 %homedrive%%homepath%环境变量，通常 C:\Users<ph id="ph1">\&lt;</ph>用户名 &gt;。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>$HOST</source>
          <target state="translated">$HOST</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Contains an object that represents the current host application for  Windows PowerShell.</source>
          <target state="translated">包含一个对象，表示当前主机应用程序适用于 Windows PowerShell。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You can use this variable to represent the current host in commands or to display or change the properties of the host, such as $Host.version or $Host.CurrentCulture, or $host.ui.rawui.setbackgroundcolor("Red").</source>
          <target state="translated">可以使用此变量来表示在命令中的当前主机或要显示或更改主机，例如 $Host.version $Host.CurrentCulture 或 $host.ui.rawui.setbackgroundcolor("Red") 的属性。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>$INPUT</source>
          <target state="translated">$INPUT</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Contains an enumerator that enumerates all input that is passed to a function.</source>
          <target state="translated">包含枚举传递给函数的所有输入的枚举数。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The $input variable is available only to functions and script blocks (which are unnamed functions).</source>
          <target state="translated">$Input 变量是仅供函数和脚本块 (这是未命名的函数)。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>In the Process block of a function, the $input variable enumerates the object that is currently in the pipeline.</source>
          <target state="translated">在函数的 Process 块，$input 变量枚举当前管道中的对象。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>When the Process block  completes, there are no objects left in the pipeline, so the $input variable enumerates an empty collection.</source>
          <target state="translated">Process 块完成时，没有对象保持在管道中，以便 $input 变量枚举为空集合。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If the function does not have a Process block, then in the End block, the $input variable enumerates the collection of all input to the function.</source>
          <target state="translated">如果该函数不具有 Process 块，然后在最终块中，$input 变量枚举该集合的所有输入转换为该函数。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>$LASTEXITCODE</source>
          <target state="translated">$LASTEXITCODE</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Contains the exit code of the last Windows-based program that was run.</source>
          <target state="translated">包含了运行时的最后一个基于 Windows 的程序的退出代码。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>$MATCHES</source>
          <target state="translated">$MATCHES</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The $Matches variable works with the -match and -notmatch operators.</source>
          <target state="translated">与-匹配和-notmatch 将运算符结合使用 $Matches 变量。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>When you submit scalar input to the -match or -notmatch operator, and either one detects a match, they return a Boolean value and populate the $Matches automatic variable with a hash table of any string values that were matched.</source>
          <target state="translated">与-匹配项或-notmatch 将运算符，或者当您提交标量输入一个检测到匹配项时，它们返回一个布尔值，填充 $Matches 自动变量均已匹配任何字符串值的哈希表。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For more information about the -match operator, see about_comparison_operators.</source>
          <target state="translated">有关详细信息-match 运算符，请参阅 about_comparison_operators 有关。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>$MYINVOCATION</source>
          <target state="translated">$MYINVOCATION</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Contains an information about the current command, such as the name, parameters, parameter values, and information about how the command was started, called, or "invoked," such as the name of the script that called the current command.</source>
          <target state="translated">包含有关当前命令，例如名称、 参数、 参数值和有关该命令已启动、 调用，或"调用，"调用当前命令的脚本的名称之类的信息的信息。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>$MyInvocation is populated only for scripts, function, and script blocks.</source>
          <target state="translated">$MyInvocation 将仅针对脚本、 函数和脚本块填充。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You can use the information in the System.Management.Automation.InvocationInfo object that $MyInvocation returns in the current script, such as the path and file name of the script ($MyInvocation.MyCommand.Path) or the name of a function ($MyInvocation.MyCommand.Name) to identify the current command.</source>
          <target state="translated">您可以使用 $MyInvocation 返回在当前脚本中，如脚本 ($MyInvocation.MyCommand.Path) 的路径和文件名称或函数 ($MyInvocation.MyCommand.Name) 来标识当前命令的名称的 System.Management.Automation.InvocationInfo 对象中的信息。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This is particularly useful for finding the name of the current script.</source>
          <target state="translated">这是适合用于查找当前脚本的名称。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, $MyInvocation has the following new properties.</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，$MyInvocation 具有以下新属性。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>-- PSScriptRoot: Contains the full path to the script that invoked the current command.</source>
          <target state="translated">-PSScriptRoot︰ 包含调用当前命令的脚本的完整路径。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The value of this property is populated only when the caller is a script.</source>
          <target state="translated">仅当调用方是一个脚本时，才填充此属性的值。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-- PSCommandPath: Contains the full path and file name of the script that invoked the current command.</source>
          <target state="translated">-PSCommandPath︰ 调用了当前命令的脚本包含完整的路径和文件名。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The value of this property is populated only when the caller is a script.</source>
          <target state="translated">仅当调用方是一个脚本时，才填充此属性的值。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Unlike the $PSScriptRoot and $PSCommandPath automatic variables, the PSScriptRoot and PSCommandPath properties of the $MyInvocation automatic variable contain information about the invoker or calling script, not the current script.</source>
          <target state="translated">与 $PSScriptRoot 和 $PSCommandPath 自动变量，不同 $MyInvocation 自动变量的 PSScriptRoot 和 PSCommandPath 属性包含有关调用程序或调用脚本，不是当前的脚本的信息。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>$NESTEDPROMPTLEVEL</source>
          <target state="translated">$NESTEDPROMPTLEVEL</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Contains the current prompt level.</source>
          <target state="translated">包含当前提示的级别。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A value of 0 indicates the original prompt level.</source>
          <target state="translated">值为 0 指示原始提示级别。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The value is incremented when you enter a nested level and decremented when you exit it.</source>
          <target state="translated">该值递增时输入嵌套的级别和减少在您退出。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For example,  Windows PowerShell presents a nested command prompt when you use the $Host.EnterNestedPrompt method.</source>
          <target state="translated">例如，Windows PowerShell 显示嵌套的命令提示符下，当你使用 $Host.EnterNestedPrompt 方法。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Windows PowerShell also presents a nested command prompt when you reach a breakpoint in the  Windows PowerShell debugger.</source>
          <target state="translated">Windows PowerShell 还介绍了嵌套的命令提示符下，则在到达 Windows PowerShell 调试程序中的断点。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>When you enter a nested prompt,  Windows PowerShell pauses the current command, saves the execution context, and increments the value of the $NestedPromptLevel variable.</source>
          <target state="translated">输入嵌套的提示时，Windows PowerShell 会暂停当前命令、 保存的执行上下文，并递增 $NestedPromptLevel 变量的值。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>To create additional nested command prompts (up to 128 levels) or to return to the original command prompt, complete the command, or type "exit".</source>
          <target state="translated">若要创建其他嵌套的命令提示 （最多 128 个级别） 或返回到原始的命令提示符下，完成该命令，或键入"exit"。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The $NestedPromptLevel variable helps you track the prompt level.</source>
          <target state="translated">$NestedPromptLevel 变量可帮助您跟踪的提示的级别。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You can create an alternative  Windows PowerShell command prompt that includes this value so that it is always visible.</source>
          <target state="translated">您可以创建包含此值，以便它始终是可见的其他 Windows PowerShell 命令提示符。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>$NULL</source>
          <target state="translated">$NULL</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>$null is an automatic variable that contains a NULL or empty value.</source>
          <target state="translated">$null 是一个自动变量，将包含 NULL 或空值。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>You can use this variable to represent an absent or undefined value in commands and scripts.</source>
          <target state="translated">可以使用此变量表示在命令和脚本中不存在或未定义的值。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Windows PowerShell treats $null as an object with a value, that is, as an explicit placeholder, so you can use $null to represent an empty value in a series of values.</source>
          <target state="translated">Windows PowerShell 将 $null 作为值时，对象即视为显式占位符，因此您可以使用 $null 来表示空值中的一系列值。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For example, when $null is included in a collection, it is counted as one of the objects.</source>
          <target state="translated">例如，当 $null 包含在集合中，它被视为一个对象。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>If you pipe the $null variable to the ForEach-Object cmdlet, it generates a value for $null, just as it does for the other objects</source>
          <target state="translated">如果你通过管道传递给 Foreach-object cmdlet $null 变量，它将为生成值 $null，是一样的其他对象</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>As a result, you cannot use $null to mean "no parameter value."</source>
          <target state="translated">因此，不能使用 $null 来不表示"任何参数值。"</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A parameter value of $null overrides the default parameter value.</source>
          <target state="translated">$Null 的参数值将替代默认参数值。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>However, because  Windows PowerShell treats the $null variable as a placeholder, you can use it scripts like the following one, which would not work if $null were ignored.</source>
          <target state="translated">但是，由于 Windows PowerShell 将 $null 变量视为一个占位符，您可以使用了它的语言，如下面的一个，它也不能正确工作 $null 都被忽略。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>$OFS</source>
          <target state="translated">$OFS</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>$OFS is a special variable that stores a string that you want to use as an output field separator.</source>
          <target state="translated">$OFS 是一个特殊变量，将你想要将用作输出字段分隔符的字符串存储。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Use this variable when you are converting an array to a string.</source>
          <target state="translated">要转换为字符串的数组，请使用此变量。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>By default, the value of $OFS is " ", but you can change the value of $OFS in your session, by typing $OFS<ph id="ph1">\=</ph>"<ph id="ph2">&lt;value&gt;</ph>".</source>
          <target state="translated">默认情况下，$OFS 的值是""，但您可以在会话中，更改 $OFS 的值，通过键入 $OFS<ph id="ph1">\=</ph>"<ph id="ph2">&lt;value&gt;</ph>"。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If you are expecting the default value of " " in your script, module, or configuration output, be careful that the $OFS default value has not been changed elsewhere in your code.</source>
          <target state="translated">如果您希望的默认值""在脚本、 模块或配置输出，应谨慎，$OFS 默认值已在未更改在其他地方您的代码。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>$PID</source>
          <target state="translated">$PID</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Contains the process identifier (PID) of the process that is hosting the current  Windows PowerShell session.</source>
          <target state="translated">包含正在承载当前 Windows PowerShell 会话的进程的进程标识符 (PID)。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>$PROFILE</source>
          <target state="translated">$PROFILE</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Contains the full path of the  Windows PowerShell profile for the current user and the current host application.</source>
          <target state="translated">包含当前用户和当前的宿主应用程序的 Windows PowerShell 配置文件的完整路径。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>You can use this variable to represent the profile in commands.</source>
          <target state="translated">可以使用此变量来表示命令中的配置文件。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>For example, you can use it in a command to determine whether a profile has been created:</source>
          <target state="translated">例如，您可以使用它在命令中来确定是否已创建一个配置文件︰</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Or, you can use it in a command to create a profile:</source>
          <target state="translated">或者，您可以使用它在命令中创建配置文件︰</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You can also use it in a command to open the profile in Notepad:</source>
          <target state="translated">您可以还使用它在命令中，在记事本中打开配置文件︰</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>$PSBOUNDPARAMETERS</source>
          <target state="translated">$PSBOUNDPARAMETERS</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Contains a dictionary of the parameters that are passed to a script or function and their current values.</source>
          <target state="translated">包含传递给一个脚本或函数以及它们的当前值的参数的字典。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>This variable has a value only in a scope where parameters are declared, such as a script or function.</source>
          <target state="translated">此变量仅在其中声明参数的作用域中，如脚本或函数都有一个值。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>You can use it to display or change the current values of parameters or to pass parameter values to another script or function.</source>
          <target state="translated">若要显示或更改参数的当前值或将参数值传递到另一个脚本或函数，您可以使用它。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>$PSCMDLET</source>
          <target state="translated">$PSCMDLET</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Contains an object that represents the cmdlet or advanced function that is being run.</source>
          <target state="translated">包含一个对象，表示 cmdlet 或正在运行的高级的功能。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>You can use the properties and methods of the object in your cmdlet or function code to respond to the conditions of use.</source>
          <target state="translated">可以使用属性和对象的方法在 cmdlet 或函数代码中要使用的情况作出反应。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For example, the ParameterSetName property contains the name of the parameter set that is being used, and the ShouldProcess method adds the WhatIf and Confirm parameters to the cmdlet dynamically.</source>
          <target state="translated">例如，ParameterSetName 属性包含正在使用的参数集的名称并 ShouldProcess 方法将 WhatIf 和 Confirm 参数动态地添加到 cmdlet。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>For more information about the $PSCmdlet automatic variable, see about_Functions_Advanced.</source>
          <target state="translated">有关 $PSCmdlet 自动变量的详细信息，请参阅 about_Functions_Advanced。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>$PSCOMMANDPATH</source>
          <target state="translated">$PSCOMMANDPATH</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Contains the full path and file name of the script that is being run.</source>
          <target state="translated">包含正在运行的脚本的完整路径和文件名称。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>This variable is valid in all scripts.</source>
          <target state="translated">此变量是有效的所有脚本中。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>$PSCULTURE</source>
          <target state="translated">$PSCULTURE</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Contains the name of the culture currently in use in the operating system.</source>
          <target state="translated">包含当前正在使用在操作系统中的区域性的名称。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The culture determines the display format of items such as numbers, currrency, and dates.</source>
          <target state="translated">区域性确定项如数字、 currrency 和日期的显示格式。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>This is the value of the System.Globalization.CultureInfo.CurrentCulture.Name property of the system.</source>
          <target state="translated">这是系统 System.Globalization.CultureInfo.CurrentCulture.Name 属性的值。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>To get the System.Globalization.CultureInfo object for the system, use the Get-Culture cmdlet.</source>
          <target state="translated">若要获取系统 System.Globalization.CultureInfo 对象，请使用 Get-culture cmdlet。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>$PSDEBUGCONTEXT</source>
          <target state="translated">$PSDEBUGCONTEXT</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>While debugging, this variable contains information about the debugging environment.</source>
          <target state="translated">在调试时，此变量包含有关调试环境的信息。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Otherwise, it contains a NULL value.</source>
          <target state="translated">否则，它将包含 NULL 值。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>As a result, you can use it to indicate whether the debugger has control.</source>
          <target state="translated">结果是，您可以使用它来指示调试器是否可以控制。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>When populated, it contains a PsDebugContext object that has Breakpoints and InvocationInfo properties.</source>
          <target state="translated">显示后，它包含具有断点和 InvocationInfo 一个 PsDebugContext 对象属性。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The InvocationInfo property has several useful properties, including the Location property.</source>
          <target state="translated">InvocationInfo 属性具有几个有用的属性，包括位置属性。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The Location property indicates the path of the script that is being debugged.</source>
          <target state="translated">位置属性指示正在调试的脚本的路径。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>$PSHOME</source>
          <target state="translated">$PSHOME</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Contains the full path of the installation directory for  Windows PowerShell, typically, %windir%\System32\ Windows PowerShell\v1.0.</source>
          <target state="translated">有关 Windows PowerShell，通常情况下，Windows PowerShell\v1.0 %windir%\System32\ 中包含的安装目录的完整路径。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>You can use this variable in the paths of  Windows PowerShell files.</source>
          <target state="translated">可以在 Windows PowerShell 文件路径中使用此变量。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>For example, the following command searches the conceptual Help topics for the word "variable":</source>
          <target state="translated">例如，以下命令将搜索的单词"变量"概念帮助主题︰</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>$PSITEM</source>
          <target state="translated">$PSITEM</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Same as $_.</source>
          <target state="translated">$_ 相同。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Contains the current object in the pipeline object.</source>
          <target state="translated">包含当前管道对象中的对象。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>You can use this variable in commands that perform an action on every object or on selected objects in a pipeline.</source>
          <target state="translated">在执行操作，或在管道中的所选对象上的每个对象的命令中，可以使用此变量。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>$PSSCRIPTROOT</source>
          <target state="translated">$PSSCRIPTROOT</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Contains the directory from which a script is being run.</source>
          <target state="translated">包含从中运行脚本的目录。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>In  Windows PowerShell 2.0, this variable is valid only in script modules (.psm1).</source>
          <target state="translated">在 Windows PowerShell 2.0 中，此变量是仅在脚本模块 (.psm1) 中有效。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, it is valid in all scripts.</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，它是有效的所有脚本中。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>$PSSENDERINFO</source>
          <target state="translated">$PSSENDERINFO</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Contains information about the user who started the PSSession, including  the user identity and the time zone of the originating computer.</source>
          <target state="translated">包含有关启动 PSSession，包括用户标识和发件计算机的时区的用户的信息。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>This variable is available only in PSSessions.</source>
          <target state="translated">此变量是仅在 Pssession 中可用。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The $PSSenderInfo variable includes a user-configurable property, ApplicationArguments, which, by default, contains only the $PSVersionTable from the originating session.</source>
          <target state="translated">$PSSenderInfo 变量包含用户可配置属性，ApplicationArguments，其中，默认情况下，仅从原始会话 $PSVersionTable。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>To add data to the ApplicationArguments property, use the ApplicationArguments parameter of the New-PSSessionOption cmdlet.</source>
          <target state="translated">若要将数据添加到 ApplicationArguments 属性，使用 New-pssessionoption cmdlet 的 ApplicationArguments 参数。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>$PSUICULTURE</source>
          <target state="translated">$PSUICULTURE</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Contains the name of the user interface (UI) culture that is currently in use in the operating system.</source>
          <target state="translated">包含当前正在使用在操作系统中的用户界面 (UI) 区域性的名称。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The UI culture determines which text strings are used for user interface elements, such as menus and messages.</source>
          <target state="translated">UI 区域性确定哪些文本字符串用于用户界面元素，例如菜单和消息。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>This is the value of the System.Globalization.CultureInfo.CurrentUICulture.Name property of the system.</source>
          <target state="translated">这是系统 System.Globalization.CultureInfo.CurrentUICulture.Name 属性的值。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>To get the System.Globalization.CultureInfo object for the system, use the Get-UICulture cmdlet.</source>
          <target state="translated">若要获取系统 System.Globalization.CultureInfo 对象，请使用 Get-uiculture cmdlet。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>$PSVERSIONTABLE</source>
          <target state="translated">$PSVERSIONTABLE</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Contains a read-only hash table that displays details about the version of  Windows PowerShell that is running in the current session.</source>
          <target state="translated">包含一个只读的哈希表，显示有关当前会话中正在运行的 Windows PowerShell 的版本的详细信息。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The table includes the following items:</source>
          <target state="translated">该表包括以下各项︰</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>$PWD</source>
          <target state="translated">$PWD</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Contains a path object that represents the full path of the current directory.</source>
          <target state="translated">包含一个路径对象，表示当前目录的完整路径。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>$REPORTERRORSHOWEXCEPTIONCLASS</source>
          <target state="translated">$REPORTERRORSHOWEXCEPTIONCLASS</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>$REPORTERRORSHOWINNEREXCEPTION</source>
          <target state="translated">$REPORTERRORSHOWINNEREXCEPTION</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>$REPORTERRORSHOWSOURCE</source>
          <target state="translated">$REPORTERRORSHOWSOURCE</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>$REPORTERRORSHOWSTACKTRACE</source>
          <target state="translated">$REPORTERRORSHOWSTACKTRACE</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The "ReportErrorShow" variables are defined in  Windows PowerShell, but they are not implemented.</source>
          <target state="translated">在 Windows PowerShell 中，定义了"ReportErrorShow"变量，但是它们未实现。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Get-Variable gets them, but they do not contain valid data.</source>
          <target state="translated">获取变量获取它们，但它们不包含有效的数据。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>$SENDER</source>
          <target state="translated">$SENDER</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Contains the object that generated this event.</source>
          <target state="translated">包含生成此事件的对象。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>This variable is populated only within the Action block of an event registration command.</source>
          <target state="translated">只在操作块中的事件注册命令将填充此变量。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The value of this variable can also be found in the Sender property of the PSEventArgs (System.Management.Automation.PSEventArgs) object that Get-Event returns.</source>
          <target state="translated">此外可以 PSEventArgs (System.Management.Automation.PSEventArgs) 返回的对象的 Get 事件的发件人属性中找到该变量的值。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>$SHELLID</source>
          <target state="translated">$SHELLID</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Contains the identifier of the current shell.</source>
          <target state="translated">包含当前的外壳程序的标识符。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>$STACKTRACE</source>
          <target state="translated">$STACKTRACE</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Contains a stack trace for the most recent error.</source>
          <target state="translated">包含最新的错误的堆栈跟踪。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>$THIS</source>
          <target state="translated">$这</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>In a script block that defines a script property or script method, the $This variable refers to the object that is being extended.</source>
          <target state="translated">在脚本块中定义的脚本属性或脚本方法，$此变量是指要扩展的对象。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>$TRUE</source>
          <target state="translated">$TRUE</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Contains TRUE.</source>
          <target state="translated">包含 TRUE。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>You can use this variable to represent TRUE in commands and scripts.</source>
          <target state="translated">此变量可用于在命令和脚本中代表 TRUE。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>about_Hash_Tables</source>
          <target state="translated">about_Hash_Tables</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>about_Preference_Variables</source>
          <target state="translated">about_Preference_Variables</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>about_Variables</source>
          <target state="translated">about_Variables</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>