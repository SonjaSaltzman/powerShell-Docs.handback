<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ed207553dc22bef71c72db3991bfe8ed1153091b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Do.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a7b8985b2459127bc3328901ddeccb6e2f6aaef3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e51fedd9bb3d053e606597427984b25d12cc7b6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Do</source>
          <target state="translated">about_Do</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Do</source>
          <target state="translated">有关执行</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Do</source>
          <target state="translated">about_Do</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">TOPIC</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Do</source>
          <target state="translated">about_Do</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">简短说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Runs a statement list one or more times, subject to a While or Until condition.</source>
          <target state="translated">一个或多个时间，遵循 While 或 Until 条件运行一个语句列表。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">详细说明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Do keyword works with the While keyword or the Until keyword to run the statements in a script block, subject to a condition.</source>
          <target state="translated">Do 关键字适用于 While 关键字或 Until 关键字以在脚本块中，根据条件运行语句。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Unlike the related While loop, the script block in a Do loop always runs at least once.</source>
          <target state="translated">与相关的循环中，始终一个 Do 循环中的脚本块在运行时不同至少一次。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A Do-While loop is a variety of the While loop.</source>
          <target state="translated">请执行的各种 While 循环时循环。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In a Do-While loop, the condition is evaluated after the script block has run.</source>
          <target state="translated">请不要的 While 循环，该脚本块运行后计算条件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>As in a While loop, the script block is repeated as long as the condition evaluates to true.</source>
          <target state="translated">如在 While 循环，该脚本块为重复，只要条件的计算结果为 true。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Like a Do-While loop, a Do-Until loop always runs at least once before the condition is evaluated.</source>
          <target state="translated">像一个 Do 的 While 循环，请执行的循环始终运行之前至少一次之前对条件求值。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, the script block runs only while the condition is false.</source>
          <target state="translated">但是，仅当条件为 false 时，将运行该脚本块。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The Continue and Break flow control keywords can be used in a Do-While loop or in a Do-Until loop.</source>
          <target state="translated">可以在执行中使用 Continue 和 Break 流控制关键字的 While 循环或中，请执行的循环。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Syntax The following shows the syntax of the Do-While statement:</source>
          <target state="translated">下面的语法演示执行的语法的 While 语句︰</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>do {<ph id="ph1">&lt;statement list&gt;</ph>} while (<ph id="ph2">&lt;condition&gt;</ph>)</source>
          <target state="translated">不要 {<ph id="ph1">&lt;statement list&gt;</ph>} 时 (<ph id="ph2">&lt;condition&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following shows the syntax of the Do-Until statement:</source>
          <target state="translated">下面显示的语法，请执行-直到语句︰</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>do {<ph id="ph1">&lt;statement list&gt;</ph>} until (<ph id="ph2">&lt;condition&gt;</ph>)</source>
          <target state="translated">不要 {<ph id="ph1">&lt;statement list&gt;</ph>} 直到 (<ph id="ph2">&lt;condition&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The statment list contains one or more statements that run each time the loop is entered or repeated.</source>
          <target state="translated">语句列表包含一个或每次循环中运行的多个语句会在输入或重复。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The condition portion of the statement resolves to true or false.</source>
          <target state="translated">该语句的条件部分解析为 true 或 false。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example The following example of a Do statement counts the items in an array until it reaches an item with a value of 0.</source>
          <target state="translated">Do 语句下面的示例的示例计算数组中的项，直至到达具有一个值为 0 的项。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $x = 1,2,78,0 C:\PS&gt; do { $count++; $a++; } while ($x[$a] -ne 0) C:\PS&gt; $count</source>
          <target state="translated">C:\PS &gt; $x = 1,2,78,0 C:\PS &gt; 执行 {$count + +，$ + + 中;} 时 ($x [$]-ne 0) C:\PS &gt; $count</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following example uses the Until keyword.</source>
          <target state="translated">下面的示例使用 Until 关键字。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Notice that the not equal to operator (-ne) is replaced by the equal to operator (-eq).</source>
          <target state="translated">请注意，但不等于运算符 (-ne) 替换为等于运算符 (-eq)。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; $x = 1,2,78,0 C:\PS&gt; do { $count++; $a++; } until ($x[$a] -eq 0) C:\PS&gt; $count</source>
          <target state="translated">C:\PS &gt; $x = 1,2,78,0 C:\PS &gt; 执行 {$count + +，$ + + 中;} 直到 ($x [$]-eq 0) C:\PS &gt; $count</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following example writes all the values of an array, skipping any value that is less than zero.</source>
          <target state="translated">下面的示例将一个数组中，跳过任何值都将小于零的所有值。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>do { if ($x[$a] -lt 0) { continue } Write-Host $x[$a] } while (++$a -lt 10)</source>
          <target state="translated">不要 {如果 ($x [$]-lt 0) {继续} Write-host $x [$]} 时 (+ + $a-lt 10)</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>about_While about_Operators about_Assignment_Operators about_Comparison_Operators about_Break about_Continue</source>
          <target state="translated">about_While about_Operators about_Assignment_Operators about_Comparison_Operators about_Break about_Continue</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>