<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc7f644f37f4ac5671a2c3833079a4ec3eced0e5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Hash_Tables.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f8a78dada29565525b69cd16b319773f65470bd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7b8c3d0d0e062d467078c08c7b61c8f63d01bc7a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Hash_Tables</source>
          <target state="translated">about_Hash_Tables</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Hash Tables</source>
          <target state="translated">有关哈希表</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Hash_Tables</source>
          <target state="translated">about_Hash_Tables</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Hash_Tables</source>
          <target state="translated">about_Hash_Tables</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">简短说明</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes how to create, use, and sort hash tables in Windows PowerShell.</source>
          <target state="translated">描述如何创建、 使用和对 Windows PowerShell 中的哈希表进行排序。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">详细说明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A hash table, also known as a dictionary or associative array, is a compact data structure that stores one or more key<ph id="ph1">\/</ph>value pairs.</source>
          <target state="translated">哈希表，也称为字典或关联数组是一种紧凑的数据结构存储一个或多个密钥<ph id="ph1">\/</ph>值对。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, a hash table might contain a series of IP addresses and computer names, where the IP addresses are the keys and the computer names are the values, or vice versa.</source>
          <target state="translated">例如，哈希表可能包含一系列 IP 地址和计算机名称，其中的 IP 地址是键且计算机名称的值，反之亦然。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell, each hash table is a Hashtable (System.Collections.Hashtable) object.</source>
          <target state="translated">在 Windows PowerShell 中，每个哈希表是一个哈希表 (System.Collections.Hashtable) 对象。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can use the properties and methods of Hashtable objects in Windows PowerShell.</source>
          <target state="translated">可以在 Windows PowerShell 中使用的属性和哈希表对象的方法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can use the [ordered] attribute to create an ordered dictionary (System.Collections.Specialized.OrderedDictionary) in Windows PowerShell.</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，您可以使用 [ordered] 属性以在 Windows PowerShell 中创建的有序的字典 (System.Collections.Specialized.OrderedDictionary)。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Ordered dictionaries differ from hash tables in that the keys always appear in the order in which you list them.</source>
          <target state="translated">有序的字典不同于哈希表，因为键始终按列出它们的顺序显示。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The order of keys in a hash table is not determined.</source>
          <target state="translated">哈希表中的键的顺序不确定。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The keys and value in hash tables are also .NET objects.</source>
          <target state="translated">密钥和哈希表中的值也是.NET 对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>They are most often strings or integers, but they can have any object type.</source>
          <target state="translated">它们是大多数通常字符串或整数，但它们可以产生的任何对象类型。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also create nested hash tables, in which the value of a key is another hash table.</source>
          <target state="translated">此外可以创建嵌套的哈希表，在其中一个密钥的值是另一个哈希表。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Hash tables are frequently used because they are very efficient for finding and retrieving data.</source>
          <target state="translated">经常使用的哈希表，因为它们是非常高效的查找和检索数据。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can use hash tables to store lists and to create calculated properties in Windows PowerShell.</source>
          <target state="translated">若要将列表存储并在 Windows PowerShell 中创建计算的属性，可以使用哈希表。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>And, Windows PowerShell has a cmdlet, ConvertFrom-StringData, that converts strings to a hash table.</source>
          <target state="translated">而且，Windows PowerShell 的 cmdlet，Convertfrom-stringdata，将字符串转换为哈希表。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The syntax of a hash table is as follows:</source>
          <target state="translated">哈希表的语法是，如下所示︰</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The syntax of an ordered dictionary is as follows:</source>
          <target state="translated">有序字典的语法如下所示︰</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The [ordered] attribute was introduced in Windows PowerShell 3.0.</source>
          <target state="translated">Windows PowerShell 3.0 中引入了 [ordered] 属性。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Creating Hash Tables</source>
          <target state="translated">创建哈希表</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To create a hash table, follow these guidelines:</source>
          <target state="translated">若要创建一个哈希表，遵循以下准则︰</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Begin the hash table with an at sign (@).</source>
          <target state="translated">开始具有哈希表 at 符号 (@)。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Enclose the hash table in braces ({}).</source>
          <target state="translated">将哈希表括在大括号 （{}） 中。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Enter one or more key<ph id="ph1">\/</ph>value pairs for the content of the hash table.</source>
          <target state="translated">输入一个或多个密钥<ph id="ph1">\/</ph>值对的内容的哈希表。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Use an equal sign (<ph id="ph1">\=</ph>) to separate each key from its value.</source>
          <target state="translated">使用等号 (<ph id="ph1">\=</ph>) 来分隔每个键的值。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Use a semicolon (;) or a line break to separate the key<ph id="ph1">\/</ph>value pairs.</source>
          <target state="translated">使用分号 （;） 或换行符来分隔该密钥<ph id="ph1">\/</ph>值对。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Key that contains spaces must be enclosed in quotation marks.</source>
          <target state="translated">包含空格的密钥必须用引号引起来。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Values must be valid Windows PowerShell expressions.</source>
          <target state="translated">值必须是有效的 Windows PowerShell 表达式。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Strings must appear in quotation marks, even if they do not include spaces.</source>
          <target state="translated">字符串必须出现在引号内，即使它们不包含空格。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To manage the hash table, save it in a variable.</source>
          <target state="translated">若要管理的哈希表，请将其保存在变量中。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When assigning an ordered hash table to a variable, place the [ordered] attribute before the "@" symbol.</source>
          <target state="translated">将一个有序的哈希表分配给一个变量，将之前 [ordered] 的属性"@"符号。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you place it before the variable name, the command fails.</source>
          <target state="translated">如果您将它放在变量名之前，该命令将失败。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To create an empty hash table in the value of $hash, type:</source>
          <target state="translated">若要创建一个空哈希表 $hash 值中，键入︰</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can also add keys and values to a hash table when you create it.</source>
          <target state="translated">您还可以添加键和值对哈希表时创建它。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For example, the following statement creates a hash table with three keys.</source>
          <target state="translated">例如，以下语句可创建具有三个键的哈希表。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Creating Ordered Dictionaries</source>
          <target state="translated">创建有序的字典</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can create an ordered dictionary by adding an object of the OrderedDictiory type, but the easiest way to create an ordered dictionary is use the [Ordered] attribute.</source>
          <target state="translated">您可以通过添加 OrderedDictiory 类型的对象创建的有序的字典，但若要创建的有序的字典的最简单方法是使用 [Ordered] 属性。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The [ordered] attribute is introduced in Windows PowerShell 3.0.</source>
          <target state="translated">[Ordered] 属性是在 Windows PowerShell 3.0 中引入的。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Place the attribute immediately before the "@" symbol.</source>
          <target state="translated">之前添加特性"@"符号。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can use ordered dictionaries in the same way that you use hash tables.</source>
          <target state="translated">可以在相同的方式使用哈希表中使用有序的字典。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Either type can be used as the value of parameters that take a hash table or dictionary (iDictionary).</source>
          <target state="translated">任何一种类型可用作执行哈希表或字典 (iDictionary) 的参数的值。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You cannot use the [ordered] attribute to convert or cast a hash hash table.</source>
          <target state="translated">您不能使用 [ordered] 属性将转换或强制转换哈希哈希表。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If you place the ordered attribute before the variable name, the command fails with the following error message.</source>
          <target state="translated">如果将变量名称前的将有序的属性上，命令失败，出现以下错误消息。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To correct the expression, move the [ordered] attribute.</source>
          <target state="translated">若要更正该表达式，移动 [ordered] 属性。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can cast an ordered dictionary to a hash table, but you cannot recover the ordered attribute, even if you clear the variable and enter new values.</source>
          <target state="translated">您可以强制转换为哈希表的有序的字典，但无法恢复将有序的属性，即使清除变量并输入新值。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To re-establish the order, you must remove and recreate the variable.</source>
          <target state="translated">若要重新建立的顺序，必须删除并重新创建该变量。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Displaying Hash Tables</source>
          <target state="translated">显示哈希表</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To display a hash table that is saved in a variable, type the variable name.</source>
          <target state="translated">若要显示在变量中保存的哈希表，请键入变量的名称。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>By default, a hash tables is displayed as a table with one column for keys and one for values.</source>
          <target state="translated">默认情况下，哈希表显示为具有一个键和列的值的表。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Hash tables have Keys and Values properties.</source>
          <target state="translated">哈希表具有键和值的属性。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Use dot notation to display all of the keys or all of the values.</source>
          <target state="translated">使用点表示法来显示所有的项或所有的值。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Each key name is also a property of the hash table, and its value is the value of the key-name property.</source>
          <target state="translated">每个项名也是哈希表，一个属性，其值为键名称属性的值。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Use the following format to display the property values.</source>
          <target state="translated">使用以下格式来显示属性值。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Hash tables have a Count property that indicates the number of key-value pairs in the hash table.</source>
          <target state="translated">哈希表有一个 Count 属性，指示在哈希表的键 / 值对的数目。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Hash table tables are not arrays, so you cannot use an integer as an index into the hash table, but you can use a key name to index into the hash table.</source>
          <target state="translated">哈希表表不是数组，因此您不能将整数用作索引到哈希表中，但可以到哈希表使用索引的项名称。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If the key is a string value, enclose the key name in quotation marks.</source>
          <target state="translated">如果键是一个字符串值，用引号引起来的键名。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Adding and Removing Keys and Values</source>
          <target state="translated">添加和删除项和值</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>To add keys and values to a hash table, use the following command format.</source>
          <target state="translated">若要将键和值添加到哈希表，请使用以下命令格式。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For example, to add a "Time" key with a value of "Now" to the hash table, use the following statement format.</source>
          <target state="translated">例如，若要添加到哈希表的值为"现在"的"时间"键，使用以下语句格式。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You can also add keys and values to a hash table by using the Add method of the System.Collections.Hashtable object.</source>
          <target state="translated">您可以通过使用 System.Collections.Hashtable 对象的 Add 方法键和值添加到哈希表中。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The Add method has the following syntax:</source>
          <target state="translated">Add 方法具有以下语法︰</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For example, to add a "Time" key with a value of "Now" to the hash table, use the following statement format.</source>
          <target state="translated">例如，若要添加到哈希表的值为"现在"的"时间"键，使用以下语句格式。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>And, you can add keys and values to a hash table by using the addition operator (<ph id="ph1">\+</ph>) to add a hash table to an existing hash table.</source>
          <target state="translated">并且，您可以添加键和值对哈希表使用加法运算符 (<ph id="ph1">\+</ph>) 添加到现有的哈希表的哈希表。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For example, the following statement adds a "Time" key with a value of "Now" to the hash table in the $hash variable.</source>
          <target state="translated">例如，下面的语句将添加到在 $hash 变量的哈希表的值为"现在"的"时间"键。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You can also add values that are stored in variables.</source>
          <target state="translated">此外可以添加存储在变量中的值。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You cannot use a subtraction operator to remove a key<ph id="ph1">\/</ph>value pair from a hash table, but you can use the Remove method of the Hashtable object.</source>
          <target state="translated">您不能使用减法运算符中删除密钥<ph id="ph1">\/</ph>值对哈希表，但您可以使用哈希表对象的删除方法。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The Remove method takes the key as its value.</source>
          <target state="translated">Remove 方法将密钥作为其值。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The Remove method has the following syntax:</source>
          <target state="translated">Remove 方法具有以下语法︰</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For example, to remove the Time<ph id="ph1">\=</ph>Now key<ph id="ph2">\/</ph>value pair from the hash table in the value of the $hash variable, type:</source>
          <target state="translated">例如，若要删除的时间<ph id="ph1">\=</ph>立即键<ph id="ph2">\/</ph>值对的哈希表中值的 $hash 变量，类型︰</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You can use all of the properties and methods of Hashtable objects in Windows PowerShell, including Contains, Clear, Clone, and CopyTo.</source>
          <target state="translated">您可以使用的所有属性和在 Windows PowerShell，包括 Contains、 清除、 克隆和 CopyTo 哈希表对象的方法。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For more information about Hashtable objects, see "System.Collections.Hashtable" on MSDN.</source>
          <target state="translated">有关哈希表对象的详细信息，请参阅 MSDN 上的"System.Collections.Hashtable"。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Object Types in HashTables</source>
          <target state="translated">哈希表中的对象类型</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The keys and values in a hash table can have any .NET object type, and a single hash table can have keys and values of multiple types.</source>
          <target state="translated">键和哈希表中的值可以具有任何.NET 对象类型，并且单个哈希表可以具有密钥和多个类型的值。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The following statement creates a hash table of process name strings and process object values and saves it in the $p variable.</source>
          <target state="translated">下面的语句创建进程名称字符串和进程对象值的哈希表，并将其保存在 $p 变量中。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You can display the hash table in $p and use the key-name properties to display the values.</source>
          <target state="translated">你可以在 $p 中显示哈希表和键名称属性用于显示的值。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The keys in a hash table can also be any .NET type.</source>
          <target state="translated">哈希表中的键也可以是任何.NET 类型。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The following statement adds a key<ph id="ph1">\/</ph>value pair to the hash table in the $p variable.</source>
          <target state="translated">下面的语句将密钥添加<ph id="ph1">\/</ph>值对来 $p 变量中的哈希表。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The key is a Service object that represents the WinRM service, and the value is the current status of the service.</source>
          <target state="translated">键是表示 WinRM 服务的服务对象，则这是该服务的当前状态。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You can display and access the new key<ph id="ph1">\/</ph>value pair by using the same methods that you use for other pairs in the hash table.</source>
          <target state="translated">可以显示和访问新的密钥<ph id="ph1">\/</ph>使用的相同方法，用于哈希表中的其他对值对。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The keys and values in a hash table can also be Hashtable objects.</source>
          <target state="translated">键和哈希表中的值也可以是哈希表对象。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The following statement adds key<ph id="ph1">\/</ph>value pair to the hash table in the $p variable in which the key is a string, Hash2, and the value is a hash table with three key<ph id="ph2">\/</ph>value pairs.</source>
          <target state="translated">下面的语句将密钥添加<ph id="ph1">\/</ph>值到 $p 变量在其中的键是字符串，Hash2，，值为具有三种主要的哈希表中的哈希表对<ph id="ph2">\/</ph>值对。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>You can display and access the new values by using the same methods.</source>
          <target state="translated">可以显示和通过使用相同的方法访问的新值。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Sorting Keys and Values</source>
          <target state="translated">排序键和值</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The items in a hash table are intrinsically unordered.</source>
          <target state="translated">哈希表中的各项是本质上无序的。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The key<ph id="ph1">\/</ph>value pairs might appear in a different order each time that you display them.</source>
          <target state="translated">该密钥<ph id="ph1">\/</ph>值对可能出现在不同的顺序每次显示它们。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Although you cannot sort a hash table, you can use the GetEnumerator method of hash tables to enumerate the keys and values, and then use the Sort-Object cmdlet to sort the enumerated values for display.</source>
          <target state="translated">尽管无法对哈希表进行排序，可以使用哈希表的 GetEnumerator 方法来枚举的键和值，并将 Sort-object cmdlet 显示的枚举的值进行排序。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For example, the following commands enumerate the keys and values in the hash table in the $p variable and then sort the keys in alphabetical order.</source>
          <target state="translated">例如，下面的命令枚举的键和 $p 变量中的哈希表中的值，然后再对按字母顺序的键。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The following command uses the same procedure to sort the hash values in descending order.</source>
          <target state="translated">下面的命令使用相同的过程按降序顺序的哈希值进行排序。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Creating Objects from Hash Tables</source>
          <target state="translated">从哈希表中创建对象</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Beginning in Windows PowerShell 3.0, you can create an object from a hash table of properties and property values.</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，可以从属性和属性值的哈希表创建一个对象。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The syntax is as follows:</source>
          <target state="translated">语法是，如下所示︰</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This method works only for classes that have a null constructor, that is, a constructor that has no parameters.</source>
          <target state="translated">此方法仅适用于具有空构造函数，也就是说，没有参数的构造函数的类。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The object properties must be public and settable.</source>
          <target state="translated">对象属性必须是公共且可设置。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For more information, see about_Object_Creation.</source>
          <target state="translated">有关详细信息，请参阅 about_Object_Creation。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData</source>
          <target state="translated">ConvertFrom-StringData</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The ConvertFrom-StringData cmdlet converts a string or a here-string of key<ph id="ph1">\/</ph>value pairs into a hash table.</source>
          <target state="translated">Convertfrom-stringdata cmdlet 将一个字符串或键的 here-string 转换<ph id="ph1">\/</ph>值对插入哈希表。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can use the ConvertFrom-StringData cmdlet safely in the Data section of a script, and you can use it with the Import-LocalizedData cmdlet to display user messages in the user-interface (UI) culture of the current user.</source>
          <target state="translated">Convertfrom-stringdata cmdlet 使用的脚本的 Data 节中的安全且您可以使用它与 Import-localizeddata cmdlet 显示当前用户的用户界面 (UI) 区域性中的用户消息。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Here-strings are especially useful when the values in the hash table include quotation marks.</source>
          <target state="translated">Here-string 哈希表中的值包括引号在内时特别有用。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>(For more information about here-strings, see about_Quoting_Rules.)</source>
          <target state="translated">（有关 here-string 的详细信息，请参阅 about_Quoting_Rules。）</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a here-string of the user messages in the previous example and how to use ConvertFrom-StringData to convert them from a string into a hash table.</source>
          <target state="translated">下面的示例演示如何创建用户消息 here-string 的形式在前面的示例以及如何使用的 Convertfrom-stringdata 将其从字符串转换为哈希表。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The following command creates a here-string of the key<ph id="ph1">\/</ph>value pairs and then saves it in the $string variable.</source>
          <target state="translated">下面的命令创建密钥的 here-string<ph id="ph1">\/</ph>值对，然后将其保存在 $string 变量中。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This command uses the ConvertFrom-StringData cmdlet to convert the here-string into a hash table.</source>
          <target state="translated">此命令使用 Convertfrom-stringdata cmdlet 将 here-string 转换为哈希表。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>For more information about here-strings, see about_Quoting_Rules.</source>
          <target state="translated">有关 here-string 的详细信息，请参阅 about_Quoting_Rules。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>about_Arrays</source>
          <target state="translated">about_Arrays</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>about_Object_Creation</source>
          <target state="translated">about_Object_Creation</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>about_Quoting_Rules</source>
          <target state="translated">about_Quoting_Rules</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>about_Script_Internationalization</source>
          <target state="translated">about_Script_Internationalization</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData</source>
          <target state="translated">ConvertFrom-StringData</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Import-LocalizedData</source>
          <target state="translated">Import-localizeddata</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>"System.Collections.Hashtable" on MSDN</source>
          <target state="translated">在 MSDN 上的"System.Collections.Hashtable"</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>