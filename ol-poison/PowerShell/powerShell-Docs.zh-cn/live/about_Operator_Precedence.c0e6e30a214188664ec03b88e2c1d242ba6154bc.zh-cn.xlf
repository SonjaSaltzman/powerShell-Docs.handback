<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1279ddd07011124311dd97bd621ab525501691a3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Operator_Precedence.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bfdffbc6a5e96b9db1e0ede0a09eb927ba37be52</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">38499558304974aacfe4a41d2a64e8c60090a4b1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Operator_Precedence</source>
          <target state="translated">about_Operator_Precedence</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Operator Precedence</source>
          <target state="translated">有关运算符的优先级</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Operator_Precedence</source>
          <target state="translated">about_Operator_Precedence</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">TOPIC</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Operator_Precedence</source>
          <target state="translated">about_Operator_Precedence</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">简短说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Lists the Windows PowerShell operators in precedence order.</source>
          <target state="translated">按优先顺序列出 Windows PowerShell 运算符。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>[This topic was contributed by Kirk Munro, a Windows PowerShell MVP from Ottawa, Ontario]</source>
          <target state="translated">[本主题已撰写的 Kirk Munro，安大略省渥太华，从 Windows PowerShell MVP]</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">详细说明</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Windows PowerShell operators let you construct simple, but powerful expressions.</source>
          <target state="translated">Windows PowerShell 运算符，可以构造简单，但功能强大的表达式。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This topic lists the operators in precedence order.</source>
          <target state="translated">本主题列出了优先顺序的运算符。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Precedence order is the order in which Windows PowerShell evaluates the operators when multiple operators appear in the same expression.</source>
          <target state="translated">优先级顺序是当多个运算符出现在同一表达式中时 Windows PowerShell 计算运算符的顺序。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When operators have equal precedence, Windows PowerShell evaluates them from left to right.</source>
          <target state="translated">如果运算符都具有相同的优先级，Windows PowerShell 它们进行评估从左到右。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The exceptions are the assignment operators, the cast operators, and the negation operators (!, -not, -bnot), which are evaluated from right to left.</source>
          <target state="translated">例外情况是赋值运算符、 强制转换运算符和求反运算符 (！、-not、-bnot)，这将从右到左进行计算。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can use enclosures, such as parentheses, to override the standard precedence order and force Windows PowerShell to evaluate the enclosed part of an expression before an unenclosed part.</source>
          <target state="translated">机箱，括号内，如可用于重写的标准的优先顺序和强制 Windows PowerShell 之前未封闭的一部分的表达式括起来的部件进行评估。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In the following list, operators are listed in the order that they are evaluated.</source>
          <target state="translated">在以下列表中，运算符将计算它们的顺序列出。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Operators on the same line, or in the same group, have equal precedence.</source>
          <target state="translated">在同一行或同一组中的运算符具有相同的优先级。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The Operator column lists the operators.</source>
          <target state="translated">运算符列列出的运算符。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The Reference column lists the Windows PowerShell Help topic in which the operator is described.</source>
          <target state="translated">引用列中列出该运算符所述的 Windows PowerShell 帮助的主题。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To display the topic, type "get-help &lt;topic-name&gt;".</source>
          <target state="translated">若要显示的主题，请键入"获取帮助 &lt; 主题名称 &gt;"。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>OPERATOR                         REFERENCE</source>
          <target state="translated">运算符参考</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>$()  @()                         about_Operators</source>
          <target state="translated">$ （) @ （) about_Operators</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>(dereference) :: (static)      about_Operators</source>
          <target state="translated">（取消引用）:: （静态） about_Operators</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>[0] (index operator)             about_Operators</source>
          <target state="translated">[0] （索引运算符） about_Operators</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>[int] (cast operators)           about_Operators</source>
          <target state="translated">[int]（强制转换运算符） about_Operators</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-split (unary) -join (unary)     about_Split, about_Join</source>
          <target state="translated">-拆分 （一元） 的联接 （一元） about_Split、 about_Join</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>, (comma operator)               about_Operators</source>
          <target state="translated">（逗号运算符） about_Operators</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>++ --                            about_Assignment_Operators</source>
          <target state="translated">+ +-about_Assignment_Operators</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-not !</source>
          <target state="translated">-不 ！</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>-bNot                     about_Logical_Operators, about_Comparison_Operators</source>
          <target state="translated">-bNot about_Logical_Operators about_Comparison_Operators</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>..</source>
          <target state="translated">..</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>(range operator)              about_Operators</source>
          <target state="translated">（range 运算符） about_Operators</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-f (format operator)             about_Operators</source>
          <target state="translated">-f （格式运算符） about_Operators</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>/ %                            about_Arithmetic_Operators</source>
          <target state="translated">/ %about_arithmetic_operators</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>about_Arithmetic_Operators</source>
          <target state="translated">about_Arithmetic_Operators</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following group of operators have equal precedence.</source>
          <target state="translated">以下组的运算符具有相同的优先级。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Their case-sensitive and explicitly case-insensitive variants have the same precedence.</source>
          <target state="translated">它们区分大小写和显式不区分大小写的变量具有相同的优先级。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-split (binary)                  about_Split -join (binary)                   about_Join -is  -isnot  -as                 about_Type_Operators -eq  -ne  -gt  -gt  -lt  -le     about_Comparison_Operators -like  -notlike                  about_comparison_operators -match  -notmatch                about_comparison_operators -in -notIn                       about_comparison_operators -contains -notContains           about_comparison_operators -replace                         about_comparison_operators</source>
          <target state="translated">-拆分 （二进制） about_Split-加入 （二进制） about_Join-是-isnot-作为 about_Type_Operators-eq-ne-gt-gt lt-le about_Comparison_Operators-喜欢-notlike about_comparison_operators-匹配-notmatch 将 about_comparison_operators-中-不足 about_comparison_operators-包含-notContains about_comparison_operators-替换 about_comparison_operators</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The list resumes here with the following operators in precedence order:</source>
          <target state="translated">此处继续下列运算符优先顺序列表︰</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-band -bor -bxor                 about_Comparison_Operators</source>
          <target state="translated">-带-bor-bxor about_Comparison_Operators</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-and -or -xor                    about_Comparison_Operators</source>
          <target state="translated">-和-或-xor about_Comparison_Operators</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>(dot-source)  &amp; (call)         about_Scopes, about_Operators</source>
          <target state="translated">（圆点源） （&amp; a) （调用） about_Scopes，about_Operators</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>| (pipeline operator)            about_Operators</source>
          <target state="translated">|（管道运算符） about_Operators</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>2&gt;  2&gt;&gt;  2&gt;&amp;1             about_Redirection</source>
          <target state="translated">2 &gt; 2 &gt;&gt; 2 &gt; &amp; 1 about_Redirection</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>=  +=  -=  *=  /= %=             about_Assignment_Operators</source>
          <target state="translated">= + =-= * = / = %= about_Assignment_Operators</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following two commands show the arithmetic operators and the effect of using parentheses to force Windows PowerShell to evaluate the enclosed part of the expression first.</source>
          <target state="translated">下面的两个命令演示算术运算符以及使用括号来强制 Windows PowerShell 的效果，以首先计算括起来的表达式的一部分。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; 2 + 3 * 4</source>
          <target state="translated">C:\PS &gt; 2 + 3 * 4</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>14</source>
          <target state="translated">14</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; (2 + 3) * 4</source>
          <target state="translated">C:\PS &gt; (2 + 3) * 4</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>20</source>
          <target state="translated">20</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following example gets the read-only text files from the local directory and saves them in the $read_only variable.</source>
          <target state="translated">以下示例从本地目录中获取只读文本文件，并将它们保存在 read_only 变量中。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>$read_only = get-childitem *.txt | where-object {$_.isReadOnly}</source>
          <target state="translated">read_only = 的 get-childitem *.txt |where-object {$_.isReadOnly}</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>It is equivalent to the following example.</source>
          <target state="translated">它等效于下面的示例。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>$read_only = ( get-childitem *.txt | where-object {$_.isReadOnly} )</source>
          <target state="translated">read_only = (的 get-childitem *.txt | where-object {$_.isReadOnly})</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Because the pipeline operator (|) has a higher precedence than the assignment operator (=), the files that the Get-ChildItem cmdlet gets are sent to the Where-Object cmdlet for filtering before they are assigned to the $read_only variable.</source>
          <target state="translated">管道运算符 (|) 的优先级高于赋值运算符 （=），因为该 Get-childitem cmdlet 将获取文件发送到 Where-object cmdlet 会为它们分配给 read_only 变量前先筛选。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The following example demonstrates that the index operator takes precedence over the cast operator.</source>
          <target state="translated">下面的示例演示︰ 索引运算符的优先级高于强制转换运算符。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The first expression creates an array of three strings.</source>
          <target state="translated">第一个表达式创建三个字符串的数组。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Then, it uses the index operator with a value of 0 to select the first object in the array, which is the first string.</source>
          <target state="translated">然后，它使用索引运算符值为 0 若要选择的第一个对象数组，它是第一个字符串中。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Finally, it casts the selected object as a string.</source>
          <target state="translated">最后，它将所选的对象转换为字符串。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In this case, the cast has no effect.</source>
          <target state="translated">在这种情况下，强制转换不起。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; [string]@('Windows','PowerShell','2.0')[0] Windows</source>
          <target state="translated">C:\PS &gt; [string]@('Windows','PowerShell','2.0') [0] 窗口</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The second expression uses parentheses to force the cast operation to occur before the index selection.</source>
          <target state="translated">第二个表达式使用括号来强制转换运算发生后才索引选择。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>As a result, the entire array is cast as a (single) string.</source>
          <target state="translated">因此，整个数组将转换为 string （单个）。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Then, the index operator selects the first item in the string array, which is the first character.</source>
          <target state="translated">然后，索引运算符的字符串数组，它是第一个字符中选择的第一项。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; ([string]@('Windows','PowerShell','2.0'))[0]</source>
          <target state="translated">C:\PS &gt; ([string]@('Windows','PowerShell','2.0')) [0]</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>W</source>
          <target state="translated">W</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>In the following example, because the -gt (greater-than) operator has a higher precedence than the -and (logical AND) operator, the result of the expression is FALSE.</source>
          <target state="translated">在下面的示例中，因为-gt (更高的比) 运算符的优先级高于-和 （逻辑与） 运算符，该表达式的结果为 FALSE。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; 2 -gt 4 -and 1 False</source>
          <target state="translated">C:\PS &gt; 2-gt 4-和 1 False</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>It is equivalent to the following expression.</source>
          <target state="translated">它等效于下面的表达式。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; (2 -gt 4) -and 1 False</source>
          <target state="translated">C:\PS &gt; (2-gt 4)-1 false</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If the -and operator had higher precedence, the answer would be TRUE.</source>
          <target state="translated">如果-和运算符优先级较高，答案就是 TRUE。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>C:\PS&gt; 2 -gt (4 -and 1) True</source>
          <target state="translated">C:\PS &gt; 2-gt （4-和 1） True</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>However, this example demonstrates an important principle of managing operator precedence.</source>
          <target state="translated">但是，此示例演示管理运算符优先级的一个重要原则。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When an expression is difficult for people to interpret, use parentheses to force the evaluation order, even when it forces the default operator precedence.</source>
          <target state="translated">解释人难以表达式时，使用括号来强制执行的计算顺序，即使它会强制默认的运算符优先级。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The parentheses make your intentions clear to people who are reading and maintaining your scripts.</source>
          <target state="translated">括号方便您的意图清除了用户读取和维护您的脚本。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>about_Assignment_Operators about_Comparison_Operators about_Join about_Logical_Operators about_Operators about_Redirection about_Scopes about_Split about_Type_Operators</source>
          <target state="translated">about_Assignment_Operators about_Comparison_Operators about_Join about_Logical_Operators about_Operators about_Redirection about_Scopes about_Split about_Type_Operators</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>