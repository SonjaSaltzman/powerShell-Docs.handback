<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">97a798a059b2b47ddb5962a44fd63fa8861c3f10</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\5.0\Microsoft.PowerShell.Core\About\about_Preference_Variables.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7bf1bc756437879d16c15eb18d20e6d3b2171d87</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c1444f805dcb7dd038ddb0f6eaaadbf1defaf60f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Preference_Variables</source>
          <target state="translated">about_Preference_Variables</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Preference Variables</source>
          <target state="translated">有关首选项变量</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_preference_variables</source>
          <target state="translated">about_preference_variables</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">简短说明</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Variables that customize the behavior of Windows PowerShell</source>
          <target state="translated">自定义 Windows PowerShell 的行为的变量</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">详细说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Windows PowerShell includes a set of variables that enable you to customize its behavior.</source>
          <target state="translated">Windows PowerShell 包括一组使您能够自定义其行为的变量。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>These "preference variables" work like the options in GUI-based systems.</source>
          <target state="translated">这些"首选项变量"工作方式类似选项基于 GUI 的系统中。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The preference variables affect the Windows PowerShell operating environment and all commands run in the environment.</source>
          <target state="translated">首选项变量会影响 Windows PowerShell 操作环境，在环境中运行所有命令。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In many cases, the cmdlets have parameters that you can use to override the preference behavior for a specific command.</source>
          <target state="translated">在许多情况下，这些 cmdlet 具有可用于重写特定命令的首选项行为的参数。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following table lists the preference variables and their default values.</source>
          <target state="translated">下表列出的首选项变量和它们的默认值。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Variable                             Default Value</source>
          <target state="translated">变量的默认值</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>$ConfirmPreference                   High $DebugPreference                     SilentlyContinue $ErrorActionPreference               Continue $ErrorView                           NormalView $FormatEnumerationLimit              4 $InformationPreference               SilentlyContinue $LogCommandHealthEvent               False (not logged) $LogCommandLifecycleEvent            False (not logged) $LogEngineHealthEvent                True (logged) $LogEngineLifecycleEvent             True (logged) $LogProviderLifecycleEvent           True (logged) $LogProviderHealthEvent              True (logged) $MaximumAliasCount                   4096 $MaximumDriveCount                   4096 $MaximumErrorCount                   256 $MaximumFunctionCount                4096 $MaximumHistoryCount                 4096 $MaximumVariableCount                4096 $OFS                                 (Space character (" ")) $OutputEncoding                      ASCIIEncoding object $ProgressPreference                  Continue $PSDefaultParameterValues            (None - empty hash table) $PSEmailServer                       (None) $PSModuleAutoLoadingPreference       All $PSSessionApplicationName            WSMAN $PSSessionConfigurationName          http://schemas.microsoft.com/PowerShell/microsoft.PowerShell $PSSessionOption                     (See below) $VerbosePreference                   SilentlyContinue $WarningPreference                   Continue $WhatIfPreference                    0</source>
          <target state="translated">$ConfirmPreference 高 $DebugPreference SilentlyContinue $ErrorActionPreference 继续 $ErrorView NormalView $FormatEnumerationLimit 4 $InformationPreference SilentlyContinue $LogCommandHealthEvent False （未记录） $LogCommandLifecycleEvent False （未记录） $LogEngineHealthEvent True （记录） $LogEngineLifecycleEvent True （记录） $LogProviderLifecycleEvent，则返回 True （记录） $LogProviderHealthEvent True （记录） $MaximumAliasCount 4096 $MaximumDriveCount 4096 $MaximumErrorCount 256 $MaximumFunctionCount 4096 $MaximumHistoryCount 4096 $MaximumVariableCount 4096 $OFS (空格字符 ("")) $OutputEncoding ASCIIEncoding 对象 $ProgressPreference                 继续 $PSDefaultParameterValues （无-空哈希表） $PSEmailServer （无） $PSModuleAutoLoadingPreference 所有 $PSSessionApplicationName WSMAN $PSSessionConfigurationName http://schemas.microsoft.com/PowerShell/microsoft.PowerShell $PSSessionOption （见下文） $VerbosePreference SilentlyContinue $WarningPreference 继续 $WhatIfPreference 0</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Windows PowerShell also includes the following environment variables that store user preferences.</source>
          <target state="translated">Windows PowerShell 还包括以下存储用户首选项的环境变量。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information about these environment variables, see about_Environment_Variables.</source>
          <target state="translated">有关这些环境变量的详细信息，请参阅 about_Environment_Variables。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">变量</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>PSExecutionPolicyPreference PSModulePath</source>
          <target state="translated">PSExecutionPolicyPreference PSModulePath</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>WORKING WITH PREFERENCE VARIABLES</source>
          <target state="translated">使用首选项变量</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This document describes each of the preference variables.</source>
          <target state="translated">本文档介绍每个首选项变量。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To display the current value of a specific preference variable, type the name of the variable.</source>
          <target state="translated">若要显示特定的首选项变量的当前值，请键入变量的名称。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In response, Windows PowerShell provides the value.</source>
          <target state="translated">在响应中，Windows PowerShell 提供的值。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, the following command displays the value of the $ConfirmPreference variable.</source>
          <target state="translated">例如，下面的命令显示 $ConfirmPreference 变量的值。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>PS&gt; $ConfirmPreference High</source>
          <target state="translated">PS &gt; $ConfirmPreference 高</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To change the value of a variable, use an assignment statement.</source>
          <target state="translated">若要更改变量的值，请使用赋值语句。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, the following statement assigns the value "Medium" to the $ConfirmPreference variable.</source>
          <target state="translated">例如，下面的语句会将"Medium"的值分配给 $ConfirmPreference 变量中。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>PS&gt; $ConfirmPreference = "Medium"</source>
          <target state="translated">PS &gt; $ConfirmPreference ="Medium"</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Like all variables, the values that you set are specific to the current Windows PowerShell session.</source>
          <target state="translated">像所有变量，您设置的值是特定于当前的 Windows PowerShell 会话。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To make them effective in all Windows PowerShell session, add them to your Windows PowerShell profile.</source>
          <target state="translated">要使它们在所有 Windows PowerShell 会话中有效，请将它们添加到 Windows PowerShell 配置文件中。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see about_Profiles.</source>
          <target state="translated">有关详细信息，请参阅 about_Profiles。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>WORKING REMOTELY</source>
          <target state="translated">在远程工作</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When you run commands on a remote computer, the remote commands are subject only to the preferences set in the Windows PowerShell client on the remote computer.</source>
          <target state="translated">当在远程计算机上运行命令时，则远程命令将仅受限于在 Windows PowerShell 客户端中的远程计算机上设置的首选项。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For example, when you run a remote command, the value of the $DebugPreference variable on remote computer determines how Windows PowerShell responds to debugging messages.</source>
          <target state="translated">例如，当运行远程命令，在远程计算机上 $DebugPreference 变量的值确定 Windows PowerShell 对调试消息的响应方式。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information about remote commands, see about_remote.</source>
          <target state="translated">有关远程命令的详细信息，请参阅 about_remote。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>$ConfirmPreference Determines whether Windows PowerShell automatically prompts you for confirmation before running a cmdlet or function.</source>
          <target state="translated">$ConfirmPreference 确定是否 Windows PowerShell 自动提示您输入确认，然后再运行 cmdlet 或函数。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When the value of the $ConfirmPreference variable (High, Medium, Low) is less than or equal to the risk assigned to the cmdlet or function (High, Medium, Low), Windows PowerShell automatically prompts you for confirmation before running the cmdlet or function.</source>
          <target state="translated">当 $ConfirmPreference 变量 （高、 中、 低） 的值小于或等于分配给该 cmdlet 或函数 （高、 中、 低） 的风险时，Windows PowerShell 自动提示您确认之前运行的 cmdlet 或函数。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the value of the $ConfirmPreference variable is None, Windows PowerShell never automatically prompts you before running a cmdlet or function.</source>
          <target state="translated">如果 $ConfirmPreference 变量的值是 None，Windows PowerShell 永远不会自动提示您在运行 cmdlet 或函数之前。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To change the confirming behavior for all cmdlets and functions in the session, change the value of the $ConfirmPreference variable.</source>
          <target state="translated">若要在会话中更改所有 cmdlet 和函数的确认行为，请更改 $ConfirmPreference 变量的值。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To override the $ConfirmPreference for a single command, use the Confirm parameter of the cmdlet or function.</source>
          <target state="translated">若要重写为单个命令 $ConfirmPreference，请使用 Confirm 参数的 cmdlet 或函数。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To request confirmation, use -Confirm.</source>
          <target state="translated">若要请求确认，请使用-确认。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To suppress confirmation, use -Confirm:$false</source>
          <target state="translated">若要禁止显示确认，请使用-确认︰ $false</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Valid values of $ConfirmPreference:</source>
          <target state="translated">有效值为 $ConfirmPreference:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>None:    Windows PowerShell does not prompt automatically.</source>
          <target state="translated">None: Windows PowerShell 不会提示自动。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To request confirmation of a particular command, use the Confirm parameter of the cmdlet or function.</source>
          <target state="translated">若要请求的特定命令确认，请使用 Confirm 参数的 cmdlet 或函数。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Low:     Windows PowerShell prompts for confirmation before running cmdlets or functions with a low, medium, or high risk.</source>
          <target state="translated">低︰ Windows PowerShell 提示进行确认，然后再使用低、 中或高风险运行 cmdlet 或函数。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Medium:  Windows PowerShell prompts for confirmation before running cmdlets or functions with a medium, or high risk.</source>
          <target state="translated">中等︰ Windows PowerShell 提示进行确认，然后再运行 cmdlet 或函数中或高风险。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>High:    Windows PowerShell prompts for confirmation before running cmdlets or functions with a high risk.</source>
          <target state="translated">高︰ Windows PowerShell 提示进行确认，然后再运行 cmdlet 或函数的高风险。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>DETAILED EXPLANATION</source>
          <target state="translated">详细的说明</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When the actions of a cmdlet or function significantly affect the system, such as those that delete data or use a significant amount of system resources, Windows PowerShell can automatically prompt you for confirmation before performing the action.</source>
          <target state="translated">Cmdlet 或函数的操作显著影响系统中，如那些删除的数据或使用大量的系统资源时 Windows PowerShell 可以自动提示您确认在执行操作之前。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">例如，</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item file.txt</source>
          <target state="translated">PS &gt; 删除项 file.txt</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Confirm Are you sure you want to perform this action?</source>
          <target state="translated">确认是否确实要执行此操作？</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Performing operation "Remove File" on Target "C:\file.txt".</source>
          <target state="translated">执行操作目标"C:\file.txt"上的"删除文件"。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] 是 [A] 是为所有 [N] 否为所有 [S] 没有 [L] 挂起 [？]（默认值为"Y"） 的帮助︰</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The estimate of the risk is an attribute of the cmdlet or function known as its "ConfirmImpact".</source>
          <target state="translated">风险评估是 cmdlet 或函数称为其"ConfirmImpact"的属性。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Users cannot change it.</source>
          <target state="translated">用户无法更改它。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Cmdlets and functions that might pose a risk to the system have a Confirm parameter that you can use to request or suppress confirmation for a single command.</source>
          <target state="translated">Cmdlet 和函数可能会威胁到系统具有 Confirm 参数可用于请求或显示为单个命令的确认。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Because most cmdlets and functions use the default risk value (ConfirmImpact) of Medium, and the default value of $ConfirmPreference is High, automatic confirmation rarely occurs.</source>
          <target state="translated">由于大多数 cmdlet 和函数使用默认风险值 (ConfirmImpact) 的介质，并且 $ConfirmPreference 的默认值为高、 自动确认很少发生。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>However, you can activate automatic confirmation by changing the value of $ConfirmPreference to Medium or Low.</source>
          <target state="translated">但是，您可以通过 $ConfirmPreference 将值更改为中等或低激活自动确认。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the default value of $ConfirmPreference.</source>
          <target state="translated">此示例演示 $ConfirmPreference 的默认值的效果。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The High value only confirms high-risk cmdlets and functions.</source>
          <target state="translated">最高值只有确认高风险的 cmdlet 和函数。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Since most cmdlets and functions are medium risk, they are not automatically confirmed.</source>
          <target state="translated">大多数 cmdlet 和函数都是中等风险，因为它们不会自动确认。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>PS&gt; $confirmpreference              #Get the current value of the High                                 variable</source>
          <target state="translated">PS &gt; $confirmpreference #Get 高变量的当前值</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item temp1.txt           #Delete a file PS&gt;                                 #Deleted without confirmation</source>
          <target state="translated">PS &gt; 的 remove-item temp1.txt #Delete 文件 PS &gt; #Deleted 而无需确认</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item temp2.txt -confirm  #Use the Confirm parameter to request confirmation</source>
          <target state="translated">PS &gt; 的 remove-item temp2.txt-确认 #Use Confirm 参数到请求确认</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Confirm Are you sure you want to perform this action?</source>
          <target state="translated">确认是否确实要执行此操作？</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Performing operation "Remove File" on Target "C:\temp2.txt".</source>
          <target state="translated">执行操作目标"C:\temp2.txt"上的"删除文件"。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] 是 [A] 是为所有 [N] 否为所有 [S] 没有 [L] 挂起 [？]（默认值为"Y"） 的帮助︰</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The following example shows the effect of changing the value of $ConfirmPreference to Medium.</source>
          <target state="translated">下面的示例演示 $ConfirmPreference 将值更改为中等的效果。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Because most cmdlets and function are medium-risk, they are automatically confirmed.</source>
          <target state="translated">大多数 cmdlet 和函数都是中等风险，因为它们自动确认。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To suppress the confirmation prompt for a single command, use the Confirm parameter with a value of $false</source>
          <target state="translated">若要禁止显示单个命令的确认提示，请使用 Confirm 参数值为 $false</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>PS&gt; $confirmpreference = "Medium"  #Change the value of $ConfirmPreference PS&gt; remove-item temp2.txt          #Deleting a file triggers confirmation</source>
          <target state="translated">PS &gt; $confirmpreference ="Medium"#Change $ConfirmPreference PS 的值 &gt; 的 remove-item temp2.txt #Deleting 文件触发确认</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Confirm Are you sure you want to perform this action?</source>
          <target state="translated">确认是否确实要执行此操作？</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Performing operation "Remove File" on Target "C:\temp2.txt".</source>
          <target state="translated">执行操作目标"C:\temp2.txt"上的"删除文件"。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] 是 [A] 是为所有 [N] 否为所有 [S] 没有 [L] 挂起 [？]（默认值为"Y"） 的帮助︰</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item temp3.txt -confirm:$false   #Use Confirm parameter to suppress confirmation PS&gt;</source>
          <target state="translated">PS &gt; 的 remove-item temp3.txt-确认︰ $false #Use 确认参数来禁止显示确认 PS &gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>$DebugPreference Determines how Windows PowerShell responds to debugging messages generated by a script, cmdlet or provider, or by a Write-Debug command at the command line.</source>
          <target state="translated">$DebugPreference 确定 Windows PowerShell 与调试生成的脚本、 cmdlet 或提供程序，或在命令行的 Write-debug 命令消息的响应方式。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Some cmdlets display debugging messages, which are typically very technical messages designed for programmers and technical support professionals.</source>
          <target state="translated">某些 cmdlet 显示调试消息，通常是为编程人员和技术支持专业人员而设计的技术性很强的消息。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>By default, debugging messages are not displayed, but you can display debugging messages by changing the value of $DebugPreference.</source>
          <target state="translated">默认情况下不会显示调试消息，但可以通过更改 $DebugPreference 的值来显示调试消息。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>You can also use the Debug common parameter of a cmdlet to display or hide the debugging messages for a specific command.</source>
          <target state="translated">您可以使用 Debug 通用参数的 cmdlet 来显示或隐藏某一特定命令的调试消息。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For more information, type: "get-help about_commonparameters".</source>
          <target state="translated">详细信息，请键入:"-get-help about_commonparameters"。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Displays the debug message and stops executing.</source>
          <target state="translated">有效值︰ 停止︰ 显示调试消息并停止执行。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Writes an error to the console.</source>
          <target state="translated">将错误写入控制台。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Inquire:            Displays the debug message and asks you whether you want to continue.</source>
          <target state="translated">查询︰ 显示调试消息并询问您是否想要继续。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Note that adding the Debug common parameter to a command--when the command is configured to generate a debugging message--changes the value of the $DebugPreference variable to Inquire.</source>
          <target state="translated">请注意，添加调试到命令-通用参数时该命令被配置为生成调试的消息--到 Inquire 更改 $DebugPreference 变量的值。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the debug message and continues with execution.</source>
          <target state="translated">继续︰ 显示调试消息并继续执行。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   No effect.</source>
          <target state="translated">SilentlyContinue︰ 不起作用。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The debug message is not (Default)           displayed and execution continues without interruption.</source>
          <target state="translated">（默认值） 显示并无中断地继续执行，不是调试消息。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The following examples show the effect of changing the values of $DebugPreference when a Write-Debug command is entered at the command line.</source>
          <target state="translated">以下示例显示在命令行输入 Write-debug 命令更改 $DebugPreference 的值的效果。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The change affects all debugging messages, including those generated by cmdlets and scripts.</source>
          <target state="translated">此更改影响所有调试消息，其中包含生成的 cmdlet 和脚本。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The examples also show the use of the Debug common parameter, which displays or hides the debugging messages related to a single command.</source>
          <target state="translated">示例还显示使用 Debug 通用参数，其中显示或隐藏与单个命令相关的调试消息。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the default value, "SilentlyContinue."</source>
          <target state="translated">此示例演示的效果的默认值为"SilentlyContinue。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The debug message is not displayed and processing continues.</source>
          <target state="translated">不会显示调试消息，然后继续进行处理。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The final command uses the Debug parameter to override the preference for a single command.</source>
          <target state="translated">最后一个命令使用 Debug 参数来覆盖单个命令的首选项。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>PS&gt; $debugpreference                    # Get the current value of SilentlyContinue                          $DebugPreference</source>
          <target state="translated">PS &gt; $debugpreference # 获取 SilentlyContinue $DebugPreference 的当前值</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" PS&gt;                                     # The debug message is not displayed.</source>
          <target state="translated">PS &gt; 写入调试"Hello，World"PS &gt; # 不会显示调试消息。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" -Debug   # Use the Debug parameter DEBUG: Hello, World                     # The debug message is displayed and confirmation is requested.</source>
          <target state="translated">PS &gt; 写入调试"Hello，World"的调试 # 使用 Debug 参数调试︰ Hello，World 显示 # 调试消息并请求确认。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Confirm Continue with this operation?</source>
          <target state="translated">与此操作确定继续？</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] 是 [A] 是为所有 [H] Halt 命令 [S] 挂起 [？]（默认值为"Y"） 的帮助︰</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the "Continue" value.</source>
          <target state="translated">此示例演示"Continue"值的效果。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The final command uses the Debug parameter with a value of $false to suppress the message for a single command.</source>
          <target state="translated">最后一个命令使用值为 $false Debug 参数来取消单个命令消息。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>PS&gt; $debugpreference = "Continue"   # Change the value to "Continue"</source>
          <target state="translated">PS &gt; $debugpreference ="Continue"# 的值更改为"继续"</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" DEBUG: Hello, World                 # The debug message is displayed PS&gt;                                   and processing continues.</source>
          <target state="translated">PS &gt; 写入调试"Hello，World"调试︰ Hello，World # 调试消息是显示 PS &gt; 然后继续进行处理。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" -Debug:$false Use the Debug parameter with false.</source>
          <target state="translated">PS &gt; 写入调试"Hello，World"的调试︰ $false 为 false，则使用 Debug 参数。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>PS&gt;                                 # The debug message is not displayed.</source>
          <target state="translated">PS &gt; # 不会显示调试消息。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the "Stop" value.</source>
          <target state="translated">此示例演示了"停止"值的效果。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The final command uses the Debug parameter with a value of $false to suppress the message for a single command.</source>
          <target state="translated">最后一个命令使用值为 $false Debug 参数来取消单个命令消息。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>PS&gt; $debugpreference = "Stop"       #Change the value to "Stop" PS&gt; write-debug "Hello, World" DEBUG: Hello, World Write-Debug : Command execution stopped because the shell variable "DebugPreference" is set to Stop.</source>
          <target state="translated">PS &gt; $debugpreference ="Stop"#Change 值为"Stop"PS &gt; 写入调试"Hello，World"调试︰ Hello，World Write-debug︰ 命令执行已停止，因为 shell 变量"DebugPreference"设置为 Stop。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>At line:1 char:12</source>
          <target state="translated">在行︰ 1 char: 12</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>write-debug  &lt;&lt;&lt;&lt; "Hello, World"</source>
          <target state="translated">写入调试 &lt;&lt;&lt;&lt;"Hello，World"</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" -Debug:$false Use the Debug parameter with $false PS&gt;                                 # The debug message is not displayed and processing is not stopped.</source>
          <target state="translated">PS &gt; 写入调试"Hello，World"的调试︰ $false 使用 Debug 参数 $false PS &gt; # 调试消息不会显示和处理就不会停止。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the "Inquire" value.</source>
          <target state="translated">此示例演示"Inquire"值的效果。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The final command uses the Debug parameter with a value of $false to suppress the message for a single command.</source>
          <target state="translated">最后一个命令使用值为 $false Debug 参数来取消单个命令消息。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>PS&gt; $debugpreference = "Inquire" PS&gt; write-debug "Hello, World" DEBUG: Hello, World</source>
          <target state="translated">PS &gt; $debugpreference ="Inquire"PS &gt; 写入调试"Hello，World"调试︰ Hello，World</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Confirm Continue with this operation?</source>
          <target state="translated">与此操作确定继续？</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] 是 [A] 是为所有 [H] Halt 命令 [S] 挂起 [？]（默认值为"Y"） 的帮助︰</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>PS&gt; write-debug "Hello, World" -Debug:$false Use the Debug parameter with $false PS&gt;                                 # The debug message is not displayed and processing continues without interruption.</source>
          <target state="translated">PS &gt; 写入调试"Hello，World"的调试︰ $false 使用 Debug 参数 $false PS &gt; # 调试消息并不显示，而不会中断继续进行处理。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>$ErrorActionPreference Determines how Windows PowerShell responds to a non-terminating error (an error that does not stop the cmdlet processing) at the command line or in a script, cmdlet, or provider, such as the errors generated by the Write-Error cmdlet.</source>
          <target state="translated">$ErrorActionPreference 确定 Windows PowerShell 如何响应非终止错误 （错误不会停止了 cmdlet 处理） 在命令行或在脚本、 cmdlet 或提供程序，如写入错误 cmdlet 生成的错误。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You can also use the ErrorAction common parameter of a cmdlet to override the preference for a specific command.</source>
          <target state="translated">您可以使用 cmdlet 的 ErrorAction 通用参数来覆盖特定命令的首选项。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Displays the error message and stops executing.</source>
          <target state="translated">有效值︰ 停止︰ 显示错误消息并停止执行。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Inquire:            Displays the error message and asks you whether you want to continue.</source>
          <target state="translated">查询︰ 显示的错误消息，询问是否要继续。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the error message and continues (Default)           executing.</source>
          <target state="translated">继续︰ 显示的错误消息并继续 （默认值） 执行。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Suspend:            Automatically suspends a workflow job to allow for further investigation.</source>
          <target state="translated">挂起︰ 自动挂起工作流作业，以允许进一步的调查。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>After investigation, the workflow can be resumed.</source>
          <target state="translated">在调查之后, 可以继续工作流。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   No effect.</source>
          <target state="translated">SilentlyContinue︰ 不起作用。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The error message is not displayed and execution continues without interruption.</source>
          <target state="translated">不显示错误消息，并且执行将继续而不会中断。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>NOTE: The Ignore value of the ErrorAction common parameter is not a valid value of the $ErrorActionPreference variable.</source>
          <target state="translated">注意︰ Ignore ErrorAction 通用参数的值不是 $ErrorActionPreference 变量的一个有效值。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The Ignore value is intended for per-command use, not for use as saved preference.</source>
          <target state="translated">Ignore 值适用于每个命令使用，不适用于为已保存首选项的使用。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Neither $ErrorActionPreference nor the ErrorAction common parameter affect how Windows PowerShell responds to terminating errors (those that stop cmdlet processing).</source>
          <target state="translated">$ErrorActionPreference 和 ErrorAction 通用参数都不会影响 Windows PowerShell 如何响应终止错误 （那些停止 cmdlet 处理）。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>For more information about the ErrorAction common parameter, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</source>
          <target state="translated">有关 ErrorAction 通用参数的详细信息，请参阅 about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216)。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>These examples show the effect of the different values of $ErrorActionPreference and the use of the ErrorAction common parameter to override the preference for a single command.</source>
          <target state="translated">这些示例显示 $ErrorActionPreference 的不同值和使用情况的 ErrorAction 通用参数来重写单个命令的首选项的效果。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The ErrorAction parameter has the same valid values as the $ErrorActionPreference variable.</source>
          <target state="translated">ErrorAction 参数具有相同的有效 $ErrorActionPreference 变量值。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Continue value, which is the default.</source>
          <target state="translated">此示例演示继续值，该值是默认值的效果。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>PS&gt; $erroractionpreference Continue# Display the value of the preference.</source>
          <target state="translated">PS &gt; $erroractionpreference 继续 # 显示首选项的值。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>PS&gt; write-error "Hello, World" Generate a non-terminating error.</source>
          <target state="translated">PS &gt; 写入错误"Hello，World"生成一个非终止错误。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>write-error "Hello, World" : Hello, World The error message is displayed and execution continues.</source>
          <target state="translated">写入错误"Hello，World": Hello，World 错误消息将显示并继续执行。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>PS&gt; write-error "Hello, World" -ErrorAction:SilentlyContinue Use the ErrorAction parameter with a value of "SilentlyContinue".</source>
          <target state="translated">PS &gt; 写入错误"Hello，World"-ErrorAction: SilentlyContinue 的 ErrorAction 参数使用值为"SilentlyContinue"。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>PS&gt; The error message is not displayed and execution continues.</source>
          <target state="translated">PS &gt; 将不显示错误消息并继续执行。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the SilentlyContinue value.</source>
          <target state="translated">此示例演示 SilentlyContinue 值的效果。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorActionPreference = "SilentlyContinue" Change the value of the preference.</source>
          <target state="translated">PS &gt; $ErrorActionPreference ="SilentlyContinue"更改首选项的值。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>PS&gt; write-error "Hello, World" Generate an error message.</source>
          <target state="translated">PS &gt; 写入错误"Hello，World"生成一条错误消息。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>PS&gt; Error message is suppressed.</source>
          <target state="translated">PS &gt; 将不会显示错误消息。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>PS&gt; write-error "Hello, World" -erroraction:continue Use the ErrorAction parameter with a value of "Continue".</source>
          <target state="translated">PS &gt; 写入错误"Hello，World"erroraction︰ 继续使用 ErrorAction 参数，其"Continue"的值。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>write-error "Hello, World" -erroraction:continue : Hello, World The error message is displayed and execution continues.</source>
          <target state="translated">写入错误"Hello，World"erroraction︰ 继续︰ Hello，World 错误消息将显示并继续执行。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This example shows the effect of a real error.</source>
          <target state="translated">此示例演示了真正的错误的影响。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>In this case, the command gets a non-existent file, nofile.txt.</source>
          <target state="translated">在这种情况下，命令获取不存在文件，nofile.txt。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The example also uses the ErrorAction common parameter to override the preference.</source>
          <target state="translated">该示例还使用 ErrorAction 通用参数来重写首选项。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>PS&gt; $erroractionpreference SilentlyContinue        # Display the value of the preference.</source>
          <target state="translated">PS &gt; $erroractionpreference SilentlyContinue # 显示首选项的值。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem -path nofile.txt PS&gt;                     # Error message is suppressed.</source>
          <target state="translated">PS &gt; 的 get-childitem-路径 nofile.txt PS &gt; # 错误消息将不会显示。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorActionPreference = "Continue" Change the value to Continue.</source>
          <target state="translated">PS &gt; $ErrorActionPreference ="继续"更改为 Continue 的值。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem -path nofile.txt Get-ChildItem : Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">PS &gt; 的 get-childitem-路径 nofile.txt Get-childitem︰ 找不到路径 C:\nofile.txt'，因为它不存在。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>At line:1 char:4</source>
          <target state="translated">在行︰ 1 char: 4</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>get-childitem  &lt;&lt;&lt;&lt; nofile.txt</source>
          <target state="translated">get-childitem &lt;&lt;&lt;&lt; nofile.txt</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem -path nofile.txt -erroraction SilentlyContinue Use the ErrorAction parameter PS&gt; Error message is suppressed.</source>
          <target state="translated">PS &gt; 的 get-childitem-路径 nofile.txt-erroraction SilentlyContinue 使用 ErrorAction 参数 PS &gt; 将不会显示错误消息。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorActionPreference = "Inquire" Change the value to Inquire.</source>
          <target state="translated">PS &gt; $ErrorActionPreference ="Inquire"更改为 Inquire 的值。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem -path nofile.txt</source>
          <target state="translated">PS &gt; 的 get-childitem-路径 nofile.txt</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Confirm Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">确认找不到路径 C:\nofile.txt'，因为它不存在。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"): y</source>
          <target state="translated">[Y] 是 [A] 是为所有 [H] Halt 命令 [S] 挂起 [？]（默认值为"Y"） 的帮助︰ y</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Get-ChildItem : Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">Get-childitem︰ 找不到路径 C:\nofile.txt'，因为它不存在。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>At line:1 char:4</source>
          <target state="translated">在行︰ 1 char: 4</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>get-childitem  &lt;&lt;&lt;&lt; nofile.txt</source>
          <target state="translated">get-childitem &lt;&lt;&lt;&lt; nofile.txt</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorActionPreference = "Continue" Change the value to Continue.</source>
          <target state="translated">PS &gt; $ErrorActionPreference ="继续"更改为 Continue 的值。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>PS&gt; Get-Childitem nofile.txt -erroraction "Inquire" Use the ErrorAction parameter to override the preference value.</source>
          <target state="translated">PS &gt; Get-childitem nofile.txt-erroraction"Inquire"使用 ErrorAction 参数来覆盖该首选项值。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Confirm Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">确认找不到路径 C:\nofile.txt'，因为它不存在。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"):</source>
          <target state="translated">[Y] 是 [A] 是为所有 [H] Halt 命令 [S] 挂起 [？]（默认值为"Y"） 的帮助︰</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>$ErrorView Determines the display format of error messages in Windows PowerShell.</source>
          <target state="translated">$ErrorView，确定 Windows PowerShell 中的错误消息的显示格式。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Valid values: NormalView:         A detailed view designed for most users.</source>
          <target state="translated">有效值︰ NormalView︰ 大多数用户设计的详细的视图。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>(default)           Consists of a description of the error, the name of the object involved in the error, and arrows (&lt;&lt;&lt;&lt;) that point to the words in the command that caused the error.</source>
          <target state="translated">（默认值）          包含描述的错误，错误和箭头中涉及的对象的名称 (&lt;&lt;&lt;&lt;) 以指向导致了错误的命令中的单词。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>CategoryView:       A succinct, structured view designed for production environments.</source>
          <target state="translated">CategoryView︰ 一个简洁、 结构化视图，为生产环境而设计。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The format is: {Category}: ({TargetName}:{TargetType}):[{Activity}], {Reason}</source>
          <target state="translated">格式是: {Category}: ({TargetName}: {TargetType}): {活动} {Reason}</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>For more information about the fields in CategoryView, see "ErrorCategoryInfo class" in the Windows PowerShell SDK.</source>
          <target state="translated">有关 CategoryView 中字段的详细信息，请参阅 Windows PowerShell SDK 中的"ErrorCategoryInfo 类"。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>These example show the effect of the ErrorView values.</source>
          <target state="translated">这些示例显示 ErrorView 值的效果。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>This example shows how an error appears when the value of $ErrorView is NormalView.</source>
          <target state="translated">此示例演示如何错误 NormalView $ErrorView 的值时，将出现。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>In this case, the Get-ChildItem command is used to find a non-existent file.</source>
          <target state="translated">在这种情况下，Get-childitem 命令用于查找不存在的文件。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorView                         # Verify the value.</source>
          <target state="translated">PS &gt; $ErrorView # 验证的值。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>NormalView</source>
          <target state="translated">NormalView</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem nofile.txt           # Find a non-existent file.</source>
          <target state="translated">PS &gt; 的 get-childitem nofile.txt # 查找不存在文件。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Get-ChildItem : Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">Get-childitem︰ 找不到路径 C:\nofile.txt'，因为它不存在。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>At line:1 char:14</source>
          <target state="translated">At line:1 char:14</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>get-childitem  &lt;&lt;&lt;&lt; nofile.txt</source>
          <target state="translated">get-childitem &lt;&lt;&lt;&lt; nofile.txt</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This example shows how the same error appears when the value of $ErrorView is CategoryView.</source>
          <target state="translated">此示例演示如何同样的错误 CategoryView $ErrorView 的值时，将出现。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>PS&gt; $ErrorView = "CategoryView"        # Change the value to CategoryView</source>
          <target state="translated">PS &gt; $ErrorView ="CategoryView"# 的值更改为 CategoryView</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem nofile.txt ObjectNotFound: (C:\nofile.txt:String) [Get-ChildItem], ItemNotFoundException</source>
          <target state="translated">PS &gt; 的 get-childitem nofile.txt ObjectNotFound: (C:\nofile.txt:String) [Get-childitem] ItemNotFoundException</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>This example demonstrates that the value of ErrorView only affects the error display; it does not change the structure of the error object that is stored in the $error automatic variable.</source>
          <target state="translated">此示例演示 ErrorView 的值仅影响错误显示类型;它不会更改存储在 $error 自动变量中的错误对象的结构。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>For information about the $error automatic variable, see about_automatic_variables.</source>
          <target state="translated">有关 $error 自动变量的信息，请参阅 about_automatic_variables。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>This command takes the ErrorRecord object associated with the most recent error in the error array (element 0) and formats all of the properties of the error object in a list.</source>
          <target state="translated">此命令接受 ErrorRecord 对象与错误数组 （元素 0） 中的最新错误相关联，并设置格式的所有属性列表中的错误对象。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>PS&gt; $error[0] | format-list -property * -force</source>
          <target state="translated">PS &gt; $error [0] |格式列表的属性 *-强制</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Exception    : System.Management.Automation.ItemNotFoundException: Cannot find path 'C:\nofile.txt' because it does not exist.</source>
          <target state="translated">异常︰ System.Management.Automation.ItemNotFoundException︰ 找不到路径 C:\nofile.txt'，因为它不存在。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>at System.Management.Automation.SessionStateInternal.GetChildItems(String path, Boolean recurse, CmdletProviderContext context) at System.Management.Automation.ChildItemCmdletProviderIntrinsics.Get(String path, Boolean recurse, CmdletProviderContext context) at Microsoft.PowerShell.Commands.GetChildItemCommand.ProcessRecord() TargetObject          : C:\nofile.txt CategoryInfo          : ObjectNotFound: (C:\nofile.txt:String) [Get-ChildItem], ItemNotFoundException FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand ErrorDetails          : InvocationInfo        : System.Management.Automation.InvocationInfo</source>
          <target state="translated">在 System.Management.Automation.SessionStateInternal.GetChildItems （字符串路径、 布尔 recurse、 CmdletProviderContext 上下文） 在 System.Management.Automation.ChildItemCmdletProviderIntrinsics.Get （字符串路径、 布尔 recurse、 CmdletProviderContext 上下文） 在 Microsoft.PowerShell.Commands.GetChildItemCommand.ProcessRecord() TargetObject: C:\nofile.txt CategoryInfo: ObjectNotFound: (C:\nofile.txt:String) [Get-childitem] ItemNotFoundException FullyQualifiedErrorId: PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand ErrorDetails: InvocationInfo: System.Management.Automation.InvocationInfo</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>$FormatEnumerationLimit Determines how many enumerated items are included in a display.</source>
          <target state="translated">$FormatEnumerationLimit 确定在显示模式中包含多少个枚举的项中。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>This variable does not affect the underlying objects; just the display.</source>
          <target state="translated">此变量不会影响基础对象;只显示。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>When the value of $FormatEnumerationLimit is less than the number of enumerated items, Windows PowerShell adds an ellipsis (...) to indicate items not shown.</source>
          <target state="translated">枚举项的数目少于 $FormatEnumerationLimit 的值时，Windows PowerShell 会添加省略号 （...） 以指明未显示的项。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Valid values: Integers (Int32) Default value: 4</source>
          <target state="translated">有效的值︰ 整数 (Int32) 默认值︰ 4</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>This example shows how to use the $FormatEnumerationLimit variable to improve the display of enumerated items.</source>
          <target state="translated">此示例演示如何使用 $FormatEnumerationLimit 变量来改善枚举项的显示。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The command in this example generates a table that lists all of the services running on the computer in two groups; one for running services and one for stopped services.</source>
          <target state="translated">此示例中的命令生成一个表，其中列出所有在两个组; 中的计算机上运行的服务一个用于运行服务和一个用于已停止的服务。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>It uses a Get-Service command to get all of the services, and then send the results through the pipeline to the Group-Object cmdlet, which groups the results by the service status.</source>
          <target state="translated">它使用 Get-service 命令来获取所有的服务，然后通过管道将结果发送给 Group-object cmdlet，后者将对结果进行分组的服务状态。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The resulting display is a table that lists the status in the Name column and the processes with that status in the Group column.</source>
          <target state="translated">显示结果是一个表，其中列出了在名称列和过程与在组列中的该状态的状态。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>(To change the column labels, use a hash table.</source>
          <target state="translated">（若要更改列标签，请使用哈希表。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>For more information, see the examples in "get-help format-table -examples".)</source>
          <target state="translated">有关详细信息，请参阅中的示例"get-help 表格格式的示例"。)</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>There are a maximum of 4 services listed in the Group column for each status.</source>
          <target state="translated">有最多为 4 的每个状态组列中列出的服务。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>To increase the number of items listed, increase the value of $FormatEnumerationLimit to 1000.</source>
          <target state="translated">若要增加而列出的项目数，增加到 1000年 $FormatEnumerationLimit 的值。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>In the resulting display, the list in the Group column is now limited by the line length.</source>
          <target state="translated">在生成的显示中，组列中的列表现在受行长度限制。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>In the final command in the example, use the Wrap parameter of Format-Table to display all of the processes in each Status group.</source>
          <target state="translated">在示例中的最后一个命令，在使用 Wrap 参数的表格格式显示的所有进程每个状态组中。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>PS&gt; $formatenumerationlimit         # Find the current value 4</source>
          <target state="translated">PS &gt; $formatenumerationlimit # 查找当前值 4</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>PS&gt; get-service | group-object -property status List all services grouped by status</source>
          <target state="translated">PS &gt; 获取服务 |组对象的属性状态列表按状态分组的所有服务</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Count Name                      Group</source>
          <target state="translated">计数名称组</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>60 Running                   {AdtAgent, ALG, Ati HotKey Poller, AudioSrv...}</source>
          <target state="translated">60 运行 {AdtAgent、 ALG、 Ati 热键轮询器、 AudioSrv...}</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>41 Stopped                   {Alerter, AppMgmt, aspnet_state, ATI Smart...}</source>
          <target state="translated">41 已停止 {Alerter，AppMgmt，aspnet_state，ATI 智能...}</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The list is truncated after 4 items.</source>
          <target state="translated">在 4 项后，列表将被截断。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>PS&gt; $formatenumerationlimit = 1000 Increase the limit to 1000.</source>
          <target state="translated">PS &gt; $formatenumerationlimit = 1000年增加到 1000年的限制。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>PS&gt; get-service | group-object -property status Repeat the command.</source>
          <target state="translated">PS &gt; 获取服务 |组对象的属性状态，重复该命令。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Count Name     Group</source>
          <target state="translated">计数名称组</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>60 Running  {AdtAgent, ALG, Ati HotKey Poller, AudioSrv, BITS, CcmExec... 41 Stopped  {Alerter, AppMgmt, aspnet_state, ATI Smart, Browser, CiSvc...</source>
          <target state="translated">60 运行 {AdtAgent、 ALG、 Ati 热键轮询器、 AudioSrv、 BITS、 CcmExec...41 已停止 {Alerter、 AppMgmt、 aspnet_state，ATI 智能、 浏览器、 CiSvc...</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>PS&gt; get-service | group-object -property status | format-table -wrap Add the Wrap parameter.</source>
          <target state="translated">PS &gt; 获取服务 |组对象的属性状态 |表格格式的换行添加 Wrap 参数。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Count Name       Group</source>
          <target state="translated">计数名称组</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>60 Running    {AdtAgent, ALG, Ati HotKey Poller, AudioSrv, BITS, CcmExec, Client for NFS, CryptSvc, DcomLaunch, Dhcp, dmserver, Dnscache, ERSvc, Eventlog, EventSystem, FwcAgent, helpsvc, HidServ, IISADMIN, InoRPC, InoRT, InoTask, lanmanserver, lanmanworkstation, LmHosts, MDM, Netlogon, Netman, Nla, NtLmSsp, PlugPlay, PolicyAgent, ProtectedStorage, RasMan, RemoteRegistry, RpcSs, SamSs, Schedule, seclogon, SENS, SharedAccess, ShellHWDetection, SMT PSVC, Spooler, srservice, SSDPSRV, stisvc, TapiSrv, TermService, Themes, TrkWks, UMWdf, W32Time, W3SVC, WebClient, winmgmt, wscsvc, wuauserv, WZCSVC, zzInterix}</source>
          <target state="translated">60 运行 {AdtAgent、 ALG、 Ati 热键轮询器、 AudioSrv、 BITS、 CcmExec、 NFS、 CryptSvc、 DcomLaunch、 Dhcp、 dmserver，客户端 Dnscache、 ERSvc、 事件日志、 EventSystem、 FwcAgent，helpsvc，HidServ、 IISADMIN、 InoRPC、 InoRT、 InoTask，lanmanserver，lanmanworkstation，LmHosts，MDM、 Netlogon、 Netman、 Nla、 NtLmSsp、 PlugPlay、 PolicyAgent、 ProtectedStorage、 RasMan、 RemoteRegistry、 RpcSs，SamSs，计划、 seclogon，SENS、 SharedAccess、 ShellHWDetection、 SMT PSVC、 后台处理程序，srservice，SSDPSRV stisvc，TapiSrv、 TermService、 主题、 TrkWks、 UMWdf、 W32Time 和 W3SVCWebClient，winmgmt、 wscsvc、 wuauserv，WZCSVC，zzInterix}</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>41 Stopped    {Alerter, AppMgmt, aspnet_state, ATI Smart, Browser, CiSvc, ClipSrv, clr_optimization_v2.0.50727_32, COMSysApp, CronService, dmadmin, FastUserSwitchingCompatibility, HTTPFilter, ImapiService, Mapsvc, Messenger, mnmsrvc, MSDTC, MSIServer, msvsmon80, NetDDE, NetDDEdsdm, NtmsSvc, NVSvc, ose, RasAuto, RDSessMgr, RemoteAccess, RpcLocator, SCardSvr, SwPrv, SysmonLog, TlntSvr, upnphost, UPS, VSS, WmdmPmSN, Wmi, WmiApSrv, xmlprov}</source>
          <target state="translated">41 已停止 {Alerter、 AppMgmt、 aspnet_state，ATI 智能、 浏览器、 CiSvc、 ClipSrv、 clr_optimization_v2.0.50727_32，COMSysApp，CronService，dmadmin FastUserSwitchingCompatibility、 HTTPFilter、 ImapiService、 Mapsvc，Messenger、 mnmsrvc，MSDTC、 MSIServer，msvsmon80，NetDDE、 NetDDEdsdm、 NtmsSvc、 NVSvc，ose，RasAuto、 RDSessMgr、 远程访问、 RpcLocator、 SCardSvr、 SwPrv、 SysmonLog、 TlntSvr，upnphost，UPS、 VSS、 WmdmPmSN、 Wmi、 WmiApSrv、 xmlprov}</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>$InformationPreference The $InformationPreference variable lets you set information stream preferences (specifically, informational messages that you have added to commands or scripts by adding the Write-Information cmdlet, and want displayed to users) for a Windows PowerShell session.</source>
          <target state="translated">$InformationPreference $InformationPreference 变量允许您设置的信息流首选项 （具体而言，你通过添加写入信息 cmdlet 中，已添加到命令或脚本，并且希望向用户显示的信息性消息） 的 Windows PowerShell 会话。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The value of the -InformationAction parameter, if used, overrides the current value of the $InformationPreference variable.</source>
          <target state="translated">-InformationAction 参数的值，如果使用，将覆盖 $InformationPreference 变量的当前值。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Stops a command or script at an occurrence of the Write-Information command.</source>
          <target state="translated">有效值︰ 停止︰ 停止命令或在出现的写入信息命令的脚本。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Inquire:            Displays the informational message that you specify in a Write-Information command, then asks whether you want to continue.</source>
          <target state="translated">查询︰ 显示在写入信息命令中，指定的信息性消息，然后询问您是否要继续。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the informational message, and continues running.</source>
          <target state="translated">继续︰ 显示信息性消息，并继续运行。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Suspend:            Automatically suspends a workflow job after a Write-Information command is carried out, to allow users to see the messages before continuing.</source>
          <target state="translated">后写入信息命令执行，以允许用户在继续之前查看的消息，挂起︰ 自动挂起工作流作业。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The workflow can be resumed at the user’s discretion.</source>
          <target state="translated">工作流可以继续在用户的决定。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   No effect.</source>
          <target state="translated">SilentlyContinue︰ 不起作用。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The informational messages are not (Default)             displayed, and the script continues without interruption.</source>
          <target state="translated">信息性消息不会显示 （默认值），并且该脚本继续运行而不会中断。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>$Log<bpt id="p1">*</bpt>Event The Log<ept id="p1">*</ept>Event preference variables determine which types of events are written to the Windows PowerShell event log in Event Viewer.</source>
          <target state="translated">$Log<bpt id="p1">*</bpt>日志的事件<ept id="p1">*</ept>事件首选项变量决定哪些类型的事件会写入到事件查看器中的 Windows PowerShell 事件日志。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>By default, only engine and provider events are logged, but you can use the Log*Event preference variables to customize your log, such as logging events about commands.</source>
          <target state="translated">默认情况下，记录仅引擎和提供程序的事件，但您可以使用日志 * 事件首选项变量以自定义日志中，例如有关命令的日志记录事件。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The Log*Event preference variables are as follows:</source>
          <target state="translated">日志 * 事件首选项变量如下所示︰</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>$LogCommandHealthEvent: Logs errors and exceptions in command initialization and processing.</source>
          <target state="translated">$LogCommandHealthEvent︰ 命令初始化和处理中记录错误和异常。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Default = $false (not logged).</source>
          <target state="translated">默认值 = $false （未记录）。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>$LogCommandLifecycleEvent: Logs the starting and stopping of commands and command pipelines and security exceptions in command discovery.</source>
          <target state="translated">$LogCommandLifecycleEvent︰ 在命令发现中记录的开始和停止的命令和命令管道以及安全异常。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Default = $false (not logged).</source>
          <target state="translated">默认值 = $false （未记录）。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>$LogEngineHealthEvent: Logs errors and failures of sessions.</source>
          <target state="translated">$LogEngineHealthEvent︰ 记录错误和失败的会话。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Default = $true (logged).</source>
          <target state="translated">默认值 = $true （记录）。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>$LogEngineLifecycleEvent: Logs the opening and closing of sessions.</source>
          <target state="translated">$LogEngineLifecycleEvent︰ 记录的开始和结束会话。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Default = $true (logged).</source>
          <target state="translated">默认值 = $true （记录）。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>$LogProviderHealthEvent: Logs provider errors, such as read and write errors, lookup errors, and invocation errors.</source>
          <target state="translated">$LogProviderHealthEvent︰ 日志提供程序错误，如读取和写入错误、 查找错误和调用错误。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Default = $true (logged).</source>
          <target state="translated">默认值 = $true （记录）。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>$LogProviderLifecycleEvent: Logs adding and removing of Windows PowerShell providers.</source>
          <target state="translated">$LogProviderLifecycleEvent︰ 记录添加和删除的 Windows PowerShell 提供程序。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Default = $true (logged).</source>
          <target state="translated">默认值 = $true （记录）。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>(For information about Windows PowerShell providers, type: "get-help about_provider".</source>
          <target state="translated">(有关 Windows PowerShell 提供程序的信息，请键入:"获取帮助 about_provider"。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>To enable a Log*Event, type the variable with a value of $true, for example:</source>
          <target state="translated">若要启用日志 * 事件中，键入此变量和值为 $true，例如︰</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>$LogCommandLifeCycleEvent</source>
          <target state="translated">$LogCommandLifeCycleEvent</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>or -</source>
          <target state="translated">或-</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>$LogCommandLifeCycleEvent = $true</source>
          <target state="translated">$LogCommandLifeCycleEvent = $true</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>To disable an event type, type the variable with a value of $false, for example:</source>
          <target state="translated">要禁用事件类型，请键入该变量，值为 $false，例如︰</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>$LogCommandLifeCycleEvent = $false</source>
          <target state="translated">$LogCommandLifeCycleEvent = $false</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The events that you enable are effective only for the current Windows PowerShell console.</source>
          <target state="translated">启用事件是仅对当前 Windows PowerShell 控制台中有效。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>To apply the configuration to all consoles, save the variable settings in your Windows PowerShell profile.</source>
          <target state="translated">若要将配置应用于所有控制台，在 Windows PowerShell 配置文件中保存的变量设置。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>$MaximumAliasCount Determines how many aliases are permitted in a Windows PowerShell session.</source>
          <target state="translated">$MaximumAliasCount 确定多少别名允许 Windows PowerShell 会话中。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The default value, 4096, should be sufficient for most uses, but you can adjust it to meet your needs.</source>
          <target state="translated">默认值为 4096，应足以满足大多数应用中，但您可以调整以满足您的需要。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Valid values: 1024 - 32768 (Int32) Default: 4096</source>
          <target state="translated">有效值︰ 1024年-32768 (Int32) 默认值︰ 4096</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>To count the aliases on your system, type:</source>
          <target state="translated">若要计算您的系统上的别名，请键入︰</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>(get-alias).count</source>
          <target state="translated">（get 别名）.count</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>$MaximumDriveCount Determines how many Windows PowerShell drives are permitted in a given session.</source>
          <target state="translated">$MaximumDriveCount 确定在给定的会话中，允许多少个 Windows PowerShell 驱动器。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>This includes file system drives and data stores that are exposed by Windows PowerShell providers and appear as drives, such as the Alias: and HKLM: drives.</source>
          <target state="translated">这包括文件系统驱动器和数据存储，由 Windows PowerShell 提供程序公开并显示为驱动器，如别名︰ 和 HKLM︰ 驱动器。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Valid values: 1024 - 32768 (Int32) Default: 4096</source>
          <target state="translated">有效值︰ 1024年-32768 (Int32) 默认值︰ 4096</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>To count the aliases on your system, type:</source>
          <target state="translated">若要计算您的系统上的别名，请键入︰</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>(get-psdrive).count</source>
          <target state="translated">(get psdrive).count</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>$MaximumErrorCount Determines how many errors are saved in the error history for the session.</source>
          <target state="translated">$MaximumErrorCount 确定多少错误保存错误历史记录中的会话。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Valid values: 256 - 32768 (Int32) Default: 256</source>
          <target state="translated">有效值︰ 256 32768 (Int32) 默认值︰ 256</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Objects that represent each retained error are stored in the $Error automatic variable.</source>
          <target state="translated">表示保留的每个错误的对象存储在 $Error 自动变量。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>This variable contains an array of error record objects, one for each error.</source>
          <target state="translated">此变量包含一个用于每个错误错误记录对象的数组。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The most recent error is the first object in the array ($Error[0]).</source>
          <target state="translated">最新错误是数组 ($Error[0]) 中第一个对象。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>To count the errors on your system, use the Count property of the $Error array.</source>
          <target state="translated">若要计算您的系统上的错误，请使用 $Error 数组的 Count 属性。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Type:</source>
          <target state="translated">键入：</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>$Error.count</source>
          <target state="translated">$Error.count</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>To display a specific error, use array notation to display the error.</source>
          <target state="translated">若要显示一个特定的错误，请使用数组表示法显示错误。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>For example, to see the most recent error, type:</source>
          <target state="translated">例如，若要查看最新的错误，请键入︰</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>$Error[0]</source>
          <target state="translated">$Error [0]</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>To display the oldest retained error, type:</source>
          <target state="translated">若要显示的最旧的保留的错误，请键入︰</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>$Error[($Error.Count -1]</source>
          <target state="translated">$Error [($Error.Count-1]</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>To display the properties of the ErrorRecord object, type:</source>
          <target state="translated">若要显示 ErrorRecord 对象的属性，请键入︰</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>$Error[0] | format-list -property * -force</source>
          <target state="translated">$Error [0] |格式列表的属性 *-强制</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>In this command, the Force parameter overrides the special formatting of ErrorRecord objects and reverts to the conventional format.</source>
          <target state="translated">在此命令，Force 参数覆盖 ErrorRecord 对象的特殊格式，并且将恢复到常规的格式。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>To delete all errors from the error history, use the Clear method of the error array.</source>
          <target state="translated">若要从错误历史记录中删除所有错误，请使用错误数组的 Clear 方法。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>PS&gt; $Error.count 17 PS&gt; $Error.clear() PS&gt; PS&gt; $Error.count 0</source>
          <target state="translated">PS &gt; $Error.count 17 PS &gt; $Error.clear() PS &gt; PS &gt; $Error.count 0</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>To find all properties and methods of an error array, use the Get-Member cmdlet with its InputObject parameter.</source>
          <target state="translated">若要查找所有属性和方法的错误数组，其 InputObject 参数与使用 Get-member cmdlet。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>When you pipe a collection of objects to Get-Member, Get-Member displays the properties and methods of the objects in the collection.</source>
          <target state="translated">当你通过管道传递给 Get-member 对象的集合时，获取成员在集合中显示的属性和方法的对象。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>When you use the InputObject parameter of Get-Member, Get-Member displays the properties and methods of the collection.</source>
          <target state="translated">使用 Get-member 的 InputObject 参数时，Get-member 将显示的属性和方法的集合。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>$MaximumFunctionCount Determines how many functions are permitted in a given session.</source>
          <target state="translated">$MaximumFunctionCount 确定在给定的会话中，允许多少函数。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Valid values: 1024 - 32768 (Int32) Default: 4096</source>
          <target state="translated">有效值︰ 1024年-32768 (Int32) 默认值︰ 4096</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>To see the functions in your session, use the Windows PowerShell Function: drive that is exposed by the Windows PowerShell Function provider.</source>
          <target state="translated">若要查看在会话中的函数，使用 Windows PowerShell 函数︰ 由 Windows PowerShell Function 提供程序公开的驱动器。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>(For more information about the Function provider, type "get-help function").</source>
          <target state="translated">（有关 Function 提供程序的详细信息，键入"get-help 函数"）。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>To list the functions in the current session, type:</source>
          <target state="translated">若要列出当前会话中的函数，请键入︰</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>get-childitem function:</source>
          <target state="translated">get-childitem 函数︰</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>To count the functions in the current session, type:</source>
          <target state="translated">若要在当前会话中计数函数，请键入︰</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>(get-childitem function:).count</source>
          <target state="translated">(的 get-childitem 函数:).count</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>$MaximumHistoryCount Determines how many commands are saved in the command history for the current session.</source>
          <target state="translated">$MaximumHistoryCount 确定多少命令保存在中的命令历史记录为当前会话。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Valid values: 1 - 32768 (Int32) Default: 4096</source>
          <target state="translated">有效值︰ 1 32768 (Int32) 默认值︰ 4096</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>To determine the number of commands current saved in the command history, type:</source>
          <target state="translated">若要确定当前的命令历史记录中保存命令数，请键入︰</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>(get-history).count</source>
          <target state="translated">（获取历史记录）.count</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>To see the command saved in your session history, use the Get-History cmdlet.</source>
          <target state="translated">若要查看在会话历史记录中保存的命令，请使用 Get-history cmdlet。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>For more information, see about_History (http://go.microsoft.com/fwlink/?LinkID=113233).</source>
          <target state="translated">有关详细信息，请参阅 about_History (http://go.microsoft.com/fwlink/?LinkID=113233)。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>NOTE: In Windows PowerShell 2.0, the default value of the $MaximumHistoryCount variable is 64.</source>
          <target state="translated">注意︰ 在 Windows PowerShell 2.0 $MaximumHistoryCount 变量的默认值为 64。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>$MaximumVariableCount Determines how many variables are permitted in a given session, including automatic variables, preference variables, and the variables that you create in commands and scripts.</source>
          <target state="translated">$MaximumVariableCount 确定在给定的会话，包括自动变量、 首选项变量和命令和脚本中创建的变量中，允许多少个变量。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Valid values: 1024 - 32768 (Int32) Default: 4096</source>
          <target state="translated">有效值︰ 1024年-32768 (Int32) 默认值︰ 4096</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>To see the variables in your session, use the Get-Variable cmdlet and the features of the Windows PowerShell Variable: drive and the Windows PowerShell Variable provider.</source>
          <target state="translated">若要查看会话中的变量，使用 Get-variable cmdlet 和功能的 Windows PowerShell Variable︰ 驱动器和 Windows PowerShell Variable 提供程序。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>For information about the Variable provider, type "get-help variable".</source>
          <target state="translated">Variable 提供程序有关的信息，请键入"get-help 的变量"。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>To find the current number of variables on the system, type:</source>
          <target state="translated">若要在系统上查找的变量的当前数目，请键入︰</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>(get-variable).count</source>
          <target state="translated">（get 变量）.count</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>$OFS Output Field Separator.</source>
          <target state="translated">$OFS 输出字段分隔符。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Specifies the character that separates the elements of an array when the array is converted to a string.</source>
          <target state="translated">指定用于分隔数组中的元素，当数组转换为字符串的字符。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Valid values: Any string.</source>
          <target state="translated">有效值︰ 任何字符串。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Default: Space</source>
          <target state="translated">默认值︰ 空间</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>By default, the $OFS variable does not exist and the output file separator is a space, but you can add this variable and set it to any string.</source>
          <target state="translated">默认情况下，$OFS 变量不存在和输出文件分隔符为空格，但您可以将此变量添加并将其设置为任何字符串。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>This example shows that a space is used to separate the values when an array is converted to a string.</source>
          <target state="translated">此示例演示一个空格用于分隔各个值在数组转换为字符串时。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>In this case, an array of integers is stored in a variable and then the variable is cast as a string.</source>
          <target state="translated">在这种情况下，一个整数数组存储在变量，然后将该变量转换为字符串。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>PS&gt; $array = 1,2,3                 # Store an array of integers.</source>
          <target state="translated">PS &gt; $array = 1,2,3 # 存储区的整数数组。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>PS&gt; [string]$array                 # Cast the array to a string.</source>
          <target state="translated">PS &gt; [string] $array # 强制转换为字符串数组。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>1 2 3                              # Spaces separate the elements</source>
          <target state="translated">1 2 3 # 空格分隔的元素</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>To change the separator, add the $OFS variable by assigning a value to it.</source>
          <target state="translated">若要更改的分隔符，请通过将一个值分配给它添加 $OFS 变量。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>To work correctly, the variable must be named $OFS.</source>
          <target state="translated">为了正确工作，该变量必须命名 $OFS。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>PS&gt; $OFS = "+"                     # Create $OFS and assign a "+"</source>
          <target state="translated">PS &gt; $OFS ="+"# 创建 $OFS 并分配"+"</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>PS&gt; [string]$array                 # Repeat the command 1+2+3                              # Plus signs separate the elements</source>
          <target state="translated">PS &gt; [string] $array # 重复执行该命令 1 + 2 + 3 # 加号分隔元素</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>To restore the default behavior, you can assign a space (" ") to the value of $OFS or delete the variable.</source>
          <target state="translated">若要还原默认行为，可以将分配一个空格 ("") 为 $OFS 或删除该变量的值。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>This command deletes the variable and then verifies that the separator is a space.</source>
          <target state="translated">此命令将删除变量，然后验证该分隔符是空格。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>PS&gt; Remove-Variable OFS            # Delete $OFS PS&gt;</source>
          <target state="translated">PS &gt; 删除变量 OFS # 删除 $OFS PS &gt;</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>PS&gt; [string]$array                 # Repeat the command 1 2 3                              # Spaces separate the elements</source>
          <target state="translated">PS &gt; [string] $array # 重复命令 1 2 3 # 空格单独元素</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>$OutputEncoding Determines the character encoding method that Windows PowerShell uses when it sends text to other applications.</source>
          <target state="translated">$OutputEncoding 确定的字符编码时将文本发送到其他应用程序使用 Windows PowerShell 的方法。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>For example, if an application returns Unicode strings to Windows PowerShell, you might need to change the value to UnicodeEncoding to send the characters correctly.</source>
          <target state="translated">例如，如果应用程序返回给 Windows PowerShell 的 Unicode 字符串，您可能需要的值更改为 UnicodeEncoding 正确发送字符。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>Valid values: Objects derived from an Encoding class, such as ASCIIEncoding, SBCSCodePageEncoding, UTF7Encoding, UTF8Encoding, UTF32Encoding, and UnicodeEncoding.</source>
          <target state="translated">有效值︰ 从编码类，如 ASCIIEncoding、 SBCSCodePageEncoding、 UTF7Encoding、 UTF8Encoding、 UTF32Encoding 和 UnicodeEncoding 派生对象。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Default: ASCIIEncoding object (System.Text.ASCIIEncoding)</source>
          <target state="translated">默认值︰ ASCIIEncoding 对象 (System.Text.ASCIIEncoding)</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>This example shows how to make the FINDSTR command in Windows work in Windows PowerShell on a computer that is localized for a language that uses Unicode characters, such as Chinese.</source>
          <target state="translated">此示例演示如何使本地化的语言使用 Unicode 字符，如中文的计算机上 Windows PowerShell 中工作的 Windows 中的 FINDSTR 命令。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>The first command finds the value of $OutputEncoding.</source>
          <target state="translated">第一个命令查找 $OutputEncoding 的值。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Because the value is an encoding object, display only its EncodingName property.</source>
          <target state="translated">由于值是一个编码对象，显示仅其 EncodingName 属性。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>PS&gt; $OutputEncoding.EncodingName  # Find the current value US-ASCII</source>
          <target state="translated">PS &gt; $OutputEncoding.EncodingName # 查找 US ASCII 的当前值</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>In this example, a FINDSTR command is used to search for two Chinese characters that are present in the Test.txt file.</source>
          <target state="translated">在此示例中，FINDSTR 命令用于 Test.txt 文件中存在的两个中文字符的搜索。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>When this FINDSTR command is run in the Windows Command Prompt (Cmd.exe), FINDSTR finds the characters in the text file.</source>
          <target state="translated">当此 FINDSTR 命令运行时在 Windows 命令提示符 (Cmd.exe) 时，FINDSTR 将查找文本文件中的字符。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>However, when you run the same FINDSTR command in Windows PowerShell, the characters are not found because the Windows PowerShell sends them to FINDSTR in ASCII text, instead of in Unicode text.</source>
          <target state="translated">但是，Windows PowerShell 中运行相同的 FINDSTR 命令时，因为 Windows PowerShell 将其发送到 FINDSTR ASCII 文本，而不是在 Unicode 文本中是不会找到的字符。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>PS&gt; findstr &lt;Unicode-characters&gt;  # Use findstr to search.</source>
          <target state="translated">PS &gt; findstr &lt; Unicode 字符 &gt; # 使用 findstr 搜索。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>PS&gt;                               # None found.</source>
          <target state="translated">PS &gt; # 找不到。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>To make the command work in Windows PowerShell, set the value of $OutputEncoding to the value of the OutputEncoding property of the console, which is based on the locale selected for Windows.</source>
          <target state="translated">若要使 Windows PowerShell 中运行此命令，将 $OutputEncoding 值设置为控制台，它基于 Windows 所选的区域设置 OutputEncoding 属性的值。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Because OutputEncoding is a static property of the console, use double-colons (::) in the command.</source>
          <target state="translated">由于 OutputEncoding 是控制台的静态属性，请在命令中使用双冒号 （:）。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>PS&gt; $OutputEncoding = [console]::outputencoding PS&gt;                               # Set the value equal to the OutputEncoding property of the console.</source>
          <target state="translated">PS &gt; $OutputEncoding = [控制台]:: outputencoding PS &gt; # 将值设置为控制台的 OutputEncoding 属性。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>PS&gt; $OutputEncoding.EncodingName OEM United States Find the resulting value.</source>
          <target state="translated">PS &gt; $OutputEncoding.EncodingName OEM 美国查找所得到的值。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>As a result of this change, the FINDSTR command finds the characters.</source>
          <target state="translated">由于此更改，FINDSTR 命令查找字符。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>PS&gt; findstr &lt;Unicode-characters&gt; test.txt:         &lt;Unicode-characters&gt;</source>
          <target state="translated">PS &gt; findstr &lt; Unicode 字符 &gt; test.txt: &lt; Unicode 字符 &gt;</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Use findstr to search.</source>
          <target state="translated">使用 findstr 搜索。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>It find the characters in the text file.</source>
          <target state="translated">它在文本文件中查找的字符。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>$ProgressPreference Determines how Windows PowerShell responds to progress updates generated by a script, cmdlet or provider, such as the progress bars generated by the Write-Progress cmdlet.</source>
          <target state="translated">$ProgressPreference 确定 Windows PowerShell 脚本、 cmdlet 或提供程序，如进度栏的 Write-progress cmdlet 生成的生成的进度更新到的响应方式。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The Write-Progress cmdlet creates progress bars that depict the status of a command.</source>
          <target state="translated">Write-progress cmdlet 可创建描述命令的状态的进度栏。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Does not display the progress bar.</source>
          <target state="translated">有效值︰ 停止︰ 不显示进度条。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Instead, it displays an error message and stops executing.</source>
          <target state="translated">相反，它显示一条错误消息，并将停止执行。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Inquire:            Does not display the progress bar.</source>
          <target state="translated">查询︰ 不显示进度栏。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Prompts for permission to continue.</source>
          <target state="translated">会提示你输入的许可才能继续。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>If you reply with Y or A, it displays the progress bar.</source>
          <target state="translated">如果回答 Y 或 A，则会显示进度栏。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the progress bar and continues with (Default)           execution.</source>
          <target state="translated">继续︰ 显示一个进度栏，并继续 （默认值） 执行。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   Executes the command, but does not display the progress bar.</source>
          <target state="translated">SilentlyContinue︰ 执行命令，但不显示进度栏。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>$PSEmailServer Specifies the default e-mail server that is used to send e-mail messages.</source>
          <target state="translated">$PSEmailServer 指定用于发送电子邮件的默认电子邮件服务器。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>This preference variable is used by cmdlets that send e-mail, such as the Send-MailMessage cmdlet.</source>
          <target state="translated">发送电子邮件，如 Send-mailmessage cmdlet 的 cmdlet 使用此首选项变量。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>$PSDefaultParameterValues Specifies default values for the parameters of cmdlets and advanced functions.</source>
          <target state="translated">Cmdlet 和高级的函数的参数的 $PSDefaultParameterValues 指定默认值。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>The value of $PSDefaultParameterValues is a hash table where the key consists of the cmdlet name and parameter name separated by a colon (:) and the value is a custom default value that you specify.</source>
          <target state="translated">$PSDefaultParameterValues 值用冒号 （:） 分隔的哈希表，其中键包含的 cmdlet 名称和参数名称和值是您指定一个自定义的默认值。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>This variable was introduced in Windows PowerShell 3.0</source>
          <target state="translated">此变量是在 Windows PowerShell 3.0 中引入</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>For more information about this preference variable, see about_Parameters_Default_Values.</source>
          <target state="translated">有关此首选项变量的详细信息，请参阅 about_Parameters_Default_Values。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>$PSModuleAutoloadingPreference Enables and disables automatic importing of modules in the session.</source>
          <target state="translated">$PSModuleAutoloadingPreference 启用和禁用自动模块的会话中导入。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>"All" is the default.</source>
          <target state="translated">默认值为“All”。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Regardless of the value of this variable, you can use the Import-Module cmdlet to import a module.</source>
          <target state="translated">而不考虑此变量的值，您可以使用 Import-module cmdlet 导入模块。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Valid values are:</source>
          <target state="translated">有效值包括：</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>All    Modules are imported automatically on first-use.</source>
          <target state="translated">首次使用自动导入所有模块。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>To import a module, get (Get-Command) or use any command in the module.</source>
          <target state="translated">若要导入模块，获取 (Get-command) 或使用模块中的任何命令。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>ModuleQualified Modules are imported automatically only when a user uses the module-qualified name of a command in the module.</source>
          <target state="translated">ModuleQualified 模块自动导入仅当用户在模块中使用命令的模块限定名称时。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>For example, if the user types "MyModule\MyCommand", Windows PowerShell imports the MyModule module.</source>
          <target state="translated">例如，如果用户键入"MyModule\MyCommand"，Windows PowerShell 将导入 MyModule 模块。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>None   Automatic importing of modules is disabled in the session.</source>
          <target state="translated">无模块的自动导入在该会话被禁用。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>To import a module, use the Import-Module cmdlet.</source>
          <target state="translated">若要导入模块，请使用 Import-module cmdlet。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>For more information about automatic importing of modules, see about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311).</source>
          <target state="translated">有关模块的自动导入的详细信息，请参阅 about_Modules (http://go.microsoft.com/fwlink/?LinkID=144311)。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>$PSSessionApplicationName Specifies the default application name for a remote command that uses WS-Management technology.</source>
          <target state="translated">$PSSessionApplicationName 指定使用 WS 管理技术的远程命令的默认应用程序名称。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The system default application name is WSMAN, but you can use this preference variable to change the default.</source>
          <target state="translated">系统默认应用程序名称为 WSMAN，但您可以使用此首选项变量更改此默认值。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>The application name is the last node in a connection URI.</source>
          <target state="translated">应用程序名称是在一个连接 URI 中的最后一个节点。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>For example, the application name in the following sample URI is WSMAN.</source>
          <target state="translated">例如，下面的示例 URI 中的应用程序名称为 WSMAN。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>http://Server01:8080/WSMAN</source>
          <target state="translated">http://Server01:8080/WSMAN</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The default application name is used when the remote command does not specify a connection URI or an application name.</source>
          <target state="translated">远程命令未指定连接 URI 或应用程序名称时使用默认应用程序名称。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The WinRM service uses the application name to select a listener to service the connection request.</source>
          <target state="translated">WinRM 服务使用应用程序名称来选择为连接请求提供服务的侦听器。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The value of this parameter should match the value of the URLPrefix property of a listener on the remote computer.</source>
          <target state="translated">此参数的值应与远程计算机上的侦听器的 URLPrefix 属性值相匹配。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>To override the system default and the value of this variable, and select a different application name for a particular session, use the ConnectionURI or ApplicationName parameters of the New-PSSession, Enter-PSSession or Invoke-Command cmdlets.</source>
          <target state="translated">若要重写的系统默认值和此变量的值并选择特定会话的不同的应用程序名称，请使用 New-pssession、 Enter-pssession 或 Invoke-command cmdlet 的 ConnectionURI 或应用程序名称参数。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>This preference variable is set on the local computer, but it specifies a listener on the remote computer.</source>
          <target state="translated">此首选项变量设置的本地计算机上，但在远程计算机上指定的侦听器。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>If the application name that you specify does not exist on the remote computer, the command to establish the session fails.</source>
          <target state="translated">如果您指定的应用程序名称不存在的远程计算机上，要建立会话的命令将失败。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>$PSSessionConfigurationName Specifies the default session configuration that is used for PSSessions created in the current session.</source>
          <target state="translated">$PSSessionConfigurationName 指定在当前会话中创建的 Pssession 使用的默认会话配置。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>This preference variable is set on the local computer, but it specifies a session configuration that is located on the remote computer.</source>
          <target state="translated">此首选项变量设置的本地计算机上，但它指定会话配置位于远程计算机上。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>The value of the $PSSessionConfigurationName variable is a fully qualified resource URI.</source>
          <target state="translated">$PSSessionConfigurationName 变量的值是完全限定的资源 URI。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>The default value:</source>
          <target state="translated">默认值︰</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>http://schemas.microsoft.com/PowerShell/microsoft.PowerShell</source>
          <target state="translated">http://schemas.microsoft.com/PowerShell/microsoft.PowerShell</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>indicates the Microsoft.PowerShell session configuration on the remote computer.</source>
          <target state="translated">指示远程计算机上的 Microsoft.PowerShell 会话配置。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>If you specify only a configuration name, the following schema URI is prepended:</source>
          <target state="translated">如果您仅指定一个配置名称，被预置以下架构 URI:</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>http://schemas.microsoft.com/PowerShell/</source>
          <target state="translated">http://schemas.microsoft.com/PowerShell/</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>You can override the default and select a different session configuration for a particular session by using the ConfigurationName parameter of the New-PSSession, Enter-PSSession or Invoke-Command cmdlets.</source>
          <target state="translated">您可以覆盖默认值，并通过使用 New-pssession、 Enter-pssession 或 Invoke-command cmdlet 的 ConfigurationName 参数来选择特定会话的另一个会话配置。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>You can change the value of this variable at any time.</source>
          <target state="translated">您可以随时更改此变量的值。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>When you do, remember that the session configuration that you select must exist on the remote computer.</source>
          <target state="translated">在执行时，请记住您选择的会话配置必须在远程计算机上。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>If it does not, the command to create a session that uses the session configuration fails.</source>
          <target state="translated">如果未出现，用于创建使用会话配置的会话的命令将失败。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>This preference variable does not determine which local session configurations are used when remote users create a session that connects to this computer.</source>
          <target state="translated">此首选项变量无法确定远程用户创建连接到此计算机的会话时，将使用哪些本地会话配置。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>However, you can use the permissions for the local session configurations to determine which users may use them.</source>
          <target state="translated">但是，可以使用本地会话配置的权限来确定哪些用户可以使用它们。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>$PSSessionOption Establishes the default values for advanced user options in a remote session.</source>
          <target state="translated">$PSSessionOption 建立的默认值为高级的用户选项在远程会话中。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>These option preferences override the system default values for session options.</source>
          <target state="translated">这些选项首选项重写会话选项的系统默认值。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The $PSSessionOption variable contains a PSSessionOption object (System.Management.Automation.Remoting.PSSessionObject).</source>
          <target state="translated">$PSSessionOption 变量包含 PSSessionOption 对象 (System.Management.Automation.Remoting.PSSessionObject)。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Each property of the object represents a session option.</source>
          <target state="translated">该对象的每个属性表示会话选项。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>For example, the NoCompression property turns of data compression during the session.</source>
          <target state="translated">例如，NoCompression 属性变为在会话期间的数据压缩。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>By default, the $PSSessionOption variable contains a PSSessionOption object with the default values for all options, as shown below.</source>
          <target state="translated">默认情况下，$PSSessionOption 变量包含 PSSessionOption 对象使用所有选项，默认值，如下所示。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>MaximumConnectionRedirectionCount : 5 NoCompression                     : False NoMachineProfile                  : False ProxyAccessType                   : None ProxyAuthentication               : Negotiate ProxyCredential                   : SkipCACheck                       : False SkipCNCheck                       : False SkipRevocationCheck               : False OperationTimeout                  : 00:03:00 NoEncryption                      : False UseUTF16                          : False IncludePortInSPN                  : False OutputBufferingMode               : None Culture                           : UICulture                         : MaximumReceivedDataSizePerCommand : MaximumReceivedObjectSize         : 209715200 ApplicationArguments              : OpenTimeout                       : 00:03:00 CancelTimeout                     : 00:01:00 IdleTimeout                       : -00:00:00.0010000</source>
          <target state="translated">MaximumConnectionRedirectionCount: 5 NoCompression: False NoMachineProfile: False ProxyAccessType︰ 无 ProxyAuthentication︰ 协商 ProxyCredential: SkipCACheck: False SkipCNCheck: False SkipRevocationCheck: False OperationTimeout: 00:03:00 NoEncryption: False UseUTF16: False IncludePortInSPN: False OutputBufferingMode︰ 无区域性︰ UICulture: MaximumReceivedDataSizePerCommand: MaximumReceivedObjectSize: 209715200 ApplicationArguments: OpenTimeout: 00:03:00 CancelTimeout: 00:01:00 IdleTimeout:-00:00:00.0010000</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>For descriptions of these options, see the help topic for the New-PSSessionOption cmdlet.</source>
          <target state="translated">这些选项的说明，请参阅 New-pssessionoption cmdlet 的帮助主题。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>To change the value of the $PSSessionOption preference variable, use the New-PSSessionOption cmdlet to create a PSSessionOption object with the option values you prefer.</source>
          <target state="translated">若要更改 $PSSessionOption 首选项变量的值，使用 New-pssessionoption cmdlet 使用您喜欢的选项值创建 PSSessionOption 对象。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Save the output in a variable called $PSSessionOption.</source>
          <target state="translated">将输出保存在名为 $PSSessionOption 的变量中。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">例如，</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>$PSSessionOption = New-PSSessionOption -NoCompression</source>
          <target state="translated">$PSSessionOption = 新 PSSessionOption NoCompression</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>To use the $PSSessionOption preference variable in every Windows PowerShell session, add a New-PSSessionOption command that creates the $PSSessionOption variable to your Windows PowerShell profile.</source>
          <target state="translated">若要在每个 Windows PowerShell 会话中使用 $PSSessionOption 首选项变量，添加创建到 Windows PowerShell 配置文件的 $PSSessionOption 变量 New-pssessionoption 命令。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>You can also set custom options for a particular remote session.</source>
          <target state="translated">此外可以为特定的远程会话中设置自定义选项。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>The options that you set take precedence over the system defaults and the value of the $PSSessionOption preference variable.</source>
          <target state="translated">您设置的选项优先于系统默认值和 $PSSessionOption 首选项变量的值。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>To set custom session options, use the New-PSSessionOption cmdlet to create a PSSessionOption object.</source>
          <target state="translated">若要设置自定义会话选项，请使用 New-pssessionoption cmdlet 来创建 PSSessionOption 对象。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Then, use the PSSessionOption object as the value of the SessionOption parameter in cmdlets that create a session, such as New-PSSession, Enter-PSSession, and Invoke-Command.</source>
          <target state="translated">然后，使用 PSSessionOption 对象作为中创建一个会话，例如 New-pssession、 Enter-pssession 和 Invoke-command cmdlet 的 SessionOption 参数的值。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>For more information about the New-PSSessionOption cmdlet, see the help topic for New-PSSessionOption.</source>
          <target state="translated">有关 New-pssessionoption cmdlet 的详细信息，请参阅有关 New-pssessionoption 的帮助主题。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>For more information about remote commands and sessions, see about_Remote and about_PSSessions.</source>
          <target state="translated">有关远程命令和会话的详细信息，请参阅 about_Remote 和 about_PSSessions。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>For more information about using a profile, see about_Profiles.</source>
          <target state="translated">有关使用配置文件的详细信息，请参阅 about_Profiles。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>$VerbosePreference Determines how Windows PowerShell responds to verbose messages generated by a script, cmdlet or provider, such as the messages generated by the Write-Verbose cmdlet.</source>
          <target state="translated">$VerbosePreference 确定 Windows PowerShell 对生成的脚本、 cmdlet 或提供程序，如 Write-verbose cmdlet 生成的消息的详细消息的响应方式。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Typically, verbose messages describe the actions performed to execute a command.</source>
          <target state="translated">通常，详细消息用于描述可以执行命令所执行的操作。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>By default, verbose messages are not displayed, but you can change this behavior by changing the value of $VerbosePreference.</source>
          <target state="translated">默认情况下不显示详细消息，但您可以通过更改 $VerbosePreference 的值来更改此行为。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>You can also use the Verbose common parameter of a cmdlet to display or hide the verbose messages for a specific command.</source>
          <target state="translated">您可以使用 Verbose 通用参数的 cmdlet 来显示或隐藏某一特定命令的详细消息。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>For more information, type: "get-help about_commonparameters".</source>
          <target state="translated">详细信息，请键入:"-get-help about_commonparameters"。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Displays the verbose message and an error message and then stops executing.</source>
          <target state="translated">有效值︰ 停止︰ 显示详细消息和一条错误消息，然后停止执行。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>Inquire:            Displays the verbose message and then displays a prompt that asks you whether you want to continue.</source>
          <target state="translated">查询︰ 显示详细消息，然后显示提示，询问您是否想要继续。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the verbose message and then continues with execution.</source>
          <target state="translated">继续︰ 显示详细消息，然后继续执行。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   Does not display the verbose message.</source>
          <target state="translated">SilentlyContinue︰ 不显示详细消息。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Continues executing.</source>
          <target state="translated">继续执行。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>(Default)</source>
          <target state="translated">“(默认)”</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>These examples show the effect of the different values of $VerbosePreference and the use of the Verbose common parameter to override the preference value.</source>
          <target state="translated">这些示例显示 $VerbosePreference 的不同值以及如何使用 Verbose 通用参数来覆盖首选项的值的效果。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the SilentlyContinue value, which is the default.</source>
          <target state="translated">此示例演示 SilentlyContinue 值，该值是默认值的效果。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>PS&gt; $VerbosePreference             # Find the current value.</source>
          <target state="translated">PS &gt; $VerbosePreference # 查找当前值。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>SilentlyContinue</source>
          <target state="translated">SilentlyContinue</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose"详细消息 test"。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>PS&gt;                                # Write a verbose message.</source>
          <target state="translated">PS &gt; # 写入详细消息。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Message is not displayed.</source>
          <target state="translated">不显示消息。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose"详细消息 test"。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>-verbose VERBOSE: Verbose message test.</source>
          <target state="translated">-verbose VERBOSE︰ 详细消息测试。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Use the Verbose parameter.</source>
          <target state="translated">请使用 Verbose 参数。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Continue value.</source>
          <target state="translated">此示例演示继续值的效果。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>PS&gt; $VerbosePreference = "Continue" Change the value to Continue.</source>
          <target state="translated">PS &gt; $VerbosePreference ="继续"更改为 Continue 的值。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose"详细消息 test"。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Write a verbose message.</source>
          <target state="translated">写入详细消息。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>VERBOSE: Verbose message test.</source>
          <target state="translated">详细︰ 详细消息测试。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Message is displayed.</source>
          <target state="translated">将显示消息。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose"详细消息 test"。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>-verbose:$false Use the Verbose parameter with a value of $false.</source>
          <target state="translated">-verbose: $false $false 值中使用 Verbose 参数。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>PS&gt; Message is not displayed.</source>
          <target state="translated">PS &gt; 不会显示消息。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Stop value.</source>
          <target state="translated">此示例演示的终止值的效果。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>PS&gt; $VerbosePreference = "Stop" Change the value to Stop.</source>
          <target state="translated">PS &gt; $VerbosePreference ="Stop"更改为 Stop 值。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose"详细消息 test"。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Write a verbose message.</source>
          <target state="translated">写入详细消息。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>VERBOSE: Verbose message test.</source>
          <target state="translated">详细︰ 详细消息测试。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Write-Verbose : Command execution stopped because the shell variable "VerbosePreference" is set to Stop.</source>
          <target state="translated">写入-Verbose︰ 命令执行停止，因为 shell 变量"VerbosePreference"设置为 Stop。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>At line:1 char:14</source>
          <target state="translated">At line:1 char:14</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Write-Verbose  &lt;&lt;&lt;&lt; "Verbose message test."</source>
          <target state="translated">Write-verbose &lt;&lt;&lt;&lt;"详细消息 test"。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose"详细消息 test"。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>-verbose:$false Use the Verbose parameter with a value of $false PS&gt; Message is not displayed.</source>
          <target state="translated">-verbose: $false $false PS 值中使用 Verbose 参数 &gt; 不会显示消息。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Inquire value.</source>
          <target state="translated">此示例演示 Inquire 值的效果。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>PS&gt; $VerbosePreference = "Inquire" Change the value to Inquire.</source>
          <target state="translated">PS &gt; $VerbosePreference ="Inquire"更改为 Inquire 的值。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose"详细消息 test"。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>VERBOSE: Verbose message test.</source>
          <target state="translated">详细︰ 详细消息测试。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>Write a verbose message.</source>
          <target state="translated">写入详细消息。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Confirm Continue with this operation?</source>
          <target state="translated">与此操作确定继续？</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"): y PS&gt;</source>
          <target state="translated">[Y] 是 [A] 是为所有 [H] Halt 命令 [S] 挂起 [？]（默认值为"Y"） 的帮助︰ y PS &gt;</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Verbose "Verbose message test."</source>
          <target state="translated">PS &gt; Write-verbose"详细消息 test"。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>-verbose:$false Use the Verbose parameter.</source>
          <target state="translated">-verbose: $false 使用 Verbose 参数。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>PS&gt; Message is not displayed.</source>
          <target state="translated">PS &gt; 不会显示消息。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>$WarningPreference Determines how Windows PowerShell responds to warning messages generated by a script, cmdlet or provider, such as the messages generated by the Write-Warning cmdlet.</source>
          <target state="translated">$WarningPreference 确定 Windows PowerShell 的警告消息，生成的脚本、 cmdlet 或提供程序，如 Write-warning cmdlet 生成的消息的响应方式。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>By default, warning messages are displayed and execution continues, but you can change this behavior by changing the value of $WarningPreference.</source>
          <target state="translated">默认情况下会显示警告消息并继续执行，但您可以通过更改 $WarningPreference 的值来更改此行为。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>You can also use the WarningAction common parameter of a cmdlet to determine how Windows PowerShell responds to warnings from a particular command.</source>
          <target state="translated">您可以使用 cmdlet 的 WarningAction 通用参数来确定 Windows PowerShell 如何响应来自特定命令的警告。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>For more information, type: "get-help about_commonparameters".</source>
          <target state="translated">详细信息，请键入:"-get-help about_commonparameters"。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Valid values: Stop:               Displays the warning message and an error message and then stops executing.</source>
          <target state="translated">有效值︰ 停止︰ 显示警告消息，以及一条错误消息，然后停止执行。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Inquire:            Displays the warning message and then prompts for permission to continue.</source>
          <target state="translated">查询︰ 将显示警告消息，然后提示允许继续。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>Continue:           Displays the warning message and then (Default)           continues executing.</source>
          <target state="translated">继续︰ 将显示警告消息，则 （默认值） 将继续执行。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>SilentlyContinue:   Does not display the warning message.</source>
          <target state="translated">SilentlyContinue︰ 不显示警告消息。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Continues executing.</source>
          <target state="translated">继续执行。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>These examples show the effect of the different values of $WarningPreference and the use of the WarningAction common parameter to override the preference value.</source>
          <target state="translated">这些示例显示 $WarningPreference 的不同值以及 WarningAction 通用参数来覆盖首选项的值使用的效果。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Continue value, which is the default.</source>
          <target state="translated">此示例演示继续值，该值是默认值的效果。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>PS&gt; $WarningPreference    # Find the current value.</source>
          <target state="translated">PS &gt; $WarningPreference # 查找当前值。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Continue</source>
          <target state="translated">继续</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Write a warning message.</source>
          <target state="translated">编写一条警告消息。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning"此操作可以删除数据。"</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>WARNING: This action can delete data.</source>
          <target state="translated">警告︰ 此操作可以删除数据。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>Use the WarningAction parameter to suppress the warning for this command PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">使用 WarningAction 参数来禁止显示警告以获得此命令 PS 的 &gt; Write-warning"此操作可以删除数据。"</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>-warningaction silentlycontinue</source>
          <target state="translated">-warningaction silentlycontinue</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the SilentlyContinue value.</source>
          <target state="translated">此示例演示 SilentlyContinue 值的效果。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>PS&gt; $WarningPreference = "SilentlyContinue" Change the value to SilentlyContinue.</source>
          <target state="translated">PS &gt; $WarningPreference ="SilentlyContinue"更改为 SilentlyContinue 的值。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning"此操作可以删除数据。"</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>PS&gt;                        # Write a warning message.</source>
          <target state="translated">PS &gt; # 编写一条警告消息。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning"此操作可以删除数据。"</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>-warningaction stop Use the WarningAction parameter to stop processing when this command generates a warning.</source>
          <target state="translated">-warningaction 停止使用 WarningAction 参数在此命令将生成一个警告时停止处理。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>WARNING: This action can delete data.</source>
          <target state="translated">警告︰ 此操作可以删除数据。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>Write-Warning : Command execution stopped because the shell variable "WarningPreference" is set to Stop.</source>
          <target state="translated">写入-警告︰ 因为 shell 变量"WarningPreference"设置为 Stop 停止命令执行。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>At line:1 char:14</source>
          <target state="translated">At line:1 char:14</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>Write-Warning &lt;&lt;&lt;&lt;  "This action can delete data."</source>
          <target state="translated">Write-warning &lt;&lt;&lt;&lt;"此操作可以删除数据。"</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>-warningaction stop</source>
          <target state="translated">-warningaction 停止</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Inquire value.</source>
          <target state="translated">此示例演示 Inquire 值的效果。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>PS&gt; $WarningPreference = "Inquire" Change the value to Inquire.</source>
          <target state="translated">PS &gt; $WarningPreference ="Inquire"更改为 Inquire 的值。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning"此操作可以删除数据。"</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Write a warning message.</source>
          <target state="translated">编写一条警告消息。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>WARNING: This action can delete data.</source>
          <target state="translated">警告︰ 此操作可以删除数据。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>Confirm Continue with this operation?</source>
          <target state="translated">与此操作确定继续？</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"): y PS&gt;</source>
          <target state="translated">[Y] 是 [A] 是为所有 [H] Halt 命令 [S] 挂起 [？]（默认值为"Y"） 的帮助︰ y PS &gt;</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning"此操作可以删除数据。"</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>-warningaction silentlycontinue PS&gt;                         # Use the WarningAction parameter to change the response to a warning for the current command.</source>
          <target state="translated">-warningaction silentlycontinue PS &gt; # 使用 WarningAction 参数更改为警告的当前命令的响应。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the Stop value.</source>
          <target state="translated">此示例演示的终止值的效果。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>PS&gt; $WarningPreference = "Stop" Change the value to Stop.</source>
          <target state="translated">PS &gt; $WarningPreference ="Stop"更改为 Stop 值。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning"此操作可以删除数据。"</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>Write a warning message.</source>
          <target state="translated">编写一条警告消息。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>WARNING: This action can delete data.</source>
          <target state="translated">警告︰ 此操作可以删除数据。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>Write-Warning : Command execution stopped because the shell variable "WarningPreference" is set to Stop.</source>
          <target state="translated">写入-警告︰ 因为 shell 变量"WarningPreference"设置为 Stop 停止命令执行。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>At line:1 char:14</source>
          <target state="translated">At line:1 char:14</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>Write-Warning  &lt;&lt;&lt;&lt; "This action can delete data."</source>
          <target state="translated">Write-warning &lt;&lt;&lt;&lt;"此操作可以删除数据。"</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>PS&gt; Write-Warning "This action can delete data."</source>
          <target state="translated">PS &gt; Write-warning"此操作可以删除数据。"</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>-warningaction inquire WARNING: This action can delete data.</source>
          <target state="translated">-warningaction 查询警告︰ 此操作可以删除数据。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Confirm Continue with this operation?</source>
          <target state="translated">与此操作确定继续？</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is "Y"): Use the WarningAction parameter to change the response to a warning for the current command.</source>
          <target state="translated">[Y] 是 [A] 是为所有 [H] Halt 命令 [S] 挂起 [？]（默认值为"Y"） 的帮助︰ 使用 WarningAction 参数更改为警告的当前命令的响应。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>$WhatIfPreference Determines whether WhatIf is automatically enabled for every command that supports it.</source>
          <target state="translated">$WhatIfPreference 确定是否为支持它的每个命令会自动启用 WhatIf。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>When WhatIf is enabled, the cmdlet reports the expected effect of the command, but does not execute the command.</source>
          <target state="translated">启用 WhatIf 后，该 cmdlet 将进行相应报告预期的效果的命令，但不会执行该命令。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Valid values: 0:                  WhatIf is not automatically enabled.</source>
          <target state="translated">有效值︰ 0: WhatIf 不会自动启用。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>To (Default)           enable it manually, use the WhatIf parameter of the command.</source>
          <target state="translated">若要 （默认） 启用它手动使用 WhatIf 参数的命令。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>1:                  WhatIf is automatically enabled on any command that supports it.</source>
          <target state="translated">1︰ 支持它的任何命令上自动启用 WhatIf。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>Users can use the WhatIf command with a value of False to disable it manually (WhatIf:$false).</source>
          <target state="translated">用户可以使用 WhatIf 命令，值为 False 来手动禁用 (WhatIf: $false)。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>DETAILED EXPLANATION</source>
          <target state="translated">详细的说明</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>When a cmdlet supports WhatIf, the cmdlet reports the expected effect of the command, instead of executing the command.</source>
          <target state="translated">当 cmdlet 支持 WhatIf 时，该 cmdlet 将报告该命令，而不是执行该命令的预期的效果。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>For example, instead of deleting the test.txt file in response to a Remove-Item command, Windows PowerShell reports what it would delete.</source>
          <target state="translated">例如，而不是删除 test.txt 文件对的 Remove-item 命令的响应，Windows PowerShell 将报告它将删除。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>A subsequent Get-Childitem command confirms that the file was not deleted.</source>
          <target state="translated">后续的 Get-childitem 命令确认文件未被删除。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item test.txt What if: Performing operation "Remove-Item" on Target "Item: C:\test.txt PS&gt; get-childitem test.txt</source>
          <target state="translated">PS &gt; 的 remove-item test.txt 怎么办︰ 在目标系统上执行操作"删除项目""项︰ C:\test.txt PS &gt; 的 get-childitem test.txt</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>Directory: Microsoft.PowerShell.Core\FileSystem::C:</source>
          <target state="translated">目录︰ Microsoft.PowerShell.Core\FileSystem::C:</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>Mode                LastWriteTime     Length     Name</source>
          <target state="translated">名称模式 LastWriteTime 长度</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>-a---         7/29/2006   7:15 PM         84     test.txt</source>
          <target state="translated">----2006 年 7 月 29 日 7:15 PM 84 test.txt</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>These examples show the effect of the different values of $WhatIfPreference.</source>
          <target state="translated">这些示例显示 $WhatIfPreference 的不同值的效果。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>They also show how to use the WhatIf cmdlet parameter to override the preference value for a specific command.</source>
          <target state="translated">它们还显示如何使用 WhatIf cmdlet 参数来覆盖特定命令的首选项值。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the 0 (not enabled) value, which is the default.</source>
          <target state="translated">此示例演示为默认值 0 （未启用） 值的效果。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>PS&gt; $whatifpreference 0                         # Check the current value.</source>
          <target state="translated">PS &gt; $whatifpreference 0 # 检查当前值。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem test.txt | format-list FullName FullName : C:\test.txt Verify that the file exists.</source>
          <target state="translated">PS &gt; 的 get-childitem test.txt |格式列表 FullName FullName: C:\test.txt 验证该文件是否存在。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item test.txt PS&gt;                       # Delete the file.</source>
          <target state="translated">PS &gt; 删除项 test.txt PS &gt; # 删除该文件。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem test.txt | format-list -property FullName Verify that the file is deleted.</source>
          <target state="translated">PS &gt; 的 get-childitem test.txt |格式列表-FullName 验证会删除该文件的属性。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>Get-ChildItem : Cannot find path 'C:\test.txt' because it does not exist.</source>
          <target state="translated">Get-childitem︰ 找不到路径 C:\test.txt'，因为它不存在。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>At line:1 char:14</source>
          <target state="translated">At line:1 char:14</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>get-childitem  &lt;&lt;&lt;&lt; test.txt | format-list fullname</source>
          <target state="translated">get-childitem &lt;&lt;&lt;&lt; test.txt |格式列表 fullname</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>This example shows the effect of using the WhatIf parameter when the value of $WhatIfPreference is 0.</source>
          <target state="translated">此示例演示使用 WhatIf 参数的 $WhatIfPreference 值为 0 时的效果。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem test2.txt | format-list -property FullName FullName : C:\test2.txt Verify that the file exists.</source>
          <target state="translated">PS &gt; 的 get-childitem test2.txt |格式列表-FullName FullName 属性︰ C:\test2.txt 验证该文件是否存在。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item test2.txt -whatif What if: Performing operation "Remove File" on Target "C:\test2.txt".</source>
          <target state="translated">PS &gt; 的 remove-item test2.txt-whatif 怎么办︰ 执行操作目标"C:\test2.txt"上的"删除文件"。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>Use the WhatIf parameter</source>
          <target state="translated">使用 WhatIf 参数</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem test2.txt | format-list -property FullName FullName : C:\test2.txt Verify that the file was not deleted</source>
          <target state="translated">PS &gt; 的 get-childitem test2.txt |格式列表-FullName FullName 属性︰ C:\test2.txt 验证该文件未被删除</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>This example shows the effect of the 1 (WhatIf enabled) value.</source>
          <target state="translated">此示例演示 1 (启用 WhatIf) 值的效果。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>When you use Remove-Item to delete a cmdlet, Remove-Item displays the path to the file that it would delete, but it does not delete the file.</source>
          <target state="translated">当您使用 Remove-item 删除 cmdlet 时，删除项显示它将删除该文件的路径，但不会删除该文件。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>PS&gt; $whatifpreference = 1 PS&gt; $whatifpreference 1                        # Change the value.</source>
          <target state="translated">PS &gt; $whatifpreference = 1 PS &gt; $whatifpreference 1 # 更改值。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item test.txt What if: Performing operation "Remove File" on Target "C:\test.txt".</source>
          <target state="translated">PS &gt; 删除项 test.txt 怎么办︰ 执行操作目标"C:\test.txt"上的"删除文件"。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>Try to delete a file.</source>
          <target state="translated">尝试删除文件。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>PS&gt; get-childitem test.txt | format-list FullName FullName : C:\test.txt Verify that the file exists.</source>
          <target state="translated">PS &gt; 的 get-childitem test.txt |格式列表 FullName FullName: C:\test.txt 验证该文件是否存在。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>This example shows how to delete a file when the value of $WhatIfPreference is 1.</source>
          <target state="translated">此示例演示如何删除文件时 $WhatIfPreference 的值为 1。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>It uses the WhatIf parameter with a value of $false.</source>
          <target state="translated">它使用 WhatIf 参数值为 $false。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>PS&gt; remove-item test.txt -whatif:$false Use the WhatIf parameter with $false.</source>
          <target state="translated">PS &gt; 删除项 test.txt-whatif: $false $false 中使用 WhatIf 参数。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>This example demonstrates that some cmdlets support WhatIf behavior and others do not.</source>
          <target state="translated">此示例演示某些 cmdlet 支持 WhatIf 行为，有些则不。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>In this example, in which the value of $WhatIfPreference is 1 (enabled), a Get-Process command, which does not support WhatIf, is executed, but a Stop-Process command performs the WhatIf behavior.</source>
          <target state="translated">在此示例中，在 $WhatIfPreference 的值是 1 （启用），执行 Get-process 命令，后者不支持 WhatIf，，，但停止处理命令执行 WhatIf 行为。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>You can override the WhatIf behavior of the Stop-Process command by using the WhatIf parameter with a value of $false.</source>
          <target state="translated">通过使用 WhatIf 参数以及 $false 一个值，可以重写停止处理命令的 WhatIf 行为。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>PS&gt; $whatifpreference = 1 Change the value to 1.</source>
          <target state="translated">PS &gt; $whatifpreference = 1 个更改值设置为 1。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>PS&gt; get-process winword A Get-Process command completes.</source>
          <target state="translated">PS &gt; 获取进程 winword Get-process 命令完成。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id ProcessName</source>
          <target state="translated">处理 npm （k) pm （k) ws （k) vm （m) CPU(s) Id ProcessName</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>234       8     6324      15060   154     0.36   2312 WINWORD</source>
          <target state="translated">234 8 6324 15060 154 0.36 2312 WINWORD</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>PS&gt; stop-process -name winword What if: Performing operation "Stop-Process" on Target "WINWORD (2312)".</source>
          <target state="translated">PS &gt; stop-process-命名 winword 假设︰ 目标"WINWORD (2312)"上执行操作"停止进程"。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>A Stop-Process command uses WhatIf.</source>
          <target state="translated">Stop-process 命令使用 WhatIf。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>PS&gt; stop-process -name winword  -whatif:$false PS&gt;                      # WhatIf:$false overrides the preference.</source>
          <target state="translated">PS &gt; stop-process-命名 winword-whatif: $false PS &gt; # WhatIf: $false 忽略首选项。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>PS&gt; get-process winword Get-Process : Cannot find a process with the name 'winword'.</source>
          <target state="translated">PS &gt; 获取进程 winword Get-process︰ 找不到具有名称 winword 的进程。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>Verify the process name and call the cmdlet again.</source>
          <target state="translated">验证该进程的名称，并再次调用该 cmdlet。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>At line:1 char:12</source>
          <target state="translated">在行︰ 1 char: 12</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>get-process  &lt;&lt;&lt;&lt; winword Verify that the process is stopped.</source>
          <target state="translated">获取进程 &lt;&lt;&lt;&lt; winword 验证该进程已停止。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>about_Automatic_Variables about_CommonParameters about_Environment_Variables about_Profiles about_Remote about_Scopes about_Variables</source>
          <target state="translated">about_Automatic_Variables about_CommonParameters about_Environment_Variables about_Profiles about_Remote about_Scopes about_Variables</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>