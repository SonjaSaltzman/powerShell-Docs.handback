<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4186ca975495fdc88291a3974e14fc1d4374eaf4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\4.0\Microsoft.PowerShell.Core\About\about_Regular_Expressions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e74b3ae0194fa2353f71fa61c7ce342c00e4e5bd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9bb067fa69bff02fd633e81c157e88e5817715c2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Regular_Expressions</source>
          <target state="translated">about_Regular_Expressions</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Regular Expressions</source>
          <target state="translated">有关正则表达式</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Regular_Expressions</source>
          <target state="translated">about_Regular_Expressions</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">TOPIC</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Regular_Expressions</source>
          <target state="translated">about_Regular_Expressions</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">简短说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Describes regular expressions in Windows PowerShell.</source>
          <target state="translated">描述 Windows PowerShell 中的正则表达式。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">详细说明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports the following regular expression characters.</source>
          <target state="translated">Windows PowerShell 支持以下正则表达式字符。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Format   Logic                            Example</source>
          <target state="translated">Format 逻辑示例</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>value    Matches exact characters         "book" -match "oo" anywhere in the original value.</source>
          <target state="translated">与值匹配的准确字符"book 的"-匹配"oo"中的原始值的任意位置。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Matches any single character.</source>
          <target state="translated">匹配任意单个字符。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>"copy" -match "c..y"</source>
          <target state="translated">"复制"的匹配"c。。y"</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>[value]  Matches at least one of the      "big" -match "b[iou]g" characters in the brackets.</source>
          <target state="translated">[值] 匹配至少一个"大"的匹配中的方括号内的"[iou] b g"字符。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>[range]  Matches at least one of the      "and" -match "[a-e]nd" characters within the range.</source>
          <target state="translated">[范围] 匹配的至少一个"和"-匹配"[a 至 e] nd"字符范围内的。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The use of a hyphen (–) allows you to specify an adjacent character.</source>
          <target state="translated">使用连字符 （-） 允许您指定的相邻字符。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>[^]      Matches any characters except    "and" -match "[^brt]nd" those in brackets.</source>
          <target state="translated">[^]     匹配任何字符除外"和"-匹配"[^ brt] nd"那些在方括号中。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>^        Matches the beginning            "book" -match "^bo" characters.</source>
          <target state="translated">^ 与的开头匹配"book 的"-匹配"^ bo"字符。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>$        Matches the end characters.</source>
          <target state="translated">$ 匹配结束字符。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>"book" -match "ok$"</source>
          <target state="translated">"book 的"-匹配"确定 $"</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Matches any instances            "baggy" -match "g" of the preceding character.</source>
          <target state="translated">匹配"baggy"的任何实例匹配前面的字符"g"。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Matches zero or one instance     "baggy" -match "g?"</source>
          <target state="translated">匹配零个或一个实例"baggy"-匹配"g"？</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>of the preceding character.</source>
          <target state="translated">前面的字符。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>\        Matches the character that       "Try$" -match "Try<ph id="ph1">\$</ph>" follows as an escaped character.</source>
          <target state="translated">\ 字符"Try$"匹配-匹配"尝试<ph id="ph1">\$</ph>"遵循为转义字符。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports the character classes available in Microsoft .NET Framework regular expressions.</source>
          <target state="translated">Windows PowerShell 支持 Microsoft.NET Framework 正则表达式中可用的字符类。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Format   Logic                            Example</source>
          <target state="translated">Format 逻辑示例</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>\p{name} Matches any character in the     "abcd defg" -match "\p{Ll}+" named character class specified by {name}.</source>
          <target state="translated">"abcd defg-"中的任意字符的 \p{name} 匹配与匹配"\p{Ll}+"{name} 所指定的字符类命名为。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Supported names are Unicode groups and block ranges such as Ll, Nd, Z, IsGreek, and IsBoxDrawing.</source>
          <target state="translated">所支持的名称是 Unicode 组和块范围如 Ll、 Nd、 Z、 IsGreek，以及 IsBoxDrawing。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>\P{name} Matches text not included in     1234 -match "\P{Ll}+" the groups and block ranges specified in {name}.</source>
          <target state="translated">\P{name} 1234年中不包含匹配文本的匹配"\P{Ll}+"组，并阻止 {name} 中指定的范围。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>\w       Matches any word character.</source>
          <target state="translated">\w 可匹配任何单词字符。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>"abcd defg" -match "\w+" Equivalent to the Unicode        (this matches abcd) character categories [\p{Ll} \p{Lu}\p{Lt}\p{Lo}\p{Nd}\p{Pc}].</source>
          <target state="translated">"abcd defg"-匹配"\w+"等效于 （这与匹配 abcd） 的 Unicode 字符类别 [\p{Ll} \p{Lu}\p{Lt}\p{Lo}\p{Nd}\p{Pc}]。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If ECMAScript-compliant behavior is specified with the ECMAScript option, \w is equivalent to [a-zA-Z_0-9].</source>
          <target state="translated">如果使用 ECMAScript 选项指定了符合 ECMAScript 的行为，\w 等效于 [a-zA-Z_0-9]。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>\W       Matches any nonword character.</source>
          <target state="translated">\W 可匹配任何非单词字符。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>"abcd defg" -match "\W+" Equivalent to the Unicode        (This matches the space) categories [^\p{Ll}\p{Lu}\p{Lt} \p{Lo}\p{Nd}\p{Pc}].</source>
          <target state="translated">"abcd defg"-匹配"\W+"等效于 （这与匹配空间） 的 Unicode 类别 [^ \p{Ll}\p{Lu}\p{Lt} \p{Lo}\p{Nd}\p{Pc}]。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>\s       Matches any white-space          "abcd defg" -match "\s+" character.</source>
          <target state="translated">\s 可匹配任何空白区域"abcd defg"-匹配"\s+"字符。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Equivalent to the Unicode character categories [\f\n\r\t\v\x85\p{Z}].</source>
          <target state="translated">等效于 Unicode 字符类别 [\f\n\r\t\v\x85\p{Z}]。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>\S       Matches any non-white-space      "abcd defg" -match "\S+" character.</source>
          <target state="translated">\S 可匹配任何非空白"abcd defg"-匹配"\S+"字符。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Equivalent to the Unicode character categories [^\f\n\r\t\v\x85\p{Z}].</source>
          <target state="translated">等效于 Unicode 字符类别 [^ \f\n\r\t\v\x85\p{Z}]。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>\d       Matches any decimal digit.</source>
          <target state="translated">\d 可匹配任何十进制数字。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>12345 -match "\d+" Equivalent to \p{Nd} for Unicode and [0-9] for non- Unicode behavior.</source>
          <target state="translated">12345-匹配"\d+"等效到 \p{nd}} 有关的 Unicode 和 [0-9] 为非 Unicode 的行为。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>\D       Matches any nondigit.</source>
          <target state="translated">\D 可匹配任何非数字匹配。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>"abcd" -match "\D+" Equivalent  to \P{Nd} for Unicode and [^0-9] for non- Unicode behavior.</source>
          <target state="translated">"abcd"的匹配"\D+"等效于 \p{nd}} 为 Unicode 和 [^0-9] 为非 Unicode 的行为。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Windows PowerShell supports the quantifiers available in .NET Framework regular expressions.</source>
          <target state="translated">Windows PowerShell 支持.NET Framework 正则表达式中可用的限定符。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The following are some examples of quantifiers.</source>
          <target state="translated">以下是一些示例的限定符。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Format   Logic                            Example</source>
          <target state="translated">Format 逻辑示例</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Specifies zero or more matches;  "abc" -match "\w" for example, \wor (abc).</source>
          <target state="translated">指定零个或多个匹配项; "abc"的匹配"\w"例如，\wor (abc)。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Equivalent to {0,}.</source>
          <target state="translated">等效于 {0，}。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Matches repeating instances of   "xyxyxy" -match "xy+" the preceding characters.</source>
          <target state="translated">重复实例的匹配项的"xyxyxy"-匹配"xy +"前面的字符。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Specifies zero or one matches;   "abc" -match "\w?"</source>
          <target state="translated">指定零个或一个匹配项;  "abc"的匹配"\w？"</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>for example, \w? or (abc)?.</source>
          <target state="translated">例如，\w？或者 (abc)？。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Equivalent to {0,1}.</source>
          <target state="translated">等效于 {0，1}。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>{n}      Specifies exactly n matches;     "abc" -match "\w{2}" for example, (pizza){2}.</source>
          <target state="translated">{n} 指定完全 n 个匹配项;    "abc"-例如，（比萨） 的匹配"\w{2}"\ {2 \}。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>{n,}     Specifies at least n matches;    "abc" -match "\w{2,}" for example, (abc){2,}.</source>
          <target state="translated">{n}    指定在至少 n 个匹配项;   "abc"的匹配"\w{2，}"例如，(abc) {2，}。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>{n,m}    Specifies at least n, but no     "abc" -match "\w{2,3}" more than m, matches.</source>
          <target state="translated">{n，m}   至少指定 n，但没有"abc"的匹配"\w{2,3}"多于 m 个匹配项。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>All the comparisons shown in the preceding table evaluate to true.</source>
          <target state="translated">在上表中所示的所有比较将都取值为 true。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Notice that the escape character for regular expressions, a backslash (), is different from the escape character for Windows PowerShell.</source>
          <target state="translated">请注意，正则表达式，反斜杠 （） 的转义字符不同于 Windows PowerShell 转义符。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The escape character for Windows PowerShell is the backtick character (`)</source>
          <target state="translated">适用于 Windows PowerShell 转义符是反撇号字符 （'）</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>(ASCII 96).</source>
          <target state="translated">(ASCII 96)。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For more information, see the "Regular Expression Language Elements" topic in the Microsoft Developer Network (MSDN) library at http://go.microsoft.com/fwlink/?LinkId=133231.</source>
          <target state="translated">有关详细信息，请参阅 http://go.microsoft.com/fwlink/?LinkId=133231 在 Microsoft Developer Network (MSDN) 库中的"正则表达式语言元素"主题。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>about_Comparison_Operators about_Operators</source>
          <target state="translated">about_Comparison_Operators about_Operators</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>