<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96808d44e7eb32bb1422940fe4f801a1db884fe1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Script_Internationalization.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a4b9ce28d3c456338432ed96925223d9aecfe97a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3abff8d19d38d47a7ebc6ab8d1847ef423d956e1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Script_Internationalization</source>
          <target state="translated">about_Script_Internationalization</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Script Internationalization</source>
          <target state="translated">有关脚本国际化</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Script_Internationalization</source>
          <target state="translated">about_Script_Internationalization</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TOPIC</source>
          <target state="translated">TOPIC</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>about_Script_Internationalization</source>
          <target state="translated">about_Script_Internationalization</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">简短说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Describes the script internationalization features of Windows PowerShell 2.0 that make it easy for scripts to display messages and instructions to users in their user interface (UI) language.</source>
          <target state="translated">介绍的脚本国际化功能的 Windows PowerShell 2.0，可使简单的脚本在用户界面 (UI) 语言中向用户显示消息和说明。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">详细说明</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell script internationalization features allow you to better serve users throughout the world by displaying Help and user messages for scripts and functions in the user's UI language.</source>
          <target state="translated">Windows PowerShell 脚本国际化功能，可以更好地为用户提供服务于世界各地，通过在用户的 UI 语言中显示的脚本和函数的帮助和用户消息。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The script internationalization features query the UI culture of the operating system during execution, import the appropriate translated text strings, and display them to the user.</source>
          <target state="translated">脚本国际化功能在执行期间查询操作系统的 UI 区域性、 导入相应的已翻译的文本字符串，并显示给用户。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The Data section lets you store text strings separate from code so they are easily identified and extracted.</source>
          <target state="translated">数据部分允许您存储文本字符串与代码分开，以便轻松地识别和提取。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A new cmdlet, ConvertFrom-StringData, converts text strings into dictionary-like hash tables to facilitate translation.</source>
          <target state="translated">新的 cmdlet，Convertfrom-stringdata，将文本字符串转换为类似字典的哈希表，有利于进行翻译。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell 2.0 features used in script internationalization are not supported by Windows PowerShell 1.0.</source>
          <target state="translated">脚本国际化中使用的 Windows PowerShell 2.0 功能不受 Windows PowerShell 1.0。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Scripts that include these features will not run in Windows PowerShell 1.0 without modification.</source>
          <target state="translated">提供了以下功能的脚本将不会在 Windows PowerShell 1.0 而不进行修改。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To support international Help text, Windows PowerShell 2.0 includes the following features:</source>
          <target state="translated">若要支持国际帮助文本，Windows PowerShell 2.0 包括以下功能︰</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-- A Data section that separates text strings from code instructions.</source>
          <target state="translated">-将文本字符串与代码的说明区分开来的数据部分。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information about the Data section, see about_Data_Sections.</source>
          <target state="translated">有关数据部分的详细信息，请参阅 about_Data_Sections。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-- New automatic variables, $PSCulture and $PSUICulture.</source>
          <target state="translated">--新的自动变量、 $PSCulture 和 $PSUICulture。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>$PSCulture stores the name of the UI language used on the system for elements such as the date, time, and currency.</source>
          <target state="translated">$PSCulture 存储在系统上使用的元素，如日期、 时间和货币的 UI 语言的名称。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The $PSUICulture variable stores the name of the UI language used on the system for user interface elements such as menus and text strings.</source>
          <target state="translated">$PSUICulture 变量存储在系统上使用的用户界面元素，如菜单和文本字符串的 UI 语言的名称。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-- A cmdlet, ConvertFrom-StringData, that converts text strings into dictionary-like hash tables to facilitate translation.</source>
          <target state="translated">-一个 cmdlet，Convertfrom-stringdata，可将文本字符串转换为类似字典的哈希表，有利于进行翻译。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see ConvertFrom-StringData.</source>
          <target state="translated">有关详细信息，请参阅 Convertfrom-stringdata。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-- A new file type, .psd1, that stores translated text strings.</source>
          <target state="translated">-新的文件类型，.psd1，用于存储已翻译的文本字符串。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The .psd1 files are stored in language-specific subdirectories of the script directory.</source>
          <target state="translated">.Psd1 文件存储在特定于语言的目录的子目录的脚本。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>-- A cmdlet, Import-LocalizedData, that imports translated text strings for a specified language into a script at runtime.</source>
          <target state="translated">-一个 cmdlet，Import-localizeddata，可导入转换为一个脚本在运行时用于指定语言的文本字符串。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This cmdlet recognizes and imports strings in any Windows-supported language.</source>
          <target state="translated">此 cmdlet 将识别并导入 Windows 支持的任何语言中的字符串。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information see Import-LocalizedData.</source>
          <target state="translated">有关详细信息请参阅 Import-localizeddata。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>THE DATA SECTION: Storing Default Strings</source>
          <target state="translated">将默认字符串存储的数据部分中︰</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Use a Data section in the script to store the text strings in the default language.</source>
          <target state="translated">在脚本中的数据部分用于将文本字符串存储在默认语言。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Arrange the strings in key/value pairs in a here-string.</source>
          <target state="translated">排列在此处字符串中的键/值对中的字符串。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Each key/value pair must be on a separate line.</source>
          <target state="translated">每个键/值对必须在单独一行上。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If you include comments, the comments must be on separate lines.</source>
          <target state="translated">如果包括注释，注释必须在单独的行。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The ConvertFrom-StringData cmdlet converts the key/value pairs in the here-string into a dictionary-like hash table that is stored in the value of the Data section variable.</source>
          <target state="translated">Convertfrom-stringdata cmdlet 将 here-string 的形式中的键/值对转换为存储在 Data 节变量的值的类似字典的哈希表。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In the following example, the Data section of the World.ps1 script includes the English-United States (en-US) set of prompt messages for a script.</source>
          <target state="translated">在以下示例中，World.ps1 脚本的 Data 节包含美国 (EN-US) 的一组提示消息的脚本。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The ConvertFrom-StringData cmdlet converts the strings into a hash table and stores them in the $msgtable variable.</source>
          <target state="translated">Convertfrom-stringdata cmdlet 将字符串转换为哈希表，并将它们存储在 $msgtable 变量中。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>$msgTable = Data { culture="en-US" ConvertFrom-StringData @' helloWorld = Hello, World.</source>
          <target state="translated">$msgTable = 数据 {区域性 ="EN-US"的 Convertfrom-stringdata @' helloWorld = Hello，World。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>errorMsg1 = You cannot leave the user name field blank.</source>
          <target state="translated">errorMsg1 = 不能将用户名字段保留为空。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>promptMsg = Please enter your user name.</source>
          <target state="translated">promptMsg = 请输入您的用户名。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>'@</source>
          <target state="translated">'@</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="translated">}</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information about here-strings, see about_Quoting_Rules.</source>
          <target state="translated">有关 here-string 的详细信息，请参阅 about_Quoting_Rules。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>PSD1 FILES: Storing Translated Strings</source>
          <target state="translated">PSD1 文件︰ 存储已翻译的字符串</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Save the script messages for each UI language in separate text files with the same name as the script and the .psd1 file name extension.</source>
          <target state="translated">将每个 UI 语言的脚本消息保存在单独文本文件中具有与脚本的.psd1 文件扩展名相同的名称。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Store the files in subdirectories of the script directory with names of cultures in the following format:</source>
          <target state="translated">将文件存储在目录的子目录的脚本采用以下格式的区域性的名称︰</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>–</source>
          <target state="translated">–</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Examples: de-DE, ar-SA, and zh-Hans</source>
          <target state="translated">示例︰ DE-DE、 AR-SA 和中文 Hans</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example, if the World.ps1 script is stored in the C:\Scripts directory, you would create a file directory structure that resembles the following:</source>
          <target state="translated">例如，如果 World.ps1 脚本存储在 C:\Scripts 目录，您将创建一个类似于以下的文件目录结构︰</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>C:\Scripts C:\Scripts\World.ps1 C:\Scripts\de-DE\World.psd1 C:\Scripts\ar-SA\World.psd1 C:\Scripts\zh-CN\World.psd1</source>
          <target state="translated">C:\Scripts C:\Scripts\World.ps1 C:\Scripts\de-DE\World.psd1 C:\Scripts\ar-SA\World.psd1 C:\Scripts\zh-CN\World.psd1</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The World.psd1 file in the de-DE subdirectory of the script directory might include the following statement:</source>
          <target state="translated">在脚本目录 DE-DE 子目录中的 World.psd1 文件可能包括以下语句︰</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData @' helloWorld = Hello, World (in German).</source>
          <target state="translated">Convertfrom-stringdata @' helloWorld = Hello，World （以德语）。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>errorMsg1 = You cannot leave the user name field blank (in German).</source>
          <target state="translated">errorMsg1 = 不能将用户名字段留空 （在德语）。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>promptMsg = Please enter your user name (in German).</source>
          <target state="translated">promptMsg = 请用户在输入名称 （德语）。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>'@</source>
          <target state="translated">'@</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Similarly, the World.psd1 file in the ar-SA subdirectory of the script directory might includes the following statement:</source>
          <target state="translated">同样，脚本目录的 AR-SA 子目录中的 World.psd1 文件可能包括以下语句︰</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>ConvertFrom-StringData @' helloWorld = Hello, World (in Arabic).</source>
          <target state="translated">Convertfrom-stringdata @' helloWorld = Hello，World （在阿拉伯语）。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>errorMsg1 = You cannot leave the user name field blank (in Arabic).</source>
          <target state="translated">errorMsg1 = 不能将用户名字段留空 （在阿拉伯语）。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>promptMsg = Please enter your user name (in Arabic).</source>
          <target state="translated">promptMsg = 请用户在输入名称 （阿拉伯语）。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>'@</source>
          <target state="translated">'@</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>IMPORT-LOCALIZEDDATA: Dynamic Retrieval of Translated Strings</source>
          <target state="translated">IMPORT-LOCALIZEDDATA︰ 动态检索的已翻译的字符串</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To retrieve the strings in the UI language of the current user, use the Import-LocalizedData cmdlet.</source>
          <target state="translated">若要检索当前用户的 UI 语言的字符串，请使用 Import-localizeddata cmdlet。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Import-LocalizedData finds the value of the $PSUICulture automatic variable and imports the content of the &lt;script-name&gt;.psd1 files in the subdirectory that matches the $PSUICulture value.</source>
          <target state="translated">Import-localizeddata $PSUICulture 自动变量、 导入的值 &lt; 脚本名称 &gt;.psd1 的内容文件复制与 $PSUICulture 值相匹配的子目录中查找。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Then, it saves the imported content in the variable specified by the value of the BindingVariable parameter.</source>
          <target state="translated">然后，它将导入的内容保存在指定 BindingVariable 参数的值的变量。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>import-localizeddata -bindingVariable msgTable</source>
          <target state="translated">导入 localizeddata-bindingVariable msgTable</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For example, if the Import-LocalizedData command appears in the C:\Scripts\World.ps1 script and the value of $PSUICulture is "ar-SA", Import-LocalizedData finds the following file:</source>
          <target state="translated">例如，如果 Import-localizeddata 命令显示在 C:\Scripts\World.ps1 脚本，$PSUICulture 的值为"AR-SA"Import-localizeddata 查找以下文件︰</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>C:\Scripts\ar-SA\World.psd1</source>
          <target state="translated">C:\Scripts\ar-SA\World.psd1</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Then, it imports the Arabic text strings from the file into the $msgTable variable, replacing any default strings that might be defined in the Data section of the World.ps1 script.</source>
          <target state="translated">然后，它的阿拉伯语文本字符串从文件导入 $msgTable 变量，将替换任何可能 World.ps1 脚本的 Data 节中定义的默认字符串。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>As a result, when the script uses the $msgTable variable to display user messages, the messages are displayed in Arabic.</source>
          <target state="translated">结果是，在该脚本使用 $msgTable 变量来显示用户消息，在阿拉伯语中会显示消息。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For example, the following script displays the "Please enter your user name" message in Arabic:</source>
          <target state="translated">例如，以下脚本在阿拉伯语中显示"请输入您的用户名称"消息︰</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>if (!($username)) { $msgTable.promptMsg }</source>
          <target state="translated">如果 (！ ($username)) {$msgTable.promptMsg}</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If Import-LocalizedData cannot find a .psd1 file that matches the value of $PSUIculture, the value of $msgTable is not replaced, and the call to $msgTable.promptMsg displays the fallback en-US strings.</source>
          <target state="translated">如果 Import-localizeddata 无法找到.psd1 文件匹配 $PSUIculture 的值、 $msgTable 的值不会被替换，和对 $msgTable.promptMsg 的调用显示回退 EN-US 字符串。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>ExAMPLE</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This example shows how the script internationalization features are used in a script to display a day of the week to users in the language that is set on the computer.</source>
          <target state="translated">此示例演示如何脚本国际化功能用于在脚本中向用户的计算机上设置的语言显示日期是星期几。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The following is a complete listing of the Sample1.ps1 script file.</source>
          <target state="translated">下面是 Sample1.ps1 脚本文件的完整列表。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The script begins with a Data section named Day ($Day) that contains a ConvertFrom-StringData command.</source>
          <target state="translated">脚本开始名为 Day ($Day) 包含的 Convertfrom-stringdata 命令的数据部分。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The expression submitted to ConvertFrom-StringData is a here-string that contains the day names in the default UI culture, en-US, in key/value pairs.</source>
          <target state="translated">提交给 Convertfrom-stringdata 表达式是 here-string 包含 EN-US、 中键/值对的默认 UI 区域性中的日名称。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The ConvertFrom-StringData cmdlet converts the key/value pairs in the here-string into a hash table and then saves it in the value of the $Day variable.</source>
          <target state="translated">Convertfrom-stringdata cmdlet 将 here-string 的形式中的键/值对转换为哈希表，然后将其保存在 $Day 变量的值。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The Import-LocalizedData command imports the contents of the .psd1 file in the directory that matches the value of the $PSUICulture automatic variable and then saves it in the $Day variable, replacing the values of $Day that are defined in the Data section.</source>
          <target state="translated">Import-localizeddata 命令导入匹配 $PSUICulture 自动变量的值，然后将其保存在 $Day 变量中，替换的值是 $Day 的 Data 节中定义的目录中的.psd1 文件的内容。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The remaining commands load the strings into an array and display them.</source>
          <target state="translated">剩余的命令将字符串加载到一个数组，并将其显示。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>$Day = DATA {</source>
          <target state="translated">$Day = 数据 {</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>