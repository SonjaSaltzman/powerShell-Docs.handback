<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">41a2e2a284bb4f6c77429589ad9761ff8fb26d1f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">reference\3.0\Microsoft.PowerShell.Core\About\about_Scripts.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f607080047b11a1867a73b587cd8d38cae6954bb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2bedc30b0d0f5ea6e05f9d5e2540591c9006c90e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>about_Scripts</source>
          <target state="translated">about_Scripts</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell, cmdlet</source>
          <target state="translated">powershell cmdlet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>About Scripts</source>
          <target state="translated">关于脚本</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>about_Scripts</source>
          <target state="translated">about_Scripts</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>about_Scripts</source>
          <target state="translated">about_Scripts</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>SHORT DESCRIPTION</source>
          <target state="translated">简短说明</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Describes how to run and write scripts in  Windows PowerShell�.</source>
          <target state="translated">描述如何运行以及在 Windows PowerShell 中编写脚本。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LONG DESCRIPTION</source>
          <target state="translated">详细说明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A script is a plain text file that contains one or more  Windows PowerShell commands.</source>
          <target state="translated">脚本是纯文本文件，其中包含一个或多个 Windows PowerShell 命令。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Windows PowerShell scripts have a .ps1 file name extension.</source>
          <target state="translated">Windows PowerShell 脚本具有.ps1 文件扩展名。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Running a script is a lot like running cmdlet.</source>
          <target state="translated">运行脚本很像运行 cmdlet。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You type the path and file name of the script and use parameters to submit data and set options.</source>
          <target state="translated">键入脚本路径和文件名，并使用参数来提交数据，并设置选项。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can run scripts on your computer or in a remote session on a different computer.</source>
          <target state="translated">您可以在另一台计算机上您的计算机上或在远程会话预防的方式运行脚本。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Writing a script saves a command for later use and makes it easy to share with others.</source>
          <target state="translated">编写一个脚本保存以供将来使用的命令，并可以轻松地与他人共享。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Most importantly, it lets you run the commands simply by typing the script path and the file name.</source>
          <target state="translated">最重要的是，它允许您只需通过键入脚本路径和文件名来运行命令。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Scripts can be as simple as a single command in a file or as extensive as a complex program.</source>
          <target state="translated">脚本可以与一个文件中的单个命令一样简单或复杂的程序时一样。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Scripts have additional features, such as the <ph id="ph1">\#</ph>Requires special comment, the use of parameters, support for data sections, and digital signing for security.</source>
          <target state="translated">脚本有额外的功能，如 <ph id="ph1">\#</ph>需要特殊的注释，使用参数、 支持的数据部分，并为安全的数字签名。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also write Help topics for scripts and for any functions in the script.</source>
          <target state="translated">此外可以在脚本中编写的脚本和任何功能的帮助主题。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>HOW TO RUN A SCRIPT</source>
          <target state="translated">如何运行脚本</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Before you can run a script, you need to change the default  Windows PowerShell execution policy.</source>
          <target state="translated">您可以运行脚本之前，您需要更改默认 Windows PowerShell 执行策略。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The default execution policy, "Restricted", prevents all scripts from running, including scripts that you write on the local computer.</source>
          <target state="translated">默认执行策略，"Restricted"，将阻止所有脚本运行，则包括在本地计算机编写的脚本。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information, see about_Execution_Policies.</source>
          <target state="translated">有关详细信息，请参阅 about_Execution_Policies。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The execution policy is saved in the registry, so you need to change it only once on each computer.</source>
          <target state="translated">执行策略是在注册表中，保存，因此您需要将其仅一次更改每台计算机上。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To change the execution policy, use the following procedure.</source>
          <target state="translated">若要更改执行策略，请使用以下过程。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Start Windows PowerShell with the "Run  as administrator" option.</source>
          <target state="translated">使用"以管理员身份运行"选项启动 Windows PowerShell。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>At the command prompt, type:</source>
          <target state="translated">在命令提示符处，键入：</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Set-ExecutionPolicy AllSigned</source>
          <target state="translated">Set-executionpolicy AllSigned</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-or-</source>
          <target state="translated">-或者-</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Set-ExecutionPolicy RemoteSigned</source>
          <target state="translated">Set-executionpolicy RemoteSigned</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The change is effective immediately</source>
          <target state="translated">更改将立即生效</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To run a script, type the full name and the full path to the script file.</source>
          <target state="translated">若要运行一个脚本，请键入完整的名称和脚本文件的完整路径。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For example, to run the Get-ServiceLog.ps1 script in the C:\Scripts directory, type:</source>
          <target state="translated">例如，若要运行 Get ServiceLog.ps1 脚本 C:\Scripts 目录中，键入︰</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To run a script in the current directory, type the path to the current directory, or use a dot to represent the current directory, followed by a path backslash (.<ph id="ph1">\)</ph>.</source>
          <target state="translated">若要在当前目录中运行脚本，键入到当前目录的路径或使用句点来表示当前目录中后, 跟一个反斜杠，路径 (。<ph id="ph1">\)</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For example, to run the ServicesLog.ps1 script in the local directory, type:</source>
          <target state="translated">例如，若要在本地目录中运行 ServicesLog.ps1 脚本，请键入︰</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If the script has parameters, type the parameters and parameter values after the script file name.</source>
          <target state="translated">如果该脚本具有参数，脚本文件名后键入的参数和参数值。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, the following command uses the ServiceName parameter of the Get-ServiceLog script to request a log of WinRM service activity.</source>
          <target state="translated">例如，下面的命令使用 Get ServiceLog 脚本的 ServiceName 参数来请求的 WinRM 服务活动的日志。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>As a security feature,  Windows PowerShell does not run scripts when you double-click the script icon in File Explorer or when you type the script name without a full path, even when the script is in the current directory.</source>
          <target state="translated">作为一项安全功能，Windows PowerShell 不运行脚本，当您双击文件资源管理器或当键入脚本名称不完整的路径的情况下，即使脚本位于当前目录中的脚本图标。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information about running commands and scripts in Windows PowerShell, see about_Command_Precedence.</source>
          <target state="translated">有关 Windows PowerShell 中运行命令和脚本的详细信息，请参阅 about_Command_Precedence。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>RUN WITH POWERSHELL</source>
          <target state="translated">使用 POWERSHELL 运行</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, you can run scripts from File Explorer (or Windows Explorer, in earlier versions of Windows).</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，你可以从文件资源管理器 （或 Windows 资源管理器中的 Windows 的早期版本中） 运行脚本。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To use the "Run with PowerShell" feature:</source>
          <target state="translated">若要使用"使用 PowerShell 运行"功能︰</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The "Run with PowerShell" feature is designed to run scripts that do not have required parameters and do not return output to the command prompt.</source>
          <target state="translated">"使用 PowerShell 运行"功能旨在运行脚本以不具有必需的参数，并将输出返回给命令提示符。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information, see about_Run_With_PowerShell</source>
          <target state="translated">有关详细信息，请参阅 about_Run_With_PowerShell</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>RUNNING SCRIPTS ON OTHER COMPUTERS</source>
          <target state="translated">在其他计算机上运行脚本</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To run a script on one or more remote computers, use the FilePath parameter of the Invoke-Command cmdlet.</source>
          <target state="translated">若要在一个或多个远程计算机上运行脚本，请使用 Invoke-command cmdlet 的 FilePath 参数。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Enter the path and file name of the script as the value of the FilePath parameter.</source>
          <target state="translated">输入脚本的路径和文件名的名称作为 FilePath 参数的值。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The script must reside on the local computer or in a directory that the local computer can access.</source>
          <target state="translated">脚本必须位于本地计算机上或者本地计算机能够访问的目录中。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following command runs the Get-ServiceLog.ps1 script on the Server01 and Server02 remote computers.</source>
          <target state="translated">以下命令在 Server01 和 Server02 远程计算机上运行 Get ServiceLog.ps1 脚本。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>GET HELP FOR SCRIPTS</source>
          <target state="translated">获取脚本的帮助</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The Get-Help cmdlet gets the help topics for scripts as well as for cmdlets and other types of commands.</source>
          <target state="translated">Get-help cmdlet 将获取脚本以及 cmdlet 和其他类型的命令的帮助主题。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To get the help topic for a script, type "Get-Help" followed by the path and file name of the script.</source>
          <target state="translated">若要获取脚本帮助主题，请键入"Get-help"跟脚本的路径和文件名的名称。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If the script path is in your Path environment variable, you can omit the path.</source>
          <target state="translated">如果脚本路径位于 Path 环境变量，则可以省略路径。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, to get help for the ServicesLog.ps1 script, type:</source>
          <target state="translated">例如，若要获得 ServicesLog.ps1 脚本帮助，请键入︰</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>HOW TO WRITE A SCRIPT</source>
          <target state="translated">如何编写一个脚本</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A script can contain any valid  Windows PowerShell commands, including single commands, commands that use the pipeline, functions, and control structures such as If statements and For loops.</source>
          <target state="translated">脚本可以包含任何有效的 Windows PowerShell 命令，其中包括单个命令、 命令使用管道、 函数和控制结构，如 If 语句和 For 循环。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To write a script, start a text editor (such as Notepad) or a script editor (such as the  Windows PowerShell Integrated Scripting Environment [ISE]).</source>
          <target state="translated">若要编写一个脚本，启动文本编辑器 （如记事本) 或脚本编辑器 （如 Windows PowerShell 集成脚本环境 [ISE]）。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Type the commands and save them in a file with a valid file name and the .ps1 file name extension.</source>
          <target state="translated">键入命令，并将它们保存在具有有效的文件名和.ps1 文件扩展名的文件。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The following example is a simple script that gets the services that are running on the current system and saves them to a log file.</source>
          <target state="translated">以下示例是一个简单的脚本，获取当前系统运行的服务，并将它们保存到日志文件。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The log file name is created from the current date.</source>
          <target state="translated">从当前日期创建日志文件名称。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To create this script, open a text editor or a script editor, type these commands, and then save them in a file named ServiceLog.ps1.</source>
          <target state="translated">若要创建此脚本，打开文本编辑器或脚本编辑器，请键入以下命令，然后将它们保存在一个名为 ServiceLog.ps1 文件。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>PARAMETERS IN SCRIPTS</source>
          <target state="translated">参数在脚本中</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To define parameters in a script, use a Param statement.</source>
          <target state="translated">若要在脚本中定义参数，请使用 Param 语句。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The Param statement must be the first statement in a script, except for comments and any <ph id="ph1">\#</ph>Requires statements.</source>
          <target state="translated">Param 语句必须是在脚本中，注释和任何除外的第一个语句 <ph id="ph1">\#</ph>需要语句。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Script parameters work like function parameters.</source>
          <target state="translated">脚本参数工作方式类似函数参数。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The parameter values are available to all of the commands in the script.</source>
          <target state="translated">会向所有在脚本中的命令提供参数值。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>All of the features of function parameters, including the Parameter attribute and its named arguments, are also valid in scripts.</source>
          <target state="translated">所有函数参数，包括其命名的参数，且的参数属性的功能也是在脚本中有效。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When running the script, script users type the parameters after the script name.</source>
          <target state="translated">当运行该脚本，脚本用户脚本名称后键入的参数。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The following example shows a Test-Remote.ps1 script that has a ComputerName parameter.</source>
          <target state="translated">下面的示例演示具有 ComputerName 参数的测试 Remote.ps1 脚本。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Both of the script functions can access the ComputerName parameter value.</source>
          <target state="translated">这两个脚本函数可以访问 ComputerName 参数值。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To run this script, type the parameter name after the script name.</source>
          <target state="translated">若要运行此脚本，请脚本名称后键入参数名称。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For more information about the Param statement and the function parameters, see about_Functions and about_Functions_Advanced_Parameters.</source>
          <target state="translated">有关 Param 语句和函数参数的详细信息，请参阅 about_Functions 和 about_Functions_Advanced_Parameters。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>WRITING HELP FOR SCRIPTS</source>
          <target state="translated">对于脚本编写帮助</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can write a help topic for a script by using either of the two following methods:</source>
          <target state="translated">可以使用两个以下方法之一来编写一个脚本帮助主题︰</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>--  Comment-Based Help for Scripts</source>
          <target state="translated">-脚本基于注释的帮助</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Create a Help topic by using special keywords in the comments.</source>
          <target state="translated">通过在注释中使用特殊关键字创建一个帮助主题。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To create comment-based Help for a script, the comments must be placed at the beginning or end of the script file.</source>
          <target state="translated">若要创建基于注释的帮助的脚本，必须将注释放置的开头或末尾的脚本文件。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For more information about comment-based Help, see about_Comment_Based_Help.</source>
          <target state="translated">有关基于注释的帮助的详细信息，请参阅 about_Comment_Based_Help。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>--  XML-Based Help  for Scripts</source>
          <target state="translated">-基于 XML 的脚本的帮助</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Create an XML-based Help topic, such as the type that is typically created for cmdlets.</source>
          <target state="translated">创建基于 XML 的帮助主题，例如通常为 cmdlet 创建的类型。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>XML-based Help is required if you are translating Help topics into multiple languages.</source>
          <target state="translated">如果您要翻译为多种语言的帮助主题，则需要使用基于 XML 的帮助。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To associate the script with the XML-based Help topic, use the .ExternalHelp Help comment keyword.</source>
          <target state="translated">若要将该脚本关联的基于 XML 的帮助主题，请使用。ExternalHelp 帮助注释关键字。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For more information about the ExternalHelp keyword, see about_Comment_Based_Help.</source>
          <target state="translated">有关 ExternalHelp 关键字的详细信息，请参阅 about_Comment_Based_Help。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For more information about XML-based help, see "How to Write Cmdlet Help" in the MSDN (Microsoft Developer Network) library at http:<ph id="ph1">\/\/</ph>go.microsoft.com<ph id="ph2">\/</ph>fwlink<ph id="ph3">\/</ph>?LinkID<ph id="ph4">\=</ph>123415.</source>
          <target state="translated">关于基于 XML 的帮助的详细信息，请参阅"如何编写 Cmdlet 帮助"http 在 MSDN (Microsoft Developer Network) 库中︰<ph id="ph1">\/\/</ph>go.microsoft.com<ph id="ph2">\/</ph>fwlink<ph id="ph3">\/</ph>？LinkID<ph id="ph4">\=</ph>123415。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>SCRIPT SCOPE AND DOT SOURCING</source>
          <target state="translated">脚本作用域和点来源</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Each script runs in its own scope.</source>
          <target state="translated">每个脚本在自己的作用域中运行。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The functions, variables, aliases, and drives that are created in the script exist only in the script scope.</source>
          <target state="translated">仅在脚本范围中存在的函数、 变量、 别名和脚本中创建的驱动器。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>You cannot access these items or their values in the scope in which the script runs.</source>
          <target state="translated">无法访问这些项目或它们在运行脚本的作用域中的值。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>To run a script in a different scope, you can specify a scope, such as Global or Local, or you can dot source the script.</source>
          <target state="translated">若要在不同的作用域中运行一个脚本，您可以指定作用域，例如全局或本地，或 dot 源脚本。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The dot sourcing feature lets you run a script in the current scope instead of in the script scope.</source>
          <target state="translated">圆点采购功能允许您在当前作用域而不是在脚本范围中运行脚本。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When you run a script that is dot sourced, the commands in the script run as though you had typed them at the command prompt.</source>
          <target state="translated">当您运行是点源自一个脚本时，在脚本中的命令运行像在命令提示符下键入它们一样。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The functions, variables, aliases, and drives that the script creates are created in the scope in which you are working.</source>
          <target state="translated">您正在工作的作用域中创建函数、 变量、 别名和驱动器，该脚本会创建。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>After the script runs, you can use the created items and access their values in your session.</source>
          <target state="translated">脚本开始运行后，您可以使用所创建的项，并在会话中访问它们的值。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>To dot source a script, type a dot (.) and a space before the script path.</source>
          <target state="translated">若要点源脚本、 键入一个圆点 （.） 和脚本路径之前的空格。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>After the UtilityFunctions script runs, the functions and variables that the script creates are added to the current scope.</source>
          <target state="translated">UtilityFunctions 脚本开始运行后，函数和该脚本创建的变量添加到当前作用域。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For example, the UtilityFunctions.ps1 script creates the New-Profile function and the $ProfileName variable.</source>
          <target state="translated">例如，UtilityFunctions.ps1 脚本创建新配置文件函数和 $ProfileName 变量。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If you run the UtilityFunctions.ps1 script in its own script scope, the New-Profile function and the $ProfileName variable exist only while the script is running.</source>
          <target state="translated">如果在自己的脚本作用域中运行 UtilityFunctions.ps1 脚本，仅当运行脚本时，会存在新建配置文件函数和 $ProfileName 变量。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When the script exits, the function and variable are removed, as shown in the following example.</source>
          <target state="translated">脚本退出时，函数和变量会删除，如下面的示例中所示。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When you dot source the script and run it, the script creates the New-Profile function and the $ProfileName variable in your session in your scope.</source>
          <target state="translated">当您圆点源脚本，并运行它时，该脚本创建新建配置文件函数和 $ProfileName 变量在会话中在您的作用域中。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>After the script runs, you can use the New-Profile function in your session, as shown in the following example.</source>
          <target state="translated">脚本开始运行后，您可以在会话中，使用新建配置文件函数，如下面的示例中所示。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For more information about scope, see about_Scopes.</source>
          <target state="translated">有关作用域的详细信息，请参阅 about_Scopes。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>SCRIPTS IN MODULES</source>
          <target state="translated">脚本模块中</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A module is a set of related Windows PowerShell resources that can be distributed as a unit.</source>
          <target state="translated">模块是一组可以作为一个单元分发的相关 Windows PowerShell 资源。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can use modules to organize your scripts, functions, and other resources.</source>
          <target state="translated">可以使用模块来组织您的脚本、 函数和其他资源。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>You can also use modules to distribute your code to others, and to get code from trusted sources.</source>
          <target state="translated">要分发给其他人，您的代码以及来自可信来源获得代码，还可以使用模块。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>You can include scripts in your modules, or you can create a script module, which is a module that consists entirely or primarily of a script and supporting resources.</source>
          <target state="translated">你可以在模块中，包括脚本也可以创建了脚本模块，它是一个模块，包括完全或主要的脚本和支持资源。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A script module is just a script with a .psm1 file name extension.</source>
          <target state="translated">脚本模块是只是一个扩展名为.psm1 脚本。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>For more information about modules, see about_Modules.</source>
          <target state="translated">有关模块的详细信息，请参阅 about_Modules。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>OTHER SCRIPT FEATURES</source>
          <target state="translated">其他的功能编写脚本</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Windows PowerShell has many useful features that you can use in scripts.</source>
          <target state="translated">Windows PowerShell 具有许多有用的功能，可以使用脚本中。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Requires</source>
          <target state="translated">要求</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>You can use a <ph id="ph1">\#</ph>Requires statement to prevent a script from running without specified modules or snap-ins and a specified version of  Windows PowerShell.</source>
          <target state="translated">您可以使用 <ph id="ph1">\#</ph>需要语句，以防止在没有指定的模块或管理单元和指定的版本的 Windows PowerShell 的情况下运行的脚本。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>For more information, see about_Requires.</source>
          <target state="translated">有关详细信息，请参阅 about_Requires。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>$PSCommandPath</source>
          <target state="translated">$PSCommandPath</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Contains the full path and name of the script that is being run.</source>
          <target state="translated">包含的完整路径和正在运行的脚本名称。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This parameter is valid in all scripts.</source>
          <target state="translated">此参数才有效的所有脚本中。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>This automatic variable is introduced in  Windows PowerShell 3.0.</source>
          <target state="translated">This 自动变量是在 Windows PowerShell 3.0 中引入的。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>$PSScriptRoot</source>
          <target state="translated">$PSScriptRoot</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Contains the directory from which a script is being run.</source>
          <target state="translated">包含从中运行脚本的目录。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>In  Windows PowerShell 2.0, this variable is valid only in script modules (.psm1).</source>
          <target state="translated">在 Windows PowerShell 2.0 中，此变量是仅在脚本模块 (.psm1) 中有效。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, it is valid in all scripts.</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，它是有效的所有脚本中。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>$MyInvocation</source>
          <target state="translated">$MyInvocation</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The $MyInvocation automatic variable contains information about the current script, including information about how it was started or "invoked."</source>
          <target state="translated">$MyInvocation 自动变量包含有关当前的脚本，包括如何它是已启动还是"调用"。 有关的信息的信息</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>You can use this variable and its properties to get information about the script while it is  running.</source>
          <target state="translated">可以使用此变量并将其属性以获取有关该脚本的信息，运行时。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>For example, the $MyInvocation.MyCommand.Path variable contains the path and file name of the script.</source>
          <target state="translated">例如，$MyInvocation.MyCommand.Path 变量包含脚本的路径和文件名的名称。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>$MyInvocation.Line contains the command that started the script, including all parameters and values.</source>
          <target state="translated">$MyInvocation.Line 包含启动脚本，包括所有参数和值的命令。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Beginning in  Windows PowerShell 3.0, $MyInvocation has two new properties that provide information about the script that called or invoked the current script.</source>
          <target state="translated">从 Windows PowerShell 3.0 开始，$MyInvocation 具有提供有关调用或调用当前脚本的脚本的信息的两个新属性。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The values of these properties are populated only when the invoker or caller is a script.</source>
          <target state="translated">仅在调用程序或调用方是一个脚本时，将填充这些属性的值。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>-- PSCommandPath contains the full path and name of the script that called or invoked the current script.</source>
          <target state="translated">-PSCommandPath 包含完整路径和脚本调用或调用当前脚本的名称。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>-- PSScriptRoot contains the directory of the script that called or invoked the current script.</source>
          <target state="translated">-PSScriptRoot 包含调用或调用当前脚本的脚本的目录。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Unlike the $PSCommandPath and $PSScriptRoot automatic variables, which contain information about the current script, the PSCommandPath and PSScriptRoot properties of the $MyInvocation variable contain information about the script that called or invoke the current script.</source>
          <target state="translated">与不同的 $PSCommandPath 和 $PSScriptRoot 自动变量，其中包含有关当前脚本的信息，$MyInvocation 变量的 PSCommandPath 和 PSScriptRoot 属性包含有关的脚本的调用或调用当前脚本的信息。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Data sections</source>
          <target state="translated">数据部分</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>You can use the Data keyword to separate data from logic in scripts.</source>
          <target state="translated">数据关键字可用于将数据与在脚本中的逻辑。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Data sections can also make localization easier.</source>
          <target state="translated">数据节还可以使本地化更容易。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>For more information, see about_Data_Sections and about_Script_Localization.</source>
          <target state="translated">有关详细信息，请参阅 about_Data_Sections 和 about_Script_Localization。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Script Signing</source>
          <target state="translated">脚本签名</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>You can add a digital signature to a script.</source>
          <target state="translated">您可以向脚本添加数字签名。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Depending on the execution policy, you can use digital signatures to restrict the running of scripts that could include unsafe commands.</source>
          <target state="translated">根据执行策略，您可以使用数字签名来限制可能包括不安全的命令的脚本的运行。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>For more information, see about_Execution_Policies and about_Signing.</source>
          <target state="translated">有关详细信息，请参阅 about_Execution_Policies 和 about_Signing。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>about_Command_Precedence</source>
          <target state="translated">about_Command_Precedence</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>about_Comment_Based_Help</source>
          <target state="translated">about_Comment_Based_Help</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>about_Execution_Policies</source>
          <target state="translated">about_Execution_Policies</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>about_Functions</source>
          <target state="translated">about_Functions</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>about_Modules</source>
          <target state="translated">about_Modules</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>about_Profiles</source>
          <target state="translated">about_Profiles</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>about_Requires</source>
          <target state="translated">about_Requires</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>about_Run_With_PowerShell</source>
          <target state="translated">about_Run_With_PowerShell</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>about_Scopes</source>
          <target state="translated">about_Scopes</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>about_Script_Blocks</source>
          <target state="translated">about_Script_Blocks</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>about_Signing</source>
          <target state="translated">about_Signing</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Invoke-Command</source>
          <target state="translated">Invoke-Command</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>